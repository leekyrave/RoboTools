script_name("Robo-Tools") 
script_author("Leeky")
script_description("Tool kit for admins Arizona Games") 
script_version_number(1.411)
script_version("1.411")
script_properties('work-in-pause')
require "lib.moonloader"
require 'lib.sampfuncs'

local betaVersion = "beta"
local libs = {}
libs['imgui'], imgui         =   pcall(require,'imgui')
libs['encoding'], encoding   =   pcall(require, "encoding")
libs['memory'], memory       =   pcall(require, 'memory')
libs['ffi'], ffi             =   pcall(require, 'ffi')
libs['requests'], requests   =   pcall(require, 'requests')
libs['effil'], effil         =   pcall(require, 'effil')
libs['sampev'], sampev       =   pcall(require, 'lib.samp.events')
libs['rkeys'], rkeys         =   pcall(require, 'lib.rkeys')
libs['vkeys'], vkeys         =   pcall(require, 'vkeys')
libs['cjson'], cjson         =   pcall(require, 'cjson')
libs['GK'], GK               =   pcall(require, 'game.keys')
libs['fa'], fa               =   pcall(require, 'fAwesome5') 
libs['md5'], md5             =   pcall(require, 'md5')
libs['wm'], wm               =   pcall(require, 'windows.message')
libs['Matrix3X3'], Matrix3X3 =   pcall(require, "matrix3x3")
libs['Vector3D'], Vector3D   =   pcall(require, "vector3d")
libs['pie'], pie             =   pcall(require, "imgui_piemenu")


local dlstatus               =   require('moonloader').download_status
local workdir                =   getWorkingDirectory()
local sw,sh                  =   1920,1080 -- костыль, не трогать

local ssw,ssh                =   getScreenResolution()
isInitialized = false

function hextoargb(hex)
    if hex then
        local hex = hex:gsub("#","")
        r = tonumber("0x"..hex:sub(1,2))
        g = tonumber("0x"..hex:sub(3,4))
        b = tonumber("0x"..hex:sub(5,6))
        a = tonumber("0x"..hex:sub(7,8))
        
        if a == nil then a = 255 end
        return a,r,g,b
    else
        return 255,255,255,255
    end
end
--         print(rgbtohex({r,g,b,a})) or ptint(rgbtohex({r,g,b}))f
function rgbtohex(rgb)
	local hexadecimal = ''

	for key = 1, #rgb do
	    local value = rgb[key] 
		local hex = ''

		while(value > 0)do
			local index = math.fmod(value, 16) + 1
			value = math.floor(value / 16)
			hex = string.sub('0123456789ABCDEF', index, index) .. hex			
		end

		if(string.len(hex) == 0)then
			hex = '00'
		elseif(string.len(hex) == 1)then
			hex = '0' .. hex
		end
		hexadecimal = hexadecimal .. hex
	end
	return hexadecimal
end

function enableDialog(bool)
    memory.setint32(sampGetDialogInfoPtr()+40, bool and 1 or 0, true)
    sampToggleCursor(bool)
end

function join_argb(a, r, g, b)
    local argb = b  -- b
    argb = bit.bor(argb, bit.lshift(g, 8))  -- g
    argb = bit.bor(argb, bit.lshift(r, 16)) -- r
    argb = bit.bor(argb, bit.lshift(a, 24)) -- a
    return argb
end


function argb_to_rgba(argb)
    local a, r, g, b = explode_argb(argb)
    return join_argb(r, g, b, a)
end

function explode_argb(argb)
    local a = bit.band(bit.rshift(argb, 24), 0xFF)
    local r = bit.band(bit.rshift(argb, 16), 0xFF)
    local g = bit.band(bit.rshift(argb, 8), 0xFF)
    local b = bit.band(argb, 0xFF)
    return a, r, g, b
  end

function ARGBtoRGB(color) return bit32 or require'bit'.band(color, 0xFFFFFF) end

function hextorgb(hex)
    
   return ARGBtoRGB(hextoargb(hex))
end

function hextorgba(hex)
    if not hex or type(hex) == "number" then return 255,255,255,255 end
    a,r,g,b = hextoargb(hex)
    return r,g,b,a
end

function hex8tohex6(hex)
    if hex:match('........') then
        return hex:match('(......)..')
    elseif hex:match('......') then
        return hex:match('(......)')
    else
        return 'FFFFFF'
    end
   
end

function hexrgba2hexargb(hex)
    if not hex then return 'FFFFFFFF' end

    if tostring(hex):match('(......)(..)') then
        rgb,a = tostring(hex):match('(......)(..)')
        if not a then a = 'FF' end
    else
        return 'FFFFFFFF'
    end

    return a .. rgb
end


local listUpdate = {

    {
        v = 'Beta v. 1.41',
        context = '- Фикс бага, который проявлялся при первой авторизации - крашило. Теперь не будет =). Не уверен по поводу подтверждения кода, но должно работать нормально\n- Теперь если у вас выключился комп внезапно - у вас должна слететь только статистика.\n- Теперь когда прицел наведен - вы не будете переходить за игроками из килл-листа\n- Уменьшены кнопки в реконе\n- Пофикшен баг с переходом в слежку сразу за 999 айди\n- Теперь вам не нужно несколько раз прописывать абот, чтобы получить игроков с этим уровнем\n- Пофикшен баг с мп меню, когда ребят тпает под землю\n- Теперь в боте ВК можно посмотреть свою статистику за день - /mystats\n- Теперь вы будете получать уведомления прямо в игру от разработчиков.\n- Теперь при принятии квестов не будет писать НЕ ФЛУДИ\n- Обновлено окно обновления.\n- Добавлен туториал, по созданию шаблонов, просим прощения за шакальное качество, в дальнейшем пофиксим.\n- В настройках слежки на 2 странице добавлена настройка сообщений сразу в /pm игроку, за которым следите.',
    },


    {
        v = 'Beta v. 1.4',
        context = '- Добавлена система шаблонов серверных объектов. Туториал будет выложен днём. /amenu > Мероприятия > Шаблоны из серверных объектов\n- Теперь у вас появилась возможность добавлять заметки администратору просто нажав на его ник в чекере\n- Теперь можно открыть /members, нажав на организацию игрока\n- Теперь при заходе в слежку под инвизом - инвиз отключится\n- Добавлен поиск в заметки, чтобы включить режим редактирования - просто нажмите на иконку поиска, так-же наоборот\n- Добавлен чекер зоны стрима - /near | /nearedit\n- Улучшена система схожих вопросов в репорт\n- Изменено навигационное меню в реконе, теперь у вас есть возможность добавлять свои клавиши, видео туториал есть в https:/vk.com/robo_hamster\n- Теперь ваш ник в слежке будет подсвечиваться тем цветом, которым и в чате(ИЗМЕНИТЬ МОЖНО В СТИЛИЗАЦИИ на 2 странице)\n- Добавлены команды для локального изменения погоды и времени - /sw | /st - В СЛУЧАЕ, ЕСЛИ ВЫ ИХ ИСПОЛЬЗУЕТЕ - ВАС МОЖЕТ КРАШИТЬ\n- Подправлена проблема [НЕ ФЛУДИ] при /rslap и /rpm, а так-же при логине в апанель.\n- Подправлена работа тулса на ВайсСити\n- Добавлена подсказка о том, как завершить МП\n- Калькулятор теперь работает только через чат, без окна.\n- Пофикшена проблема, когда в репорт кидают вопрос о проверке на взлом.\n- Добавлены лаунчерные скины в /askin и в меню мпшек(для мпшек из сделано)',
    },

    {
        v = 'Beta v. 1.39',
        context = '- Релиз системы мероприятий - теперь проводить мероприятия будет еще легче, /amenu > Мероприятия > Плюсик справа - добавить\n- Туториал по системе мероприятий можно посмотреть в группе проекта\n- Фиксы различных багов\n- Добавлена возможность убирать объекты через /putobject\n- Добавлена новая цветовая тема\n- За идею меню мероприятий спасибо пользователю БХ - Cosmo\n- Возвращена статистика',
    },

    {
        v = 'Beta v. 1.383',
        context = '- Починил объекты',
    },

    {
        v = 'Beta v. 1.382 Fix',
        context = '- Фикс слета настроек, надеюсь в последний раз.\n- ВРЕМЕННО ОТКЛЮЧЕНО ОКНО СТАТИСТИКИ ДЛЯ ПРОВЕРКИ БАГА\n- Добавлен /putobject с иконками\n- Дорабатывается ивент меню\n- Исправлены ошибки(скорее всего) с запросами',
    },

    {
        v = 'Beta v. 1.381',
        context = '- Добавлен invisible для администрации в /amenu > Вспомогательное ПО > IV (так-же хоткей добавлен).\n- Теперь ответ в репорте может состоять хоть из миллиарда символов, то, что не поместилось в диалог - будет отправлено дополнительно в /pm\n- Обнова так быстро, потому-что хочу, чтобы вы заценили иконку загрузки обновы.',
    },

    {
        v = 'Beta v. 1.381',
        context = '- Добавлен invisible для администрации в /amenu > Вспомогательное ПО > IV (так-же хоткей добавлен).\n- Теперь ответ в репорте может состоять хоть из миллиарда символов, то, что не поместилось в диалог - будет отправлено дополнительно в /pm\n- Обнова так быстро, потому-что хочу, чтобы вы заценили иконку загрузки обновы.',
    },

    {
        v = 'Beta v. 1.38',
        context = '- Добавлено удобное меню для распределения бизнесов мафий - /bizmafia\n- Добавлена возможность настроить отключение меню машинок игрока, если у него их нет.\n- Фикс бага НЕ ФЛУДИ для чекера лидеров, потом будет улучшение, сори\n- Фикс багов чата\n- Фиксы хоткеев\n- Теперь вас будет предупреждать об обновлении(будет работать со след обновы).\n- Теперь в случае любого запроса к серверу - скрипт не крашнет, а выведет ошибку в чат или консоль.',
    },

    {
        v = 'Beta v. 1.376',
        context = '- Фикс критического бага',
    },

    {
        v = 'Beta v. 1.375',
        context = '- Теперь при загрузке тулса пишет, как узнать все команды\n- Добавлена возможность включать радар в реконе - /amenu > Слежка > 2 страница\n- Добавлена пояснялка, когда у вас пустой список /gps\n- Добавлено отображение автомобилей игрока в реконе, на кнопку можно телепортировать авто к игроку(к себе)\n- Теперь /b будет писаться над головой у игрока\n- Изменена система настроек, теперь слетов настроек не должно быть, хз, не уверен))\n- Пофикшен баг с статистикой по дням\n- Пофикшен баг с не флуди у песок чекера и у фамгз\n- Теперь вам не будет сбрасывать с машины, если вы на ней стоите\n- Фикс бага биндера',
    },

    {
        v = 'Beta v. 1.373',
        context = '- Окно команд тулса теперь активируется на /thelp\n- Немного видоизменено ожидание получения информации об организации игрока(Был текст, стала крутилка)\n- Починен /getip\n- Добавлены хоткеи для включения или выключения чекеров\n- Возвращен хоткей для аирбрейка, добавлен хоткей для кликварпа. Новая система бинда таких функций будет заключаться в том, что если стоит свой бинд для функции, то кнопки по умолчанию(Колесико мышки или Правый шифт) - работать не будут.\n- В биндере добавлена возможность просто вставлять в чат бинд.\n- Добавлен ник автора репорта для бинда прошлого репорта\n\n===АВТООБНОВЛЕНИЕ GPS===\n- Теперь GPS можно будет обновлять самому в /amenu > Обновить список /gps.\n- Вместе с обновлением пунктов, будут получены координаты точек GPS.\n- Теперь в репорте при вставке ответа о /gps через кнопку(Помощь по /gps) - автору репорта будет установлена метка на карте этого /gps.',
    },

    {
        v = 'Beta v. 1.37',
        context = '- Исправлен древний баг с изменением положений окон не с первого раза\n- Airbrake теперь только на правый шифт, бинд убран\n- Теперь можно менять цвет рег.данных на второй страничке стилизации чата /amenu > Стилизация > Нижняя панель > 2 Страница\n- Добавлена возможность открывать реги игрока в отдельном окне, на бинд и на команду. (/ip_window) Бинд можно установить в хоткеях в разделе "Главное"\n- Добавлена возможность отключить показ об изменении вашей репутации, добавлена кастомизация этого сообщения\n- Добавлена возможность отключить показ отчёта по отвеченному репорту, кастомизация цветов, включение или выключение определенных пунктов\n- Добавлен ноп на ф1\n- Теперь по умолчанию будет добавлен отдельный чат регистраций в кастомных чатах. Чтобы он появился - нужно удалить файл pChats.json в настройках\n- Добавлена быстрая команда телепорта по меткам(по их айди) - /ftp\n- Добавлена команда для быстрого телепорта по меткам/маркерам - /tpm [0(Метка)/1(Маркер)]\n- Добавлен чекер нрп ников - /nrp_nicks\n- Добавлен автоматический /jobchatlog в /amenu > Основное\n- Фиксы низкосортных багов',
    },

    {
        v = 'Beta v. 1.365',
        context = '- Фиксы багов\n- Добавлена команда /clr\n- Добавлен поиск в /veh, /rveh, /gun, /rgun\n- Теперь вместо актива - в чекере лидеров показывает афк\n- Теперь скрытие афк работает и в админ чате\n- Автоловля теперь по умолчанию выключена\n- В статистике теперь можно изменять часовой пояс от вашего(+- часы)',
    },

    {
        v = 'Beta v. 1.36',
        context = '- Добавлено отображение клавиш, которые нажимает игрок. /amenu -> Слежка -> 2 страница\n- Добавлено отображение взгляда игрока, куда он смотрит. /amenu -> Слежка -> 2 страница\n- Пофикшен баг с задержкой в выдаче форм\n- Добавлено создание заметок(правила и т.д) - /notices.',
    },

    {
        v = 'Beta v. 1.35',
        context = '- Добавлена выдача форм -> /forms.\n- Фикс бага контроля афк.\n- Добавлено полное отображение статистики за день, неделю, все время в /amenu > Главное.\n- Добавлено полное отображение онлайна за каждый день недели, сейчас оно будет сбито из за того, что система только заработала, не пугайтесь.\n- Добавлен притон в покраску гетто'
    },

    {
        v = 'Beta v. 1.34',
        context = "- Добавлен контроль афк"
    },

    {
        v = 'Beta v. 1.332',
        context = "- Добавлена Седона\n- Фикс бага с авторепортом"
    },

    {
        v = 'Beta v. 1.331',
        context = "- Фикс авторизации на Вайс-Сити"
    },

    {
        v = 'Beta v. 1.33',
        context = "- Добавлен Vice-City"
    },

    {
        v = 'Beta v. 1.32',
        context = "- Добавлена система подписок. Подробнее - /amenu > Профиль.\n- Фикс краша при первой авторизации\n- Добавление машинок\n- Добавлена форма на /checkhouse"
    },

    {
        v = 'Beta v. 1.31',
        context = "- Фикс проблемы с нулями в паролях\n- Фикс краша при авторизации в админку(не у всех было)\n- Изменен немного /pcheck\n- Фикс краша с пользовательской стилизацией\n- Фикс краша при отправлении пустой формы при включенном запросе докв\n- Теперь сервер не нужно указывать вручную"
    },

    {
        v = 'Beta v. 1.3',
        context = "- Фиксы багов\n- Директории настроек и файлов изменены, выключите тулс, и перенесите настройки из папки config/MintScripts/MintTools в config/RoboScripts/RoboTools\n- Теперь по умолчанию активация меню скрипта изменена на /amenu\n- Теперь уровень администрирования будет устанавливатся автоматически\n- В /amember добавлена возможность выбирать ранг\n- Добавлены команды /rec(реконнект), /addchecker(добавить в чекер игроков)\n- Добавлен дальний чат, лог регистраций, личные чаты(с багами)\n- Mint Tools ощутил на себе ребрендинг и теперь называется Robo Tools и принадлежит Робохомячку"
    },

    {
        v = 'Beta v. 1.245',
        context = "- Фиксы багов\n- Добавлены серверы 21 и мобайл-2\n- Обновлена система /getip, теперь она более точная, но могут быть проблемы с кд 45 запросов в минуту\n- Практически доделана система чатов\n- Все сервисы Мятной Плантации перенесены на сервер в Нидерландах и на домен .com\n- Добавлены недостающие команды в формы\n- Теперь Репутация и Актив в реконе показывается одной буквой."
    },

    {
        v = 'Beta v. 1.244',
        context = "- Фиксы багов\n- Доделана покраска гетто территорий(/ghetto)\n- Добавлен 21-ый сервер(мобайл)"
    },

    {
        v = 'Beta v. 1.243',
        context = "- Фиксы критических багов.\n- Добавлен 20-ый сервер"
    },

    {
        v = 'Beta v. 1.242',
        context = "- Изменена панель /amember\n- Фикс биндера\n- Небольшие фиксы форм варнингов\n- Теперь в килл-листе можно изменять количество строк(Вспомогательное ПО > Килл-лист > Шрифт)\n- Прочие фиксы"
    },

    {
        v = 'Beta v. 1.241',
        context = "- Фикс форм(баг, когда формы без рекона не принимались)\n- Фикс форм на муты\n- Фикс повторного нажатия клавиши принятия формы при запросе док-в(теперь норм воркает)\n- Варнинги на рекламу теперь исправно работают\n- Теперь варнинги на флуд будут учитывать регистр сообщения\n- Немного изменен вид нижней панельки рекона\n- Вернул быстрые ответы в репорт, но теперь они выключены по умолчанию. Настроить можно в /mmenu > Репорт > Настройки статических кнопок"
    },

    {
        v = 'Beta v. 1.24',
        context = "- Добавлена удобная покраска гетто /ghetto\n- Добавлена удобная покраска /famgz(дорабатывается)\n- Добавлены варнинги на TK, Массовый ДМ, Рванку, Песок, Капс, Рекламу и их настройки\n- Теперь в репорте будет показывать платформу, с которой сидит игрок\n- Заменено изображение списка цветов на цветные кнопочки\n- Быстрые ответы в репорте заменены помощью по уровням\n- Некоторые фиксы"
    },

    {
        v = 'Beta v. 1.23',
        context = "- Добавлен /skin, /rskin\n- Теперь /rgun для 3+ будет работать через /gunall\n- Добавлен чекер на песок(/pcheck)\n- Добавлен контроль подходящих библиотек, если у вас установлена неактуальная библиотека - она переустановится самостоятельно.\n- Фиксы"
    },

    {
        v = 'Beta v. 1.21 - v.1.22',
        context = "- Хот-фиксы килл-листа"
    },
    
    {
        v = 'Beta v. 1.2',
        context = "- Добавлена кастомизация килллиста(Вспомогательное ПО -> Правая Панелька)\n- В AirBrake добавлена настройка шрифтов и т.д, теперь AirBrake регулируется на колесико мышки\n- Изменен интерфейс активации функций\n- Фиксы интерфейса\n- Добавлены команды /toolsoff, /toolsreload\n- Фикс чекера игроков"
    },

    {
        v = 'Beta v. 1.1',
        context = "- Добавлен /rgun\n- Добавлен /gun\n- Добавлена возможность тп на маркер и метку через /tp\n- Обновлен менеджер зависимостей\n- Добавлено окошко-лог, где будет показываться нововведение после каждой обновы\n- Фикс биндера\n- Фикс Схожих Ответов\n- Фикс чекера лидеров\n- Прочие графические фиксы"
    },

    {
        v = 'Beta v. 1.01',
        context = "- Фикс критического бага"
    },

    {
        v = 'Beta v. 1',
        context = "- Добавлен биндер\n- Добавлена совместимость репорта с репортом без очереди(можно настроить в настройках репорта в правой панельке)\n- Еще много чего, но я не помню\n- Фиксы"
    },

    {
        v = 'Beta v. 0.97',
        context = "- Фиксы"
    },

    {
        v = 'Beta v. 0.96',
        context = "- Фикс /tp\n- Фикс хоткеев в репорте"
    },

    {
        v = 'Beta v. 0.95',
        context = "- Фикс текстдравов и кликов по ним\n- Добавлен /tpcor"
    },

    {
        v = 'Beta v. 0.94',
        context = "- Теперь платформу с которой играет игрок показывает и в заголовке рекона\n- Добавлен /rveh\n- Фикс всех команд в радиусе\n- Некоторые фиксы рекона\n- Графические фиксы\n- Добавлены бесконечные патроны\n- Добавлен интерфейс биндера - допил в некст версии\n- Фикс быстрых наказаний\n- Фикс /amember\n- Фикс /veh\n- Фиксы автоловли репорта\n- Добавлены подсказки в окно репорта, что нужно жмакать\n- Добавлена иерархия 5+ админов"
    },

    {
        v = 'Beta v. 0.93',
        context = "- Теперь в реконе игрока можно тепать с помощью карты\n- Добавлен /spcarall\n- Фиксы"
    },

    {
        v = 'Beta v. 0.91 - 0.92',
        context = "- Фикс /rslap\n- Фикс /rpm\n- Фикс автопринятия квестов\n- Фикс авторизации в /apanel\n- Фикс бага, жрущего 10 фпс\n- Фикс всех багов с реконом\n- Фикс /rkick"
    },

    {
        v = 'Beta v. 0.9',
        context = "- Фикс краша при /mmenu v.2\n- Добавлена возможноть ставить бинды на кнопки мышки\n- Добавлена автоловля\n- Поковырялся в выравнивании лидеров еще раз\n- Фиксы"
    },

    {
        v = 'Beta v. 0.8',
        context = "- Фикс краша при /mmenu"
    },

    {
        v = 'Beta v. 0.7',
        context = "- Опять поковырялся в чекере лидеров\n- Фикс рекона, когда другие текстдравы мешали ему или он реагировал на другие т.д\n- Теперь при отправлении @id - эта конструкция будет заменена на ник и айди игрока в формате Nick_Name[228]\n- Добавлен /debug\n- Фикс статистики(репа)\n- Фикс ложных срабатываний форм\n- Много фиксов"
    },

    {
        v = 'Beta v. 0.6',
        context = "- Добавлена статистика с её настройками\n- Фикс чекера актива лидеров и немного подрочил расстояние между колонками\n- Фикс цветов 5+ админов в чате\n- Фикс обнуления статы"
    },

    {
        v = 'Beta v. 0.5',
        context = "- Фикс амембера v.2\n- Фикс тп по мапе\n- Добавлен /tpr\n- Добавлен телепорт игрока в реконе\n- Добавлен тп авто к себе через кликварп\n- Теперь все /getip формы работают нормально\n- Добавлена адекватная ловля ошибок в формах\n- Добавлено окошко запроса доказательств для форм, настроить можно во вкладке [Формы]\n- Фикс двойного принятия форм"
    },

    {
        v = 'Beta v. 0.4',
        context = "- Фикс амембер\n- Добавлен /abot\n- Фикс краша с юзердатой"
    },

    {
        v = 'Beta v. 0.3',
        context = "- Фикс хоткеев(с чатом)\n- Теперь цвет в чате соответствует цвету адм лвл-а в реконе(кроме вашего ника)\n- Добавлены команды /hlv, /ahelp, /amember, /calc\n- Фикс аирбрейка 2.0\n- Добавлены подсказки на некоторых ползунках для тех, кто не понимает ультрамегасовременный ui/ux дизайн\n- Фикс /veh, теперь норм работает"
    },

    {
        v = 'Beta v. 0.2',
        context = "- Фикс интерфейса\n- Фикс форм\n- Фикс аирбейка\n- Еще фиксы чего-то"
    },

    {
        v = 'Beta v. 0.1',
        context = "- Запуск бета-теста с командой тестеров"
    },
}



noAccessText = "{F6361C}[Ошибка]{FFFFFF} Вы не авторизовались или не имеете подписки. Приобретите подписку на сайте robo-tools.online"
----------------------------------------------------
function convertTableToJsonString(data)
    return (neatJSON(data, {sort = true, wrap = 40}))
end


function downloadFile(name, path, link)
	if not doesFileExist(path) then
		log('Скачивание файла «'..name..'»')
		downloadUrlToFile(link, path, function(id, status, p1, p2)
			if status == dlstatus.STATUSEX_ENDDOWNLOAD then
				if doesFileExist(path) then
					log('Файл «'..name..'» загружен!')
                    sampShowDialog(666,"{42F5A7}Robo-Tools {FFFFFF}| {42F557}Скачивание доп.файлов","В текущий момент выполняется подгрузка требуемых файлов и библиотек.\nСейчас скачивается: ".. name,"Понял",_,0)
                    return true
				else
					log('Не удалось загрузить файл «'..name..'»')
				end
			end
		end)
	end
end

function log(text)
	sampfuncsLog('Robo-Tools | ' .. text)
end


function clone (t)
    local copy = {}
    for key, value in pairs(t) do
        copy[key] = value
    end
    return copy
end





----------------------------------------------------

if not doesDirectoryExist(workdir .. '/resource/RoboScripts/RoboTools/veh') then createDirectory(workdir .. '/resource/RoboScripts/RoboTools/veh') end 
if not doesDirectoryExist(workdir .. '/resource/RoboScripts/RoboTools/skins') then createDirectory(workdir .. '/resource/RoboScripts/RoboTools/skins') end 
if not doesDirectoryExist(workdir .. '/resource/RoboScripts/RoboTools/guns') then createDirectory(workdir .. '/resource/RoboScripts/RoboTools/guns') end 
if not doesDirectoryExist(workdir .. '/resource/RoboScripts/RoboTools/sounds') then createDirectory(workdir .. '/resource/RoboScripts/RoboTools/sounds') end 
if not doesDirectoryExist(workdir .. '/resource/RoboScripts/RoboTools/etc') then createDirectory(workdir .. '/resource/RoboScripts/RoboTools/etc') end 
if not doesDirectoryExist(workdir .. '/resource/RoboScripts/RoboTools/objects') then createDirectory(workdir .. '/resource/RoboScripts/RoboTools/objects') end 
if not doesDirectoryExist(workdir .. '/resource/RoboScripts/RoboTools/KillList') then createDirectory(workdir .. '/resource/RoboScripts/RoboTools/KillList') end 

local listLibs = {
    {workdir .. '\\lib\\requests.lua', 'https://api.robo-tools.online/data/libs/requests.lua', 'Requests', "a33789e95c89908368451fb45a5df033"},
    {workdir .. '\\lib\\socket\\core.dll', 'https://api.robo-tools.online/data/libs/socket/core.dll', 'Socket1', "33ada8768e1ac61a70639d698e80ec75"},
    {workdir .. '\\lib\\socket\\ftp.lua', 'https://api.robo-tools.online/data/libs/socket/ftp.lua', 'Socket2', "842cd9e4d470d1cef31b52cffa6dedd0"},
    {workdir .. '\\lib\\socket\\headers.lua', 'https://api.robo-tools.online/data/libs/socket/headers.lua', 'Socket3', "61a437d6aeb2885e15540a01e32f85fe"},
    {workdir .. '\\lib\\socket\\http.lua', 'https://api.robo-tools.online/data/libs/socket/http.lua', 'Socket4', "eafd39f22b1911a88e18309b1bcbd4ac"},
    {workdir .. '\\lib\\socket\\smtp.lua', 'https://api.robo-tools.online/data/libs/socket/smtp.lua', 'Socket5', "163b55d0c7f29f68533758235fdae254"},
    {workdir .. '\\lib\\socket\\tp.lua', 'https://api.robo-tools.online/data/libs/socket/tp.lua', 'Socket6', "8c4adce78db55217f5328c82f23caf21"},
    {workdir .. '\\lib\\socket\\url.lua', 'https://api.robo-tools.online/data/libs/socket/url.lua', 'Socket7', "626cbfd7a0f77abdf1e46e2052286259"},
    {workdir .. '\\resource\\fonts\\fa-solid-900.ttf', 'https://api.robo-tools.online/data/fonts/fa-solid-900.ttf', 'Font Awesome Icons', "6c7cf3b936615c6b0dcd01c80baba4cf"},
    {workdir .. '\\lib\\effil.lua', 'https://api.robo-tools.online/data/libs/effil.lua', 'Effil', "4c4f38afa827e695e31ee6630029fce0"},
    {workdir .. '\\lib\\libeffil.dll', 'https://api.robo-tools.online/data/libs/libeffil.dll', 'Effil Core', "2ec2af876a1e06d8de3b4f4b78adfb78"},
    {workdir .. '\\lib\\md5.lua', 'https://api.robo-tools.online/data/libs/md5.lua', 'MD5'},
    {workdir .. '\\lib\\md5\\core.dll', 'https://api.robo-tools.online/data/libs/md5/core.dll', 'MD5 Core'},
    {workdir .. '\\lib\\game\\keys.lua', 'https://api.robo-tools.online/data/libs/keys.lua', 'Keys', "9d83b2d05045b0901e43b64a6fb0ab10"},
    {workdir .. '\\lib\\encoding.lua', 'https://api.robo-tools.online/data/libs/encoding.lua', 'Encoding', "8b4917fc6cd6fbdd411f441fa1a1c517"},
    {workdir .. '\\lib\\fAwesome5.lua', 'https://api.robo-tools.online/data/libs/fAwesome5.lua', 'Font Awesome', "dda24b9489960a8e220122b5679c0d9d"},
    --{workdir .. '\\lib\\rkeys.lua', 'https://api.robo-tools.online/data/libs/rkeys.lua', 'RKeys', "51c88ded15b5f9b159632a547a1cedb1"},
    {workdir .. '\\lib\\memory.lua', 'https://api.robo-tools.online/data/libs/memory.lua', 'Memory', "d8f52b2399f46440b3889ee4bf6c28ca"},
    {workdir .. '\\lib\\matrix3x3.lua', 'https://api.robo-tools.online/data/libs/matrix3x3.lua', 'Matrix3x3', "2587f0aa8f1f5ab6d8f6b4c33faae427"},
    {workdir .. '\\lib\\vector3d.lua', 'https://api.robo-tools.online/data/libs/vector3d.lua', 'Vector3d', "b991fd0eb4380fc831f4d48eb589d60d"},
    {workdir .. '\\lib\\imgui.lua', 'https://api.robo-tools.online/data/libs/imgui.lua', 'Imgui', "8c6468775740315f1bc80023a57fb1bf"},
    {workdir .. '\\lib\\MoonImGui.dll', 'https://api.robo-tools.online/data/libs/MoonImGui.dll', 'Imgui Core', "a491e99101d88888577930039cb39864"},
    {workdir .. '\\lib\\imgui_piemenu.lua', 'https://api.robo-tools.online/data/libs/imgui_piemenu.lua', 'PieMenu', "4a92ada1f4e60145fc8f4e39f2a01e2a"},
}


tObjectsName = {
    "Желтая лента",
    "Ограждение [1]",
    "Ограждение [2]",
    "Отбойник",
    "Конус",
    "Табличка",
    "Лежачий полицеский",
    "Железный заборчик",
    "Железный заборчик [2]",
    "[ЗНАК] Ограничение скорости",
    "[ЗНАК] Запрет движения прямо",
    "[ЗНАК] Закрыто",
    "[ЗНАК] Stop",
    "[ЗНАК] Уступить дорогу",
    "[ЗНАК] Ремонт дороги",
    "[ЗНАК] Ехать прямо!",
    "[ЗНАК] Поворот налево",
    "[ЗНАК] Поворот направо",
    "[ЗНАК] Запрет движения направо",
    "[ЗНАК] Запрет движения налево",
    "[ЗНАК] Запрет движения прямо",
    "[ЗНАК] Место эвакуации ТС",
    "[ЗНАК] Дорога закрыта",
    "[ЗНАК] Радиоактивная зона",
    "[ЗНАК] Ограничение скорости",
    "[ЗНАК] Камера видеонаблюдения",
    "[ЗНАК] Уступи дорогу",
    "[ЗНАК] Автостоп",
    "[ЗНАК] Нет Парковки",
    "Радар",
    "Медицинский кейс",
    "Каталка",
    "Бочка",
    "Серый борд-ограждение",
    "Конус-фишка",
    "Железный барьер ограждение",
    "Табличка [Объезд]",
    "Деревянный барьер ограждение",
    "Лестница для машины Ladder [1]",
    "Лестница для машины Ladder [2]",
    "Лестница для машины Ladder [3]",
    "Лестница для машины Ladder [4]",
    "Лестница для машины Ladder [5]",
    "Большая штурмовая лестница",
    "Маленькая штурмовая лестница",
    "Красный дымовой флаер",
    "Желтный прожектор",
    "Желтый мигающий прожектор",
    "Столб с белым фонарём",
    "Столб с красным фонарём",
    "Огнетушитель статичный",
    "Железная подпорка",
    "Тренировочный манекен (White)",
    "Тренировочный манекен (Black)",
    "Батут",
    "Убрать",
}

local tSkinsName = {
    [0] = "Carl CJ",
    [1] = "The Truth",
    [2] = "Maccer",
    [3] = "Andre",
    [4] = "Barry",
    [5] = "Barry",
    [6] = "Emmet",
    [7] = "Taxi Driver",
    [8] = "Janitor",
    [9] = "Normal Ped",
    [10] = "Old Woman",
    [11] = "Casino croupier",
    [12] = "Casino croupier",
    [13] = "Street Girl",
    [14] = "Normal Ped",
    [15] = "Mr.Whittaker",
    [16] = "Airport Ground Worker",
    [17] = "Businessman",
    [18] = "Beach Visitor",
    [19] = "DJ",
    [20] = "Rich Guy",
    [21] = "Normal Ped",
    [22] = "Normal Ped",
    [23] = "BMXer",
    [24] = "Madd Dogg BodyGuard",
    [25] = "Madd Dogg BodyGuard",
    [26] = "Backpacker",
    [27] = "Construction Worker",
    [28] = "Drug Dealer",
    [29] = "Drug Dealer",
    [30] = "Drug Dealer",
    [31] = "Farm-Town",
    [32] = "Farm-Town",
    [33] = "Farm-Town",
    [34] = "Farm-Town",
    [35] = "Gardener",
    [36] = "Golfer",
    [37] = "Golfer",
    [38] = "Normal Ped",
    [39] = "Normal Ped",
    [40] = "Normal Ped",
    [41] = "Normal Ped",
    [42] = "Jethro",
    [43] = "Normal Ped",
    [44] = "Normal Ped",
    [45] = "Beach Visitor",
    [46] = "Normal Ped",
    [47] = "Normal Ped",
    [48] = "Normal Ped",
    [49] = "Snakehead",
    [50] = "Mechanic",
    [51] = "Mountain Biker",
    [52] = "Mountain Biker",
    [53] = "Unknown",
    [54] = "Normal Ped",
    [55] = "Normal Ped",
    [56] = "Normal Ped",
    [57] = "Oriental Ped",
    [58] = "Oriental Ped",
    [59] = "Normal Ped",
    [60] = "Normal Ped",
    [61] = "Pilot",
    [62] = "Colonel Fuhrberger",
    [63] = "Prostitute",
    [64] = "Prostitute",
    [65] = "Kendl Johnson",
    [66] = "Pool Player",
    [67] = "Pool Player",
    [68] = "Priest",
    [69] = "Normal Ped",
    [70] = "Scientist",
    [71] = "Security Guard",
    [72] = "Hippy",
    [73] = "Hippy",
    [74] = "CJ",
    [75] = "Prostitute",
    [76] = "Normal Ped",
    [77] = "Homeless",
    [78] = "Homeless",
    [78] = "Homeless",
    [79] = "Homeless",
    [80] = "Boxer",
    [81] = "Boxer",
    [82] = "Black Elvis",
    [83] = "White Elvis",
    [84] = "Blue Elvis",
    [85] = "Prostitute",
    [86] = "Ryder with robbery mask",
    [87] = "Stripper",
    [88] = "Normal Ped",
    [89] = "Normal Ped",
    [90] = "Jogger",
    [91] = "Rich Woman",
    [92] = "Normal Ped",
    [93] = "Normal Ped",
    [94] = "Normal Ped",
    [95] = "Normal Ped",
    [96] = "Jogger",
    [97] = "Lifeguard",
    [98] = "Normal Ped",
    [99] = "Rollerskater",
    [100] = "Biker",
    [101] = "Normal Ped",
    [102] = "Ballas",
    [103] = "Ballas",
    [104] = "Ballas",
    [105] = "Grove Street Fam.",
    [106] = "Grove Street Fam.",
    [107] = "Grove Street Fam.",
    [108] = "Los Santos Vagos",
    [109] = "Los Santos Vagos",
    [110] = "Los Santos Vagos",
    [111] = "The Russian Mafia",
    [112] = "The Russian Mafia",
    [113] = "The Russian Mafia Boss",
    [114] = "Varrios Los Aztecas",
    [115] = "Varrios Los Aztecas",
    [116] = "Varrios Los Aztecas",
    [117] = "Triad",
    [118] = "Triad",
    [119] = "Johhny Sindacco",
    [120] = "Triad Boss",
    [121] = "Da Nang Boy",
    [122] = "Da Nang Boy",
    [123] = "Da Nang Boy",
    [124] = "The Mafia",
    [125] = "The Mafia",
    [126] = "The Mafia",
    [127] = "The Mafia",
    [128] = "Farm Inhabitant",
    [129] = "Farm Inhabitant",
    [130] = "Farm Inhabitant",
    [131] = "Farm Inhabitant",
    [132] = "Farm Inhabitant",
    [133] = "Farm Inhabitant",
    [134] = "Homeless",
    [135] = "Homeless",
    [136] = "Normal Ped",
    [137] = "Homeless",
    [138] = "Beach Visitor",
    [139] = "Beach Visitor",
    [140] = "Beach Visitor",
    [141] = "Businesswoman",
    [142] = "Taxi Driver",
    [143] = "Crack Maker",
    [144] = "Crack Maker",
    [145] = "Crack Maker",
    [146] = "Crack Maker",
    [147] = "Businessman",
    [148] = "Businesswoman",
    [149] = "Big Smoke Armored",
    [150] = "Businesswoman",
    [151] = "Normal Ped",
    [152] = "Prostitute",
    [153] = "Construction Worker",
    [154] = "Beach Visitor",
    [155] = "Well Stacked Pizza Worker",
    [156] = "Barber",
    [157] = "Hillbilly",
    [158] = "Farmer",
    [158] = "Farmer",
    [159] = "Hillbilly",
    [160] = "Hillbilly",
    [161] = "Farmer",
    [162] = "Hillbilly",
    [163] = "Black Bouncer",
    [164] = "White Bouncer",
    [165] = "White MIB agent",
    [166] = "Black MIB agent",
    [167] = "Cluckin",
    [168] = "Hotdog",
    [169] = "Normal Ped",
    [170] = "Normal Ped",
    [171] = "Blackjack Dealer",
    [172] = "Casino croupier",
    [173] = "San Fierro Rifa",
    [174] = "San Fierro Rifa",
    [175] = "San Fierro Rifa",
    [176] = "Barber",
    [177] = "Barber",
    [178] = "Whore",
    [179] = "Ammunation Salesman",
    [180] = "Tattoo Artist",
    [181] = "Punk",
    [182] = "Cab Driver",
    [183] = "Normal Ped",
    [184] = "Normal Ped",
    [185] = "Normal Ped",
    [186] = "Normal Ped",
    [187] = "Buisnessman",
    [188] = "Normal Ped",
    [189] = "Normal Ped",
    [190] = "Barbara Schternvart",
    [191] = "Helena Wankstein",
    [192] = "Michelle Cannes",
    [193] = "Katie Zhan",
    [194] = "Millie Perkins",
    [195] = "Denise Robinson",
    [196] = "Farm-Town inhabitant",
    [197] = "Hillbilly",
    [198] = "Farm-Town inhabitant",
    [199] = "Farm-Town inhabitant",
    [200] = "Hillbilly",
    [201] = "Farmer",
    [202] = "Farmer",
    [203] = "Karate Teacher",
    [204] = "Karate Teacher",
    [205] = "Burger Shot Cashier",
    [206] = "Cab Driver",
    [207] = "Prostitute",
    [208] = "Su Xi Mu",
    [209] = "Oriental Noodle stand vendor",
    [210] = "Oriental Noodle stand vendor",
    [211] = "Clothes shop staff",
    [212] = "Homeless",
    [213] = "Weird old man",
    [214] = "Waitress",
    [215] = "Normal Ped",
    [216] = "Normal Ped",
    [217] = "Clothes shop staff",
    [218] = "Normal Ped",
    [219] = "Rich Woman",
    [220] = "Cab Driver",
    [221] = "Normal Ped",
    [222] = "Normal Ped",
    [223] = "Normal Ped",
    [224] = "Normal Ped",
    [225] = "Normal Ped",
    [226] = "Normal Ped",
    [227] = "Oriental Buisnessman",
    [228] = "Oriental Ped",
    [229] = "Oriental Ped",
    [230] = "Homeless",
    [231] = "Normal Ped",
    [232] = "Normal Ped",
    [233] = "Normal Ped",
    [234] = "Cab Driver",
    [235] = "Normal Ped",
    [236] = "Normal Ped",
    [237] = "Prostitute",
    [238] = "Prostitute",
    [239] = "Homeless",
    [240] = "The D.A",
    [241] = "Afro-American",
    [242] = "Mexican",
    [243] = "Prostitute",
    [244] = "Stripper",
    [245] = "Prostitute",
    [246] = "Stripper",
    [247] = "Biker",
    [248] = "Biker",
    [249] = "Pimp",
    [250] = "Normal Ped",
    [251] = "Lifeguard",
    [252] = "Naked Valet",
    [253] = "Bus Driver",
    [254] = "Biker Drug Dealer",
    [255] = "Chauffeur",
    [256] = "Stripper",
    [257] = "Stripper",
    [258] = "Heckler",
    [259] = "Heckler",
    [260] = "Construction Worker",
    [261] = "Cab driver",
    [262] = "Cab driver",
    [263] = "Normal Ped",
    [264] = "Clown",
    [265] = "Officer Frank Tenpenny",
    [266] = "Officer Eddie Pulaski",
    [267] = "Officer Jimmy Hernandez",
    [268] = "Dwaine",
    [269] = "Melvin «Big Smoke» Harris",
    [270] = "Sean «Sweet» Johnson",
    [271] = "Lance «Ryder» Wilson",
    [272] = "Marco Forelli",
    [273] = "T-Bone Mendez",
    [274] = "Paramedic",
    [275] = "Paramedic",
    [276] = "Paramedic",
    [277] = "Firefighter",
    [278] = "Firefighter",
    [279] = "Firefighter",
    [280] = "Los Santos Police Officer",
    [281] = "San Fierro Police Officer",
    [282] = "Las Venturas Police Officer",
    [283] = "County Sheriff",
    [284] = "LSPD Motorbike Cop",
    [285] = "S.W.A.T Special Forces",
    [286] = "Federal Agent",
    [287] = "San Andreas",
    [288] = "Desert Sheriff",
    [289] = "Zero",
    [290] = "Ken Rosenberg",
    [291] = "Kent Paul",
    [292] = "Cesar Vialpando",
    [293] = "Jeffery",
    [294] = "Wu Zi Mu",
    [295] = "Michael Toreno",
    [296] = "Jizzy B",
    [297] = "Madd Dogg",
    [298] = "Catalina",
    [299] = "Claude Speed",
    [300] = "Los Santos Police Officer",
    [301] = "San Fierro Police Officer",
    [302] = "Las Venturas Police Officer",
    [303] = "Los Santos Police Officer",
    [304] = "Los Santos Police Officer",
    [305] = "Las Venturas Police Officer",
    [306] = "Los Santos Police Officer",
    [307] = "San Fierro Police Officer",
    [308] = "San Fierro Paramedic",
    [309] = "Las Venturas Police Officer",
    [310] = "Country Sheriff",
    [311] = "Desert Sheriff"
}

local tCarsName = {
    [400] = 'Landstalker',
    [401] = 'Bravura',
    [402] = 'Buffalo',
    [403] = 'Linerunner',
    [404] = 'Perennial',
    [405] = 'Sentinel',
    [406] = 'Dumper',
    [407] = 'Firetruck',
    [408] = 'Trashmaster',
    [409] = 'Stretch',
    [410] = 'Manana',
    [411] = 'Infernus',
    [412] = 'Voodoo',
    [413] = 'Pony',
    [414] = 'Mule',
    [415] = 'Cheetah',
    [416] = 'Ambulance',
    [417] = 'Leviathan',
    [418] = 'Moonbeam',
    [419] = 'Esperanto',
    [420] = 'Taxi',
    [421] = 'Washington',
    [422] = 'Bobcat',
    [423] = 'Mr. Whoopee',
    [424] = 'BF Injection',
    [425] = 'Hunter',
    [426] = 'Premier',
    [427] = 'Enforcer',
    [428] = 'Securicar',
    [429] = 'Banshee',
    [430] = 'Predator',
    [431] = 'Bus',
    [432] = 'Rhino',
    [433] = 'Barracks',
    [434] = 'Hotknife',
    [435] = 'Article Trailer',
    [436] = 'Previon',
    [437] = 'Coach',
    [438] = 'Cabbie',
    [439] = 'Stallion',
    [440] = 'Rumpo',
    [441] = 'RC Bandit',
    [442] = 'Romero',
    [443] = 'Packer',
    [444] = 'Monster',
    [445] = 'Admiral',
    [446] = 'Squallo',
    [447] = 'Seaspamrow',
    [448] = 'Pizzaboy',
    [449] = 'Tram',
    [450] = 'Article Trailer 2',
    [451] = 'Turismo',
    [452] = 'Speeder',
    [453] = 'Reefer',
    [454] = 'Tropic',
    [455] = 'Flatbed',
    [456] = 'Yankee',
    [457] = 'Caddy',
    [458] = 'Solair',
    [459] = 'Topfun Van',
    [460] = 'Skimmer',
    [461] = 'PCJ-600',
    [462] = 'Faggio',
    [463] = 'Freeway',
    [464] = 'RC Baron',
    [465] = 'RC Raider',
    [466] = 'Glendale',
    [467] = 'Oceanic',
    [468] = 'Sanchez',
    [469] = 'Spamrow',
    [470] = 'Patriot',
    [471] = 'Quad',
    [472] = 'Coastguard',
    [473] = 'Dinghy',
    [474] = 'Hermes',
    [475] = 'Sabre',
    [476] = 'Rustler',
    [477] = 'ZR-350',
    [478] = 'Walton',
    [479] = 'Regina',
    [480] = 'Comet',
    [481] = 'BMX',
    [482] = 'Burrito',
    [483] = 'Camper',
    [484] = 'Marquis',
    [485] = 'Baggage',
    [486] = 'Dozer',
    [487] = 'Maverick',
    [488] = 'News Maverick',
    [489] = 'Rancher',
    [490] = 'FBI Rancher',
    [491] = 'Virgo',
    [492] = 'Greenwood',
    [493] = 'Jetmax',
    [494] = 'Hotring Racer',
    [495] = 'Sandking',
    [496] = 'Blista Compact',
    [497] = 'Police Maverick',
    [498] = 'Boxville',
    [499] = 'Benson',
    [500] = 'Mesa',
    [501] = 'RC Goblin',
    [502] = 'Hotring Racer A',
    [503] = 'Hotring Racer B',
    [504] = 'Bloodring Banger',
    [505] = 'Rancher',
    [506] = 'Super GT',
    [507] = 'Elegant',
    [508] = 'Journey',
    [509] = 'Bike',
    [510] = 'Mountain Bike',
    [511] = 'Beagle',
    [512] = 'Cropduster',
    [513] = 'Stuntplane',
    [514] = 'Tanker',
    [515] = 'Roadtrain',
    [516] = 'Nebula',
    [517] = 'Majestic',
    [518] = 'Buccaneer',
    [519] = 'Shamal',
    [520] = 'Hydra',
    [521] = 'FCR-900',
    [522] = 'NRG-500',
    [523] = 'HPV1000',
    [524] = 'Cement Truck',
    [525] = 'Towtruck',
    [526] = 'Fortune',
    [527] = 'Cadrona',
    [528] = 'FBI Truck',
    [529] = 'Willard',
    [530] = 'Forklift',
    [531] = 'Tractor',
    [532] = 'Combine',
    [533] = 'Feltzer',
    [534] = 'Remington',
    [535] = 'Slamvan',
    [536] = 'Blade',
    [537] = 'Train',
    [538] = 'Train',
    [539] = 'Vortex',
    [540] = 'Vincent',
    [541] = 'Bullet',
    [542] = 'Clover',
    [543] = 'Sadler',
    [544] = 'Firetruck',
    [545] = 'Hustler',
    [546] = 'Intruder',
    [547] = 'Primo',
    [548] = 'Cargobob',
    [549] = 'Tampa',
    [550] = 'Sunrise',
    [551] = 'Merit',
    [552] = 'Utility Van',
    [553] = 'Nevada',
    [554] = 'Yosemite',
    [555] = 'Windsor',
    [556] = 'Monster A',
    [557] = 'Monster B',
    [558] = 'Uranus',
    [559] = 'Jester',
    [560] = 'Sultan',
    [561] = 'Stratum',
    [562] = 'Elegy',
    [563] = 'Raindance',
    [564] = 'RC Tiger',
    [565] = 'Flash',
    [566] = 'Tahoma',
    [567] = 'Savanna',
    [568] = 'Bandito',
    [569] = 'Train',
    [570] = 'Train',
    [571] = 'Kart',
    [572] = 'Mower',
    [573] = 'Dune',
    [574] = 'Sweeper',
    [575] = 'Broadway',
    [576] = 'Tornado',
    [577] = 'AT400',
    [578] = 'DFT-30',
    [579] = 'Huntley',
    [580] = 'Stafford',
    [581] = 'BF-400',
    [582] = 'Newsvan',
    [583] = 'Tug',
    [584] = 'Petrol Trailer',
    [585] = 'Emperor',
    [586] = 'Wayfarer',
    [587] = 'Euros',
    [588] = 'Hotdog',
    [589] = 'Club',
    [590] = 'Train',
    [591] = 'Article Trailer 3',
    [592] = 'Andromada',
    [593] = 'Dodo',
    [594] = 'RC Cam',
    [595] = 'Launch',
    [596] = 'Police Car LS',
    [597] = 'Police Car SF',
    [598] = 'Police Car LV',
    [599] = 'Police Ranger',
    [600] = 'Picador',
    [601] = 'S.W.A.T.',
    [602] = 'Alpha',
    [603] = 'Phoenix',
    [604] = 'Glendale',
    [605] = 'Sadler',
    [606] = 'Baggage Trailer',
    [607] = 'Baggage Trailer',
    [608] = 'Tug Stairs Trailer',
    [609] = 'Boxville',
    [610] = 'Farm Trailer',
    [611] = 'Utility Traileraw',
    [612] = 'Mercedes GTS AMG',
    [613] = 'Mercedes G63 AMG',
    [614] = 'Audi RS-6',
    [662] = "BMW X5",
    [663] = 'Chevrolet Corvette',
    [665] = "Chevrolet Cruze",
    [666] = "Lexus LX",
    [667] = 'Porsche 911',
    [668] = 'Porsche Cayenne',
    [699] = "Bentley",
    [793] = "BMW M8",
    [794] = 'Mercedes E63s',
    [909] = "Mercedes S63 AMG",
    [965] = 'Volkswagen Touareg',
    [1194] = 'Lamborghini Urus',
    [1195] = "Audi Q8",
    [1196] = "Dodge SRT8",
    [1197] = "Acura NSX",
    [1198] = "Volvo V60",
    [1199] = "Range Rover Evoque",
    [1200] = "Honda Civic",
    [1201] = 'Lexus Sport-S',
    [1202] = 'Ford Mustang',
    [1203] = "Volvo XC90",
    [1204] = "Jaguar F-pace",
    [1205] = 'Kia Optima',
    [3155] = "BMW Z4 40i",
    [3156] = "Mercedes S600",
    [3157] = 'BMW X5 E53',
    [3158] = "Lexus RX450H",
    [3194] = "Ducati Diavel",
    [3195] = "Ducati Panigale",
	[3196] = "Ducati Ducnaked",
    [3197] = "Kawasaki Ninja", 
    [3198] = "Western",
    [3199] = 'Rolls-Royce Cullinan',
    [3200] = "Volkswagen Beetle",
    [3201] = "Bugatti Divo",
    [3202] = "Bugatti Chiron",
    [3203] = "Fiat 500 Abarth",
    [3204] = 'Mercedes-Benz GLS 2020',
    [3205] = 'Mercedes-AMG G65 AMG',
    [3206] = 'Lamborghini Aventador',
    [3207] = "Range Rover SVA",
    [3208] = "BMW 530I E39",
    [3209] = 'Mercedes-Benz S600',
    [3210] = "Tesla Model X",
    [3211] = "Nissan Leaf",
    [3212] = 'Nissan Silvia',
    [3213] = "Subaru Forest",
    [3215] = "Subaru Legacy 1989",
    [3216] = "Hyundai Sonata",
    [3217] = "BMW 7 E 38",
    [3218] = "Mercedes-Benz E 55 AMG",
    [3219] = "Mercedes-Benz E500",
    [3224] = 'Buckingham',
    [3232] = "Infiniti FX 50",
    [3233] = "Lexus RX 450H",
    [3234] = "Kia Sportage",
    [3235] = "Volkswagen Golf R",
    [3236] = 'Audi R8',
    [3237] = "Toyota Camry XV40",
    [3238] = 'Toyota Camry XV70',
    [3239] = 'BMW M5 E60',
    [3240] = 'BMW M5 F90',
    [3245] = "Mercedes Maybach S 650",
    [3247] = 'Mercedes-Benz AMG GT',
    [3248] = 'Porsche Panamera Turbo',
    [3251] = 'Wolksvagen Passat',
    [3254] = "Chevy Corvette 1980",
    [3266] = "Dodge",
    [3348] = "Ford Mustang Shelby GT500",
    [3974] = "Aston Martin DB5",
    [4542] = "BMW M3 GTR",
    [4543] = "Chevrolet Camaro",
    [4544] = "Mazda RX7",
    [4545] = "Mazda RX8",
    [4546] = "Mitsubishi Eclipse",
    [4547] = "Ford Mustang 289",
    [4548] = "Nissan 350Z",
    [4774] = "BMW 760li",
    [4775] = "Aston Martin One-77",
    [4776] = "Bentley Balacar",
    [4777] = "Bentley Bentayaga",
    [4778] = "BMW M4 Competition 2021",
    [4779] = "BMW I8",
    [4780] = "Genesis G90",
    [4781] = "Honda Integra Type-R",
    [4782] = "BMW M3 G20",
    [4783] = "Mercedes-Benz S500 W223",
    [4784] = "Ford Raptor",
    [4785] = "Ferrari J50",
    [4786] = "Mercedes-Benz SLR McLaren",
    [4787] = "Subaru BRZ",
    [4788] = "Lada Vesta SV-Cross",
    [4789] = "Porsche Taycan",
    [4790] = "Ferrari Spider",
    [4791] = "UAZ Patriot",
    [4792] = "Volga 3110",
    [4793] = "Mercedes-Benz X Class",
    [4794] = "Jaguar XFR",
    [4796] = "Dodge Grand Caravan Ambulance",
    [4797] = "Ford Mustang Ambulance",
    [4798] = "Ford Ambulance",
    [4799] = "Ford Raptor Ambulance",
    [4801] = "Sea Shark",
    [4802] = "Lamborghini Aventador Superfast",
    [4803] = "Ferrari 812 Superfast",
    [5074] = "Xoomer Petrol",
    [5075] = "Delorean",
    [5424] = "Mercedes-Benz Gl63",
    [5425] = "BMW 7",
    [5426] = "MB v250",
    [5427] = "Mercedes-Benz C63",
    [5428] = "MB C63s Coupe",
    [5429] = "Audi RS7",
    [5430] = "BMW X7",
    [5431] = "BMW X6",
    [5432] = "Jeep Gladiator",
    [5433] = "BMW M8 GRAN СOUPE",
    [5434] = "Volkswagen Tourage",
    [5435] = "Range Rover 2022",
    [5436] = "Mercedes-Benz S 63",
    [5437] = "Mercedes-Benz C63S",
    [5438] = "BMW E30",
    [5439] = "BMW F10",
    [5440] = "Volkswagen Transporter",
    [5441] = "Mercedes-Benz Vito",
    [5442] = "Opel Vivaro",
    [5457] = "Mersedes-Benz GLE 63S",
    [5458] = "Testa Model 3",
    [5459] = "Lamborghini Murcielago",
    [6604] = "Audi A6",
    [6605] = "Audi Q7",
    [6606] = "BMW m6",
    [6607] = "BMW M6 1990",
    [6608] = "Mercedes CLA 45 AMG",
    [6609] = "Mercedes CLS",
    [6610] = "Haval H6",
    [6611] = "Toyota Land Cruiser VXR V8 4",
    [6612] = "Lincoln Continental",
    [6613] = "Porsche Macan Turno",
    [6614] = "Daewoo Matiz",
    [6615] = "Mercedes-Benz 6x6",
    [6616] = "Mercedes E63",
    [6619] = "Monster El Toro",
    [6621] = "TLC Prado",
    [6622] = "Toyota RAV4",
    [6623] = "Toyota Supra A90",
    [6624] = "UAZ 469",
    [6625] = "Volvo XC90 2012",
    [12713] = "Mercedes-Benz GLE63",
    [12714] = "Renault Laguna",
    [12715] = "Mercedes-Benz CLS 53",
    [12716] = "Audi RS5",
    [12717] = "Cadillac Escalade 2020",
    [12718] = "Cyber Truck",
    [12720] = "Ford GT",
    [12721] = "Dodge Viper",
    [12723] = "Mitsubishi Lancer Old",
    [12724] = "Audi TT RS",
    [12725] = "Mercedes-Benz Actros",
    [12726] = "Audi S4",
    [12727] = "BMW 4-Series",
    [12728] = "Cadillac Escalade 2007",
    [12729] = "Toyota Chaser",
    [12731] = "Mitsubishi Lancer",
    [12732] = "Impala 64",
    [12733] = "Impala 67",
    [12736] = "McLaren MP4",
    [12738] = "Rolls-Royce Phantom",
    [12740] = "Volvo Truck",
    [12741] = "Subaru WRX",
    [12742] = "Sherp",
    [14119] = "Audi A6 - Delimobil",
    [14120] = "Toyota Camry - Delimobil",
    [14121] = "KIA Sportage - Delimobil",
    [14122] = "Tesla Model X - Delimobil",
    [14123] = "Toyota RAV4 - Delimobil",
    [14124] = "Nissan GTR 2017",
    [14767] = "Mercedes-AMG Project One R50",
    [14769] = "Chevrolet Aveo",
    [14857] = "BUGATTI Bolide",
    [14884] = "Yacota K5",
    [14899] = "Renault Duster",
    [14904] = "Ferrari Monza SP2",
    [14905] = "Mercedes-AMG G63",
    [14906] = "Hotwheels",
    [14907] = "Hummer HX",
    [14908] = "Ferrari F70",
    [14909] = "BMW M5 CS",
    [14910] = "LADA Priora",
    [14911] = "Quadra Turbo-R V-Tech",
    [14913] = "Mercedes-Benz VISION AVTR",
    [14914] = "Specialized Stumpjumper",
    [14915] = "Santa Cruz Tallboy",
    [14916] = "Spooky Metalhead",
    [14917] = "Turner Burner",
    [14919] = "Los-Santos INTER BUS C",
    [15085] = "Dodge Charger",
    [15098] = "BMW M1",
    [15099] = "Lamborghini Countach",
    [15101] = "Koenigsegg Gemera",
    [15102] = "KIA K7",
    [15104] = "Lexus LX600",
    [15105] = "Nissan Qashqai",
    [15106] = "Predator",
    [15109] = "Toyota GR",
    [15111] = "Yacht",
    [15112] = "Boates",
    [15113] = "Mercedes-AMG A-45",
    [15114] = "Toyota AE86",
    [15115] = "Land Rover Defender",
    [15116] = "Ford Mustang Mach",
    [15117] = "Mazda 6",
    [15118] = "Audi R8",
    [15295] = "Range Rover Velar",
    [15329] = "Luxor Deluxe",
    [15330] = "Nimbus",
    [15332] = "Mercedes-Benz Arocs 4163",
    [15333] = "Iveco Stralis",
    [15334] = "MAN TGS",
    [15335] = "Volvo 460",

    [15416] = "VC Ambulance",
    [15417] = "VC Banshee",
    [15418] = "VC Benson",
    [15419] = "VC Bloodring Banger",
    [15420] = "VC Bus",
    [15421] = "VC Cabbie",
    [15422] = "VC Police Car",
    [15423] = "VC Deluxo",
    [15424] = "VC FBI Rancher",
    [15425] = "VC Flatbed",
    [15426] = "VC Idaho",
    [15427] = "VC Infernus ",
    [15428] = "VC Love Fist",
    [15429] = "VC Patriot",
    [15430] = "VC Pizza Boy",
    [15431] = "VC Securicar ",
    [15432] = "VC Sentinel",
    [15433] = "VC Stinger",
    [15434] = "VC Stretch",
    [15435] = "VC Taxi",
    [15436] = "VC Trash",
    [15485] = "VC Angel",

    [15488] = "VC Burrito",
    [15489] = "VC FBI Car",
    [15490] = "VC Hotring Racer B",
    [15491] = "VC Sabre",
    [15492] = "VC Sanchez",
    [15494] = "Tesla Model X - Medic",
    [15495] = "BMW IX",
    [15496] = "Mercedes-Benz EQC 400",
    [15497] = "Audi e-tron",
    [15498] = "Jaguar I-PACE",
    [15499] = "Tesla Model S - Police",
    [15500] = "Tesla Model X - Police",
    [15501] = "Renault Twizy",
    [15723] = "Lamorghini Murcielago",
    [15882] = "Skateboard",
    [15883] = "Surfboard",

    
    
    
   
}



local listFiles = {}

for i = 1,452 do
  listFiles[#listFiles + 1] = {workdir .. '\\resource\\RoboScripts\\RoboTools\\skins\\'..i..'.png', 'https://api.robo-tools.online/data/images/skins_new/'..i..'.png', "Скин[".. i .."]"}
end

for i = 400,611 do
  listFiles[#listFiles + 1] = {workdir .. '\\resource\\RoboScripts\\RoboTools\\veh\\Vehicle_'..i..'.jpg', 'https://api.robo-tools.online/data/images/veh/Vehicle_'..i..'.jpg', "Транспортные Средства"}
end

for i = 1, 18 do 
  listFiles[#listFiles + 1] = {workdir .. '\\resource\\RoboScripts\\RoboTools\\guns\\wep_'..i..'.png', 'https://api.robo-tools.online/data/images/weapons/wep_'..i..'.png', "Оружия"}
end

for i = 22, 46 do 
  listFiles[#listFiles + 1] = {workdir .. '\\resource\\RoboScripts\\RoboTools\\guns\\wep_'..i..'.png', 'https://api.robo-tools.online/data/images/weapons/wep_'..i..'.png', "Оружия"}
end


for i = 1, 55 do 
    listFiles[#listFiles + 1] = {workdir .. '\\resource\\RoboScripts\\RoboTools\\objects\\'..i..'.jpg', 'https://api.robo-tools.online/data/images/objects/'..i..'.jpg', "Объекты"}
end

  
for i = 1, 5 do
  listFiles[#listFiles + 1] = {workdir .. '\\resource\\RoboScripts\\RoboTools\\sounds\\sound_'..i..'.mp3', 'https://api.robo-tools.online/data/sounds/sound_'..i..'.mp3', "Звуки"}
end

local killListPairs = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,255}

for k,v in pairs(killListPairs) do
    listFiles[#listFiles + 1] = {workdir .. '\\resource\\RoboScripts\\RoboTools\\KillList\\reason_'..v..'.png', 'https://api.robo-tools.online/data/images/KillList/reason_'..v..'.png', "Картинки Килл-Листа [" .. v .. "]"}
end

for k,v in pairs(libs) do
    if not v then
        log('У вас отсутствует библиотека '.. k .. '. Попытка скачивания.')
    end
end





SearchingLibs = false

function checkLibs(type)
    SearchingLibs = true
    if type == nil then type = 0 end
    local needle = function()
        local isdownloaded = false
        createDirectory(workdir .. '\\resource\\fonts')
        createDirectory(workdir .. '\\lib')
        createDirectory(workdir .. '\\lib\\md5')
        createDirectory(workdir .. '\\lib\\socket')
        createDirectory(workdir .. '\\lib\\game')
        for k,v in pairs(listLibs) do
            local file_lib = io.open(v[1], "r")
            if file_lib and libs['md5'] then
                if v[4] ~= nil then
                    if md5.sumhexa(file_lib:read("*a")) ~= v[4] then
                        file_lib:close()
                        os.remove(v[1])
                    else
                        file_lib:close()
                    end
                end
            end

            isdownloaded = downloadFile(v[3],v[1],v[2])
        
            while not doesFileExist(v[1]) do  wait(0) end
        end
        SearchingLibs = false
        if isdownloaded then reloadScripts() return false end
    end
    if type == 0 then
        lua_thread.create(needle)
    else
        needle()
    end
return true
end

function checkData()
    if checkLibs() then
        lua_thread.create(function()
            local isdownloaded = false
            for k,v in pairs(listFiles) do
                isdownloaded = downloadFile(v[3],v[1],v[2], v[3])
                while not doesFileExist(v[1]) do wait(0) end
            end
            if isdownloaded then reloadScripts() end
        end)
    end
end

checkData()





-------------------------------------------------------
local getBonePosition = ffi.cast("int (__thiscall*)(void*, float*, int, bool)", 0x5E4280)

encoding.default = 'CP1251'
u8 = encoding.UTF8

local as_action = require('moonloader').audiostream_state


local directIni = "RoboScripts\\RoboTools\\main.ini"
local def = {
    main = {
        tag = "|| ",
        organisation = 0,
        fontsize = 1,
        command = "amenu",
        password = "",
        passwordauto = false,
        theme = 5,
        adminpass = "",
        passwordautoadmin = false,
        adminlvl = 0,
        organisationafter = false,
        skinafter = false,
        numberskin = 0,
        servernumber = 0,
        azafter = false,
        interiorafterint = 0,
        interiorafterstate = false,
        firstuse = true,
        autoquest = true,
        autojobchatlog = false,
        ignorlist = false,
        afklimit = 600,
        dopusklimit = 30,
        afkstatus = true,
        afkquitstatus = true,
        warnafk = true,
        firstuse = true,
        iintstate = false,
        coordsafter = '0 0 0',
        coordsafterstate = false,
        iintnumber = 0,
        msgbuffer = u8"Привет всем, гребем репорт!",
        msgstate = false,
        autoinv = false,
        hideadm = false,
        hideip = false,
        autob = true,
        rslap = 'rslap',
        rkick = 'rkick',
        rpm = 'rpm',
        abot = 'abot',
        hgps = 'hgps',
        hclr = 'hclr',
        hcmd = 'hcmd',
        tp = 'tp',
        tpcor = 'tpcor',
        veh = 'pveh',
        alone = 'alone',
        hlvl = 'hlvl',
        rveh = 'rveh',
        gun = 'agun',
        rgun = 'rgun',
        skin = 'askin',
        rskin = 'rskin',
        amember = 'amember',
        calc = 'calc',
        arepcar = 'arepcar',
		debug = true,
        joinAFK = true,
        showUpdate = false,
        showBTop = true,
        toolsFirstUse = true,
        toolsLastEtap = 1,
    },

    auth = {
        login = "",
        password = "",
        token = "",
        trust = false,
        auto = false
    },

    cheats = {
        gm = true,
        noBike = true,
        invisible = false,
        clickWarp = true,
        fJetPack = true,
        inifinityAmmo = true,
        xJP = ssw / 1.337,
        yJP = ssh / 4.67,
        fnameJP = 'Trebuchet MS',
        fsizeJP = 9,
        fflagJP = 5,

        xARB = ssw / 1.337,
        yARB = ssh / 4.5,
        fnameARB = 'Trebuchet MS',
        fsizeARB = 9,
        fflagARB = 5,
        colorBoostTextARB = 'CCFFFFFF',
        colorBoostARB = 'FF3300FF',


        boost = 50,
        multiplier = 10,
        colorBoostText = 'CCFFFFFF',
        colorBoost = 'FF3300FF',
        wallhack = true,
        whcolor = 'FFFFFFFF',
        whlinecolor = 'FFFFFFFF',
        whdist = 100,
        whskeletal = false,
        whnick = true,
        whlines = false,
        whnormalcolor = true,
        whnormalcolorbones = true,
        cwallhack = true,
        cwhfsize = 8,
        cwhfname = 'Times New Roman',
        cwhfOffs = 12,
        cwhfflag = 5,
        cwhname = true,
        cwhid = true,
        cwhhp = true,
        cwhengine = true,
        cwhlines = false,
        cwhdist = 100,
        cwhlinecolor = 'FFFFFFFF',
        cwhnamecolor = 'FFFFFFFF',
        cwhidcolor = '00FF02FF',
        cwhhpcolor = 'FFFFFFFF',
        cwhenginecolor = 'FFFFFFFF',
        --------------bullettracers-----------------
        btracer = true,
        myBullets = true,
        otherBullets = true,
        EndMy = true,
        EndOther = true,
        showPlayer = true,
        showId = true,
        showNick = true,
        colorNick = '00FF02FF',
        colorId = '00FF02FF',
        timeRenderMyBullets = 10,
        timeRenderOtherBullets = 10,
        sizeMyLine = 1,
        sizeOtherLine = 1,
        sizeMyPolygonEnd = 1,
        sizeOtherPolygonEnd = 1,
        rotationMyPolygonEnd = 10,
        rotationOtherPolygonEnd = 10,
        degreeMyPolygonEnd = 30,
        degreeOtherPolygonEnd = 30,
        maxLineMyLimit = 30,
        maxLineOtherLimit = 30,
        staticObjectMy = 'FF6600FF',
        dynamicObjectMy = '3366FFFF',
        playerMy = 'FF66FFFF',
        carMy = '00FF66FF',
        staticObjectOther = 'FF6600FF',
        dynamicObjectOther = '3366FFFF',
        playerOther = 'FF66FFFF',
        carOther = '00FF66FF',
        --------------------------------------------
        pSpeed = 1.5,
        multiplierARB = 1,

        --------------------------------------------

        showKillTime = true,
        showKillerNick = true,
        showKillerID = true,
        showKilledNick = true,
        showKilledID = true,
        colorKillTime = 'ABADABFF',
        withIMG = 0,
        linesKL = 4,
        colorWeapon = 'FFFFFFFF',
        

        fnameKL = 'Times New Roman',
        fsizeKL = 12,
        fflagKL = 5,
        fOffsKL = 18,
        fAlignKL = 1,

        xKL = ssw / 1.32,
        yKL = ssh / 2.57,

    },

    checker_stream = {
        show = false,
        lvlFrom = 1,
        lvlTo = 10,
        fName = "Times New Roman",
        fsize = 10,
        fflag = 5,
        fOffs = 18,
        fAlign = 1,
        x = 0,
        y = 0,
        max = 10,
        radius = 50,
        colorNick = "C0D6E4FF",
        colorId = "C0D6E4FF",
        colorSeparator = "FFFFFFFF",
        colorLVL = "FFFFFFFF",
        colorHeaderLVL = "FFFFFFFF",
        colorHeaderID = "FFFFFFFF",
        colorPing = "FFFFFFFF",
        colorHeaderPing = "FFFFFFFF",
        colorSpeed = "FFFFFFFF",
        colorSpeedHeader = "FFFFFFFF",
        colorCarId = "FFFFFFFF",
        colorHeaderCarId = "FFFFFFFF",

        showNick = true,
        showId = true,
        showHeaderID = true,
        showSeparator = true,
        showLVL = true,
        showHeaderLVL = true,
        showPing = true,
        showHeaderPing = true,
        showSpeed = true,
        showSpeedHeader = true,
        showCarId = true,
        showHeaderCarId = true,

    },

    recon = {
        delTD = true,
        showRecon = true,
        ---------------------
        showInfo = true,
        typeInfo = 0,
        showInfoNick = true,
        showInfoId = true,
        paintInfoNick = true,
        showInfoTime = true,
        showInfoSuspicion = false,
        showInfoSuspicionType = 0,
        showPlatform = true,
        showInfoCar = true,
        --------------------
        showNavig = true,
        typeNavig = 0,
        showKeys = true,
        useKeys = true,
        useSlap = true,
        --
        tpToP = true,
        tpToM = true,
        spawn = true,
        az = true,
        UP = true,
        DOWN = true,
        getip = true,
        pgetip = true,
        stats = true,
        here = true,
        sethp = true,
        plveh = true,
        freeze = true,
        unfreeze = true,
        flip = true,
        skill = true,
        obves = true,
        zatochki = true,
        checkgun = true,
        getgun = true,
        hwarn = true,
        nwarn = true,
        --
        --------------------
        showFastPunish = true,
        xPunish = -1,
        yPunish = -1,
        --------------------
        showFP = true,
        lastRecon = -1,
        xInfo = -1,
        yInfo = -1,
        xNavig = -1,
        yNavig = -1,
        xBot = ssw / 1.24,
        yBot = ssh / 2,
        ----------------------
        showKeysP = true,
        showW = true,
        showA = true,
        showS = true,
        showD = true,
        showAlt = true,
        showShift = true,
        showSpace = true,
        showF = true,
        showC = true,
        showRKM = true,
        showLKM = true,
        showH = true,
        showCtrl = true,
        showE = true,
        showQ = true,
        showUp = true,
        showDown = true,
        -----------------------
        xKeys = ssw / 2.577,
        yKeys = ssh / 1.315,
        ------------------------
        showLook = true,
        distanceLook = 2,
        transitionLook = 0.5,
        showEndLook = true,
        sizeLook = 1,
        sizeEndLook = 1,
        rotationEndLook = 10,
        degreeEndLook = 30,
        colorLook = "FFFFFFFF",
        --------------------------
        showRadar = true,
        --------------------------
        showCars = true,
        showHeaderCars = true,
        carsX = ssw / 1.25,
        carsY = ssh / 1.797,
        showIfNoCar = false,
        ---------------------------
        sendPM = true,
        modePM = 0,
    },


    stats = {
        state = true,
        x = ssw / 1.34,
        y = ssh / 90,
        show_header = true,
        show_date = true,
        show_session = true,
        show_report = true,
        update_early = 0,
         
        daily_online = true,
        daily_afk = true,
        daily_clear_online = false,
        daily_reports = true,
        daily_punishments = true,
        daily_bans = false,
        daily_warns = false,
        daily_mutes = false,
        daily_kicks = false,
        daily_jails = false,
        daily_reputation = true,
        daily_forms = false,


        weekly_online = true,
        weekly_afk = true,
        weekly_clear_online = false,
        weekly_reports = true,
        weekly_punishments = false,
        weekly_bans = false,
        weekly_warns = false,
        weekly_mutes = false,
        weekly_kicks = false,
        weekly_jails = false,
        weekly_reputation = true,
        weekly_forms = false,

        all_online = true,
        all_afk = true,
        all_clear_online = false,
        all_reports = false,
        all_punishments = false,
        all_bans = false,
        all_warns = false,
        all_mutes = false,
        all_kicks = false,
        all_jails = false,
        all_reputation = false,
        all_forms = false
    },

    colorchats = {
        admin = '27E31EFF', -- +
        report = 'F93613FF', -- +
        reportcount = 'D82809FF', -- +
        banip = 'FF6347FF', -- +
        banipoff = 'FF6347FF', 
        unbanip = 'FF6347FF',
        ban = 'FF6347FF', -- +
        banoff = 'FF6347FF', -- +
        unban = 'FFFF00FF', -- +
        warn = 'FF6347FF', -- +
        warnoff = 'FF6347FF', -- +
        unwarnoff = 'FF6347FF', 
        unwarn = 'FF6347FF', 
        apunish = 'FF6347FF', 
        apunishoff = 'FF6347FF',
        unapunishoff = 'FF6347FF',
        jail = 'FF6347FF', -- +
        jailoff = 'FF6347FF', -- +
        unjail = 'FF6347FF', -- +
        unjailoff = 'FF6347FF',
        mute = 'FF6347FF', -- +
        muteoff = 'FF6347FF', 
        unmute = 'FF6347FF', -- +
        unmuteoff = 'FF6347FF',
        kick = 'FF6347FF', -- +
        freeze = 'FFFF00FF', -- +
        unfreeze = 'FFFF00FF', -- +
        flips = 'FFFF00FF', -- +
        slap = 'AFAFAFFF', -- +
        spcar = 'AFAFAFFF', -- +
        spawn = 'BE2D2DFF', -- +
        getherecar = 'AFAFAFFF', -- +
        recon = 'AFAFAFFF', -- +
        plveh = 'AFAFAFFF', -- +
        pm = '6495EDFF', -- +
        reportanswer = 'FAAC58FF', -- +
        warnreklam = 'BE2D2DFF', -- +
        reg = 'BE2D2DFF', -- +
        gethere = 'AFAFAFFF', -- +
        nick = 'FDBDBAFF', -- +
        givegun = 'AFAFAFFF', -- +
        key = 'FFFF00FF', -- +
        warnklad = 'BE2D2DFF', -- +
        buycar = '42B02CFF', -- +
        buyhouse = 'BE2D2DFF', -- +
        transfer = 'BE2D2DFF', -- +
        gunall = '42B02CFF', -- +
        skinall = '42B02CFF', -- +
        spplayers = '42B02CFF', -- +
        hpall = '42B02CFF', -- +
        giveskin = 'AFAFAFFF', -- +
        eatall = '42B02CFF', -- +
        freezeall = 'FFFF00FF', -- +
        unfreezeall = 'FFFF00FF', -- +
        armourall = '42B02CFF', -- +
        unarmourall = '42B02CFF', -- +
        azakon = '42B02CFF', -- +
        colorTagsGetip = 'FFFFFFFF',
        colorTextGetip = 'FFFFFFFF',
        colorTireGetip = 'FFFFFFFF',
        colorValuesGetip = 'FFFFFFFF',
    },

    report = {
        state = true,
        showDifferenceReputation = true,
        headerColor = "FFA500FF",
        amountColor = "008800FF",
        basedColor = "FFFFFFFF",
        showInfoResponse = true,
        showBordersResponse = true,
        showAuthorResponse = true,
        showContextResponse = true,
        showAnswerResponse = true,
        showReportResponse = true,
        showTimeAnswer = false,

        colorTextResponse = "2DF61CFF",
        colorAuthorResponse = "6495EDFF",
        colorContextResponse = "6495EDFF",
        colorAnswerResponse = "6495EDFF",
        colorReportResponse = "6495EDFF",
        colorBordersResponse = "E84855FF",

        reportauthor = "Уважаемый игрок, начинаю работать по вашему репорту!",
        reportwarner = "Уважаемый игрок, начинаю следить за нарушителем!",
        reportsend = "Уважаемый игрок, передал ваш репорт администратору!",
        reportoffline = "Уважаемый игрок, игрок на которого вы жаловались - оффлайн!",
        autoot = false,
        typeot = 0,
        waitot = 100,
        count = 3,
        hideflood = false,
        x = 100,
        y = 100,
        showRe = true,
        percent = 60,
        showAuthor = true,
        showReAuthor = true,
        showRetranslit = true,
        showChoiseSave = true,
        paintButtons = true,
        typeReport = 0,
        showText = true,
        showLimit = true,
        showInput = true,
        fastLVL = true,
        fastAnsw = false,
        helpGPS = true,
        listCMD = true,
        similarBD = true,
        sendAchat = true,
        transmit = true,
        reAuthor = true,
        reWarner = true,
        colorsList = true,
        showPlatform = true,
    },
    
    
    adminsChecker = {
        state = true,
        style = 0,
        x = (ssw / 120),
        y = (ssh / 2.713),
        delay = 2500,
        showSpecial = true,
        showNick = true,
        showId = true,
        showAfk = true,
        showRe = true,
        showReputation = true,
        showActive = true,
        showNotice = true,
        fsize = 9,
        fname = 'Trebuchet MS',
        fOffs = 18,
        fflag = 5,
        dopusk = 900,
        eight = 'FF0000FF',
        seven = '006600FF',
        six = '009900FF',
        five = 'CC33FFFF',
        four = '003399FF',
        three = 'FF9900FF',
        two = '0099CCFF',
        one = '00CCFFFF',
        header = 'FFFFFFFF',
        normal = '42F542FF',
        over = 'FF3725FF',
        afktext = 'FFFFFFFF',
        afknorma = '42F542FF',
        afkover = 'FF3725FF',
        dash = 'FFFFFFFF',
        recon = 'FF0000FF',
        reptext = 'FFFFFFFF',
        reputation = 'FFA500FF',
        activetext = '66B0FFFF',
        active = 'FFFFFFFF',
        eight_state = true,
        seven_state = true,
        six_state = true,
        five_state = true,
        four_state = true,
        centering = 1,
        three_state = true,
        two_state = true,
        one_state = true,
    },

    leadersChecker = {
        state = false,
        style = 0,
        x = (ssw / 1.38),
        delay = 2500,
        y = (ssh / 1.55),
        fsize = 8,
        fname = 'Trebuchet MS',
        fOffs = 12,
        fOffsx = 132,
        fflag = 5,
        dopusk = 900,
        ingamestate = true,
        centering = 2,
        nickstate = true,
        headerstate = true,
        idstate = true,
        orgstate = true,
        zamstate = true,
        afkstate = true,
        orgequalsnickid = true,
        activeState = true,
        org_header = 'FFFFFFFF',
        active_header = 'FFFFFFFF',
        active_value = '66B0FFFF',
        nick_header = 'FFFFFFFF',
        nick_value = 'FFFFFFFF',
        id_value = 'FFFFFFFF',
        deputy_header = 'FFFFFFFF',
        deputy_value = 'FFCC33FF',
        members_header = 'FFFFFFFF',
        members_value = '9966FFFF',
        members_afk_value = '44F2ACFF',
    },

    friendChecker = {
        state = false,
        x = (ssw / 1.536),
        y = (ssh / 154.2),
        fsize = 9,
        fname = 'Trebuchet MS',
        fflag = 5,
        fOffs = 16,
        nick_color = 'FEFEFFFF',
        id_color = 'FEFEFFFF',
        header_color = '4CFCACFF',
        distance_color = 'E18CFFFF',
        distance_header_color = 'FFFEFE00',
        line_color = 'FC7E00FF',
        show_nick = true,
        show_id = true,
        distance_render = 100,
        centering = 1,
        show_distance = false,
        show_header = true,
        instreamstate = false,
    },


    colororgs = {
        '0055B5FF',
        '0055B5FF',
        '0055B5FF',
        '0055B5FF',
        'DB6666FF',
        '34598CFF',
        '90462BFF',
        'DB6666FF',
        'D1582CFF',
        'E43E0AFF',
        '248510FF',
        'ACA50FFF',
        '9F2B72FF',
        '19D485FF',
        '3065A0FF',
        '384B95FF',
        'C51A1AFF',
        'DB6313FF',
        'ACA50FFF',
        '90462BFF',
        '34598CFF',
        'DB6666FF',
        '0055B5FF',
        'E43E0AFF',
        '494848FF',
        'E43E0AFF',
        '90462BFF',
        '34598CFF',
        '02f2d6FF'
      },

      lstates = {
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
       
      },

      custom = {
        
      },


      forms = {
        time = 4000,
        sound_url = 'sound_1.mp3',
        colored_form = true,
        colored_form_color = 'FCA103FF',
        show_flash = true,
        show_chat = true,
        is_re_punish = true,
        x = 100,
        y = 100,
        volume = 50,
        show_time = true,
        show_nick = true,
        tag_color = 'FCB205FF',
        default_color = 'FFFFFFFF',
        color_accept = '2DF61CFF',
        color_disband = 'F6361CFF',
        color_author = '8105FCFF',
      },
      

      warnings = {
        flood = true,
        floodCount = 3,
        showFloodForm = true,
        secondsFlood = 30,
        minutesFlood = 60,
        muteFloodReason = "Флуд",

        caps = true,
        showCapsForm = true,
        minutesCaps = 30,
        percentCaps = 40,
        muteCapsReason = "Капс",

        Ad = true,
        adCount = 3,
        adSeconds = 180,
        showAdForm = true,
        adMinutes = 120,
        muteAdReason = "Нарушение КД /vr",



        teamKill = true,


        pesok = true,

        massDM = true,
        massDMSeconds = 60,
        countMassDM = 5,


        rvanka = true,

        onfootSpeedLimit = 0.7,
        incarSpeedLimit = 1,
        unocSpeedLimit = 0.614,
        onfootDistLimit = 160,
        incarDistLimit = 160,
        unocDistLimit = 160,

        coolDownRvanka = 10,



        aimBot = true,
        aimBotOnePart = true,
        aimBotOneGun = true,
        aimBotSeconds = 5,

        aimbot_Silenced = 3,
        aimbot_Deagle = 5,
        aimbot_Shotgun = 8,
        aimbot_Uzi = 25,
        aimbot_Mp5 = 25,
        aimbot_Ak47 = 15,
        aimbot_M4A1 = 10,
        aimbot_Rifle = 4,
        aimbot_Sniper = 4,

      },

      long_chat = {
        show = false,
        showSendTime = true,
        showSenderNick = true,
        showSenderID = true,
        showSenderText = true,
        linesChat = 5,
        showSenderDist = true,
        centering = 1,

        colorBased = 'FFFFFFFF',
        colorTime = 'FFFFFFFF',
        colorDist = 'FFFFFFFF',
        colorNick = 'FFFFFFFF',
        colorID = 'FFFFFFFF',
        colorText = 'FFFFFFFF',
        colorDistTag = 'FFFFFFFF',

        x = ssw / 2.16,
        y = ssh / 1.17,

        fsize = 9,
        fname = 'Trebuchet MS',
        fflag = 5,
        fOffs = 16,
      },

      joinExit = {
        show = false,
        showJoinExitTime = true,
        showNick = true,
        showID = true,
        showText = true,
        linesChat = 5,
        centering = 1,

        colorBased = 'FFFFFFFF',
        colorTime = 'FFFFFFFF',
        colorNick = 'FFFFFFFF',
        colorID = 'FFFFFFFF',
        colorText = 'FFFFFFFF',

        x = ssw / 1.151,
        y = ssh / 1.27,

        fsize = 9,
        fname = 'Trebuchet MS',
        fflag = 5,
        fOffs = 16,
      },

      formPunish = {
        autounban = true,
        waitform = 500,
      }
}

function tableWDefine(normal, defined)
    for k,v in pairs(defined) do
        if normal[k] == nil then
            normal[k] = v
        elseif type(v) == 'table' then
            normal[k] = tableWDefine(normal[k], v)
        end
    end
    return normal
end

local patches = {
    ['main'] = workdir .. '/config/RoboScripts/RoboTools/main.json',
    ['main-reserv'] = workdir .. '/config/RoboScripts/RoboTools/main-reserve.json',
    ['qpunish'] = workdir .. '/config/RoboScripts/RoboTools/quickpunish.json',
    ['rbuttons'] = workdir .. '/config/RoboScripts/RoboTools/rbuttons.json',
    ['specials'] = workdir .. '/config/RoboScripts/RoboTools/specials.json',
    ['points'] = workdir .. '/config/RoboScripts/RoboTools/points.json',
    ['friends'] = workdir .. '/config/RoboScripts/RoboTools/friends.json',
    ['hotkeys'] = workdir .. '/config/RoboScripts/RoboTools/hotkeys.json',
    ['forms'] = workdir .. '/config/RoboScripts/RoboTools/forms.json',
    ['forms_hotkey'] = workdir .. '/config/RoboScripts/RoboTools/forms_hotkey.json',
    ['binds'] = workdir .. '/config/RoboScripts/RoboTools/binds.json',
    ['notices'] = workdir .. '/config/RoboScripts/RoboTools/notices.json',
    ['noticesA'] = workdir .. '/config/RoboScripts/RoboTools/noticesA.json',
    ['pChats'] = workdir .. '/config/RoboScripts/RoboTools/pChats.json',
    ['gps'] = workdir .. '/config/RoboScripts/RoboTools/gps.json',
    ['events'] = workdir .. '/config/RoboScripts/RoboTools/events.json',
    ['objects'] = workdir .. '/config/RoboScripts/RoboTools/objects.json',
    ['recButtons'] = workdir .. '/config/RoboScripts/RoboTools/recButtons.json',
    ['notifications'] = workdir .. '/config/RoboScripts/RoboTools/notificationsBeen.json',
    ['stats'] = workdir .. '/config/RoboScripts/RoboTools/stats.json',
}


function loadJson(path)
    local file = io.open(path)
    if file then
        local success, data = pcall(cjson.decode, file:read('*a'))
        file:close()
        if success then
            if data then
                return data
            else
                return false
            end
        else
            saveJson(path, {})
            return {}
        end
    else
        return false
    end
end


function saveJson(path,table)
    local file = io.open(path, "w+")
    if file then
        file:write(cjson.encode(table))
        file:close()
        return true
    else
        file = io.open(path, "r")
    end
end

if not doesDirectoryExist(workdir ..'/config') then createDirectory(workdir .. "/config") end
if not doesDirectoryExist(workdir ..'/config/RoboScripts') then createDirectory (workdir .. "/config/RoboScripts") end
if not doesDirectoryExist(workdir ..'/config/RoboScripts/RoboTools') then createDirectory (workdir .. "/config/RoboScripts/RoboTools") end

local ini = loadJson(patches['main'])
if not ini then 
    if saveJson(patches['main'],def) then 
        ini = loadJson(patches['main']) 
    else 
        sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Не получилось создать .json файл с основными настройками!',-1) 
    end 
else
    ini = tableWDefine(ini, def)
    saveJson(patches['main'], ini)
end

local reserv_ini = clone(def)

afkValues = {
    ['isAFK'] = true,
    ['startTime'] = 0,
    ['isShowedWarning'] = false,
    ['isShowedKick'] = false,
}

pickedPositionFixGovno = false

formPunishSettings = {
    ['autounban'] = imgui.ImBool(ini.formPunish.autounban),
    ['waitform'] = imgui.ImInt(ini.formPunish.waitform),
    ['formsInput'] = imgui.ImBuffer("",1000000),
    ['errors'] = {},
    ['isActive'] = false,
    ['formsCount'] = 0,
    ['formAwait'] = false,
    ['lastFormWait'] = 0,
}






function table_contains_keys(object, key)
    for k, v in pairs(object) do
       if k == key then
          return true
       end
    end
    return false
 end




keys = {
	["onfoot"] = {},
	["vehicle"] = {}
}

local sampleForms = {
    ['kick'] = {accept = false, auto_accept = false, sound = false}, 
    ['skick'] = {accept = false, auto_accept = false, sound = false}, 
    ['mute'] = {accept = false, auto_accept = false, sound = false},
    ['rmute'] = {accept = false, auto_accept = false, sound = false},
    ['muteoff'] = {accept = false, auto_accept = false, sound = false}, 
    ['unmute'] = {accept = false, auto_accept = false, sound = false},
    ['unrmute'] = {accept = false, auto_accept = false, sound = false},
    ['unmuteoff'] = {accept = false, auto_accept = false, sound = false}, 
    ['jail'] = {accept = false, auto_accept = false, sound = false}, 
    ['jailoff'] = {accept = false, auto_accept = false, sound = false}, 
    ['unjail'] = {accept = false, auto_accept = false, sound = false}, 
    ['unjailoff'] = {accept = false, auto_accept = false, sound = false}, 
    ['apunish'] = {accept = false, auto_accept = false, sound = false}, 
    ['unapunishoff'] = {accept = false, auto_accept = false, sound = false}, 
    ['bail'] = {accept = false, auto_accept = false, sound = false}, 
    ['warn'] = {accept = false, auto_accept = false, sound = false}, 
    ['warnoff'] = {accept = false, auto_accept = false, sound = false}, 
    ['unwarnoff'] = {accept = false, auto_accept = false, sound = false}, 
    ['unwarn'] = {accept = false, auto_accept = false, sound = false}, 
    ['ban'] = {accept = false, auto_accept = false, sound = false}, 
    ['banoff'] = {accept = false, auto_accept = false, sound = false}, 
    ['unban'] = {accept = false, auto_accept = false, sound = false}, 
    ['sban'] = {accept = false, auto_accept = false, sound = false}, 
    ['banip'] = {accept = false, auto_accept = false, sound = false}, 
    ['banipoff'] = {accept = false, auto_accept = false, sound = false}, 
    ['unbanip'] = {accept = false, auto_accept = false, sound = false}, 
    ['afkkick'] = {accept = false, auto_accept = false, sound = false},
    ['uval'] = {accept = false, auto_accept = false, sound = false}, 
    ['slap'] = {accept = false, auto_accept = false, sound = false},
    ['sethp'] = {accept = false, auto_accept = false, sound = false},
    ['pm'] = {accept = false, auto_accept = false, sound = false},
    ['spplayer'] = {accept = false, auto_accept = false, sound = false},
    ['spcar'] = {accept = false, auto_accept = false, sound = false},
    ['flip'] = {accept = false, auto_accept = false, sound = false},
    ['weap'] = {accept = false, auto_accept = false, sound = false},
    ['cure'] = {accept = false, auto_accept = false, sound = false},
    ['adeldesc'] = {accept = false, auto_accept = false, sound = false},
    ['pgetip'] = {accept = false, auto_accept = false, sound = false},
    ['pgetips'] = {accept = false, auto_accept = false, sound = false},
    ['clearafklabel'] = {accept = false, auto_accept = false, sound = false},
    ['getip'] = {accept = false, auto_accept = false, sound = false},
    ['plveh'] = {accept = false, auto_accept = false, sound = false},
    ['givegun'] = {accept = false, auto_accept = false, sound = false}, 
    ['accepttrade'] = {accept = false, auto_accept = false, sound = false},
    ['trspawn'] = {accept = false, auto_accept = false, sound = false},
    ['removetune'] = {accept = false, auto_accept = false, sound = false},
    ['clearad'] = {accept = false, auto_accept = false, sound = false},
    ['checkhouse'] = {accept = false, auto_accept = false, sound = false},
    ['aparkcar'] = {accept = false, auto_accept = false, sound = false},
    ['weather'] = {accept = false, auto_accept = false, sound = false},
    ['delhname'] = {accept = false, auto_accept = false, sound = false},
    ['delbname'] = {accept = false, auto_accept = false, sound = false},
    ['setgangzone'] = {accept = false, auto_accept = false, sound = false},
    ['makeleader'] = {accept = false, auto_accept = false, sound = false},
    ['cleardemorgane'] = {accept = false, auto_accept = false, sound = false},
    ['ao'] = {accept = false, auto_accept = false, sound = false},
    ['setskin'] = {accept = false, auto_accept = false, sound = false},
    ['setbizmafia'] = {accept = false, auto_accept = false, sound = false}, 
    ['restartreport'] = {accept = false, auto_accept = false, sound = false},
    ['givedemotalon'] = {accept = false, auto_accept = false, sound = false},
    ['givedemotalonoff'] = {accept = false, auto_accept = false, sound = false},
    ['agl'] = {accept = false, auto_accept = false, sound = false},
    ['makeadminoff'] = {accept = false, auto_accept = false, sound = false},
    ['trremove'] = {accept = false, auto_accept = false, sound = false},
    ['removeitem'] = {accept = false, auto_accept = false, sound = false},
    ['setrep'] = {accept = false, auto_accept = false, sound = false},
    ['setname'] = {accept = false, auto_accept = false, sound = false},
}

local accessesForms = {
    ['kick'] = {requiredAccept = true, access = 2, requiredTag = true, requiredRe = true, typeCheck = 'player_id', isPunish = true},
    ['skick'] = {requiredAccept = true, access = 4, requiredTag = false, requiredRe = true, typeCheck = 'player_id', isPunish = true}, 
    ['mute'] = {requiredAccept = true, access = 2, requiredTag = true, requiredRe = true, typeCheck = 'player_id', isPunish = true}, 
    ['rmute'] = {requiredAccept = true, access = 2, requiredTag = true, requiredRe = true, typeCheck = 'player_id', isPunish = true},
    ['muteoff'] = {requiredAccept = true, access = 4, requiredTag = true, requiredRe = false, typeCheck = 'off', isPunish = true}, 
    ['unmute'] = {requiredAccept = true, access = 2, requiredTag = true, requiredRe = false, typeCheck = 'player_id', isPunish = false},
    ['unrmute'] = {requiredAccept = true, access = 2, requiredTag = true, requiredRe = true, typeCheck = 'player_id', isPunish = false},
    ['unmuteoff'] = {requiredAccept = true, access = 4, requiredTag = true, requiredRe = false, typeCheck = 'off', isPunish = false},
    ['jail'] = {requiredAccept = true, access = 2, requiredTag = true, requiredRe = true, typeCheck = 'player_id', isPunish = true}, 
    ['jailoff'] = {requiredAccept = true, access = 4, requiredTag = true, requiredRe = false, typeCheck = 'off', isPunish = true}, 
    ['unjail'] = {requiredAccept = true, access = 2, requiredTag = true, requiredRe = false, typeCheck = 'player_id', isPunish = false}, 
    ['unjailoff'] = {requiredAccept = true, access = 4, requiredTag = true, requiredRe = false, typeCheck = 'off', isPunish = false}, 
    ['apunish'] = {requiredAccept = true, access = 3, requiredTag = true, requiredRe = true, typeCheck = 'player_id', isPunish = true}, 
    ['unapunishoff'] = {requiredAccept = true, access = 4, requiredTag = true, requiredRe = false, typeCheck = 'off', isPunish = false}, 
    ['bail'] = {requiredAccept = true, access = 3, requiredTag = true, requiredRe = true, typeCheck = 'player_id', isPunish = true}, 
    ['warn'] = {requiredAccept = true, access = 3, requiredTag = true, requiredRe = true, typeCheck = 'player_id', isPunish = true}, 
    ['warnoff'] = {requiredAccept = true, access = 4, requiredTag = true, requiredRe = false, typeCheck = 'off', isPunish = true}, 
    ['unwarnoff'] = {requiredAccept = true, access = 4, requiredTag = true, requiredRe = false, typeCheck = 'off', isPunish = false}, 
    ['unwarn'] = {requiredAccept = true, access = 3, requiredTag = true, requiredRe = false, typeCheck = 'player_id', isPunish = false}, 
    ['ban'] = {requiredAccept = true, access = 3, requiredTag = true, requiredRe = true, typeCheck = 'player_id', isPunish = true}, 
    ['banoff'] = {requiredAccept = true, access = 5, requiredTag = true, requiredRe = false, typeCheck = 'off', isPunish = true}, 
    ['unban'] = {requiredAccept = true, access = 4, requiredTag = true, requiredRe = false, typeCheck = 'off', isPunish = false}, 
    ['sban'] = {requiredAccept = true, access = 4, requiredTag = true, requiredRe = true, typeCheck = 'player_id', isPunish = true}, 
    ['banip'] = {requiredAccept = true, access = 4, requiredTag = true, requiredRe = true, typeCheck = 'player_id', isPunish = true}, 
    ['banipoff'] = {requiredAccept = true, access = 5, requiredTag = true, requiredRe = false, typeCheck = 'off', isPunish = false}, 
    ['unbanip'] = {requiredAccept = true, access = 4, requiredTag = false, requiredRe = false, typeCheck = 'off', isPunish = false}, 
    ['afkkick'] = {requiredAccept = true, access = 4, requiredTag = false, requiredRe = false, typeCheck = 'none', isPunish = false},
    ['uval'] = {requiredAccept = true, access = 4, requiredTag = false, requiredRe = false, typeCheck = 'player_id', isPunish = false}, 
    ['slap'] = {requiredAccept = false, access = 1, requiredTag = false, requiredRe = false, typeCheck = 'player_id', isPunish = false},
    ['sethp'] = {requiredAccept = false, access = 1, requiredTag = false, requiredRe = false, typeCheck = 'player_id', isPunish = false},
    ['pm'] = {requiredAccept = true, access = 1, requiredTag = true, requiredRe = false, typeCheck = 'player_id', isPunish = false},
    ['spplayer'] = {requiredAccept = false, access = 1, requiredTag = false, requiredRe = false, typeCheck = 'player_id', isPunish = false},
    ['spcar'] = {requiredAccept = false, access = 1, requiredTag = false, requiredRe = false, typeCheck = 'car_id', isPunish = false},
    ['flip'] = {requiredAccept = false, access = 1, requiredTag = false, requiredRe = false, typeCheck = 'player_id', isPunish = false},
    ['weap'] = {requiredAccept = true, access = 2, requiredTag = true, requiredRe = true, typeCheck = 'player_id', isPunish = false},
    ['cure'] = {requiredAccept = false, access = 2, requiredTag = false, requiredRe = true, typeCheck = 'player_id', isPunish = false},
    ['adeldesc'] = {requiredAccept = true, access = 2, requiredTag = true, requiredRe = true, typeCheck = 'player_id', isPunish = true},
    ['pgetip'] = {requiredAccept = false, access = 3, requiredTag = false, requiredRe = false, typeCheck = 'player_id', isPunish = false},
    ['pgetips'] = {requiredAccept = false, access = 3, requiredTag = false, requiredRe = false, typeCheck = 'none', isPunish = false},
    ['getip'] = {requiredAccept = false, access = 3, requiredTag = false, requiredRe = false, typeCheck = 'player_id', isPunish = false},
    ['clearafklabel'] =  {requiredAccept = true, access = 3, requiredTag = true, requiredRe = true, typeCheck = 'player_id', isPunish = true},
    ['plveh'] = {requiredAccept = false, access = 3, requiredTag = false, requiredRe = false, typeCheck = 'player_id', isPunish = false},
    ['givegun'] = {requiredAccept = false, access = 3, requiredTag = false, requiredRe = false, typeCheck = 'player_id'}, 
    ['accepttrade'] = {requiredAccept = true, access = 3, requiredTag = false, requiredRe = true, typeCheck = 'player_id', isPunish = false},
    ['trspawn'] = {requiredAccept = true, access = 3, requiredTag = false, requiredRe = false, typeCheck = 'tr_id', isPunish = false},
    ['removetune'] = {requiredAccept = true, access = 3, requiredTag = true, requiredRe = false, typeCheck = 'player_id', isPunish = false},
    ['clearad'] = {requiredAccept = true, access = 3, requiredTag = true, requiredRe = false, typeCheck = 'ad_id', isPunish = false},
    ['checkhouse'] = {requiredAccept = false, access = 4, requiredTag = false, requiredRe = false, typeCheck = 'house_id', isPunish = false},
    ['aparkcar'] = {requiredAccept = true, access = 4, requiredTag = false, requiredRe = false, typeCheck = 'car_id', isPunish = false},
    ['weather'] = {requiredAccept = true, access = 4, requiredTag = false, requiredRe = false, typeCheck = 'none', isPunish = false},
    ['delhname'] = {requiredAccept = true, access = 4, requiredTag = false, requiredRe = false, typeCheck = 'house_id', isPunish = false},
    ['delbname'] = {requiredAccept = true, access = 4, requiredTag = false, requiredRe = false, typeCheck = 'biz_id', isPunish = false},
    ['setgangzone'] = {requiredAccept = true, access = 4, requiredTag = false, requiredRe = false, typeCheck = 'none', isPunish = false},
    ['makeleader'] = {requiredAccept = true, access = 4, requiredTag = false, requiredRe = false, typeCheck = 'player_id', isPunish = false},
    ['cleardemorgane'] = {requiredAccept = true, access = 4, requiredTag = false, requiredRe = false, typeCheck = 'player_id', isPunish = false},
    ['ao'] = {requiredAccept = true, access = 4, requiredTag = true, requiredRe = false, typeCheck = 'none'},
    ['setskin'] = {requiredAccept = true, access = 4, requiredTag = false, requiredRe = false, typeCheck = 'none', isPunish = false},
    ['setbizmafia'] = {requiredAccept = true, access = 4, requiredTag = false, requiredRe = false, typeCheck = 'none', isPunish = false}, 
    ['restartreport'] = {requiredAccept = true, access = 5, requiredTag = false, requiredRe = false, typeCheck = 'none', isPunish = false},
    ['givedemotalon'] = {requiredAccept = true, access = 5, requiredTag = false, requiredRe = false, typeCheck = 'player_id', isPunish = false},
    ['givedemotalonoff'] = {requiredAccept = true, access = 5, requiredTag = false, requiredRe = false, typeCheck = 'off', isPunish = false},
    ['agl'] = {requiredAccept = true, access = 5, requiredTag = false, requiredRe = false, typeCheck = 'player_id', isPunish = false},
    ['makeadminoff'] = {requiredAccept = true, access = 6, requiredTag = false, requiredRe = false, typeCheck = 'off', isPunish = false},
    ['trremove'] = {requiredAccept = true, access = 5, requiredTag = false, requiredRe = false, typeCheck = 'tr_id', isPunish = false},
    ['removeitem'] = {requiredAccept = true, access = 5, requiredTag = false, requiredRe = false, typeCheck = 'player_id', isPunish = false},
    ['setrep'] = {requiredAccept = true, access = 6, requiredTag = false, requiredRe = false, typeCheck = 'player_id', isPunish = false},
    ['setname'] = {requiredAccept = true, access = 5, requiredTag = false, requiredRe = false, typeCheck = 'player_id', isPunish = false},
}

regularsForms = {
    ['muteoff'] = '%s+(%S+)%s+(%d+)%s+(.+)',
    ['unmuteoff'] = "%s+(%S+)%s+.+",
    ['jailoff'] = '%s+(%S+)%s+(%d+)%s+(.+)',
    ['unjailoff'] = "%s+(%S+)%s+.+",
    ['unapunishoff'] = "%s+(%S+)%s+.+",
    ['warnoff'] = "%s+(%S+)%s+(.+)",
    ['unwarnoff'] = "%s+(%S+)%s+.+",
    ['unban'] = "%s+(%S+)%s+.+",
    ['banoff'] = "%s+%d+%s+(%S+)%s+%d+%s+.+",
    ['banipoff'] = "%s+(%d+.%d+.%d+.%d+)%s+(.+)",
    ['unbanip'] = "%s+(%S+)%s+.+",
    ['givedemotalonoff'] = "%s+(%S+)%s+(%d+)",
    ['makeadminoff'] = "%s+(%S+)%s+(%d+)",
}


local normalQueueForms = {
    "kick", 
    "skick", 
    "mute",
    "rmute",
    "muteoff", 
    "unmute",
    "unrmute",
    "unmuteoff", 
    "jail", 
    "jailoff", 
    "unjail", 
    "unjailoff", 
    "apunish", 
    "unapunishoff", 
    "bail", 
    "warn", 
    "warnoff", 
    "unwarnoff", 
    "unwarn", 
    "ban", 
    "banoff", 
    "unban", 
    "sban", 
    "banip", 
    "banipoff", 
    "unbanip", 
    "afkkick",
    "uval", 
    "slap",
    "sethp",
    "pm",
    "spplayer",
    "spcar",
    "flip",
    "weap",
    "cure",
    "adeldesc",
    "pgetip",
    "pgetips",
    "clearafklabel",
    "getip",
    "plveh",
    "givegun", 
    "accepttrade",
    "trspawn",
    "removetune",
    "clearad",
    "checkhouse",
    "aparkcar",
    "weather",
    "delhname",
    "delbname",
    "setgangzone",
    "makeleader",
    "cleardemorgane",
    "ao",
    "setskin",
    "setbizmafia", 
    "restartreport",
    "givedemotalon",
    "givedemotalonoff",
    "agl",
    "makeadminoff",
    "trremove",
    "removeitem",
    "setrep",
    "setname"
}

local sampleQpunish = {
    ['banip'] = {
        'Оск.род',
        'Махинации',
        'Рванка',
        'Взломщик',
        'Мультиакк',
    },

    ['ban'] = {
        {'Оск.род', 30},
        {'Упом.род', 15},
        {'Чит', 30},
        {'Обман.адм', 10},
        {'Багоюз', 30},
    },


    ['warn'] = {
        'НРП коп',
        'Баги стрельбы',
        'Отказ от РП',
        'Тазер в бою',
        'Сбив анимаций',
    },

    ['jail'] = {
        {'НРП поведение', 30},
        {'ДМ', 60},
        {'ДМ ЗЗ', 300},
        {'ПГ', 300},
        {'ДБ', 60}
    },

    ['mute'] = {
        {'Капс', 30},
        {'Транслит', 20},
        {'Оффтоп', 120},
        {'Сбив аним', 300},
        {'Оск в ООС', 30}
    },
    
    ['kick'] = {
        'АФК Крупа',
        'Крыша авто',
        'Крыша лавки',
        'Помеха',
        'Писк в войс'
    }



}

local listPlayers = {}
listPlayersIDs = {}

local listReport = {}
pieOpened = true
local sampleReportButtons = {}
local sampleFormsHotKey = {
    ['accept'] = {v = {}},
    ['disband'] = {v = {}},
    ['proofs'] = {v = {}},
    ['acceptW'] = {v = {}},
    ['disbandW'] = {v = {}},
}

local sampleSpecials = {
        {"Conor",1},
        {"Sam_Mason",1},
        {"Stalker_Team",1},
        {"Axwell",1},
        {"Dorian_Gray",1},
        {"Farmer",1},
}

local reportColorList = {
    "f5f5f5",
    "2a78a0",
    "840510",
    "253738",
    "87446e",
    "d78d11",
    "4c74b8",
    "bebec6",
    "5e7072",
    "46597a",
    "646a78",
    "5b7f8d",
    "565a5b",
    "d5dad6",
    "9ca1a3",
    "345f3e",
    "740e1b",
    "7a0a2a",
    "a09d94",
    "3b4e77",
    "722e3d",
    "691e3c",
    "96918d",

    "50555a",
    "3f3e44",
    "a5a9a8",
    "615d5c",
    "414964",
    "959591",
    "412021",
    "5b2929",
    "8494ab",
    "767c7c",
    "656364",
    "5a5751",
    "252527",
    "2d3a37",
    "93a396",
    "6e7a89",
    "231919",
    "6f6660",
    "7c1c2a",
    "600a15",
    "193826",
    "5c1b20",
    "9d9871",
    "777664",
    

    "989586",
    "acb0b1",
    "848887",
    "305045",
    "4d6168",
    "182248",
    "253245",
    "806058",
    "9da4ac",
    "9c8d70",
    "6e1823",
    "4e6881",
    "9c9d98",
    "927347",
    "661b27",
    "939ea0",
    "a4a7a6",
    "8f8c47",
    "34191e",
    "6b798c",
    "aaad8e",
    "ab998d",
    "851f2d",
    "6f8297",
    "575852",
    "99a790",
    "601a24",
    "20202c",
    "a4a095",
    "ab9d83",
    "77232a",
    "0d316d",
    "722a3e",
    "7c715f",
    "741c28",
    "1f2e33",
    "4e322f",
    "7d1b44",

    "2e5b20",
    "395a82",
    "6c2837",
    "a7a18f",
    "afb1b0",
    "364155",
    "6d6d6f",
    "0c6b8a",
    "204b6b",
    "2a3e57",
    "9b9f9e",
    "6d8496",

    "4c8395",
    "ae9a7f",
    "406c8f",
    "1f253b",
    "aa9277",
    "124572",
    "96816c",
    "64686b",
    "115083",
    "a19984",
    "385694",
    "525661",
    "7f6856",
    "8c929a",
    "596f87",
    "473531",
    "456250",
    "730a28",
    "223458",
    "640d1d",
    "a3adc6",
    "6a5854",
    "9c8b81",
    "620b1c",
    "5c5d5f",
    "624428",
    "731827",
    "1c376e",
    "e76dad",
    "000000",
    "177417",
    "200605",
    "125477",
    "452a0d",
    "561e1f",
    "010801",
    "252159",
    "298aac",
    "894dbe",
    "389539",
    "b7b7b7",
    "474c8e",

    "85878e",
    "817867",
    "817b27",
    "69506e",
    "583e6e",
    "8bb971",
    "824f78",
    "6e276b",
    "1d1d13",
    "1f1307",
    "20241a",
    "2c4530",
    "1e4c98",
    "2e5f42",

    "1a9a45",
    "21979a",
    "9a9875",
    "7c8599",
    "972e1f",
    "2d1e08",
    "142407",
    "993e4d",
    "1f4c97",
    "198183",
    "1a2a2a",
    "15616f",
    "1b6686",
    "6c4099",
    "481a0d",
    "797399",
    "736d9a",
    "53387d",
    "212407",
    "3f190c",
    "46210e",
    "981f1e",
    "8d4c8e",
    "7e5a7f",
    "7c3e7e",
    "3d1738",
    "723518",
    "781918",
    "83341b",
    "8d301a",

    "7e3f54",
    "7b6d7c",
    "020c03",
    "072406",
    "143111",
    "17301b",
    "642b4e",
    "368452",

    "999691",
    "838d9c",
    "99991e",
    "7f984d",
    "829392",
    "778222",
    "2d3c98",
    "3b3a0c",
    "8a794f",
    "0e1f49",
    "13381e",
    "15273c",
    "355972",
    "060821",
    "061429",
    "21394a",
    "295288",
    "15426b",
    "11324d",
    "241664",
    "682115",
    "8c8c95",
    "526013",
    "090f02",
    "8d573b",
    "53898b",
    "975d54",
    "9d561e",
    "9a3a61",
    "9b8f4d",
    "9b301e",
    "0f173e",
    "531f1d",
    "41420d",
    "4d9823",
    "072a1c",
    "96821c",
    "197f1a",
    "3b141f",
    "745117",
    "8b3d90",
    "7d1a6c",

    "0d360c",
    "29450b",
    "061e26",
    "764572",
    "8a6538",
    "742518",
    "319491",
    "56941c",
    "59153e",
    "1b8b28",
    "39160a",
    "021905",
    "365d8e",
    "2d3f5c",
    "551b2b",
    "4e0e28",
    "706d68",
    "3b3e44",
    "2f2d33",
    "7b7e7b",
    "4b4442",
    "2a324e",

}




local types_lovlia = {"Флуд","Ловля"}
local samplePlayers = {}

local sampleTeleportPoints = {}


local tBlockKeys = {[vkeys.VK_RETURN] = true, [vkeys.VK_T] = true, [vkeys.VK_F6] = true, [vkeys.VK_F8] = true}
local tBlockChar = {[116] = true, [84] = true}
local tModKeys = {[vkeys.VK_MENU] = true, [vkeys.VK_SHIFT] = true, [vkeys.VK_CONTROL] = true}
local tBlockNextDown = {}

local tHotKeyData = {
    edit = nil,
	save = {},
   lastTick = os.clock(),
   tickState = false
}
local tKeys = {}

local sampleHotKeys = {
    ['main'] = {

    },

    ['cheats'] = {

    },

    ['report'] = {

    },

    ['recon'] = {

    },

    ['forms'] = {

    },

    ['other'] = {

    },

}

sampleEvents = {

}


sampleReconButtons = {
    {
        ['name'] = "Спавн",
        ['show'] = true,
        ['pinnedBind'] = -1,
        ['action'] = "/spplayer {re_id}"
    },

    {
        ['name'] = "/az",
        ['show'] = true,
        ['pinnedBind'] = -1,
        ['action'] = "/az {re_id}"
    },

    {
        ['name'] = "UP",
        ['show'] = true,
        ['pinnedBind'] = -1,
        ['action'] = "/slap {re_id} 1"
    },

    {
        ['name'] = "DOWN",
        ['show'] = true,
        ['pinnedBind'] = -1,
        ['action'] = "/slap {re_id} 2"
    },

    {
        ['name'] = "Реги",
        ['show'] = true,
        ['pinnedBind'] = -1,
        ['action'] = "/getip {re_id}"
    },

    {
        ['name'] = "Песок",
        ['show'] = true,
        ['pinnedBind'] = -1,
        ['action'] = "/pgetip {re_id}"
    },

    {
        ['name'] = "Вы тут?",
        ['show'] = true,
        ['pinnedBind'] = -1,
        ['action'] = "/pm {re_id} 1 Вы тут? Если да - напишите в /b Да,я тут или же сообщите в /report"
    },

    {
        ['name'] = "/plveh",
        ['show'] = true,
        ['pinnedBind'] = -1,
        ['action'] = "/plveh {re_id}"
    },

    {
        ['name'] = "Заморозить",
        ['show'] = true,
        ['pinnedBind'] = -1,
        ['action'] = "/freeze {re_id}"
    },

    {
        ['name'] = "Разморозить",
        ['show'] = true,
        ['pinnedBind'] = -1,
        ['action'] = "/unfreeze {re_id}"
    },

    {
        ['name'] = "Флипнуть",
        ['show'] = true,
        ['pinnedBind'] = -1,
        ['action'] = "/flip {re_id}"
    },

    {
        ['name'] = "Скиллы",
        ['show'] = true,
        ['pinnedBind'] = -1,
        ['action'] = "/checkskills {re_id} 1"
    },

    {
        ['name'] = "Обвесы",
        ['show'] = true,
        ['pinnedBind'] = -1,
        ['action'] = "/checkskills {re_id} 2"
    },
    

    {
        ['name'] = "Заточки",
        ['show'] = true,
        ['pinnedBind'] = -1,
        ['action'] = "/checkskills {re_id} 3"
    },

    {
        ['name'] = "Оружие",
        ['show'] = true,
        ['pinnedBind'] = -1,
        ['action'] = "/iwep {re_id}"
    },

    {
        ['name'] = "/weap",
        ['show'] = true,
        ['pinnedBind'] = -1,
        ['action'] = "/weap {re_id} нарушение правил"
    },

    {
        ['name'] = "/cpunish",
        ['show'] = true,
        ['pinnedBind'] = -1,
        ['action'] = "/checkpunish {re_id}"
    },

    {
        ['name'] = "Наказания",
        ['show'] = true,
        ['pinnedBind'] = -1,
        ['action'] = "/getwarn {re_id}"
    },

}

local qpunishTable = loadJson(patches['qpunish'])
if not qpunishTable then if saveJson(patches['qpunish'],sampleQpunish) then qpunishTable = loadJson(patches['qpunish']) else sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Не получилось создать .json файл с быстрыми наказаниями!',-1) end end
local rButtonsTable = loadJson(patches['rbuttons'])
if not rButtonsTable then if saveJson(patches['rbuttons'],sampleReportButtons) then rButtonsTable = loadJson(patches['rbuttons']) else sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Не получилось создать .json файл с горячими кнопками!',-1) end end

sampleStats = {
    countdaily = {
        today = os.date("%a"),
        online_time = 0,
        afk_time = 0,
        reports = 0,
        punishments = 0,
        bans = 0,
        warns = 0,
        mutes = 0,
        kicks = 0,
        jails = 0,
        reputation = 0,
        forms = 0,

    },

    countweekly = {
        week = 1,
        online_time = 0,
        afk_time = 0,
        forms = 0,
        reports = 0,
        punishments = 0,
        bans = 0,
        warns = 0,
        mutes = 0,
        kicks = 0,
        jails = 0,
        reputation = 0,
        
    },

    countdaysweek = {
        0,
        0,
        0,
        0,
        0,
        0,
        0,
    },

    countall = {

        online_time = 0,
        afk_time = 0,
        forms = 0,
        kicks = 0,
        mutes = 0,
        warns = 0,
        bans = 0,
        punishments = 0,
        reports = 0,
        jails = 0,
        reputation = 0,
    },
}

statsTable = loadJson(patches['stats'])
if not statsTable then
    if saveJson(patches['stats'],sampleStats) then 
        statsTable = loadJson(patches['stats']) 
    else 
        sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Не получилось создать .json файл с вашей статистикой!',-1) 
    end
else
    statsTable = tableWDefine(statsTable, sampleStats)
    saveJson(patches['stats'], statsTable)
end



notificationsBeen = loadJson(patches['notifications'])
if not notificationsBeen then if saveJson(patches['notifications'],{}) then notificationsBeen = loadJson(patches['notifications']) else sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Не получилось создать .json файл с былыми уведомлениями!',-1) end end


reconButtonsTable = loadJson(patches['recButtons'])
if not reconButtonsTable then if saveJson(patches['recButtons'],sampleReconButtons) then reconButtonsTable = loadJson(patches['recButtons']) else sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Не получилось создать .json файл с кнопками слежки!',-1) end end


local tpPoints = loadJson(patches['points'])
if not tpPoints then if saveJson(patches['points'],sampleTeleportPoints) then tpPoints = loadJson(patches['points']) else sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Не получилось создать .json файл с точками телепортации!',-1) end end

objectsTable = loadJson(patches['objects'])
if not objectsTable then if saveJson(patches['objects'],{}) then objectsTable = loadJson(patches['objects']) else sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Не получилось создать .json файл с шаблонами объектов!',-1) end end

editorShablon = {
    ['isWorking'] = false
}

settingObjectsConfig = {
    ['isSetting'] = false,
    ['startPos'] = {0,0,0,0},
    ['id'] = 0,
    ['waiting'] = false,
    ['variant'] = 0,
    ['nowObject'] = 0,
}

eventsTable = loadJson(patches['events'])
if not eventsTable then if saveJson(patches['events'],sampleEvents) then eventsTable = loadJson(patches['events']) else sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Не получилось создать .json файл с мероприятиями!',-1) end end
eventsTableImgui = {}
for k,v in pairs(eventsTable) do
    eventsTableImgui[k] = {
        ['name'] = imgui.ImBuffer(v['name'],256), --lim 32
        ['rules'] = { --144

        },
        
        ['points'] = {
            ['count'] = imgui.ImInt(v['points']['count']),
            ['type'] = imgui.ImInt(v['points']['type']),
            ['positions'] = v['points']['positions'],
        },
    
        ['messageS'] = imgui.ImBuffer(v['messageS'],256), -- 100
        ['p_limit'] = imgui.ImInt(v['p_limit']),
        ['time_teleport'] = imgui.ImInt(v['time_teleport']),
        ['password'] = imgui.ImBuffer(v['password'],50),
        ['hp'] = imgui.ImInt(v['hp']), --from 5 to 250
        ['armour'] = imgui.ImInt(v['armour']),
        ['skin'] = imgui.ImInt(v['skin']), -- 1 to 568,
        ['gun'] = {
            ['id'] = imgui.ImInt(v['gun']['id']), -- 0 net oruzhia,
            ['count'] = imgui.ImInt(v['gun']['count']),
        },
        ['take_after'] = imgui.ImBool(v['take_after']),
        ['repeat_tp'] = imgui.ImBool(v['repeat_tp']),
    }

    for kl,val in pairs(v['rules']) do
        eventsTableImgui[k]['rules'][kl] = imgui.ImBuffer(val,256)
    end
end


local specialsTable = loadJson(patches['specials'])
if not specialsTable then if saveJson(patches['specials'],sampleSpecials) then specialsTable = loadJson(patches['specials']) else sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Не получилось создать .json файл с 5+ админами!',-1) end end

local specialsSorted = clone(specialsTable)
table.sort(specialsSorted, function (left, right)
    return left[2] < right[2]
end)


local friendsTable = loadJson(patches['friends'])
if not friendsTable then if saveJson(patches['friends'],samplePlayers) then friendsTable = loadJson(patches['friends']) else sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Не получилось создать .json файл с списком игроков для чекера!',-1) end end

local hotkeysTable = loadJson(patches['hotkeys'])
if not hotkeysTable then if saveJson(patches['hotkeys'],sampleHotKeys) then hotkeysTable = loadJson(patches['hotkeys']) else sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Не получилось создать .json файл с хоткеями!',-1) end end

local gpsInfo = loadJson(patches['gps'])
temporaryGPSInfo = {}
if not gpsInfo then if saveJson(patches['gps'],{}) then gpsInfo = loadJson(patches['gps']) else sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Не получилось создать .json файл с GPS!',-1) end end



local formsSettings = loadJson(patches['forms'])
if not formsSettings then if saveJson(patches['forms'],sampleForms) then formsSettings = loadJson(patches['forms']) else sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Не получилось создать .json файл с настройками форм!',-1) end end
local formsSettingsImgui = {}
for k,v in pairs(sampleForms) do
    if not table_contains_keys(formsSettings,k) then
        formsSettings[k] = {accept = false, auto_accept = false, sound = false}
        saveJson(patches['forms'],formsSettings)
    end

    formsSettingsImgui[k] = {accept = imgui.ImBool(formsSettings[k]['accept']), auto_accept = imgui.ImBool(formsSettings[k]['auto_accept']), sound = imgui.ImBool(formsSettings[k]['sound'])}
end

local formsHotKey = loadJson(patches['forms_hotkey'])
if not formsHotKey then if saveJson(patches['forms_hotkey'],sampleFormsHotKey) then formsHotKey = loadJson(patches['forms_hotkey']) else sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Не получилось создать .json файл с настройками клавиш форм!',-1) end end

for k,v in pairs(sampleFormsHotKey) do
    if not table_contains_keys(formsHotKey,k) then
        formsHotKey[k] = {v = {}}
        saveJson(patches['forms_hotkey'],formsHotKey)
    end
end


local bindsTable = loadJson(patches['binds'])
if not bindsTable then if saveJson(patches['binds'],{}) then bindsTable = loadJson(patches['binds']) else sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Не получилось создать .json файл с настройками биндов!',-1) end end


samplePChatsTable = {
    {
        show = false,
        x = 1215,
        y = 551,
        linesChat = 5,
        fOffs = 16,
        fsize = 9,
        fflag = 5,
        centering = 1,
        showTime = true,
        fname = "Arial",
        name = "RegIP",
        regex = {
            {
                colors = {
                    time = "FFFFFFFF",
                    based = "FFFFFFFF"
                },
                regular = "Приветствуем нового игрока нашего сервера: {......}.+ {......}%(ID: %d+%)  {......}IP: .+"
            }
        }
    }
}
pChatsTable = loadJson(patches['pChats'])
if not pChatsTable then if saveJson(patches['pChats'],samplePChatsTable) then pChatsTable = loadJson(patches['pChats']) else sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Не получилось создать .json файл со своими чатами!',-1) end end

pChatsTableImgui = {}
for k,v in pairs(pChatsTable) do
    pChatsTableImgui[k] = {
        ['name'] = imgui.ImBuffer(u8(v['name']),256),
        ['show'] = imgui.ImBool(v['show']),
        ['regex'] = {},
        ['x'] = imgui.ImFloat(v['x']),
        ['y'] = imgui.ImFloat(v['y']),
        ['centering'] = imgui.ImInt(v['centering']),
        ['showTime'] = imgui.ImBool(v['showTime']),
        ['fsize'] = imgui.ImInt(v['fsize']),
        ['fname'] = imgui.ImBuffer(v['fname'],256),
        ['fflag'] = imgui.ImInt(v['fflag']),
        ['fOffs'] = imgui.ImInt(v['fOffs']),
        ['linesChat'] = imgui.ImInt(v['linesChat']),
    }

    for kk,vv in pairs(v['regex']) do
        pChatsTableImgui[k]['regex'][#pChatsTableImgui[k]['regex'] + 1] = {['regular'] = imgui.ImBuffer(u8(vv['regular']), 300), ['colors'] = {}}
        
        for keykey, value in pairs(vv['colors']) do
            pChatsTableImgui[k]['regex'][#pChatsTableImgui[k]['regex']]['colors'][keykey] = imgui.ImFloat4(imgui.ImColor(hextorgba(value)):GetFloat4())
        end
    end
end

local noticesTable = loadJson(patches['notices'])
if not noticesTable then if saveJson(patches['notices'],{}) then noticesTable = loadJson(patches['notices']) else sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Не получилось создать .json файл с заметками!',-1) end end
noticeSelected = 0
noticeSelectedData = {name = imgui.ImBuffer("",256), context = imgui.ImBuffer("",10000000)}

sampleNoticesAdmin = {
    {
        nick = "Leeky_Rave",
        color = "F6361CFF",
        notice = "|| Разработчик",
        show = true,
    }
}
adminNoticesTable = loadJson(patches['noticesA'])
if not adminNoticesTable then if saveJson(patches['noticesA'],sampleNoticesAdmin) then adminNoticesTable = loadJson(patches['noticesA']) else sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Не получилось создать .json файл с заметками админов!',-1) end end

if not doesDirectoryExist(workdir .. '/resource/RoboScripts') then createDirectory (workdir .. "/resource/RoboScripts") end
if not doesDirectoryExist(workdir .. '/resource/RoboScripts/RoboTools') then createDirectory (workdir .. "/resource/RoboScripts/RoboTools") end
if not doesDirectoryExist(workdir .. '/resource/RoboScripts/RoboTools/veh') then createDirectory(workdir .. '/resource/RoboScripts/RoboTools/veh') end 
if not doesDirectoryExist(workdir .. '/resource/RoboScripts/RoboTools/skins') then createDirectory(workdir .. '/resource/RoboScripts/RoboTools/skins') end 
if not doesDirectoryExist(workdir .. '/resource/RoboScripts/RoboTools/guns') then createDirectory(workdir .. '/resource/RoboScripts/RoboTools/guns') end 
if not doesDirectoryExist(workdir .. '/resource/RoboScripts/RoboTools/sounds') then createDirectory(workdir .. '/resource/RoboScripts/RoboTools/sounds') end 

-----------------------Все FFI модули-----------------------------
ffi.cdef[[
int __stdcall GetVolumeInformationA(
    const char* lpRootPathName,
    char* lpVolumeNameBuffer,
    uint32_t nVolumeNameSize,
    uint32_t* lpVolumeSerialNumber,
    uint32_t* lpMaximumComponentLength,
    uint32_t* lpFileSystemFlags,
    char* lpFileSystemNameBuffer,
    uint32_t nFileSystemNameSize
);
]]
serial = ffi.new("unsigned long[1]", 0)
ffi.C.GetVolumeInformationA(nil, nil, 0, serial, nil, nil, nil, 0)
serial = serial[0]

ffi.cdef([[
    typedef struct {
        const char* state;
        const char* details;
        int64_t startTimestamp;
        int64_t endTimestamp;
        const char* largeImageKey;
        const char* largeImageText;
        const char* smallImageKey;
        const char* smallImageText;
        const char* partyId;
        int partySize;
        int partyMax;
        const char* matchSecret;
        const char* joinSecret;
        const char* spectateSecret;
        int8_t instance;
    } DiscordRichPresence;

    void Discord_Initialize(const char* applicationId,
        int handlers,
        int autoRegister,
        const char* optionalSteamId);

    void Discord_UpdatePresence(const DiscordRichPresence* presence);
]])

function ShowMessage(text, title, style)
    ffi.cdef [[
        int MessageBoxA(
            void* hWnd,
            const char* lpText,
            const char* lpCaption,
            unsigned int uType
        );
    ]]
    local hwnd = ffi.cast('void*', readMemory(0x00C8CF88, 4, false))
    ffi.C.MessageBoxA(hwnd, text,  title, style and (style + 0x50000) or 0x50000)
end





ffi.cdef [[
    typedef int BOOL;
    typedef unsigned long HANDLE;
    typedef HANDLE HWND;
    typedef int bInvert;
 
    HWND GetActiveWindow(void);

    BOOL FlashWindow(HWND hWnd, BOOL bInvert);
]]



ffi.cdef [[
struct stGangzone
{
    float    fPosition[4];
    uint32_t    dwColor;
    uint32_t    dwAltColor;
};

struct stGangzonePool
{
    struct stGangzone    *pGangzone[1024];
    int iIsListed[1024];
};
]]


ffi.cdef[[
struct stKillEntry
{
	char					szKiller[25];
	char					szVictim[25];
	uint32_t				clKillerColor; // D3DCOLOR
	uint32_t				clVictimColor; // D3DCOLOR
	uint8_t					byteType;
} __attribute__ ((packed));

struct stKillInfo
{
	int						iEnabled;
	struct stKillEntry		killEntry[5];
	int 					iLongestNickLength;
  	int 					iOffsetX;
  	int 					iOffsetY;
	void			    	*pD3DFont; // ID3DXFont
	void		    		*pWeaponFont1; // ID3DXFont
	void		   	    	*pWeaponFont2; // ID3DXFont
	void					*pSprite;
	void					*pD3DDevice;
	int 					iAuxFontInited;
    void 		    		*pAuxFont1; // ID3DXFont
    void 			    	*pAuxFont2; // ID3DXFont
} __attribute__ ((packed));
]]



-------------------------------------------------------------------

rankAmember = imgui.ImInt(9)
function deg2rad(int)
    return (int * math.pi) / 180
end

function round(number, precision)
    local fmtStr = string.format('%%0.%sf',precision)
    number = string.format(fmtStr,number)
    return number
end

function getDistanceBetweenLatitude(latitudeFrom, longitudeFrom, latitudeTo, longitudeTo)
    local latFrom = deg2rad(latitudeFrom)
    local lonFrom = deg2rad(longitudeFrom)
    local latTo = deg2rad(latitudeTo)
    local lonTo = deg2rad(longitudeTo)

    local latDelta = latTo - latFrom
    local lonDelta = lonTo - lonFrom

    local angle = 2 * math.asin(math.sqrt(math.pow(math.sin(latDelta / 2), 2) + math.cos(latFrom) * math.cos(latTo) * math.pow(math.sin(lonDelta / 2), 2)))
    return round(angle * 6371, 1)
end

-----------------------ВЕСЬ СПИСОК ПЕРЕМЕННЫХ----------------------

local tBandNames = {
    {"Grove", 11, 2569507584},
    {"Vagos", 12, 2568805329},
    {"Night Wolves", 25, 2155378856},
    {"Rifa", 15, 2583651942},
    {"Aztec", 14, 2581790464},
    {"Ballas", 13, 2580283596},
    {"Neutral", 0, 2164260863},
}

tMafiaNames = {
    {"Russian Mafia", 16, "1a659aFF"},
    {"Yakuza", 17, "f44336FF"},
    {"LCN", 18, "b4009eFF"},
    {"WMC", 19, "ff6701FF"}
}

local paintFamily = imgui.ImBuffer(256)
local tExitReasons = {
    "Краш",
    "Выход(/q)",
    "Кик/Бан"
}

local tGunsName = {
    "Knuckles",
	"Golf",
	"Stick",
	"Knife",
	"Bat",
	"Shovel",
	"Cue",
	"Katana",
	"Chainsaw",
	"Purple Dildo",
	"Dildo",
	"Vibrator",
	"Silver Vibrator",
	"Flowers",
	"Cane",
	"Grenade",
	"Gas",
	"Molotov",
	nil,
	nil,
	nil,
	"9mm",
	"Silenced",
	"Deagle",
	"Shotgun",
	"Sawnoff",
	"Combat",
	"Uzi",
	"Mp5",
	"Ak47",
	"M4A1",
	"Tec9",
	"Rifle",
	"Sniper",
	"RPG",
	"Launcher",
	"Flame",
	"Minigun",
	"Satchel",
	"Detonator",
	"Spraycan",
	"Extinguisher",
	"Camera",
	"Goggles1",
	"Goggles2",
	"Parachute",
} 

local tReasonsDie = {
    [0] = "Fist",
	"Knuckles",
	"Golf",
	"Stick",
	"Knife",
	"Bat",
	"Shovel",
	"Cue",
	"Katana",
	"Chainsaw",
	"Purple Dildo",
	"Dildo",
	"Vibrator",
	"Silver Vibrator",
	"Flowers",
	"Cane",
	"Grenade",
	"Gas",
	"Molotov",
	nil,
	nil,
	nil,
	"9mm",
	"Silenced",
	"Deagle",
	"Shotgun",
	"Sawnoff",
	"Combat",
	"Uzi",
	"Mp5",
	"Ak47",
	"M4A1",
	"Tec9",
	"Rifle",
	"Sniper",
	"RPG",
	"Launcher",
	"Flame",
	"Minigun",
	"Satchel",
	"Detonator",
	"Spraycan",
	"Extinguisher",
	"Camera",
	"Goggles1",
	"Goggles2",
	"Parachute",
	"Fake Pistol",
	nil,
	"Vehicle",
	"Blade",
	"Explosion",
	nil,
	"Drowned",
	"Splat",
	[255] = "Suicide",
}

local isOpenedFamGz = false


local auth = {
    ['login'] = imgui.ImBuffer(tostring(ini.auth.login),70),
    ['password'] = imgui.ImBuffer(tostring(ini.auth.password),50),
    ['token'] = imgui.ImBuffer(tostring(ini.auth.token),1000),
    ['trust'] = imgui.ImBool(ini.auth.trust),
    ['auto'] = imgui.ImBool(ini.auth.auto),
    ['email_code'] = imgui.ImBuffer('',7),
    ['vk_code'] = imgui.ImBuffer('',7)
}

local command = imgui.ImBuffer(u8(ini.main.command),32)
local windows = {
    ['main'] = imgui.ImBool(false),
    ['general'] = imgui.ImBool(true),
    ['stats'] = imgui.ImBool(false),
    ['settings'] = imgui.ImBool(false),
    ['styles'] = imgui.ImBool(false),
    ['cheats'] = imgui.ImBool(false),
    ['keys'] = imgui.ImBool(false),
    ['binder'] = imgui.ImBool(false),
    ['chats'] = imgui.ImBool(false),
    ['checkers'] = imgui.ImBool(false),
    ['report'] = imgui.ImBool(false),
    ['recon'] = imgui.ImBool(false),
    ['warnings'] = imgui.ImBool(false),
    ['forms'] = imgui.ImBool(false),
    ['account'] = imgui.ImBool(false),
    ['event'] = imgui.ImBool(false),
    ['about'] = imgui.ImBool(false),
}

local otherWindows = {
    ['warnings'] = imgui.ImBool(true),
    ['editqpun'] = imgui.ImBool(true),
    ['qpunish'] = imgui.ImBool(true),
    ['report'] = imgui.ImBool(true),
}

finderTable = {
    ['veh'] = imgui.ImBuffer("",256),
    ['rveh'] = imgui.ImBuffer("",256),
    ['gun'] = imgui.ImBuffer("",256),
    ["rgun"] = imgui.ImBuffer("",256),
    ["mgun"] = imgui.ImBuffer("",256),
    ["objects"] = imgui.ImBuffer("",256)
}

local addonWindows = {
    ['update'] = imgui.ImBool(ini.main.showUpdate), --
    ['preupdate'] = imgui.ImBool(false),
    ['rslap'] = imgui.ImBool(false),
    ['rkick'] = imgui.ImBool(false),
    ['rpm'] = imgui.ImBool(false),
    ['abot'] = imgui.ImBool(false),
    ['hgps'] = imgui.ImBool(false),
    ['hclr'] = imgui.ImBool(false),
    ['hcmd'] = imgui.ImBool(false),
    ['tp'] = imgui.ImBool(false),
    ['veh'] = imgui.ImBool(false),
    ['rveh'] = imgui.ImBool(false),
    ['gun'] = imgui.ImBool(false),
    ['rgun'] = imgui.ImBool(false),
    ['ahelp'] = imgui.ImBool(false),
    ['adminNotice'] = imgui.ImBool(false),
    ['skin'] = imgui.ImBool(false),
    ['hlvl'] = imgui.ImBool(false),
    ['rskin'] = imgui.ImBool(false),
    ['amember'] = imgui.ImBool(false),
    ['form_accept'] = imgui.ImBool(false),
    ['calc'] = imgui.ImBool(false),
    ['pcheck'] = imgui.ImBool(false),
    ['ghetto'] = imgui.ImBool(false),
    ['mafias'] = imgui.ImBool(false),
    ['famgz'] = imgui.ImBool(false),
    ['formPunish'] = imgui.ImBool(false),
    ['notices'] = imgui.ImBool(false),
    ['nrpnicks'] = imgui.ImBool(false),
    ['ip'] = imgui.ImBool(false),
    ['provcheck'] = imgui.ImBool(false),
    ['startwindow'] = imgui.ImBool(ini.main.toolsFirstUse),
    ['putobject'] = imgui.ImBool(false),
    ['rmp'] = imgui.ImBool(false),
    ['mpend'] = imgui.ImBool(false),
    ['mp'] = imgui.ImBool(false),
    ['nearedit'] = imgui.ImBool(false),
}


local tpWindows = {
    imgui.ImBool(true),
    imgui.ImBool(false),
    imgui.ImBool(false),
    imgui.ImInt(0),
}

local tpStreet = {
    {1552.4646,-1675.4471,16.1953,90.0000},
    {630.7498,-571.5781,16.3359,268.5526},
    {-2453.7112,503.8358,30.0799,272.1426},
    {-1606.1509,713.7501,13.2902,359.7803},
    {1177.2866,-1323.9846,14.0633,271.3258},
    {1495.1967,-1283.5261,14.5413,184.2417},
    {234.6463,1902.8325,17.8729,144.4185},
    {-2668.9080,636.9764,14.4531,180.0000},
    {-2043.2025,-87.5946,35.4024,45.8409},
    {1653.5640,-1659.3590,22.5156,181.2989},
    {2495.2034,-1689.1195,14.2319,0.9635},
    {2793.5908,-1618.6378,10.9219,79.5407},
    {2000.2468,-1108.7992,26.7737,272.3124},
    {2521.5767,-2001.4885,13.5469,137.3131},
    {2185.8145,-1810.8423,13.5469,1.5911},
    {940.5323,1731.2101,8.8516,271.1088},
    {-2460.8835,134.6681,35.1719,318.6300},
    {1460.8861,2773.1716,10.8203,269.9729},
    {-2190.5994,-2349.5347,30.6250,226.9719},
    {2732.3691,-2451.3196,17.5937,325.8486},
    {1480.8480,-1768.7529,18.7929,357.1815},
    {1607.4996,1818.8636,10.8203,2.3200},
    {2287.0684,2428.8718,10.8203,179.2759},
    {2637.8796,1182.2312,10.8203,182.1352},
    {2473.1699,-1422.2638,28.8397,357.6896},
    {-1941.4008,459.7771,35.1719,1.2511},
    {-1368.9514,499.1776,11.1953,267.9026},
    {-2938.5591,-2210.2043,4.0182,214.9544},
    {-1738.2717,787.9141,24.8921,266.3265},
}



local ghettoCoords = {
	["1642,-1467,1770"] = "61",
	["1642,-2073,1770"] = "121",
	["2410,-1164,2538"] = "37",
	["1642,-1972,1770"] = "111",
	["1642,-1063,1770"] = "21",
	["2538,-1871,2666"] = "108",
	["2794,-1164,2922"] = "40",
	["2794,-1467,2922"] = "70",
	["2026,-1871,2154"] = "104",
	["2154,-962,2282"] = "15",
	["1642,-1366,1770"] = "51",
	["2282,-1972,2410"] = "116",
	["2666,-1669,2794"] = "89",
	["2538,-1669,2666"] = "88",
	["1898,-962,2026"] = "13",
	["2410,-2073,2538"] = "127",
	["1898,-1568,2026"] = "73",
	["2794,-1669,2922"] = "90",
	["1770,-1669,1898"] = "82",
	["1898,-2073,2026"] = "123",
	["2794,-1568,2922"] = "80",
	["1770,-1568,1898"] = "72",
	["2794,-1972,2922"] = "120",
	["2026,-1164,2154"] = "34",
	["2282,-1063,2410"] = "26",
	["1770,-962,1898"] = "12",
	["2282,-861,2410"] = "6",
	["1642,-1164,1770"] = "31",
	["1642,-1568,1770"] = "71",
	["1898,-1063,2026"] = "23",
	["2026,-1568,2154"] = "74",
	["2282,-1366,2410"] = "56",
	["1770,-1164,1898"] = "32",
	["1898,-1467,2026"] = "63",
	["2154,-1366,2282"] = "55",
	["2282,-1265,2410"] = "46",
	["2026,-1366,2154"] = "54",
	["2538,-2073,2666"] = "128",
	["2666,-1366,2794"] = "59",
	["2538,-1568,2666"] = "78",
	["2794,-2073,2922"] = "130",
	["1642,-861,1770"] = "1",
	["2154,-861,2282"] = "5",
	["1642,-1265,1770"] = "41",
	["1898,-1265,2026"] = "43",
	["2538,-861,2666"] = "8",
	["2538,-1366,2666"] = "58",
	["1898,-861,2026"] = "3",
	["2410,-1669,2538"] = "87",
	["2666,-1164,2794"] = "39",
	["2410,-1366,2538"] = "57",
	["2154,-1972,2282"] = "115",
	["2666,-1972,2794"] = "119",
	["1770,-1366,1898"] = "52",
	["2410,-861,2538"] = "7",
	["2410,-1972,2538"] = "117",
	["2026,-1467,2154"] = "64",
	["1642,-1669,1770"] = "81",
	["2538,-1164,2666"] = "38",
	["1898,-1871,2026"] = "103",
	["2666,-1568,2794"] = "79",
	["2282,-2073,2410"] = "126",
	["2154,-1063,2282"] = "25",
	["2154,-1467,2282"] = "65",
	["2794,-1265,2922"] = "50",
	["2538,-1972,2666"] = "118",
	["2410,-1467,2538"] = "67",
	["1898,-1669,2026"] = "83",
	["1898,-1972,2026"] = "113",
	["2026,-861,2154"] = "4",
	["2026,-962,2154"] = "14",
	["2026,-2073,2154"] = "124",
	["2282,-1467,2410"] = "66",
	["2282,-1164,2410"] = "36",
	["2026,-1669,2154"] = "84",
	["2794,-1063,2922"] = "30",
	["1898,-1770,2026"] = "93",
	["2538,-962,2666"] = "18",
	["2794,-962,2922"] = "20",
	["2666,-2073,2794"] = "129",
	["2794,-1871,2922"] = "110",
	["1770,-2073,1898"] = "122",
	["2154,-1265,2282"] = "45",
	["2154,-1669,2282"] = "85",
	["1770,-1871,1898"] = "102",
	["2538,-1467,2666"] = "68",
	["1642,-962,1770"] = "11",
	["1770,-861,1898"] = "2",
	["2282,-1871,2410"] = "106",
	["2154,-1770,2282"] = "95",
	["2026,-1063,2154"] = "24",
	["2282,-1669,2410"] = "86",
	["2538,-1770,2666"] = "98",
	["1770,-1467,1898"] = "62",
	["1770,-1770,1898"] = "92",
	["2026,-1770,2154"] = "94",
	["2794,-1770,2922"] = "100",
	["2538,-1265,2666"] = "48",
	["2154,-1871,2282"] = "105",
	["2410,-962,2538"] = "17",
	["2666,-861,2794"] = "9",
	["2154,-2073,2282"] = "125",
	["2026,-1972,2154"] = "114",
	["2026,-1265,2154"] = "44",
	["1898,-1366,2026"] = "53",
	["1770,-1063,1898"] = "22",
	["2410,-1265,2538"] = "47",
	["2538,-1063,2666"] = "28",
	["1642,-1770,1770"] = "91",
	["2410,-1568,2538"] = "77",
	["2666,-1770,2794"] = "99",
	["2666,-962,2794"] = "19",
	["2794,-861,2922"] = "10",
	["2666,-1871,2794"] = "109",
	["2666,-1063,2794"] = "29",
	["1898,-1164,2026"] = "33",
	["1770,-1265,1898"] = "42",
	["2282,-1770,2410"] = "96",
	["2666,-1467,2794"] = "69",
	["2282,-1568,2410"] = "76",
	["2410,-1770,2538"] = "97",
	["2410,-1871,2538"] = "107",
	["2794,-1366,2922"] = "60",
	["2410,-1063,2538"] = "27",
	["1642,-1871,1770"] = "101",
	["2154,-1568,2282"] = "75",
	["1770,-1972,1898"] = "112",
	["2154,-1164,2282"] = "35",
	["2282,-962,2410"] = "16",
	["2666,-1265,2794"] = "49"
}


local LVCoords = {
    ["2079.8369140625,2323.7199707031,2202.3366699219"] = "32",
	["2447.3361816406,1644.2448730469,2569.8359375"] = "95",
	["2079.8369140625,1372.4548339844,2202.3366699219"] = "116",
	["1222.337890625,1916.0349121094,1344.8377685547"] = "61",
	["2324.8364257813,1644.2448730469,2447.3361816406"] = "94",
	["1344.8377685547,1644.2448730469,1467.3376464844"] = "86",
	["1834.8372802734,2051.9299316406,1957.3371582031"] = "54",
	["1589.8375244141,1508.3498535156,1712.3374023438"] = "100",
	["2079.8369140625,1236.5598144531,2202.3366699219"] = "128",
	["1834.8372802734,1916.0349121094,1957.3371582031"] = "66",
	["2324.8364257813,1780.1398925781,2447.3361816406"] = "82",
	["1712.3374023438,2051.9299316406,1834.8372802734"] = "53",
	["2447.3361816406,2323.7199707031,2569.8359375"] = "35",
	["2202.3366699219,1780.1398925781,2324.8364257813"] = "81",
	["2079.8369140625,1780.1398925781,2202.3366699219"] = "80",
	["1344.8377685547,2187.8249511719,1467.3376464844"] = "38",
	["1589.8375244141,1780.1398925781,1712.3374023438"] = "76",
	["1467.3376464844,1780.1398925781,1589.8375244141"] = "75",
	["1344.8377685547,2323.7199707031,1467.3376464844"] = "26",
	["2324.8364257813,2459.6149902344,2447.3361816406"] = "22",
	["1957.3371582031,1780.1398925781,2079.8369140625"] = "79",
	["1957.3371582031,2051.9299316406,2079.8369140625"] = "55",
	["2324.8364257813,1100.6649169922,2447.3361816406"] = "142",
	["1467.3376464844,1916.0349121094,1589.8375244141"] = "63",
	["2447.3361816406,2459.6149902344,2569.8359375"] = "23",
	["1467.3376464844,2459.6149902344,1589.8375244141"] = "15",
	["1589.8375244141,2595.5100097656,1712.3374023438"] = "4",
	["1589.8375244141,2051.9299316406,1712.3374023438"] = "52",
	["1344.8377685547,1916.0349121094,1467.3376464844"] = "62",
	["2202.3366699219,2323.7199707031,2324.8364257813"] = "33",
	["2569.8359375,2323.7199707031,2692.3356933594"] = "36",
	["2324.8364257813,1508.3498535156,2447.3361816406"] = "106",
	["1467.3376464844,2595.5100097656,1589.8375244141"] = "3",
	["1589.8375244141,1916.0349121094,1712.3374023438"] = "64",
	["1834.8372802734,2595.5100097656,1957.3371582031"] = "6",
	["2202.3366699219,2051.9299316406,2324.8364257813"] = "57",
	["2569.8359375,1100.6649169922,2692.3356933594"] = "144",
	["1344.8377685547,1100.6649169922,1467.3376464844"] = "134",
	["1467.3376464844,1508.3498535156,1589.8375244141"] = "99",
	["1467.3376464844,2051.9299316406,1589.8375244141"] = "51",
	["2324.8364257813,1916.0349121094,2447.3361816406"] = "70",
	["1344.8377685547,1508.3498535156,1467.3376464844"] = "98",
	["2202.3366699219,1644.2448730469,2324.8364257813"] = "93",
	["1467.3376464844,1372.4548339844,1589.8375244141"] = "111",
	["2324.8364257813,1236.5598144531,2447.3361816406"] = "130",
	["1467.3376464844,1100.6649169922,1589.8375244141"] = "135",
	["1712.3374023438,1100.6649169922,1834.8372802734"] = "137",
	["1222.337890625,1508.3498535156,1344.8377685547"] = "97",
	["1834.8372802734,2187.8249511719,1957.3371582031"] = "42",
	["2202.3366699219,1100.6649169922,2324.8364257813"] = "141",
	["2447.3361816406,1508.3498535156,2569.8359375"] = "107",
	["2324.8364257813,2323.7199707031,2447.3361816406"] = "34",
	["1957.3371582031,964.76995849609,2079.8369140625"] = "151",
	["2447.3361816406,1780.1398925781,2569.8359375"] = "83",
	["2324.8364257813,2187.8249511719,2447.3361816406"] = "46",
	["2447.3361816406,1100.6649169922,2569.8359375"] = "143",
	["2447.3361816406,1236.5598144531,2569.8359375"] = "131",
	["2202.3366699219,964.76995849609,2324.8364257813"] = "153",
	["1834.8372802734,2323.7199707031,1957.3371582031"] = "30",
	["1712.3374023438,964.76995849609,1834.8372802734"] = "149",
	["2202.3366699219,1372.4548339844,2324.8364257813"] = "117",
	["1589.8375244141,964.76995849609,1712.3374023438"] = "148",
	["1467.3376464844,964.76995849609,1589.8375244141"] = "147",
	["1834.8372802734,1372.4548339844,1957.3371582031"] = "114",
	["1834.8372802734,964.76995849609,1957.3371582031"] = "150",
	["1222.337890625,1372.4548339844,1344.8377685547"] = "109",
	["1712.3374023438,2595.5100097656,1834.8372802734"] = "5",
	["1467.3376464844,1236.5598144531,1589.8375244141"] = "123",
	["1222.337890625,964.76995849609,1344.8377685547"] = "145",
	["1712.3374023438,1236.5598144531,1834.8372802734"] = "125",
	["2447.3361816406,1916.0349121094,2569.8359375"] = "71",
	["2569.8359375,964.76995849609,2692.3356933594"] = "156",
	["2447.3361816406,964.76995849609,2569.8359375"] = "155",
	["2569.8359375,2187.8249511719,2692.3356933594"] = "48",
	["2569.8359375,1644.2448730469,2692.3356933594"] = "96",
	["1712.3374023438,1644.2448730469,1834.8372802734"] = "89",
	["1589.8375244141,2459.6149902344,1712.3374023438"] = "16",
	["1344.8377685547,1372.4548339844,1467.3376464844"] = "110",
	["2202.3366699219,1508.3498535156,2324.8364257813"] = "105",
	["2569.8359375,1372.4548339844,2692.3356933594"] = "120",
	["2079.8369140625,2459.6149902344,2202.3366699219"] = "20",
	["1957.3371582031,2459.6149902344,2079.8369140625"] = "19",
	["1712.3374023438,1508.3498535156,1834.8372802734"] = "101",
	["2569.8359375,2051.9299316406,2692.3356933594"] = "60",
	["2324.8364257813,2595.5100097656,2447.3361816406"] = "10",
	["1589.8375244141,1372.4548339844,1712.3374023438"] = "112",
	["1222.337890625,2323.7199707031,1344.8377685547"] = "25",
	["2569.8359375,1236.5598144531,2692.3356933594"] = "132",
	["1222.337890625,2187.8249511719,1344.8377685547"] = "37",
	["1589.8375244141,2323.7199707031,1712.3374023438"] = "28",
	["1344.8377685547,2595.5100097656,1467.3376464844"] = "2",
	["1957.3371582031,1236.5598144531,2079.8369140625"] = "127",
	["2202.3366699219,1236.5598144531,2324.8364257813"] = "129",
	["1589.8375244141,1100.6649169922,1712.3374023438"] = "136",
	["1957.3371582031,2323.7199707031,2079.8369140625"] = "31",
	["1222.337890625,2595.5100097656,1344.8377685547"] = "1",
	["2079.8369140625,1644.2448730469,2202.3366699219"] = "92",
	["1834.8372802734,2459.6149902344,1957.3371582031"] = "18",
	["1222.337890625,2459.6149902344,1344.8377685547"] = "13",
	["2079.8369140625,1916.0349121094,2202.3366699219"] = "68",
	["1589.8375244141,1236.5598144531,1712.3374023438"] = "124",
	["1957.3371582031,1644.2448730469,2079.8369140625"] = "91",
	["1957.3371582031,2595.5100097656,2079.8369140625"] = "7",
	["1222.337890625,1780.1398925781,1344.8377685547"] = "73",
	["2324.8364257813,964.76995849609,2447.3361816406"] = "154",
	["1467.3376464844,1644.2448730469,1589.8375244141"] = "87",
	["1712.3374023438,2459.6149902344,1834.8372802734"] = "17",
	["1344.8377685547,2459.6149902344,1467.3376464844"] = "14",
	["2202.3366699219,2595.5100097656,2324.8364257813"] = "9",
	["2079.8369140625,964.76995849609,2202.3366699219"] = "152",
	["1957.3371582031,2187.8249511719,2079.8369140625"] = "43",
	["2447.3361816406,1372.4548339844,2569.8359375"] = "119",
	["1344.8377685547,1236.5598144531,1467.3376464844"] = "122",
	["1957.3371582031,1916.0349121094,2079.8369140625"] = "67",
	["2079.8369140625,2187.8249511719,2202.3366699219"] = "44",
	["2324.8364257813,2051.9299316406,2447.3361816406"] = "58",
	["2569.8359375,1508.3498535156,2692.3356933594"] = "108",
	["2079.8369140625,1508.3498535156,2202.3366699219"] = "104",
	["1222.337890625,1644.2448730469,1344.8377685547"] = "85",
	["1834.8372802734,1236.5598144531,1957.3371582031"] = "126",
	["2569.8359375,2459.6149902344,2692.3356933594"] = "24",
	["1712.3374023438,1916.0349121094,1834.8372802734"] = "65",
	["1834.8372802734,1644.2448730469,1957.3371582031"] = "90",
	["2202.3366699219,2459.6149902344,2324.8364257813"] = "21",
	["2447.3361816406,2187.8249511719,2569.8359375"] = "47",
	["1222.337890625,1100.6649169922,1344.8377685547"] = "133",
	["1957.3371582031,1100.6649169922,2079.8369140625"] = "139",
	["1834.8372802734,1508.3498535156,1957.3371582031"] = "102",
	["1834.8372802734,1780.1398925781,1957.3371582031"] = "78",
	["1222.337890625,1236.5598144531,1344.8377685547"] = "121",
	["1344.8377685547,1780.1398925781,1467.3376464844"] = "74",
	["1834.8372802734,1100.6649169922,1957.3371582031"] = "138",
	["2569.8359375,1916.0349121094,2692.3356933594"] = "72",
	["2324.8364257813,1372.4548339844,2447.3361816406"] = "118",
	["2079.8369140625,2051.9299316406,2202.3366699219"] = "56",
	["1467.3376464844,2187.8249511719,1589.8375244141"] = "39",
	["2447.3361816406,2595.5100097656,2569.8359375"] = "11",
	["2079.8369140625,1100.6649169922,2202.3366699219"] = "140",
	["2079.8369140625,2595.5100097656,2202.3366699219"] = "8",
	["1589.8375244141,1644.2448730469,1712.3374023438"] = "88",
	["1712.3374023438,2187.8249511719,1834.8372802734"] = "41",
	["1957.3371582031,1372.4548339844,2079.8369140625"] = "115",
	["1712.3374023438,1780.1398925781,1834.8372802734"] = "77",
	["1589.8375244141,2187.8249511719,1712.3374023438"] = "40",
	["1712.3374023438,1372.4548339844,1834.8372802734"] = "113",
	["1957.3371582031,1508.3498535156,2079.8369140625"] = "103",
	["1467.3376464844,2323.7199707031,1589.8375244141"] = "27",
	["2447.3361816406,2051.9299316406,2569.8359375"] = "59",
	["2202.3366699219,1916.0349121094,2324.8364257813"] = "69",
	["1344.8377685547,2051.9299316406,1467.3376464844"] = "50",
	["1222.337890625,2051.9299316406,1344.8377685547"] = "49",
	["1712.3374023438,2323.7199707031,1834.8372802734"] = "29",
	["2569.8359375,2595.5100097656,2692.3356933594"] = "12",
	["2202.3366699219,2187.8249511719,2324.8364257813"] = "45",
	["1344.8377685547,964.76995849609,1467.3376464844"] = "146",
	["2569.8359375,1780.1398925781,2692.3356933594"] = "84"   
}
local wschat = {
    imgui.ImBool(true),
    imgui.ImBool(false),
}

local wsinterface = {
    imgui.ImBool(true),
    imgui.ImBool(false),
}

local wstraicers = {
    imgui.ImBool(true),
    imgui.ImBool(false),
}

local wsachecker = {
    imgui.ImInt(0),
}

local wsrchecker = {
    imgui.ImInt(0),
}

local wslchecker = {
    imgui.ImInt(0),
}

local wsfchecker = {
    imgui.ImInt(0),
}

local changePositions = {
    fJetPack = false,
}

recachecker = {
    imgui.ImInt(0),
}

keyToggle = vkeys.VK_MBUTTON
keyApply = vkeys.VK_LBUTTON
fpsValue = math.floor(memory.getfloat(0xB7CB50, true))

local mainini = {
    ['tag'] = imgui.ImBuffer(tostring(ini.main.tag),32),
    ['organisation'] = imgui.ImInt(ini.main.organisation),
    ['password'] = imgui.ImBuffer(tostring(ini.main.password):gsub('&"', ""),64),
    ['passwordauto'] = imgui.ImBool(ini.main.passwordauto),
    ['theme'] = imgui.ImInt(ini.main.theme),
    ['adminpass'] = imgui.ImBuffer(tostring(ini.main.adminpass):gsub('&"', ""),20),
    ['passwordautoadmin'] = imgui.ImBool(ini.main.passwordautoadmin),
    ['adminlvl'] = imgui.ImInt(ini.main.adminlvl),
    ['servernumber'] = imgui.ImInt(ini.main.servernumber),
    ['organisationafter'] = imgui.ImBool(ini.main.organisationafter),
    ['skinafter'] = imgui.ImBool(ini.main.skinafter),
    ['numberskin'] = imgui.ImInt(ini.main.numberskin),
    ['interiorafterint'] = imgui.ImInt(ini.main.interiorafterint),
    ['interiorafterstate'] = imgui.ImBool(ini.main.interiorafterstate),
    ['firstuse'] = imgui.ImBool(ini.main.firstuse),
    ['autojobchatlog'] = imgui.ImBool(ini.main.autojobchatlog),
    ['azafter'] = imgui.ImBool(ini.main.azafter),
    ['autoquest'] = imgui.ImBool(ini.main.autoquest),
    ['ignorlist'] = imgui.ImBool(ini.main.ignorlist),
    ['afklimit'] = imgui.ImInt(ini.main.afklimit),
    ['dopusklimit'] = imgui.ImInt(ini.main.dopusklimit),
    ['iintstate'] = imgui.ImBool(ini.main.iintstate),
    ['iintnumber'] = imgui.ImInt(ini.main.iintnumber),
    ['coordsafter'] = imgui.ImBuffer(tostring(ini.main.coordsafter),50),
    ['coordsafterstate'] = imgui.ImBool(ini.main.coordsafterstate),
    ['afkstatus'] = imgui.ImBool(ini.main.afkstatus),
    ['afkquitstatus'] = imgui.ImBool(ini.main.afkquitstatus),
    ['warnafk'] = imgui.ImBool(ini.main.warnafk),
    ['autoinv'] = imgui.ImBool(ini.main.autoinv),
    ['msgbuffer'] = imgui.ImBuffer(tostring(ini.main.msgbuffer),160),
    ['msgstate'] = imgui.ImBool(ini.main.msgstate),
    ['hideip'] = imgui.ImBool(ini.main.hideip),
    ['hideadm'] = imgui.ImBool(ini.main.hideadm),
    ['autob'] = imgui.ImBool(ini.main.autob),
    ['rslap'] = imgui.ImBuffer(u8(ini.main.rslap),256),
    ['rkick'] = imgui.ImBuffer(u8(ini.main.rkick),256),
    ['rpm'] = imgui.ImBuffer(u8(ini.main.rpm),256),
    ['abot'] = imgui.ImBuffer(u8(ini.main.abot),256),
    ['hgps'] = imgui.ImBuffer(u8(ini.main.hgps),256),
    ['hclr'] = imgui.ImBuffer(u8(ini.main.hclr),256),
    ['hcmd'] = imgui.ImBuffer(u8(ini.main.hcmd),256),
    ['tp'] = imgui.ImBuffer(u8(ini.main.tp),256),
    ['tpcor'] = imgui.ImBuffer(u8(ini.main.tpcor),256),
    ['veh'] = imgui.ImBuffer(u8(ini.main.veh),256),
    ['rveh'] = imgui.ImBuffer(u8(ini.main.rveh),256),
    ['gun'] = imgui.ImBuffer(u8(ini.main.gun),256),
    ['rgun'] = imgui.ImBuffer(u8(ini.main.rgun),256),
    ['skin'] = imgui.ImBuffer(u8(ini.main.skin),256),
    ['rskin'] = imgui.ImBuffer(u8(ini.main.rskin),256),
    ['amember'] = imgui.ImBuffer(u8(ini.main.amember),256),
    ['hlvl'] = imgui.ImBuffer(u8(ini.main.hlvl),256),
    ['calc'] = imgui.ImBuffer(u8(ini.main.calc),256),
    ['arepcar'] = imgui.ImBuffer(u8(ini.main.arepcar),256),
    ['fontsize'] = imgui.ImFloat(ini.main.fontsize),
	['debug'] = imgui.ImBool(ini.main.debug),
    ['joinAFK'] = imgui.ImBool(ini.main.joinAFK),
}


function debugLog(text)
	if mainini['debug'].v then
		f = io.open(workdir .. '/resource/RoboScripts/debug.txt',"a")
		f:write('['..os.date("%X",os.time())..'] ' .. text .. "\n")
		f:flush()
		f:close()
	end
end


fontsSizes = {
    ['logins'] = nil,
    ['update'] = nil,
    ['tutorialMain'] = nil,
    ['mafbizes'] = nil,
}

local warningsSettings = {
    ['flood'] = {
        state = imgui.ImBool(ini.warnings.flood),
        count = imgui.ImInt(ini.warnings.floodCount),
        showForm = imgui.ImBool(ini.warnings.showFloodForm),
        seconds = imgui.ImInt(ini.warnings.secondsFlood),
        minutes = imgui.ImInt(ini.warnings.minutesFlood),
        muteReason = imgui.ImBuffer(u8(ini.warnings.muteFloodReason),256)
    },

    ['ad'] = {
        state = imgui.ImBool(ini.warnings.Ad),
        count = imgui.ImInt(ini.warnings.adCount),
        seconds = imgui.ImInt(ini.warnings.adSeconds),
        showForm = imgui.ImBool(ini.warnings.showAdForm),
        minutes = imgui.ImInt(ini.warnings.adMinutes),
        muteReason = imgui.ImBuffer(u8(ini.warnings.muteAdReason)),
    },

    ['caps'] = {
        state = imgui.ImBool(ini.warnings.caps),
        showForm = imgui.ImBool(ini.warnings.showCapsForm),
        minutes = imgui.ImInt(ini.warnings.minutesCaps),
        percent = imgui.ImInt(ini.warnings.percentCaps),
        muteReason = imgui.ImBuffer(u8(ini.warnings.muteCapsReason),256)
    },

    ['teamKill'] = {
        state = imgui.ImBool(ini.warnings.teamKill),
    },

    ['pesok'] = {
        state = imgui.ImBool(ini.warnings.pesok)
    },

    ['rvanka'] = {
        state = imgui.ImBool(ini.warnings.rvanka),
        onfootSpeedLimit = imgui.ImFloat(ini.warnings.onfootSpeedLimit),
        incarSpeedLimit = imgui.ImFloat(ini.warnings.incarSpeedLimit),
        unocSpeedLimit = imgui.ImFloat(ini.warnings.unocSpeedLimit),
        onfootDistLimit = imgui.ImFloat(ini.warnings.onfootDistLimit),
        incarDistLimit = imgui.ImFloat(ini.warnings.incarDistLimit),
        unocDistLimit = imgui.ImFloat(ini.warnings.unocDistLimit),
        coolDown = imgui.ImInt(ini.warnings.coolDownRvanka),
    },

    ['aimbot'] = {
        state = imgui.ImBool(ini.warnings.aimBot),
        onePart = imgui.ImBool(ini.warnings.aimBotOnePart),
        aimBotOneGun = imgui.ImBool(ini.warnings.aimBotOneGun),
        seconds = imgui.ImInt(ini.warnings.aimBotSeconds),
        Silenced = imgui.ImInt(ini.warnings.aimbot_Silenced),
        Deagle = imgui.ImInt(ini.warnings.aimbot_Deagle),
        Shotgun = imgui.ImInt(ini.warnings.aimbot_Shotgun),
        Uzi = imgui.ImInt(ini.warnings.aimbot_Uzi),
        Mp5 = imgui.ImInt(ini.warnings.aimbot_Mp5),
        Ak47 = imgui.ImInt(ini.warnings.aimbot_Ak47),
        M4A1 = imgui.ImInt(ini.warnings.aimbot_M4A1),
        Rifle = imgui.ImInt(ini.warnings.aimbot_Rifle),
        Sniper = imgui.ImInt(ini.warnings.aimbot_Sniper),
    },

    ['massDM'] = {
        state = imgui.ImBool(ini.warnings.massDM),
        count = imgui.ImInt(ini.warnings.countMassDM),
        seconds = imgui.ImInt(ini.warnings.massDMSeconds),
    }
}

local longChatSettings = {
    ['show'] = imgui.ImBool(ini.long_chat.show),
    ['showSendTime'] = imgui.ImBool(ini.long_chat.showSendTime),
    ['showSenderNick'] = imgui.ImBool(ini.long_chat.showSenderNick),
    ['showSenderID'] = imgui.ImBool(ini.long_chat.showSenderID),
    ['showSenderText'] = imgui.ImBool(ini.long_chat.showSenderText),
    ['linesChat'] = imgui.ImInt(ini.long_chat.linesChat),
    ['showSenderDist'] = imgui.ImBool(ini.long_chat.showSenderDist),
    ['centering'] = imgui.ImInt(ini.long_chat.centering),

    ['colorBased'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.long_chat.colorBased)):GetFloat4()),
    ['colorTime'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.long_chat.colorTime)):GetFloat4()),
    ['colorDist'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.long_chat.colorDist)):GetFloat4()),
    ['colorNick'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.long_chat.colorNick)):GetFloat4()),
    ['colorID'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.long_chat.colorID)):GetFloat4()),
    ['colorText'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.long_chat.colorText)):GetFloat4()),
    ['colorDistTag'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.long_chat.colorDistTag)):GetFloat4()),
    ['x'] = imgui.ImFloat(ini.long_chat.x),
    ['y'] = imgui.ImFloat(ini.long_chat.y),

    ['fsize'] = imgui.ImInt(ini.long_chat.fsize),
    ['fname'] = imgui.ImBuffer(ini.long_chat.fname,256),
    ['fflag'] = imgui.ImInt(ini.long_chat.fflag),
    ['fOffs'] = imgui.ImInt(ini.long_chat.fOffs)

}

local logJoinExit = {
    ['show'] = imgui.ImBool(ini.joinExit.show),
    ['showJoinExitTime'] = imgui.ImBool(ini.joinExit.showJoinExitTime),
    ['showNick'] = imgui.ImBool(ini.joinExit.showNick),
    ['showID'] = imgui.ImBool(ini.joinExit.showID),
    ['showText'] = imgui.ImBool(ini.joinExit.showText),
    ['linesChat'] = imgui.ImInt(ini.joinExit.linesChat),
    ['centering'] = imgui.ImInt(ini.joinExit.centering),

    ['colorBased'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.joinExit.colorBased)):GetFloat4()),
    ['colorTime'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.long_chat.colorTime)):GetFloat4()),
    ['colorNick'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.joinExit.colorNick)):GetFloat4()),
    ['colorID'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.joinExit.colorID)):GetFloat4()),
    ['colorText'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.joinExit.colorText)):GetFloat4()),
    ['x'] = imgui.ImFloat(ini.joinExit.x),
    ['y'] = imgui.ImFloat(ini.joinExit.y),

    ['fsize'] = imgui.ImInt(ini.joinExit.fsize),
    ['fname'] = imgui.ImBuffer(ini.joinExit.fname,256),
    ['fflag'] = imgui.ImInt(ini.joinExit.fflag),
    ['fOffs'] = imgui.ImInt(ini.joinExit.fOffs)
}

local personalChatSettings = {
    ['name'] = imgui.ImBuffer("",256),
    ['show'] = imgui.ImBool(true),
    ['regex'] = {
        {
            ['regular'] = imgui.ImBuffer("",256),
            ['colors'] = {
                ['based'] = imgui.ImFloat4(imgui.ImColor(hextorgba("FFFFFFFF")):GetFloat4()),
                ['time'] = imgui.ImFloat4(imgui.ImColor(hextorgba("FFFFFFFF")):GetFloat4()),
            }
        }
    },
    ['x'] = imgui.ImFloat(ssw / 2),
    ['y'] = imgui.ImFloat(ssh / 2),
    ['centering'] = imgui.ImInt(1),
    ['showTime'] = imgui.ImBool(true),
    ['fsize'] = imgui.ImInt(9),
    ['fname'] = imgui.ImBuffer("Arial",256),
    ['fflag'] = imgui.ImInt(5),
    ['fOffs'] = imgui.ImInt(16),
    ['linesChat'] = imgui.ImInt(5),
}

local personalChatSettings_reserve = personalChatSettings

local longChatBuffer = {}
local logJoinExitBuffer = {}

local voteBand = imgui.ImInt(1)

mafiaPaintInfo = {
    voteMafia = imgui.ImInt(1),
    infoBizes = {
        rm = {},
        yak = {},
        lcn = {},
        wmc = {},
    },
    state = false,
    wichChecking = 1,
    waitingForAmember = false,
    last = nil,
    waitingForCheckDialog = false,
    temporaryInfo = {
        rm = {},
        yak = {},
        lcn = {},
        wmc = {},
    },

    enabledOrDisabled = {},
}


local warningAimBotSettings = {
    count = 1,

    guns = {
        "Deagle",
        "M4A1",
        "Shotgun",
        "Rifle",
        "Mp5",
        "Uzi",
        "Ak47",
        "Sniper",
        "Silenced",
    },
    gunsIni = {
        "aimbot_Deagle",
        "aimbot_M4A1",
        "aimbot_Shotgun",
        "aimbot_Rifle",
        "aimbot_Mp5",
        "aimbot_Uzi",
        "aimbot_Ak47",
        "aimbot_Sniper",
        "aimbot_Silenced",
    },
}

local formsIniSettings = {
    ['time'] = imgui.ImInt(ini.forms.time),
    ['sound_url'] = imgui.ImBuffer(ini.forms.sound_url,1000),
    ['colored_form'] = imgui.ImBool(ini.forms.colored_form),
    ['colored_form_color'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.forms.colored_form_color)):GetFloat4()),
    ['show_flash'] = imgui.ImBool(ini.forms.show_flash),
    ['show_time'] = imgui.ImBool(ini.forms.show_time),
    ['show_nick'] = imgui.ImBool(ini.forms.show_nick),
    ['show_chat'] = imgui.ImBool(ini.forms.show_chat),
    ['tag_color'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.forms.tag_color)):GetFloat4()),
    ['default_color'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.forms.default_color)):GetFloat4()),
    ['color_accept'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.forms.color_accept)):GetFloat4()),
    ['color_disband'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.forms.color_disband)):GetFloat4()),
    ['color_author'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.forms.color_author)):GetFloat4()),
    ['volume'] = imgui.ImInt(ini.forms.volume),
    ['x'] = imgui.ImFloat(ini.forms.x),
    ['is_re_punish'] = imgui.ImBool(ini.forms.is_re_punish),
    ['y'] = imgui.ImFloat(ini.forms.y),
}

local reportSettings = {
    ['state'] = imgui.ImBool(ini.report.state),
    ['reportauthor'] = imgui.ImBuffer(u8(tostring(ini.report.reportauthor)),255),
    ['reportwarner'] = imgui.ImBuffer(u8(tostring(ini.report.reportwarner)),255),
    ['reportsend'] = imgui.ImBuffer(u8(tostring(ini.report.reportsend)),255),
    ['reportoffline'] = imgui.ImBuffer(u8(tostring(ini.report.reportoffline)),255),
    ['autoot'] = imgui.ImBool(false),
    ['typeot'] = imgui.ImInt(ini.report.typeot),
    ['waitot'] = imgui.ImInt(ini.report.waitot),
    ['count'] = imgui.ImInt(ini.report.count),
    ['hideflood'] = imgui.ImBool(ini.report.hideflood),
    ['x'] = imgui.ImFloat(ini.report.x),
    ['y'] = imgui.ImFloat(ini.report.y),
    ['showRe'] = imgui.ImBool(ini.report.showRe),
    ['percent'] = imgui.ImInt(ini.report.percent),
    ['showAuthor'] = imgui.ImBool(ini.report.showAuthor),
    ['showReAuthor'] = imgui.ImBool(ini.report.showReAuthor),
    ['showRetranslit'] = imgui.ImBool(ini.report.showRetranslit),
    ['showPlatform'] = imgui.ImBool(ini.report.showPlatform),
    ['showChoiseSave'] = imgui.ImBool(ini.report.showChoiseSave),
    ['showTimeAnswer'] = imgui.ImBool(ini.report.showTimeAnswer),
    ['paintButtons'] = imgui.ImBool(ini.report.paintButtons),
    ['typeReport'] = imgui.ImInt(ini.report.typeReport),
    ['showText'] = imgui.ImBool(ini.report.showText),
    ['showLimit'] = imgui.ImBool(ini.report.showLimit),
    ['showInput'] = imgui.ImBool(ini.report.showInput),
    ['fastLVL'] = imgui.ImBool(ini.report.fastLVL),
    ['fastAnsw'] = imgui.ImBool(ini.report.fastAnsw),
    ['helpGPS'] = imgui.ImBool(ini.report.helpGPS),
    ['listCMD'] = imgui.ImBool(ini.report.listCMD),
    ['similarBD'] = imgui.ImBool(ini.report.similarBD),
    ['sendAchat'] = imgui.ImBool(ini.report.sendAchat),
    ['transmit'] = imgui.ImBool(ini.report.transmit),
    ['reAuthor'] = imgui.ImBool(ini.report.reAuthor),
    ['reWarner'] = imgui.ImBool(ini.report.reWarner),
    ['colorsList'] = imgui.ImBool(ini.report.colorsList),
    
    ['showDifferenceReputation'] = imgui.ImBool(ini.report.showDifferenceReputation),
    ['headerColor'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.report.headerColor)):GetFloat4()),
    ['amountColor'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.report.amountColor)):GetFloat4()),
    ['basedColor'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.report.basedColor)):GetFloat4()),
    ['showInfoResponse'] = imgui.ImBool(ini.report.showInfoResponse),
    ['showBordersResponse'] = imgui.ImBool(ini.report.showBordersResponse),
    ['showAuthorResponse'] = imgui.ImBool(ini.report.showAuthorResponse),
    ['showContextResponse'] = imgui.ImBool(ini.report.showContextResponse),
    ['showAnswerResponse'] = imgui.ImBool(ini.report.showAnswerResponse),
    ['showReportResponse'] = imgui.ImBool(ini.report.showReportResponse),

    ['colorTextResponse'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.report.colorTextResponse)):GetFloat4()),
    ['colorAuthorResponse'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.report.colorAuthorResponse)):GetFloat4()),
    ['colorContextResponse'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.report.colorContextResponse)):GetFloat4()),
    ['colorAnswerResponse'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.report.colorAnswerResponse)):GetFloat4()),
    ['colorReportResponse'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.report.colorReportResponse)):GetFloat4()),
    ['colorBordersResponse'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.report.colorBordersResponse)):GetFloat4()),
}

local reportInfo = {
    ['state'] = imgui.ImBool(false),
    ['lastID'] = imgui.ImInt(-1),
    ['lastNick'] = imgui.ImBuffer('Nick_Name',255),
    ['lastText'] = imgui.ImBuffer('Report Text',255),
    ['lastAnswer'] = imgui.ImBuffer('Answer',255),
    ['game'] = u8"Мобайл",
    ['savetype'] = imgui.ImInt(1),
    ['showRe'] = imgui.ImBool(false),
    ['isOnline'] = imgui.ImBool(true),
    ['isReconMe'] = imgui.ImBool(false),
    ['isReconIntruder'] = imgui.ImBool(false),
    ['chat_blocker'] = imgui.ImBool(false),
    ['start_time'] = os.time(),
    ['coordsGPS'] = "",
    ['nameGPS'] = "",
}

local count_session = {
    ['report_now'] = 0,
    ['afk'] = os.clock() - gameClock(),
    ['full_online'] = imgui.ImInt(0),
    ['start_time'] = imgui.ImInt(0),
    ['online_time'] = imgui.ImInt(0),
    ['afk_time'] = imgui.ImInt(0),
    ['now_time'] = os.date("%H:%M:%S", os.time()),
}

local count_daily = {
    ['online_time'] = imgui.ImInt(statsTable.countdaily.online_time),
    ['afk_time'] = imgui.ImInt(statsTable.countdaily.afk_time),
    ['reports'] = imgui.ImInt(statsTable.countdaily.reports),
    ['punishments'] = imgui.ImInt(statsTable.countdaily.punishments),
    ['bans'] = imgui.ImInt(statsTable.countdaily.bans),
    ['warns'] = imgui.ImInt(statsTable.countdaily.warns),
    ['mutes'] = imgui.ImInt(statsTable.countdaily.mutes),
    ['kicks'] = imgui.ImInt(statsTable.countdaily.kicks),
    ['jails'] = imgui.ImInt(statsTable.countdaily.jails),
    ['reputation'] = imgui.ImInt(statsTable.countdaily.reputation),
    ['forms'] = imgui.ImInt(statsTable.countdaily.forms),
}
ipData = {}
local formsInfo = {
    ['isActive'] = false,
    ['isAccept'] = true,
    ['isAccepted'] = false,
    ['isKeyAccept'] = false,
    ['isKeyDisband'] = false,
    ['lastNick'] = '',
    ['lastId'] = -1,
    ['isCheckIp'] = false,
    ['isCheckPIp'] = false,
    ['isCheckHouse'] = false,
    ['isSendAccepted'] = false,
}

local formsInfoWarnings = {
    ['isActive'] = false,
    ['lastNick'] = '',
    ['lastId'] = -1,
    ['isKeyAccept'] = false,
    ['isKeyDisband'] = false,
}

local formsInfoCheck = {
    ['context'] = '',
    ['nick'] = 'Nick_Name',
    ['id'] = -1
}

local count_weekly = {
    ['online_time'] = imgui.ImInt(statsTable.countweekly.online_time),
    ['afk_time'] = imgui.ImInt(statsTable.countweekly.afk_time),

    ['reports'] = imgui.ImInt(statsTable.countweekly.reports),
    ['punishments'] = imgui.ImInt(statsTable.countweekly.punishments),
    ['bans'] = imgui.ImInt(statsTable.countweekly.bans),
    ['warns'] = imgui.ImInt(statsTable.countweekly.warns),
    ['mutes'] = imgui.ImInt(statsTable.countweekly.mutes),
    ['kicks'] = imgui.ImInt(statsTable.countweekly.kicks),
    ['jails'] = imgui.ImInt(statsTable.countweekly.jails),
    ['reputation'] = imgui.ImInt(statsTable.countweekly.reputation),
    ['forms'] = imgui.ImInt(statsTable.countweekly.forms),
}

count_daysweek = {
    statsTable.countdaysweek[1],
    statsTable.countdaysweek[2],
    statsTable.countdaysweek[3],
    statsTable.countdaysweek[4],
    statsTable.countdaysweek[5],
    statsTable.countdaysweek[6],
    statsTable.countdaysweek[7],
}

local count_all = {
    ['online_time'] = imgui.ImInt(statsTable.countall.online_time),
    ['afk_time'] = imgui.ImInt(statsTable.countall.afk_time),
    ['reports'] = imgui.ImInt(statsTable.countall.reports),
    ['punishments'] = imgui.ImInt(statsTable.countall.punishments),
    ['bans'] = imgui.ImInt(statsTable.countall.bans),
    ['warns'] = imgui.ImInt(statsTable.countall.warns),
    ['mutes'] = imgui.ImInt(statsTable.countall.mutes),
    ['kicks'] = imgui.ImInt(statsTable.countall.kicks),
    ['jails'] = imgui.ImInt(statsTable.countall.jails),
    ['reputation'] = imgui.ImInt(statsTable.countall.reputation),
    ['forms'] = imgui.ImInt(statsTable.countall.forms),
}

local statsSettings = {
    ['state'] = imgui.ImBool(ini.stats.state),
    
    ['x'] = imgui.ImFloat(ini.stats.x),
    ['y'] = imgui.ImFloat(ini.stats.y),

    ['show_header'] = imgui.ImBool(ini.stats.show_header),
    ['show_date'] = imgui.ImBool(ini.stats.show_date),
    ['show_report'] = imgui.ImBool(ini.stats.show_report),
    ['show_session'] = imgui.ImBool(ini.stats.show_session),

    ['daily_online'] = imgui.ImBool(ini.stats.daily_online),
    ['daily_afk'] = imgui.ImBool(ini.stats.daily_afk),
    ['daily_clear_online'] = imgui.ImBool(ini.stats.daily_clear_online),
    ['daily_reports'] = imgui.ImBool(ini.stats.daily_reports),
    ['daily_punishments'] = imgui.ImBool(ini.stats.daily_punishments),
    ['daily_bans'] = imgui.ImBool(ini.stats.daily_bans),
    ['daily_warns'] = imgui.ImBool(ini.stats.daily_warns),
    ['daily_mutes'] = imgui.ImBool(ini.stats.daily_mutes),
    ['daily_kicks'] = imgui.ImBool(ini.stats.daily_kicks),
    ['daily_jails'] = imgui.ImBool(ini.stats.daily_jails),
    ['daily_reputation'] = imgui.ImBool(ini.stats.daily_reputation),
    ['daily_forms'] = imgui.ImBool(ini.stats.daily_forms),

    ['weekly_online'] = imgui.ImBool(ini.stats.weekly_online),
    ['weekly_afk'] = imgui.ImBool(ini.stats.weekly_afk),
    ['weekly_clear_online'] = imgui.ImBool(ini.stats.weekly_clear_online),
    ['weekly_reports'] = imgui.ImBool(ini.stats.weekly_reports),
    ['weekly_punishments'] = imgui.ImBool(ini.stats.weekly_punishments),
    ['weekly_bans'] = imgui.ImBool(ini.stats.weekly_bans),
    ['weekly_warns'] = imgui.ImBool(ini.stats.weekly_warns),
    ['weekly_mutes'] = imgui.ImBool(ini.stats.weekly_mutes),
    ['weekly_kicks'] = imgui.ImBool(ini.stats.weekly_kicks),
    ['weekly_jails'] = imgui.ImBool(ini.stats.weekly_jails),
    ['weekly_reputation'] = imgui.ImBool(ini.stats.weekly_reputation),
    ['weekly_forms'] = imgui.ImBool(ini.stats.weekly_forms),

    ['all_online'] = imgui.ImBool(ini.stats.all_online),
    ['all_afk'] = imgui.ImBool(ini.stats.all_afk),
    ['all_clear_online'] = imgui.ImBool(ini.stats.all_clear_online),
    ['all_reports'] = imgui.ImBool(ini.stats.all_reports),
    ['all_punishments'] = imgui.ImBool(ini.stats.all_punishments),
    ['all_bans'] = imgui.ImBool(ini.stats.all_bans),
    ['all_warns'] = imgui.ImBool(ini.stats.all_warns),
    ['all_mutes'] = imgui.ImBool(ini.stats.all_mutes),
    ['all_kicks'] = imgui.ImBool(ini.stats.all_kicks),
    ['all_jails'] = imgui.ImBool(ini.stats.all_jails),
    ['all_reputation'] = imgui.ImBool(ini.stats.all_reputation),
    ['all_forms'] = imgui.ImBool(ini.stats.all_forms),

    ['update_early'] = imgui.ImInt(ini.stats.update_early),
    
}

local searcherReport = imgui.ImBuffer('',255)



local generatecolorboard = {
    {'Админ-Чата','admin'},
    {'репорта','report'},
    {'количества репортов','reportcount'},
    {'банов по айпи','banip'},
    {'банов по айпи в оффлайне','banipoff'},
    {'разбанов айпи','unbanip'},
    {'банов','ban'},
    {'банов в оффлайне','banoff'},
    {'разбанов','unban'},
    {'варнов','warn'},
    {'варнов в оффлайне','warnoff'},
    {'разварнов','unwarn'},
    {'разварнов в оффлайне','unwarnoff'},
    {'тюрьмы(адм)','apunish'},
    {'тюрьмы в оффлайне(адм)','apunishoff'},
    {'выпуска из тюрьмы(адм)','unapunishoff'},
    {'деморгана','jail'},
    {'деморгана в оффлайне','jailoff'},
    {'выпуска из деморгана','unjail'},
    {'выпуска из деморгана в оффлайне','unjailoff'},
    {'мутов','mute'},
    {'мутов в оффлайне','muteoff'},
    {'размутов','unmute'},
    {'размутов в оффлайне','unmuteoff'},
    {'киков','kick'},
    {'флипов','flips'},
    {'слапов','slap'},
    {'спавна авто','spcar'},
    {'телепорта автомобиля','getherecar'},
    {'выдачи авто','plveh'},
    {'спавна игроков','spawn'},
    {'захода в рекон','recon'},
    {'сообщения игроку','pm'},
}


local generatecolorboard2 = {
    {'ответа на репорт','reportanswer'},
    {'заморозки','freeze'},
    {'разморозки','unfreeze'},
    {'тп игрока к себе','gethere'},
    {'варнинга на рекламу','warnreklam'}, 
    {'варнинга на взлом','reg'},
    {'вашего ника','nick'},
    {'выдачи оружия','givegun'},
    {'киков','kick'},
    {'варнингов на клады','warnklad'},
    {'покупки авто','buycar'},
    {'покупки дома','buyhouse'},
    {'переводов в банке','transfer'},
    {'нахождения отмычек','key'},
    {'выдачи оружия всем','gunall'},
    {'выдачи скина всем','skinall'},
    {'спавна в радиусе','spplayers'},
    {'хилла в радиусе','hpall'},
    {'выдачи скина','giveskin'},
    {'утоления голода всем','eatall'},
    {'фриза в радиусе','freezeall'},
    {'разфриза в радиусе','unfreezeall'},
    {'выдачи брони всем','armourall'},
    {'снятия брони всем','unarmourall'},
    {'игнора звезд','azakon'},
    {'скобок getip', 'colorTagsGetip'},
    {'основного текста getip', 'colorTextGetip'},
    {'прочерков getip', 'colorTireGetip'},
    {'значений getip', 'colorValuesGetip'}
}


local generateStyleEditor = {
    {'текста','Text'},
    {'выключенного текста','TextDisabled'},
    {'фона окна','WindowBg'},
    {'фона дочернего окна','ChildWindowBg'},
    {'фона всплывающего окна','PopupBg'},
    {'обводки','Border'},
    {'тень обводки','BorderShadow'},
    {'фона/обводки объектов','FrameBg'},
    {'наведенных объектов','FrameBgHovered'},
    {'активных объектов','FrameBgActive'},
    {'фона заголовка неактивного окна','TitleBg'},
    {'фона заголовка активного окна','TitleBgActive'},
    {'фона заголовка свернутого окна','TitleBgCollapsed'},
    {'исключение*'},
    {'фона скролл-бара','ScrollbarBg'},
    {'неактивного скролл-бара','ScrollbarGrab'},
    {'наведенного скролл-бара','ScrollbarGrabHovered'},
    {'активного скролл-бара','ScrollbarGrabActive'},
    {'выпадающего меню','ComboBg'},
    {'галочек','CheckMark'},
    {'слайдера','SliderGrab'},
    {'зажатого слайдера','SliderGrabActive'},
    {'кнопки','Button'},
    {'наведенной кнопки','ButtonHovered'},
    {'зажатой кнопки','ButtonActive'},
    {'коллектора','Header'},
    {'наведенного коллектора','HeaderHovered'},
    {'активного коллектора','HeaderActive'},
    {'разделителя','Separator'},
    {'исключение*'},
    {'исключение*'},
    {'закладки в угле','ResizeGrip'},
    {'наведенной закладки','ResizeGripHovered'},
    {'зажатой закладки','ResizeGripActive'},
    {'кнопки закрытия','CloseButton'},
    {'наведенной кнопки закрытия','CloseButtonHovered'},
    {'зажатой кнопки закрытия','CloseButtonActive'},
    {'исключение*'},
    {'исключение*'},
    {'исключение*'},
    {'исключение*'},
    {'выделенного текста','TextSelectedBg'},
    {'затемнения окна','ModalWindowDarkening'},
}

local cheats = {
    ['gm'] = imgui.ImBool(ini.cheats.gm),
    ['invisible'] = imgui.ImBool(ini.cheats.invisible),
    ['noBike'] = imgui.ImBool(ini.cheats.noBike),
    ['inifinityAmmo'] = imgui.ImBool(ini.cheats.inifinityAmmo),
    ['clickWarp'] = imgui.ImBool(ini.cheats.clickWarp),
    ['boost'] = imgui.ImInt(ini.cheats.boost),
    ['multiplier'] = imgui.ImInt(ini.cheats.multiplier),
    ['colorBoostText'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.cheats.colorBoostText)):GetFloat4()),
    ['colorBoost'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.cheats.colorBoost)):GetFloat4()),
    ['fJetPack'] = imgui.ImBool(ini.cheats.fJetPack),
    ['wallhack'] = imgui.ImBool(ini.cheats.wallhack),
    ['whcolor'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.cheats.whcolor)):GetFloat4()),
    ['whlinecolor'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.cheats.whlinecolor)):GetFloat4()),
    ['whskeletal'] = imgui.ImBool(ini.cheats.whskeletal),
    ['whlines'] = imgui.ImBool(ini.cheats.whlines),
    ['whnick'] = imgui.ImBool(ini.cheats.whnick),
    ['whnormalcolor'] = imgui.ImBool(ini.cheats.whnormalcolor), 
    ['whnormalcolorbones'] = imgui.ImBool(ini.cheats.whnormalcolorbones),
    ['whdist'] = imgui.ImInt(ini.cheats.whdist),
    ['cwallhack'] = imgui.ImBool(ini.cheats.cwallhack),
    ['cwhdist'] = imgui.ImInt(ini.cheats.cwhdist),
    ['cwhfsize'] = imgui.ImInt(ini.cheats.cwhfsize),
    ['cwhfname'] = imgui.ImBuffer(ini.cheats.cwhfname,256),
    ['cwhfOffs'] = imgui.ImInt(ini.cheats.cwhfOffs),
    ['cwhfflag'] = imgui.ImInt(ini.cheats.cwhfflag),
    ['cwhname'] = imgui.ImBool(ini.cheats.cwhname),
    ['cwhid'] = imgui.ImBool(ini.cheats.cwhid),
    ['cwhhp'] = imgui.ImBool(ini.cheats.cwhhp),
    ['cwhengine'] = imgui.ImBool(ini.cheats.cwhengine),
    ['cwhlines'] = imgui.ImBool(ini.cheats.cwhlines),
    ['cwhlinecolor'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.cheats.cwhlinecolor)):GetFloat4()),
    ['cwhnamecolor'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.cheats.cwhnamecolor)):GetFloat4()),
    ['cwhidcolor'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.cheats.cwhidcolor)):GetFloat4()),
    ['cwhhpcolor'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.cheats.cwhhpcolor)):GetFloat4()),
    ['cwhenginecolor'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.cheats.cwhenginecolor)):GetFloat4()),
    ['airbrake'] = imgui.ImBool(false),
    ['pSpeed'] = imgui.ImFloat(ini.cheats.pSpeed),
    ['multiplierARB'] = imgui.ImFloat(ini.cheats.multiplierARB),

    ['fnameJP'] = imgui.ImBuffer(ini.cheats.fnameJP,256),
    ['fsizeJP'] = imgui.ImInt(ini.cheats.fsizeJP),
    ['fflagJP'] = imgui.ImInt(ini.cheats.fflagJP),

    ['fnameARB'] = imgui.ImBuffer(ini.cheats.fnameARB,256),
    ['fsizeARB'] = imgui.ImInt(ini.cheats.fsizeARB),
    ['fflagARB'] = imgui.ImInt(ini.cheats.fflagARB),

    ['colorBoostTextARB'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.cheats.colorBoostTextARB)):GetFloat4()),
    ['colorBoostARB'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.cheats.colorBoostARB)):GetFloat4()),

    ['xARB'] = imgui.ImFloat(ini.cheats.xARB),
    ['yARB'] = imgui.ImFloat(ini.cheats.yARB),

    -----------------------------------

    ['stateKL'] = imgui.ImBool(true),
    ['showKillTime'] = imgui.ImBool(ini.cheats.showKillTime),
    ['showKillerNick'] = imgui.ImBool(ini.cheats.showKillerNick),
    ['showKillerID'] = imgui.ImBool(ini.cheats.showKillerID),
    ['showKilledNick'] = imgui.ImBool(ini.cheats.showKilledNick),
    ['showKilledID'] = imgui.ImBool(ini.cheats.showKilledID),
    ['withIMG'] = imgui.ImInt(ini.cheats.withIMG),
    ['colorKillTime'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.cheats.colorKillTime)):GetFloat4()),
    ['colorWeapon'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.cheats.colorWeapon)):GetFloat4()),

    ['fsizeKL'] = imgui.ImInt(ini.cheats.fsizeKL),
    ['fnameKL'] = imgui.ImBuffer(ini.cheats.fnameKL,256),
    ['fOffsKL'] = imgui.ImInt(ini.cheats.fOffsKL),
    ['fflagKL'] = imgui.ImInt(ini.cheats.fflagKL),
    ['fAlignKL'] = imgui.ImInt(ini.cheats.fAlignKL),
    ['xKL'] = imgui.ImFloat(ini.cheats.xKL),
    ['yKL'] = imgui.ImFloat(ini.cheats.yKL),
    ['linesKL'] = imgui.ImInt(ini.cheats.linesKL),
}

local killListData = {}

local bSettings = {
    ['btracer'] = imgui.ImBool(ini.cheats.btracer),
    ['myBullets'] = imgui.ImBool(ini.cheats.myBullets),
    ['otherBullets'] = imgui.ImBool(ini.cheats.otherBullets),
    ['EndMy'] = imgui.ImBool(ini.cheats.EndMy),
    ['EndOther'] = imgui.ImBool(ini.cheats.EndOther),
    ['showPlayer'] = imgui.ImBool(ini.cheats.showPlayer),
    ['showId'] = imgui.ImBool(ini.cheats.showId),
    ['showNick'] = imgui.ImBool(ini.cheats.showNick),
    ---------colors------------
    ['colorNick'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.cheats.colorNick)):GetFloat4()),
    ['colorId'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.cheats.colorId)):GetFloat4()),
    ['staticObjectMy'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.cheats.staticObjectMy)):GetFloat4()),
    ['dynamicObjectMy'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.cheats.dynamicObjectMy)):GetFloat4()),
    ['playerMy'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.cheats.playerMy)):GetFloat4()),
    ['carMy'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.cheats.carMy)):GetFloat4()),
    ['staticObjectOther'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.cheats.staticObjectOther)):GetFloat4()),
    ['dynamicObjectOther'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.cheats.dynamicObjectOther)):GetFloat4()),
    ['playerOther'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.cheats.playerOther)):GetFloat4()),
    ['carOther'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.cheats.carOther)):GetFloat4()),
    ---------------------------
    ['timeRenderMyBullets'] = imgui.ImInt(ini.cheats.timeRenderMyBullets),
    ['timeRenderOtherBullets'] = imgui.ImInt(ini.cheats.timeRenderOtherBullets),
    ['sizeMyLine'] = imgui.ImInt(ini.cheats.sizeMyLine),
    ['sizeOtherLine'] = imgui.ImInt(ini.cheats.sizeOtherLine),
    ['sizeMyPolygonEnd'] = imgui.ImInt(ini.cheats.sizeMyPolygonEnd),
    ['sizeOtherPolygonEnd'] = imgui.ImInt(ini.cheats.sizeOtherPolygonEnd),
    ['rotationMyPolygonEnd'] = imgui.ImInt(ini.cheats.rotationMyPolygonEnd),
    ['rotationOtherPolygonEnd'] = imgui.ImInt(ini.cheats.rotationOtherPolygonEnd),
    ['degreeMyPolygonEnd'] = imgui.ImInt(ini.cheats.degreeMyPolygonEnd),
    ['degreeOtherPolygonEnd'] = imgui.ImInt(ini.cheats.degreeOtherPolygonEnd),
    ['maxLineMyLimit'] = imgui.ImInt(ini.cheats.maxLineMyLimit),
    ['maxLineOtherLimit'] = imgui.ImInt(ini.cheats.maxLineOtherLimit),
}

local actionTable = {'Отправить','Вставить','Отправить и следить'}
local adminPermTable = {'Спец.администратор','Главный Администратор','Заместитель ГА','Куратор'}
local adminNamesTable = {
    ["Младший Модератор"] = 1,
	["Модератор"] = 2,
	["Старший Модератор"] = 3,
	["Администратор"] = 4,
	["Куратор"] = 5,
	["Заместитель ГА"] = 6,
	["Главный Администратор"] = 7,
	["Основатель"] = 8
}

local reportReconMeWords = {"помогите", "хелп", "help", "help", "флип", "застрял", "заспавните", "вытащите", "поднимите", "gjvjubnt", "памагите", "переверните", "flip", "утонул"}
local reconInfo = {
    ['status'] = imgui.ImBool(false),
    ['time'] = os.time(),
    ['adminSpecNick'] = "",
    ['adminSpecId'] = -1,
    ['nick'] = 'Перезайдите в RECON',
    ['id'] = -1,
    ['lvl'] = '-',
    ['exp'] = '-',
    ['warns'] = '-',
    ['armour'] = '-',
    ['health'] = '-',
    ['carHP'] = '-',
    ['speed'] = '-',
    ['netStat'] = '-',
    ['ammo'] = '-',
    ['shot'] = '-',
    ['timeShot'] = '-',
    ['afkTime'] = '-',
    ['engine'] = '-',
    ['TT'] = '-',
    ['game'] = '-',
    ['skin'] = 0,
    ['color'] = 'FFFFFF',
    ['car'] = '-',
    ['carid'] = '-',
    ['def'] = '-0%',
    ['dam'] = '+0',
    ['regen'] = '0',
    ['frac'] = 'Не имеется',
    ['rank'] = 0,
    ['steal'] = false,
    ['cam'] = {},
    ['waitingForCheck'] = false,
    ['cars'] = {},
}

local reconWriter = {
    [2109] = 'nick',
    [2123] = 'id',
    [2112] = 'warns',
    [2113] = 'armour',
    [2114] = 'health',
    [2115] = 'carHP',
    [2116] = 'speed',
    [2117] = 'netStat',
    [2118] = 'ammo',
    [2119] = 'shot',
    [2120] = 'timeShot',
    [2121] = 'afkTime',
}


local deleteWriter = {
	[2076] = {'Box', 19, 6.1998000144958, 179.52949523926, 2076},
	[2077] = {'UPDATE', 18, 6.4664988517761, 179.45899963379, 2077},
	[2078] = {'STATS', 18, 6.4664988517761, 188.35960388184, 2078},
	[2079] = {'ACTION', 18, 6.4664988517761, 196.9600982666, 2079},
	[2080] = {'PUNISH', 18, 6.4664988517761, 205.96060180664, 2080},
	[2081] = {'PUNISH', 18, 6.4664988517761, 214.46110534668, 2081},
	[2082] = {'HELP', 18, 6.4664988517761, 223.06170654297, 2082},
	[2083] = {'CHECK', 18, 6.4664988517761, 231.76220703125, 2083},
	[2084] = {'TECH', 18, 6.4664988517761, 240.66270446777, 2084},
	[2085] = {'EXIT', 18, 6.4664988517761, 249.4633026123, 2085},
	[2086] = {'LD_BEAT:chit', 2, 561.73327636719, 170.74800109863, 2086},
	[2087] = {'Box', 19, 33.466701507568, 179.64419555664, 2087},
	[2088] = {'LD_BEAT:chit', 2, 618.73321533203, 170.59240722656, 2088},
	[2089] = {'Box', 19, 570.99981689453, 175.38130187988, 2089},
	[2090] = {'LD_BEAT:chit', 2, 561.63342285156, 278.69479370117, 2090},
	[2091] = {'LD_BEAT:chit', 2, 619.13311767578, 278.83920288086, 2091},
	[2092] = {'Box', 19, 571.2998046875, 283.72799682617, 2092},
	[2093] = {'Box', 19, 565.79992675781, 197.7760925293, 2093},
	[2094] = {'Box', 19, 565.63311767578, 182.53860473633, 2094},
	[2095] = {'', 2, 551.73291015625, 191.81840515137, 2095},
	[2096] = {'Level:', 18, 568.96661376953, 199.58290100098, 2096},
	[2097] = {'Warns:', 18, 568.96661376953, 206.48330688477, 2097},
	[2098] = {'Armour:', 18, 568.96661376953, 213.28370666504, 2098},
	[2099] = {'Health:', 18, 568.96661376953, 220.48420715332, 2099},
	[2100] = {'Car_HP:', 18, 568.96661376953, 227.68460083008, 2100},
	[2101] = {'Speed:', 18, 568.96661376953, 234.88510131836, 2101},
	[2102] = {'NetStat:', 18, 568.96661376953, 242.08540344238, 2102},
	[2103] = {'Ammo:', 18, 568.96661376953, 248.98590087891, 2103},
	[2104] = {'Shot:', 18, 568.96661376953, 256.18640136719, 2104},
	[2105] = {'Time_Shot:', 18, 568.96661376953, 263.58670043945, 2105},
	[2106] = {'AFK_Time:', 18, 568.96661376953, 270.78720092773, 2106},
	[2107] = {'Engine:', 18, 568.96661376953, 277.48770141602, 2107},
	[2108] = {'ID', 18, 569.23400878906, 186.92640686035, 2108},
	[2109] = {'.+', 18, 584.93371582031, 178.63020324707, 2109},
	[2110] = {'NAME', 18, 568.90051269531, 180.61120605469, 2110},
	[2111] = {'%d+:.+', 18, 600.19940185547, 199.86810302734, 2111},
	[2112] = {'%d+', 18, 600.19940185547, 206.16850280762, 2112},
	[2113] = {'%d+', 18, 600.19940185547, 213.16900634766, 2113},
	[2114] = {'%d+', 18, 600.19940185547, 219.96940612793, 2114},
	[2115] = {'%d+', 18, 600.19940185547, 227.2698059082, 2115},
	[2116] = {'%d+%s*/%s*%d+', 18, 600.19940185547, 234.37030029297, 2116},
	[2117] = {'%d+', 18, 600.19940185547, 241.37060546875, 2117},
	[2118] = {'%d+:%d+', 18, 600.19940185547, 248.77110290527, 2118},
	[2119] = {'%d+/%d+', 18, 600.19940185547, 256.07150268555, 2119},
	[2120] = {'%d+/%d+', 18, 600.19940185547, 263.47210693359, 2120},
	[2121] = {'%d+', 18, 600.19940185547, 270.67239379883, 2121},
	[2122] = {'.+', 18, 600.19940185547, 277.67291259766, 2122},
	[2123] = {'%d+', 18, 585.20080566406, 186.13760375977, 2123},
	[2124] = {'particle:lamp_shad_64', 2, 568.99981689453, 289.81460571289, 2124},
	[2125] = {'particle:lamp_shad_64', 2, 4.7997989654541, 249.07760620117, 2125},
	[2126] = {'Box', 19, 35.733009338379, 249.39280700684, 2126},
	[2127] = {'AZ', 18, 36, 249.4633026123, 2127},
	[2128] = {'GOTO', 18, 36, 258.26391601563, 2128},
	[2129] = {'GETHER', 18, 36, 267.06451416016, 2129},
	[2130] = {'EXIT', 18, 36, 275.86511230469, 2130},
	[2131] = {'Box', 19, 62.999912261963, 249.50750732422, 2131},
}	

local formFilter = {'getip','pgetip','plveh','spplayer','spcar','givegun','flip','skick','uval','agl','cure','pgetips','cleardemorgane'}


local formErrors = {
    {"^%[Ошибка%] {ffffff}Использовать команду можно если онлайн превышает 990 игроков.$", "[Ошибка] Использовать команду можно если онлайн превышает 990 игроков", false},
    {"^Слишком много символов в причине!$","Слишком много символов в причине!", false},
    {"^%[Ошибка%] {FFFFFF}Этот игрок является сотрудником TCP или Полиции.","Этот игрок является сотрудником TCP или Полиции", false},
    {"^Не нехочу!$","Игрок уже находится в транспорте.", false},
    {"^Создать машину не удалось!$","Создать машину не удалось!", false},
    {"^%[SET FUEL%] Установлено: (%d+.%d+)$","[SET FUEL] Установлено: ", true},
    {"^Номер Транспортного средства не может быть ниже 400 или выше","Номер Транспортного средства не может быть ниже 400 или выше", false},
    {"^Используй: (.*)","Используйте: ", true},
    {"%[Ошибка%] %{......%}Введите: (.+)","Используйте: ", true},
    {"^Используйте: (.+)", "Используйте: ", true},
    {"^%[Ошибка%] {FFFFFF}В интерьере запрещено!", "В интерьере запрещено!", false},
    {"^Не больше (%d+) символов!$", "Слишком много символов!", false},
    {"^У этого игрока уже есть бан чата!$", "У этого игрока уже есть бан чата!", false},
    {"(/unbanip %[ip%])", "Используйте: ", false},
    {"(/warnoff %[name%] %[причина%])", false},
    {"^Игрок не в игре!$", "Игрок не в сети!", false},
    {"^%[Ошибка%] {FFFFFF}Игрок не в сети!$", "Игрок не в сети!", false},
    {"^Игрок не законектился еще!$", "Игрок не законектился!", false},
    {"^Этот игрок уже в ДЕМОРГАНЕ!$", "Этот игрок уже в деморгане!", false},
    {"^Извините , но такого человека сейчас нет в тюрьме!$", "Такого человека сейчас нет в тюрьме", false},
    {"^Нельзя посадить меньше чем на 5 минут$", "Нельзя посадить меньше, чем на 5 минут", false},
    {"^%[Ошибка%] {ffffff}Не найдено игроков в AFK более 5 минут%.", "Не найдено игроков в AFK более 5-ти минут.",false},
    {"^%[A%] .+ кикнул (%d+) игроков, которые стояли в АФК более 5 минут!", "По вашему запросу было кикнуто следующее количество игроков: ", true},
    {"^/plveh %[id%] %[idcar%] %[TT 0/1%]", "Используйте: /plveh [ID] [ID Car] [TT 0/1]", false}

}


local reconSettings = {
    ['delTD'] = imgui.ImBool(ini.recon.delTD),
    ['showRecon'] = imgui.ImBool(ini.recon.showRecon),
    ['showNavig'] = imgui.ImBool(ini.recon.showNavig),
    ['showInfo'] = imgui.ImBool(ini.recon.showInfo),
    ['typeInfo'] = imgui.ImInt(ini.recon.typeInfo),
    ['showInfoNick'] = imgui.ImBool(ini.recon.showInfoNick),
    ['showInfoId'] = imgui.ImBool(ini.recon.showInfoId),
    ['paintInfoNick'] = imgui.ImBool(ini.recon.paintInfoNick),
    ['showInfoTime'] = imgui.ImBool(ini.recon.showInfoTime),
    ['showInfoSuspicion'] = imgui.ImBool(ini.recon.showInfoSuspicion),
    ['showPlatform'] = imgui.ImBool(ini.recon.showPlatform),
    ['showInfoSuspicionType'] = imgui.ImInt(ini.recon.showInfoSuspicionType),
    ['showInfoCar'] = imgui.ImBool(ini.recon.showInfoCar),
    ['showFP'] = imgui.ImBool(ini.recon.showFP),
    ['typeNavig'] = imgui.ImInt(ini.recon.typeNavig),
    ['showKeys'] = imgui.ImBool(ini.recon.showKeys),
    ['useSlap'] = imgui.ImBool(ini.recon.useSlap),
    ['useKeys'] = imgui.ImBool(ini.recon.useKeys),
    ['xNavig'] = imgui.ImFloat(ini.recon.xNavig),
    ['yNavig'] = imgui.ImFloat(ini.recon.yNavig),
    ['xInfo'] = imgui.ImFloat(ini.recon.xInfo),
    ['yInfo'] = imgui.ImFloat(ini.recon.yInfo),

    ['xBot'] = imgui.ImFloat(ini.recon.xBot),
    ['yBot'] = imgui.ImFloat(ini.recon.yBot),
    ---
    ['showFastPunish'] = imgui.ImBool(ini.recon.showFastPunish),
    ['xPunish'] = imgui.ImFloat(ini.recon.xPunish),
    ['yPunish'] = imgui.ImFloat(ini.recon.yPunish),
    ---
    ['tpToP'] = imgui.ImBool(ini.recon.tpToP),
    ['tpToM'] = imgui.ImBool(ini.recon.tpToM),
    ['spawn'] = imgui.ImBool(ini.recon.spawn),
    ['az'] = imgui.ImBool(ini.recon.az),
    ['UP'] = imgui.ImBool(ini.recon.UP),
    ['DOWN'] = imgui.ImBool(ini.recon.DOWN),
    ['getip'] = imgui.ImBool(ini.recon.getip),
    ['pgetip'] = imgui.ImBool(ini.recon.pgetip),
    ['stats'] = imgui.ImBool(ini.recon.stats),
    ['here'] = imgui.ImBool(ini.recon.here),
    ['sethp'] = imgui.ImBool(ini.recon.sethp),
    ['plveh'] = imgui.ImBool(ini.recon.plveh),
    ['freeze'] = imgui.ImBool(ini.recon.freeze),
    ['unfreeze'] = imgui.ImBool(ini.recon.unfreeze),
    ['flip'] = imgui.ImBool(ini.recon.flip),
    ['skill'] = imgui.ImBool(ini.recon.skill),
    ['obves'] = imgui.ImBool(ini.recon.obves),
    ['zatochki'] = imgui.ImBool(ini.recon.zatochki),
    ['checkgun'] = imgui.ImBool(ini.recon.checkgun),
    ['getgun'] = imgui.ImBool(ini.recon.getgun),
    ['hwarn'] = imgui.ImBool(ini.recon.hwarn),
    ['nwarn'] = imgui.ImBool(ini.recon.nwarn),

    ['showKeysP'] = imgui.ImBool(ini.recon.showKeysP),
    ['showW'] = imgui.ImBool(ini.recon.showW),
    ['showA'] = imgui.ImBool(ini.recon.showA),
    ['showS'] = imgui.ImBool(ini.recon.showS),
    ['showD'] = imgui.ImBool(ini.recon.showD),
    ['showAlt'] = imgui.ImBool(ini.recon.showAlt),
    ['showShift'] = imgui.ImBool(ini.recon.showShift),
    ['showSpace'] = imgui.ImBool(ini.recon.showSpace),
    ['showF'] = imgui.ImBool(ini.recon.showF),
    ['showC'] = imgui.ImBool(ini.recon.showC),
    ['showRKM'] = imgui.ImBool(ini.recon.showRKM),
    ['showLKM'] = imgui.ImBool(ini.recon.showLKM),
    ['showH'] = imgui.ImBool(ini.recon.showH),
    ['showCtrl'] = imgui.ImBool(ini.recon.showCtrl),
    ['showE'] = imgui.ImBool(ini.recon.showE),
    ['showQ'] = imgui.ImBool(ini.recon.showQ),
    ['showUp'] = imgui.ImBool(ini.recon.showUp),
    ['showDown'] = imgui.ImBool(ini.recon.showDown),
    ['xKeys'] = imgui.ImFloat(ini.recon.xKeys),
    ['yKeys'] = imgui.ImFloat(ini.recon.yKeys),

    ['showLook'] = imgui.ImBool(ini.recon.showLook),
    ['distanceLook'] = imgui.ImFloat(ini.recon.distanceLook),
    ['transitionLook'] = imgui.ImFloat(ini.recon.transitionLook),
    ['showEndLook'] = imgui.ImBool(ini.recon.showEndLook),
    ['sizeLook'] = imgui.ImFloat(ini.recon.sizeLook),
    ['sizeEndLook'] = imgui.ImFloat(ini.recon.sizeEndLook),
    ['rotationEndLook'] = imgui.ImFloat(ini.recon.rotationEndLook),
    ['degreeEndLook'] = imgui.ImInt(ini.recon.degreeEndLook),
    ['colorLook'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.recon.colorLook)):GetFloat4()),
    
    ['showRadar'] = imgui.ImBool(ini.recon.showRadar),

    ['showCars'] = imgui.ImBool(ini.recon.showCars),
    ['showIfNoCar'] = imgui.ImBool(ini.recon.showIfNoCar),
    ['showHeaderCars'] = imgui.ImBool(ini.recon.showHeaderCars),
    ['carsX'] = imgui.ImFloat(ini.recon.carsX),
    ['carsY'] = imgui.ImFloat(ini.recon.carsY),

    ['sendPM'] = imgui.ImBool(ini.recon.sendPM),
    ['modePM'] = imgui.ImInt(ini.recon.modePM),
}



local checkersSettings = {
    ['stream'] = {
        ['show'] = imgui.ImBool(ini.checker_stream.show),
        ['lvlFrom'] = imgui.ImInt(ini.checker_stream.lvlFrom),
        ['lvlTo'] = imgui.ImInt(ini.checker_stream.lvlTo),
        ['fName'] = imgui.ImBuffer(ini.checker_stream.fName, 256),
        ['fsize'] = imgui.ImInt(ini.checker_stream.fsize),
        ['fflag'] = imgui.ImInt(ini.checker_stream.fflag),
        ['fOffs'] = imgui.ImInt(ini.checker_stream.fOffs),
        ['fAlign'] = imgui.ImInt(ini.checker_stream.fAlign),
        ['x'] = imgui.ImFloat(ini.checker_stream.x),
        ['y'] = imgui.ImFloat(ini.checker_stream.y),
        ['max'] = imgui.ImInt(ini.checker_stream.max),
        ['radius'] = imgui.ImInt(ini.checker_stream.radius),
        ['colorNick'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.checker_stream.colorNick)):GetFloat4()),
        ['colorId'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.checker_stream.colorId)):GetFloat4()),
        ['colorSeparator'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.checker_stream.colorSeparator)):GetFloat4()),
        ['colorLVL'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.checker_stream.colorLVL)):GetFloat4()),
        ['colorHeaderLVL'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.checker_stream.colorHeaderLVL)):GetFloat4()),
        ['colorHeaderID'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.checker_stream.colorHeaderID)):GetFloat4()),
        ['colorPing'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.checker_stream.colorPing)):GetFloat4()),
        ['colorHeaderPing'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.checker_stream.colorHeaderPing)):GetFloat4()),
        ['colorSpeed'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.checker_stream.colorSpeed)):GetFloat4()),
        ['colorSpeedHeader'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.checker_stream.colorSpeedHeader)):GetFloat4()),
        ['colorCarId'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.checker_stream.colorCarId)):GetFloat4()),
        ['colorHeaderCarId'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.checker_stream.colorHeaderCarId)):GetFloat4()),

        ['showNick'] = imgui.ImBool(ini.checker_stream.showNick),
        ['showId'] = imgui.ImBool(ini.checker_stream.showId),
        ['showHeaderID'] = imgui.ImBool(ini.checker_stream.showHeaderID),
        ['showSeparator'] = imgui.ImBool(ini.checker_stream.showSeparator),
        ['showLVL'] = imgui.ImBool(ini.checker_stream.showLVL),
        ['showHeaderLVL'] = imgui.ImBool(ini.checker_stream.showHeaderLVL),
        ['showPing'] = imgui.ImBool(ini.checker_stream.showPing),
        ['showHeaderPing'] = imgui.ImBool(ini.checker_stream.showHeaderPing),
        ['showSpeed'] = imgui.ImBool(ini.checker_stream.showSpeed),
        ['showSpeedHeader'] = imgui.ImBool(ini.checker_stream.showSpeedHeader),
        ['showCarId'] = imgui.ImBool(ini.checker_stream.showCarId),
        ['showHeaderCarId'] = imgui.ImBool(ini.checker_stream.showHeaderCarId),

    },

    ['admins'] = {
        ['state'] = imgui.ImBool(ini.adminsChecker.state),
        ['style'] = imgui.ImInt(ini.adminsChecker.style),
        ['x'] = imgui.ImFloat(ini.adminsChecker.x),
        ['y'] = imgui.ImFloat(ini.adminsChecker.y),
        ['delay'] = imgui.ImInt(ini.adminsChecker.delay),
        ['showSpecial'] = imgui.ImBool(ini.adminsChecker.showSpecial),
        ['showNick'] = imgui.ImBool(ini.adminsChecker.showNick),
        ['showId'] = imgui.ImBool(ini.adminsChecker.showId),
        ['showAfk'] = imgui.ImBool(ini.adminsChecker.showAfk),
        ['showRe'] = imgui.ImBool(ini.adminsChecker.showRe),
        ['showReputation'] = imgui.ImBool(ini.adminsChecker.showReputation),
        ['showActive'] = imgui.ImBool(ini.adminsChecker.showActive),
        ['showNotice'] = imgui.ImBool(ini.adminsChecker.showNotice),
        ['fsize'] = imgui.ImInt(ini.adminsChecker.fsize),
        ['fname'] = imgui.ImBuffer(ini.adminsChecker.fname,256),
        ['fOffs'] = imgui.ImInt(ini.adminsChecker.fOffs),
        ['fflag'] = imgui.ImInt(ini.adminsChecker.fflag),
        ['dopusk'] = imgui.ImInt(ini.adminsChecker.dopusk),
        ['show'] = true,
        ['eight_state'] = imgui.ImBool(ini.adminsChecker.eight_state),
        ['seven_state'] = imgui.ImBool(ini.adminsChecker.seven_state),
        ['six_state'] = imgui.ImBool(ini.adminsChecker.six_state),
        ['five_state'] = imgui.ImBool(ini.adminsChecker.five_state),
        ['four_state'] = imgui.ImBool(ini.adminsChecker.four_state),
        ['three_state'] = imgui.ImBool(ini.adminsChecker.three_state),
        ['two_state'] = imgui.ImBool(ini.adminsChecker.two_state),
        ['one_state'] = imgui.ImBool(ini.adminsChecker.one_state),
        ['centering'] = imgui.ImInt(ini.adminsChecker.centering),
    },
    ['leaders'] = {
        ['state'] = imgui.ImBool(ini.leadersChecker.state),
        ['style'] = imgui.ImInt(ini.leadersChecker.style),
        ['x'] = imgui.ImFloat(ini.leadersChecker.x),
        ['delay'] = imgui.ImInt(ini.leadersChecker.delay),
        ['y'] = imgui.ImFloat(ini.leadersChecker.y),
        ['fsize'] = imgui.ImInt(ini.leadersChecker.fsize),
        ['fname'] = imgui.ImBuffer(ini.leadersChecker.fname,256),
        ['fOffs'] = imgui.ImInt(ini.leadersChecker.fOffs),
        ['fOffsx'] = imgui.ImInt(ini.leadersChecker.fOffsx),
        ['fflag'] = imgui.ImInt(ini.leadersChecker.fflag),
        ['idstate'] = imgui.ImBool(ini.leadersChecker.idstate),
        ['dopusk'] = imgui.ImInt(ini.leadersChecker.dopusk),
        ['ingamestate'] = imgui.ImBool(ini.leadersChecker.ingamestate),
        ['nickstate'] = imgui.ImBool(ini.leadersChecker.nickstate),
        ['orgstate'] = imgui.ImBool(ini.leadersChecker.orgstate),
        ['zamstate'] = imgui.ImBool(ini.leadersChecker.zamstate),
        ['afkstate'] = imgui.ImBool(ini.leadersChecker.afkstate),
        ['activeState'] = imgui.ImBool(ini.leadersChecker.activeState),
        ['headerstate'] = imgui.ImBool(ini.leadersChecker.headerstate),
        ['orgequalsnickid'] = imgui.ImBool(ini.leadersChecker.orgequalsnickid),
        ['centering'] = imgui.ImInt(ini.leadersChecker.centering),
        ['shows'] = {
            {'Полиция ЛС',true},
            {'Областная полиция',true},
            {'FBI',true},
            {'Полиция СФ',true},
            {'Больница LS',true},
            {'Правительство LS',true},
            {'Тюрьма строгого режима LV',true},
            {'Больница СФ',true},
            {'Инструкторы',true},
            {'TV студия',true},
            {'Grove Street',true},
            {'Los Santos Vagos',true},
            {'East Side Ballas',true},
            {'Varrios Los Aztecas',true},
            {'The Rifa',true},
            {'Russian Mafia',true},
            {'Yakuza',true},
            {'La Cosa Nostra',true},
            {'Warlock MC',true},
            {'Армия ЛС',true},
            {'Центральный Банк',true},
            {'Больница LV',true},
            {'Полиция ЛВ',true},
            {'TV студия LV',true},
            {'Night Wolves',true},
            {'TV студия SF',true},
            {'Армия SF',true},
            {'Темное Братство',true},
            {'Страховая компания',true},
        },
        ['in_settings_titles'] = {
            {'Полиция ЛС'},
            {'РКШД'},
            {'FBI'},
            {'Полиция СФ'},
            {'Больница LS'},
            {'Правительство'},
            {'ТСР'},
            {'Больница СФ'},
            {'Инструкторы'},
            {'TV студия'},
            {'Grove Street'},
            {'Los Santos Vagos'},
            {'East Side Ballas'},
            {'Varrios Los Aztecas'},
            {'The Rifa'},
            {'Russian Mafia'},
            {'Yakuza'},
            {'La Cosa Nostra'},
            {'Warlock MC'},
            {'Армия ЛС'},
            {'Центральный Банк'},
            {'Больница LV'},
            {'Полиция ЛВ'},
            {'TV студия LV'},
            {'Night Wolves'},
            {'TV студия SF'},
            {'Армия SF'},
            {'Темное Братство'},
            {'Страховая компания'},
        }
    },
    ['friends'] = {
        ['state'] = imgui.ImBool(ini.friendChecker.state),
        ['x'] = imgui.ImFloat(ini.friendChecker.x),
        ['y'] = imgui.ImFloat(ini.friendChecker.y),
        ['instreamstate'] = imgui.ImBool(ini.friendChecker.instreamstate),
        ['fsize'] = imgui.ImInt(ini.friendChecker.fsize),
        ['fname'] = imgui.ImBuffer(ini.friendChecker.fname,256),
        ['fflag'] = imgui.ImInt(ini.friendChecker.fflag),
        ['fOffs'] = imgui.ImInt(ini.friendChecker.fOffs),
        ['show_nick'] = imgui.ImBool(ini.friendChecker.show_nick),
        ['show_id'] = imgui.ImBool(ini.friendChecker.show_id),
        ['centering'] = imgui.ImInt(ini.friendChecker.centering),
        ['show_distance'] = imgui.ImBool(ini.friendChecker.show_distance),
        ['show_header'] = imgui.ImBool(ini.friendChecker.show_header),
        ['distance_render'] = imgui.ImInt(ini.friendChecker.distance_render),
    },
    ['lstates'] = {},
}

local colorOrgs = {}
local colorOrgsFloat = {}
for k,v in pairs(ini.colororgs) do
    colorOrgs[#colorOrgs + 1] = imgui.ImFloat4(imgui.ImColor(hextorgba(v)):GetFloat4())
    colorOrgsFloat[#colorOrgsFloat + 1] = imgui.ImVec4(imgui.ImColor(hextorgba(v)):GetFloat4())
end

local additionColorOrgs = {
    ['org_header'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.leadersChecker.org_header)):GetFloat4()),
    ['active_header'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.leadersChecker.active_header)):GetFloat4()),
    ['active_value'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.leadersChecker.active_value)):GetFloat4()),
    ['nick_header'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.leadersChecker.nick_header)):GetFloat4()),
    ['nick_value'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.leadersChecker.nick_value)):GetFloat4()),
    ['id_value'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.leadersChecker.id_value)):GetFloat4()),
    ['deputy_header'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.leadersChecker.deputy_header)):GetFloat4()),
    ['deputy_value'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.leadersChecker.deputy_value)):GetFloat4()),
    ['members_header'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.leadersChecker.members_header)):GetFloat4()),
    ['members_value'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.leadersChecker.members_value)):GetFloat4()),
    ['members_afk_value'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.leadersChecker.members_afk_value)):GetFloat4()),
}

local colorFriends = {
    ['nick_color'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.friendChecker.nick_color)):GetFloat4()),
    ['id_color'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.friendChecker.id_color)):GetFloat4()),
    ['header_color'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.friendChecker.header_color)):GetFloat4()),
    ['distance_color'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.friendChecker.distance_color)):GetFloat4()),
    ['distance_header_color'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.friendChecker.distance_header_color)):GetFloat4()),
    ['line_color'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.friendChecker.line_color)):GetFloat4()),
}
for k,v in pairs(ini.lstates) do
    checkersSettings['lstates'][#checkersSettings['lstates'] + 1] = imgui.ImBool(v)
end

local checkersInfo = {
    ['admins'] = {
        ['online'] = 0,
        ['afk'] = 0,
        ['eight'] = {},
        ['seven'] = {},
        ['six'] = {},
        ['five'] = {},
        ['four'] = {},
        ['three'] = {},
        ['two'] = {},
        ['one'] = {},
    },

    ['admins_reserve'] = {
        ['online'] = 0,
        ['afk'] = 0,
        ['eight'] = {},
        ['seven'] = {},
        ['six'] = {},
        ['five'] = {},
        ['four'] = {},
        ['three'] = {},
        ['two'] = {},
        ['one'] = {},
    },

    ['admins_active'] = {},
    ['leaders_active'] = {},

    ['u_reputation'] = nil,

    ['leaders'] = {
        ['Полиция ЛС'] = {},
        ['Областная полиция'] = {},
        ['FBI'] = {},
        ['Полиция СФ'] = {},
        ['Больница LS'] = {},
        ['Правительство LS'] = {},
        ['Тюрьма строгого режима LV'] = {},
        ['Больница СФ'] = {},
        ['Инструкторы'] = {},
        ['TV студия'] = {},
        ['Grove Street'] = {},
        ['Los Santos Vagos'] = {},
        ['East Side Ballas'] = {},
        ['Varrios Los Aztecas'] = {},
        ['The Rifa'] = {},
        ['Russian Mafia'] = {},
        ['Yakuza'] = {},
        ['La Cosa Nostra'] = {},
        ['Warlock MC'] = {},
        ['Армия ЛС'] = {},
        ['Центральный Банк'] = {},
        ['Больница LV'] = {},
        ['Полиция ЛВ'] = {},
        ['TV студия LV'] = {},
        ['Night Wolves'] = {},
        ['TV студия SF'] = {},
        ['Армия SF'] = {},
        ['Темное Братство'] = {},
        ['Страховая компания'] = {},
    }
}

for k,v in pairs(checkersInfo['leaders']) do
    checkersInfo['leaders'][k] = {nick = 'Свободна',id = 'OFF', deputies = 0, members = 0, membersafk = 0, afk = 0}
end

local lipInfo = {}
local inSpherePlayers = {}
local directionSlap = imgui.ImInt(1)
local directionsTable = {'Вверх', 'Вниз'}
local cooldownKick = imgui.ImInt(1)
local reasonKick = imgui.ImBuffer(u8'Помеха',256)
local messagerpm = imgui.ImBuffer('',300)
local typerpm = imgui.ImInt(0)

local vehInfo = {-1,0,0}
local gunInfo = {-1,1,0}
local skinInfo = {-1,0,0}
local abotInfo = {}
local abotLVL = -1
local abotCurrent = -1

local check_game = false
local check_game_report = false
local checkiprec = false
local prefixerplus = '+'
local last_cmd = ''

local shotterOrg = {
    ['Не имеется'] = 'Не имеется',
    ['Полиция ЛС'] = 'ЛСПД',
    ['Областная полиция'] = 'РКШД',
    ['FBI'] = 'ФБР',
    ['Полиция СФ'] = 'СФПД',
    ['Больница LS'] = 'ЛСМЦ',
    ['Правительство LS'] = 'Пра-во',
    ['Тюрьма строгого режима LV'] = 'ТСР',
    ['Больница СФ'] = 'СФМЦ',
    ['Инструкторы'] = 'ГЦЛ',
    ['TV студия'] = 'СМИ ЛС',
    ['Grove Street'] = 'Grove',
    ['Los Santos Vagos'] = 'Vagos',
    ['East Side Ballas'] = 'Ballas',
    ['Varrios Los Aztecas'] = 'Aztecas',
    ['The Rifa'] = 'Rifa',
    ['Russian Mafia'] = 'RM',
    ['Yakuza'] = 'Yakuza',
    ['La Cosa Nostra'] = 'LCN',
    ['Warlock MC'] = 'WMC',
    ['Армия ЛС'] = 'ЛСа',
    ['Центральный Банк'] = 'ЦБ',
    ['Больница LV'] = 'ЛВМЦ',
    ['Полиция ЛВ'] = 'ЛВПД',
    ['TV студия LV'] = 'СМИ ЛВ',
    ['Night Wolves'] = 'NW',
    ['TV студия SF'] = 'СМИ СФ',
    ['Армия SF'] = 'СФа',
    ['Темное Братство'] = 'ТБ',
    ['Страховая компания'] = 'СК',
}

local cmdInfo = {}
local fastInfo = {}
local lvlInfo = {}
local simInfo = {}

local floodInfo = {}
local massDmInfo = {}
local rvankaInfo = {}
local adInfo = {}




local pesok_info = {
    state = false,
    current_value = 0,
    suspicions = {},
    temporary_suspicions = {},
    stopping = false,
}
startWaitingUpdate = os.time()

prov_info = {
    find = imgui.ImBuffer("",1000),
    state = false,
    current_value = 0,
    suspicions = {},
    temporaryListCheck = {},
    stopping = false,
}


local familyGzInfo = {
    state = false,
    last = nil,
    current_value = 0,
    temporaryList = {},
    fullList = {},
    fullListRezerv = {},
    listStats = {},
}


local userInfo = {}

local bulletSyncOther = {lastId = 0, maxLines = bSettings['maxLineOtherLimit'].v}
for i = 1, bulletSyncOther.maxLines do
	bulletSyncOther[i] = { other = {time = 0, t = {x,y,z}, o = {x,y,z}, type = 0, color = 0, id = -1, colorText = 0}}
end


local bulletSyncMy = {lastId = 0, maxLines = bSettings['maxLineMyLimit'].v}
for i = 1, bulletSyncMy.maxLines do
    bulletSyncMy[i] = { my = {time = 0, t = {x,y,z}, o = {x,y,z}, type = 0, color = 0}}
end

local colorschat = {}

for k,v in pairs(ini.colorchats) do
    colorschat[k] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.colorchats[k])):GetFloat4())
end

local colorsAdmins = {
    ['one'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.adminsChecker.one)):GetFloat4()),
    ['two'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.adminsChecker.two)):GetFloat4()),
    ['three'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.adminsChecker.three)):GetFloat4()),
    ['four'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.adminsChecker.four)):GetFloat4()),
    ['five'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.adminsChecker.five)):GetFloat4()),
    ['six'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.adminsChecker.six)):GetFloat4()),
    ['seven'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.adminsChecker.seven)):GetFloat4()),
    ['eight'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.adminsChecker.eight)):GetFloat4()),
    ['header'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.adminsChecker.header)):GetFloat4()),
    ['normal'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.adminsChecker.normal)):GetFloat4()),
    ['over'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.adminsChecker.over)):GetFloat4()),
    ['afktext'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.adminsChecker.afktext)):GetFloat4()),
    ['afknorma'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.adminsChecker.afknorma)):GetFloat4()),
    ['afkover'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.adminsChecker.afkover)):GetFloat4()),
    ['dash'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.adminsChecker.dash)):GetFloat4()),
    ['recon'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.adminsChecker.recon)):GetFloat4()),
    ['reptext'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.adminsChecker.reptext)):GetFloat4()),
    ['reputation'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.adminsChecker.reputation)):GetFloat4()),
    ['activetext'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.adminsChecker.activetext)):GetFloat4()),
    ['active'] = imgui.ImFloat4(imgui.ImColor(hextorgba(ini.adminsChecker.active)):GetFloat4()),
}


local serverlist = {
    ['185.169.134.3:7777'] = 1,
    ['185.169.134.4:7777'] = 2,
    ['185.169.134.43:7777'] = 3,
    ['185.169.134.44:7777'] = 4,
    ['185.169.134.45:7777'] = 5,
    ['185.169.134.5:7777'] = 6,
    ['185.169.134.59:7777'] = 7,
    ['185.169.134.61:7777'] = 8,
    ['185.169.134.107:7777'] = 9,
    ['185.169.134.109:7777'] = 10,
    ['185.169.134.166:7777'] = 11,
    ['185.169.134.171:7777'] = 12,
    ['185.169.134.172:7777'] = 13,
    ['185.169.134.173:7777'] = 14,
    ['185.169.134.174:7777'] = 15,
    ['80.66.82.191:7777'] = 16,
    ['80.66.82.190:7777'] = 17,
    ['80.66.82.188:7777'] = 18,
    ['80.66.82.168:7777'] = 19,
    ['80.66.82.159:7777'] = 20,
    ['80.66.82.200:7777'] = 21,
    ['80.66.82.144:7777'] = 22,
    ['80.66.82.162:5125'] = 101,
    ['80.66.82.148:5125'] = 102,
    ['80.66.82.136:5125'] = 103,
    ['80.66.82.147:7777'] = 201,
}

servernames = {
    'Phoenix',
    'Tucson',
    'Scottdale',
    'Chandler',
    'Brainburg',
    'Saintrose',
    'Mesa',
    'Red-Rock',
    'Yuma',
    'Surprise',
    'Prescott',
    'Glendale',
    'Kingman',
    'Winslow',
    'Payson', 
    'Gilbert',
    'Show-Low',
    'Casa-Grande',
    'Page',
    'Sun-City',
    'Queen-Creek',
    'Sedona',
    [101] = 'Mobile-1',
    [102] = 'Mobile-2',
    [103] = 'Moobile-3',
    [201] = 'Vice-City',

}

local table_organisations = {u8'Не установлена',u8'Полиция ЛС', u8'РКШД', u8'ФБР', u8'Полиция СФ', u8'Больница ЛС', u8'Правительство', u8"ТСР", u8"Больница СФ", u8"Лицензеры", u8"Радио ЛС", u8"Grove", u8"Vagos", u8"Ballas", u8"Aztecas", u8"Rifa", u8"Русская мафия", u8"Якудза", u8"ЛКН", u8"Варлоки",u8"Армия ЛС", u8"Центральный Банк", u8"Больница ЛВ", u8"Полиция ЛВ", u8"Радио ЛВ", u8"Ночные Волки", u8"Радио СФ", u8"Армия СФ", u8"Тёмное Братство",u8"Страховая компания"}

local icons_amember = {fa.ICON_FA_BELL, fa.ICON_FA_BELL, fa.ICON_FA_USER_SECRET, fa.ICON_FA_BELL, fa.ICON_FA_BRIEFCASE_MEDICAL, fa.ICON_FA_GAVEL, fa.ICON_FA_SMOKING, fa.ICON_FA_BRIEFCASE_MEDICAL, fa.ICON_FA_ID_BADGE, fa.ICON_FA_MICROPHONE, fa.ICON_FA_CANNABIS, fa.ICON_FA_CANNABIS, fa.ICON_FA_CANNABIS, fa.ICON_FA_CANNABIS, fa.ICON_FA_CANNABIS, fa.ICON_FA_JOINT, fa.ICON_FA_JOINT, fa.ICON_FA_JOINT, fa.ICON_FA_MOTORCYCLE, fa.ICON_FA_MEDAL, fa.ICON_FA_MONEY_CHECK, fa.ICON_FA_BRIEFCASE_MEDICAL, fa.ICON_FA_BELL, fa.ICON_FA_MICROPHONE, fa.ICON_FA_CANNABIS, fa.ICON_FA_MICROPHONE, fa.ICON_FA_MEDAL, fa.ICON_FA_USER_SECRET, fa.ICON_FA_CAR}
local table_themes = {u8'Фиолетовая',u8'Темно-зелёная',u8'Светло-розовая',u8'Темно-красная',u8'Красная',u8'Серая',u8'Синяя',u8"Черная", u8"Белая зелень", u8'Пользовательская'}

local window_auth = imgui.ImBool(false)
local wich_window = imgui.ImInt(0)
local wich_chat_window = imgui.ImInt(0)



local newBindSettings = {
    ['name'] = imgui.ImBuffer("",256),
    ['context'] = imgui.ImBuffer("",10000),
    ['command'] = imgui.ImBuffer("",40),
    ['type'] = imgui.ImInt(1),
    ['hotkey'] = {v = {}},
}

findNotices = {
    ['isFinding'] = true,
    ['find'] = imgui.ImBuffer("",1000)
}

tableEventMenuCreate = {}
eventMenuStart = {
    ['all'] = false,
    ['name'] = true,
    ['setName'] = false,
    ['rules'] = false,
    ['wichSetRule'] = 0,
    ['wichMP'] = 1,
    ['setTypePosition'] = false,
    ['spawns'] = false,
    
    ['setPositionSpawns'] = false,
    ['typeTeleportSpawns'] = false,
    ['wichTeleport'] = 0,
    
    ['messageEvent'] = false,
    ['limitPlayers'] = false,
    ['timeExpires'] = false,
    ['password'] = false,
    ['hp'] = false,
    ['armour'] = false,
    ['skin'] = false,

    ['giveGun'] = false,
    ['givePatroons'] = false,

    ['takeAfter'] = false,
    ['repeat_tp'] = false,

    ['startMP'] = false,
}

eventMenuInfo = {
    ['radius'] = imgui.ImInt(100),
    ['gun'] = imgui.ImInt(0),
    ['ammo'] = imgui.ImInt(500),
    ['skins'] = imgui.ImInt(101),
    ['start'] = os.time(),
    ['winner'] = imgui.ImInt(0),
    
}


objectsCreator = {
    ['nameIs'] = imgui.ImBuffer("",256),
    ['isWorking'] = false,
    ['startPosCreate'] = imgui.ImBool(false),
    ['startPosCoordinates'] = {0,0,0,0},
    ['objects'] = {}
}

noticeAdminCreator = {
    ['nick'] = "Undefined",
    ['notice'] = imgui.ImBuffer("|| ",256),
    ['showNotice'] = imgui.ImBool(true),
    ['colorNotice'] = imgui.ImFloat4(imgui.ImColor(hextorgba("FFFFFFFF")):GetFloat4()),
}

table_typePositions = {
    [0] = "на одну позицию",
    [1] = "рандомные позиции",
    [2] = "по порядку"
}

table_TypesBind = {
    "Отправлять сразу",
    "Открывать чат и вставлять"
}

local is_running_bind = false

local fa_font = nil
local fa_font_notf = nil 
local fa_glyph_ranges = imgui.ImGlyphRanges({ fa.min_range, fa.max_range })

local title = u8'Войти'
local titleauth = u8'Авторизация'
local errormsg = ''
errorPchat = ''
errorEPChat = ''
local show_authpass = imgui.ImBool(false)
local show_pass = imgui.ImBool(false)
local show_apass = imgui.ImBool(false)
local flagpass, flagapass = imgui.InputTextFlags.Password, imgui.InputTextFlags.Password
local islogined = false
local isShowedApanel = false
local ignorePlPos = false
local stop_spcarall = false
local waiting_spcarall = false
status_clear = false

local timer_freeze = os.time()
local waiting_freeze = false
local flag = imgui.InputTextFlags.Password
local firstauth = false
goAuth = false
isPermission = false
local startquest = false
startGPS = false
headerGPS = ""
nowGPS = 1
countGPSALL = 0
vlozehniuNow = -1
vlozehniuALL = 0
waitingVLOZEHNIU = false
waitingGPS = false
timeStartGPS = 0
local checkorginfo = false
local nowquest = 0

local floodRegExpansion = {
    "^(.+)%[(%d+)%] кричит: (.+)!!$",
    "^(.+)%[(%d+)%] говорит:%{......%} (.+)",
    "^%(%(%s*[Администратор]*%s*(.+)%[(%d+)%]: %{......%}(.+)%{......%}",
    "^%[R%]%s*[Администратор]*%s*(.+)%[(%d+)%]:%s*%(%( (.+) %)%)",
    "^%[R%]%s*[Администратор]*%s*(.+)%[(%d+)%]: (.+)",
    "^%[F%]%s*[Администратор]*%s*(.+)%[(%d+)%]:%s*%(%( (.+) %)%)",
    "^%[F%]%s*[Администратор]*%s*(.+)%[(%d+)%]: (.+)",
    "^%{......%}%[.+%]%{......%} (.+)%[(%d+)%]: (.+)"
}

-------------------------------------------------------------------


function number_week(offsetTime)
    local current_time = os.date('*t', os.time() + offsetTime)
    local start_year = os.time{ year = current_time.year, day = 1, month = 1 }
    local week_day = ( os.date('%w', start_year) - 1 ) % 7
    return math.ceil((current_time.yday + week_day) / 7)
end


function get_weekday(offsetTime)
    local current_time = os.date('*t', os.time() + offsetTime)
    local replaceTable = {
        [1] = 7,
        [2] = 1,
        [3] = 2,
        [4] = 3,
        [5] = 4,
        [6] = 5,
        [7] = 6,
    }
    return replaceTable[current_time.wday]
end


putObjectsSet = {
    ['waiting'] = false,
    ['waitingAnim'] = false,
    ['object'] = -1,
}

imgTextures = {
    ['vehs'] = {},
    ['weps'] = {},
    ['skins'] = {},
    ['reasonKills'] = {},
    ['objects'] = {},
}

for i = 400, 611 do
    imgTextures['vehs'][#imgTextures['vehs'] + 1] = imgui.CreateTextureFromFile("moonloader/resource/RoboScripts/RoboTools/veh/Vehicle_"..i..".jpg")
end

for i = 1, 18 do 
    if i ~= 4 then
        imgTextures['weps'][#imgTextures['weps'] + 1] = {imgui.CreateTextureFromFile("moonloader/resource/RoboScripts/RoboTools/guns/wep_"..i..".png"), i}
    end
end
  
for i = 1, 452 do
    imgTextures['skins'][#imgTextures['skins'] + 1] = imgui.CreateTextureFromFile("moonloader/resource/RoboScripts/RoboTools/skins/"..i..".png")
end

for i = 22, 46 do 
    imgTextures['weps'][#imgTextures['weps'] + 1] = {imgui.CreateTextureFromFile("moonloader/resource/RoboScripts/RoboTools/guns/wep_"..i..".png"), i}
end

for i = 1, 56 do 
    imgTextures['objects'][#imgTextures['objects'] + 1] = {imgui.CreateTextureFromFile("moonloader/resource/RoboScripts/RoboTools/objects/"..i..".jpg"), i}
end

for k,v in pairs(killListPairs) do 
    imgTextures['reasonKills'][v] = renderLoadTextureFromFile("moonloader\\resource\\RoboScripts\\RoboTools\\KillList\\reason_" .. v .. ".png")
end


local colorsListFloat = {}
for k,v in pairs(reportColorList) do
    local color = v .. 'FF'
    local r, g, b, a = imgui.ImColor(hextorgba(color)):GetFloat4()
    colorsListFloat[k] = {r = r, g = g, b = b, a = a}
end

local ghettoChose = {}
local ghettoList = {
    0,0,0,0,0,0
}
for i = 1, 130 do
    ghettoChose[i] = false
end

local isPlayerAfk = false
local playerAfkLastTime = os.time() - 3

function main()
    while not isSampAvailable() do wait(0) end
    if not isSampfuncsLoaded() then return end
    initializeRender()
    isInitialized = true
    -------------------------------------------------------------------------
    result,idplayer = sampGetPlayerIdByCharHandle(PLAYER_PED)
    nickplayerbyid = sampGetPlayerNickname(idplayer)
    ip, port = sampGetCurrentServerAddress()
    writeMemory(sampGetBase() + 0x2D3C45, 2, 0, true) -- fastcnnect
    themes_functions = {violet_theme,darkgreentheme,glamourPink,black_red,red_theme,gray_theme,blue_theme,elegant_black, green_white, user_theme}
    
    local fixCursorMode = false

    ini.main.showUpdate = false
    save()
    --autoupdate("https://api.robo-tools.online/update.json", '['..thisScript().name..']: ', "https://robo-tools.online/", true, false)
    
    kill = ffi.cast('struct stKillInfo*', sampGetKillInfoPtr())
    update_cheats()
    fonts = {
        ['whcar'] = renderCreateFont(cheats['cwhfname'].v, cheats['cwhfsize'].v, cheats['cwhfflag'].v),
        ['btracer'] = renderCreateFont("Arial", 10, 1),
        ['achecker'] = renderCreateFont(checkersSettings['admins']['fname'].v, checkersSettings['admins']['fsize'].v, checkersSettings['admins']['fflag'].v),
        ['lchecker'] = renderCreateFont(checkersSettings['leaders']['fname'].v, checkersSettings['leaders']['fsize'].v, checkersSettings['leaders']['fflag'].v),
        ['fchecker'] = renderCreateFont(checkersSettings['friends']['fname'].v, checkersSettings['friends']['fsize'].v, checkersSettings['friends']['fflag'].v),
        ['jetpack'] = renderCreateFont(cheats['fnameJP'].v, cheats['fsizeJP'].v, cheats['fflagJP'].v),
        ['airbrake'] = renderCreateFont(cheats['fnameARB'].v, cheats['fsizeARB'].v, cheats['fflagARB'].v),
        ['killlist'] = renderCreateFont(cheats['fnameKL'].v, cheats['fsizeKL'].v, cheats['fflagKL'].v),
        ['longChat'] = renderCreateFont(longChatSettings['fname'].v, longChatSettings['fsize'].v, longChatSettings['fflag'].v),
        ['joinExit'] = renderCreateFont(logJoinExit['fname'].v, logJoinExit['fsize'].v, logJoinExit['fflag'].v),
        ['near'] = renderCreateFont(checkersSettings['stream']['fName'].v, checkersSettings['stream']['fsize'].v, checkersSettings['stream']['fflag'].v)
    }

    fontsPChats = {}
    buffersPChats = {}
    for k,v in pairs(pChatsTableImgui) do
        fontsPChats[v['name'].v] = renderCreateFont(v['fname'].v, v['fsize'].v, v['fflag'].v)
        buffersPChats[v['name'].v] = {}
    end




    hotkeys_names_functions = {
        ['main'] = {
            {'Открыть /'.. command.v,function() if not reportInfo['state'].v and not sampIsChatInputActive() and not isPauseMenuActive() and not isGamePaused() then cmd_openmenu() end end},
            {'Открыть /'.. mainini['rslap'].v,function() if hotKeyChecks() then sampSetChatInputAndEnable('/'.. mainini['rslap'].v .. ' ') end end},
            {"Открыть /".. mainini['rkick'].v,function() if hotKeyChecks() then sampSetChatInputAndEnable('/'.. mainini['rkick'].v .. ' ') end end},
            {"Открыть /".. mainini['rpm'].v, function() if hotKeyChecks() then sampSetChatInputAndEnable('/'.. mainini['rpm'].v .. ' ') end end},
            {"Открыть /".. mainini['abot'].v, function() if hotKeyChecks() then sampSetChatInputAndEnable('/'.. mainini['abot'].v .. ' ') end end},
            {"Открыть /".. mainini['hgps'].v,function() if hotKeyChecks() then cmd_open_hgps() end end},
            {"Открыть /".. mainini['hgps'].v,function() if hotKeyChecks() then cmd_open_hclr() end end},
            {"Открыть /".. mainini['hcmd'].v,function() if hotKeyChecks() then cmd_open_hcmd() end end},
            {"Открыть /".. mainini['tp'].v, function() if hotKeyChecks() then cmd_open_tp('') end end},
            {"Открыть /".. mainini['veh'].v, function() if hotKeyChecks() then sampSetChatInputAndEnable('/'.. mainini['veh'].v .. ' ') end end},
            {"Открыть /".. mainini['rveh'].v, function() if hotKeyChecks() then sampSetChatInputAndEnable('/'.. mainini['rveh'].v .. ' ') end end},
            {"Открыть /".. mainini['gun'].v, function() if hotKeyChecks() then sampSetChatInputAndEnable('/'.. mainini['gun'].v .. ' ') end end},
            {"Открыть /".. mainini['rgun'].v, function() if hotKeyChecks() then sampSetChatInputAndEnable('/'.. mainini['rgun'].v .. ' ') end end},
            {"Открыть /".. mainini['skin'].v, function() if hotKeyChecks() then sampSetChatInputAndEnable('/'.. mainini['skin'].v .. ' ') end end},
            {"Открыть /".. mainini['rskin'].v, function() if hotKeyChecks() then sampSetChatInputAndEnable('/'.. mainini['rskin'].v .. ' ') end end},
            {"Открыть /".. mainini['amember'].v, function() if hotKeyChecks() then cmd_open_amember('') end end},
            {"Открыть /".. mainini['calc'].v, function() if hotKeyChecks() then cmd_open_calc() end end},
            {"Починить машину", function() if hotKeyChecks() then cmd_open_arepcar() end end},
            {"Выдать JetPack", function() if hotKeyChecks() then sampSendChat('/jp') end end},
            {"Открыть окно getip", function() if hotKeyChecks() then cmd_open_ip() end end},
            {"Чекер админов", function() if hotKeyChecks() and not sampIsChatInputActive() then checkersSettings['admins']['state'].v = not checkersSettings['admins']['state'].v ini.adminsChecker.state = checkersSettings['admins']['state'].v save() if checkersSettings['admins']['state'].v then printStringNow('ACHECKER ON', 1000) else printStringNow('ACHECKER OFF', 1000) end end end},
            {"Чекер лидеров", function() if hotKeyChecks() and not sampIsChatInputActive() then checkersSettings['leaders']['state'].v = not checkersSettings['leaders']['state'].v ini.leadersChecker.state = checkersSettings['leaders']['state'].v save() if checkersSettings['leaders']['state'].v then printStringNow('LCHECKER ON', 1000) else printStringNow('LCHECKER OFF', 1000) end end end},
            {"Чекер друзей", function() if hotKeyChecks() and not sampIsChatInputActive() then checkersSettings['friends']['state'].v = not checkersSettings['friends']['state'].v ini.friendChecker.state = checkersSettings['friends']['state'].v save() if checkersSettings['friends']['state'].v then printStringNow('FCHECKER ON', 1000) else printStringNow('FCHECKER OFF', 1000) end end end},
            {"Дальний чат", function() if hotKeyChecks() and not sampIsChatInputActive() then longChatSettings['show'].v = not longChatSettings['show'].v ini.long_chat.show = longChatSettings['show'].v save() if longChatSettings['show'].v then printStringNow('LCHAT ON', 1000) else printStringNow('LCHAT OFF', 1000) end end end},
            {"Чат входов", function() if hotKeyChecks() and not sampIsChatInputActive() then logJoinExit['show'].v = not logJoinExit['show'].v ini.joinExit.show = logJoinExit['show'].v save() if logJoinExit['show'].v then printStringNow('RCHAT ON', 1000) else printStringNow('RCHAT OFF', 1000) end end end},
        },

        ['cheats'] = {
            {"Вкл/Выкл WH",function() if hotKeyChecks() and not sampIsChatInputActive() then cheats['wallhack'].v = not cheats['wallhack'].v ini.cheats.wallhack = cheats['wallhack'].v save() updateWallHack() if cheats['wallhack'].v then printStringNow('WH ON', 1000) else printStringNow('WH OFF', 1000) end end end},
            --{"Вкл/Выкл NameTag",function() if not sampIsChatInputActive() then cheats['whnick'].v = not cheats['whnick'].v ini.cheats.whnick = cheats['whnick'].v save() updateWallHack() if cheats['whnick'].v then printStringNow('WH NICK ON', 1000) else printStringNow('WH NICK OFF', 1000) end end end},
            --{"Вкл/Выкл кости",function() if not sampIsChatInputActive() then cheats['whskeletal'].v = not cheats['whskeletal'].v ini.cheats.whskeletal = cheats['whskeletal'].v updateWallHack() save() if cheats['whskeletal'].v then printStringNow('WH BONES ON', 1000) else printStringNow('WH BONES OFF', 1000) end end end},
            --{"Вкл/Выкл линии",function() if not sampIsChatInputActive() then cheats['whlines'].v = not cheats['whlines'].v ini.cheats.whlines = cheats['whlines'].v save() updateWallHack() if cheats['whlines'].v then printStringNow('WH LINES ON', 1000) else printStringNow('WH LINES OFF', 1000) end end end},
            --{"Вкл/Выкл трейсер пуль",function() if not sampIsChatInputActive() then bSettings['btracer'].v = not bSettings['btracer'].v ini.cheats.btracer = bSettings['btracer'].v save() if bSettings['btracer'].v then printStringNow('BULLET TRACER ON', 1000) else printStringNow('BULLET TRACER OFF', 1000) end end end},
            --{"Вкл/Выкл свои трейсера",function() if not sampIsChatInputActive() then bSettings['myBullets'].v = not bSettings['myBullets'].v ini.cheats.myBullets = bSettings['myBullets'].v save() if bSettings['myBullets'].v then printStringNow('YOUR BULLETS ON', 1000) else printStringNow('YOUR BULLETS OFF', 1000) end end end,"Вкл/Выкл отображение ваших трейсеров"},
            --{"Вкл/Выкл окончания линий(с)",function() if not sampIsChatInputActive() then bSettings['EndMy'].v = not bSettings['EndMy'].v ini.cheats.EndMy = bSettings['EndMy'].v save() if bSettings['EndMy'].v then printStringNow('END YOUR LINES ON', 1000) else printStringNow('END YOUR LINES OFF', 1000) end end end},
            --{"Вкл/Выкл ник стрелявшего",function() if not sampIsChatInputActive() then bSettings['showPlayer'].v = not bSettings['showPlayer'].v ini.cheats.showPlayer = bSettings['showPlayer'].v save() if bSettings['showPlayer'].v then printStringNow('SHOW ATTACK PLAYER ON', 1000) else printStringNow('SHOW ATTACK PLAYER OFF', 1000) end end end},
            --{"Вкл/Выкл чужие трейсера",function() if not sampIsChatInputActive() then bSettings['otherBullets'].v = not bSettings['otherBullets'].v ini.cheats.otherBullets = bSettings['otherBullets'].v save() if bSettings['otherBullets'].v then printStringNow('OTHER BULLETS ON', 1000) else printStringNow('OTHER BULLETS OFF', 1000) end end end},
            --{"Вкл/Выкл окончания линий(ч)",function() if not sampIsChatInputActive() then bSettings['EndOther'].v = not bSettings['EndOther'].v ini.cheats.EndOther = bSettings['EndOther'].v save() if bSettings['EndOther'].v then printStringNow('END OTHER BULLETS LINES ON', 1000) else printStringNow('END OTHER BULLETS LINES OFF', 1000) end end end, "Вкл/Выкл отображение чужих трейсеров"},
            {"Вкл/Выкл WH Car",function() if hotKeyChecks() and not sampIsChatInputActive() then cheats['cwallhack'].v = not cheats['cwallhack'].v ini.cheats.cwallhack = cheats['cwallhack'].v save() if cheats['cwallhack'].v then printStringNow('CWH ON', 1000) else printStringNow('CWH OFF', 1000) end end end},
            --{"Вкл/Выкл CarName",function() if not sampIsChatInputActive() then cheats['cwhname'].v = not cheats['cwhname'].v ini.cheats.cwhname = cheats['cwhname'].v save() if cheats['cwhname'].v then printStringNow('CWH NAME ON', 1000) else printStringNow('CWH NAME OFF', 1000) end end end},
            --{"Вкл/Выкл Car ID",function() if not sampIsChatInputActive() then cheats['cwhid'].v = not cheats['cwhid'].v ini.cheats.cwhid = cheats['cwhid'].v save() if cheats['cwhid'].v then printStringNow('CWH ID ON', 1000) else printStringNow('CWH ID OFF', 1000) end end end},
            --{"Вкл/Выкл Car HP",function() if not sampIsChatInputActive() then cheats['cwhhp'].v = not cheats['cwhhp'].v ini.cheats.cwhhp = cheats['cwhhp'].v save() if cheats['cwhhp'].v then printStringNow('CWH HP ON', 1000) else printStringNow('CWH HP OFF', 1000) end end end},
            --{"Вкл/Выкл Car Engine",function() if not sampIsChatInputActive() then cheats['cwhengine'].v = not cheats['cwhengine'].v ini.cheats.cwhengine = cheats['cwhengine'].v save() if cheats['cwhengine'].v then printStringNow('CWH ENGINE ON', 1000) else printStringNow('CWH ENGINE OFF', 1000) end end end},
            --{"Вкл/Выкл Car линии",function() if not sampIsChatInputActive() then cheats['cwhlines'].v = not cheats['cwhlines'].v ini.cheats.cwhlines = cheats['cwhlines'].v save() if cheats['cwhlines'].v then printStringNow('CWH LINES ON', 1000) else printStringNow('CWH LINES OFF', 1000) end end end},
            {"Вкл/Выкл AirBrake",function() if hotKeyChecks() and not sampIsChatInputActive() then local posX, posY, posZ = getCharCoordinates(playerPed) airBrkCoords = {posX, posY, posZ, 0.0, 0.0, getCharHeading(playerPed)} cheats['airbrake'].v = not cheats['airbrake'].v save() if cheats['airbrake'].v then printStringNow('AIRB ON', 1000) else printStringNow('AIRB OFF', 1000) end end end},
            --{"Увеличить скорость ARB",function() if hotKeyChecks() and not sampIsChatInputActive() then cheats['pSpeed'].v = cheats['pSpeed'].v + 0.2 ini.cheats.pSpeed = cheats['pSpeed'].v save() printStringNow('AIRB SPEED UP', 1000) end end},
            --{"Уменьшить скорость ARB",function() if hotKeyChecks() and not sampIsChatInputActive() then cheats['pSpeed'].v = cheats['pSpeed'].v - 0.2 ini.cheats.pSpeed = cheats['pSpeed'].v save() printStringNow('AIRB SPEED DOWN', 1000)  end end},
            {"Вкл/Выкл GM",function() if hotKeyChecks() and not sampIsChatInputActive() then cheats['gm'].v = not cheats['gm'].v ini.cheats.gm = cheats['gm'].v save() if cheats['gm'].v then printStringNow('GODMODE ON', 1000) else printStringNow('GODMODE OFF', 1000) end end end},
            {"Вкл/Выкл noBike",function() if hotKeyChecks() and not sampIsChatInputActive() then cheats['noBike'].v = not cheats['noBike'].v ini.cheats.noBike = cheats['noBike'].v update_cheats() save() if cheats['noBike'].v then printStringNow('NOBIKE ON', 1000) else printStringNow('NOBIKE OFF', 1000) end end end},
            {"Вкл/Выкл FJP",function() if hotKeyChecks() and not sampIsChatInputActive() then cheats['fJetPack'].v = not cheats['fJetPack'].v ini.cheats.fJetPack = cheats['fJetPack'].v save() if cheats['fJetPack'].v then printStringNow('FJP ON', 1000) else printStringNow('FJP OFF', 1000) end end end},
            {"Вкл/Выкл ClickWarp",function() if hotKeyChecks() and not sampIsChatInputActive() then cursorEnabled = not cursorEnabled showCursor(cursorEnabled) end end},
            {"Вкл/Выкл Invisible",function() if hotKeyChecks() and not sampIsChatInputActive() then cheats['invisible'].v = not cheats['invisible'].v ini.cheats.invisible = cheats['invisible'].v save() if cheats['invisible'].v then printStringNow('INVISIBLE ON', 1000) else printStringNow('INVISIBLE OFF', 1000) sampSendSpawn() end end end },
        },

        ['report'] = {
            {"Отправка /ot",function() if hotKeyChecks() and not sampIsChatInputActive() then sampSendChat("/ot") end end},
            {"Вкл/Выкл ловлю",function() if hotKeyChecks() then reportSettings['autoot'].v = not reportSettings['autoot'].v reportInfo['start_time'] = os.time() if reportSettings['autoot'].v then printStringNow('AUTO-REPORT ON', 1000) else printStringNow('AUTO-REPORT OFF', 1000) end end end},
            {"Вкл/Выкл скрытие",function() if hotKeyChecks() then ini.report.hideflood = reportSettings['hideflood'].v save() end end,"Вкл/Выкл скрытие флуда репортом в чат"},
            {"Передать в /a",function() if not windows['main'].v and reportInfo['state'].v and not sampIsChatInputActive() then sendTransmit() end end,"Отправить ответ, который отправляется при нажатии на кнопку [Передать в /a]."},
            {"Спросить в /a",function() if not windows['main'].v and reportInfo['state'].v and not sampIsChatInputActive() then sendQuestion() end end,"Просто пересылает текст репорта в админ чат, без отправления репорта"},
            {"Следить за авт.",function() if not windows['main'].v and reportInfo['state'].v and not sampIsChatInputActive() then sendAuthor() end end,"Отправить ответ, который отправляется при нажатии на кнопку [Помочь автору]"},
            {"Следить за нар.",function() if not windows['main'].v and reportInfo['state'].v and not sampIsChatInputActive() then sendWarner() end end,"Отправить ответ, который отправляется при нажатии на кнопку [Следить за нарушителем]"},
            {"Последний реп.",function() if hotKeyChecks() and not sampIsChatInputActive() then if reportInfo['lastID'].v ~= -1 then sampAddChatMessage('{F6361C}[Последний репорт]{2DF61C} Автор: {FFFFFF}' .. reportInfo['lastNick'].v .. '['..reportInfo['lastID'].v ..']',-1) sampAddChatMessage('{F6361C}[Последний репорт]{2DF61C} Вопрос: {FFFFFF}' .. reportInfo['lastText'].v,-1) sampAddChatMessage('{F6361C}[Последний репорт]{2DF61C} Ваш ответ: {FFFFFF}' .. u8:decode(change_tags(reportInfo['lastAnswer'].v,change)),-1) else sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Вы еще не отвечали на репорт.',-1) end end end},
            {"/pm последнему.",function() if hotKeyChecks() and not sampIsChatInputActive() then if reportInfo['lastID'].v ~= -1 then sampSetChatInputAndEnable('/pm ' .. reportInfo['lastID'].v .. ' 0 ') else sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Вы еще не отвечали на репорт.',-1) end end end, "Открыть чат с /pm ID автора последнего репорта"},
            {"Не нарушает.",function() if hotKeyChecks() and not sampIsChatInputActive() then if reportInfo['lastID'].v ~= -1 then sampSendChat('/pm ' .. reportInfo['lastID'].v .. ' 0 Игрок, на которого вы жаловались - не нарушает.') else sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Вы еще не отвечали на репорт.',-1) end end end, "Отправить /pm автору последнего репорта с сообщением о том, что игрок, на которого он жаловался - не нарушает"},
        },

        ['recon'] = {
            {"Зайти в рекон",function() if hotKeyChecks() and not sampIsChatInputActive() then sampSetChatInputAndEnable('/re ') end end},
            {"Выйти из рекона",function() if hotKeyChecks() and not sampIsChatInputActive() then sampSendChat("/reoff") end end},
            {"ТП к игроку",function() if hotKeyChecks() and not sampIsChatInputActive() then if reconInfo['status'].v then gotof() end end end},
            {"ТП к себе",function() if hotKeyChecks() and not sampIsChatInputActive() then if reconInfo['status'].v then gethere() end end end },
            {"Заспавнить",function() if hotKeyChecks() and not sampIsChatInputActive() then if reconInfo['status'].v then sampSendChat('/spplayer '.. reconInfo['id']) end end end},
            {"ТП в АЗ",function() if hotKeyChecks() and not sampIsChatInputActive() then if reconInfo['status'].v then sampSendChat('/az '.. reconInfo['id']) end end end},
            {"Получить реги",function() if hotKeyChecks() and not sampIsChatInputActive() then if reconInfo['status'].v then sampSendChat('/getip '..reconInfo['id']) end end end},
            {"Проверка песок",function() if hotKeyChecks() and not sampIsChatInputActive() then if reconInfo['status'].v then sampSendChat('/pgetip '..reconInfo['id']) end end end},
            {"Статистика",function() if hotKeyChecks() and not sampIsChatInputActive() then if reconInfo['status'].v then sampSendChat('/check '..reconInfo['id']) end end end},
            {"Вы тут?",function() if hotKeyChecks() and not sampIsChatInputActive() then if reconInfo['status'].v then areuhere() end end end},
            {"Выдать ХП",function() if hotKeyChecks() and not sampIsChatInputActive() then if reconInfo['status'].v then givehp() end end end},
            {"Выдать авто",function() if hotKeyChecks() and not sampIsChatInputActive() then if reconInfo['status'].v then if mainini['adminlvl'].v <= 1 then sampSendChat('/a /plveh '.. reconInfo['id']) else sampSendChat('/plveh '.. reconInfo['id']) end end end end},
            {"Заморозить",function() if hotKeyChecks() and not sampIsChatInputActive() then if reconInfo['status'].v then sampSendChat('/freeze '.. reconInfo['id']) end end end},
            {"Разморозить",function() if hotKeyChecks() and not sampIsChatInputActive() then if reconInfo['status'].v then sampSendChat('/unfreeze '.. reconInfo['id']) end end end},
            {"Флипнуть",function() if hotKeyChecks() and not sampIsChatInputActive() then if reconInfo['status'].v then sampSendChat('/flip '.. reconInfo['id']) end end end},
            {"Скиллы",function() if hotKeyChecks() and not sampIsChatInputActive() then if reconInfo['status'].v then sampSendChat('/checkskills '.. reconInfo['id'] .. " 1") end end end},
            {"Оружие",function() if hotKeyChecks() and not sampIsChatInputActive() then if reconInfo['status'].v then sampSendChat('/iwep '.. reconInfo['id']) end end end},
            {"Заточки",function() if hotKeyChecks() and not sampIsChatInputActive() then if reconInfo['status'].v then sampSendChat('/checkskills '.. reconInfo['id'] .. " 3") end end end},
            {"Обвесы",function() if hotKeyChecks() and not sampIsChatInputActive() then if reconInfo['status'].v then sampSendChat('/checkskills '.. reconInfo['id'] .. " 2") end end end},
            {"Забрать ган",function() if hotKeyChecks() and not sampIsChatInputActive() then if reconInfo['status'].v then sampSendChat('/weap '.. reconInfo['id'] .. ' нарушение правил') end end end},
            {"Ист. нак.",function() if hotKeyChecks() and not sampIsChatInputActive() then if reconInfo['status'].v then sampSendChat('/checkpunish '.. reconInfo['id']) end end end},
            {"Тек. нак.",function() if hotKeyChecks() and not sampIsChatInputActive() then if reconInfo['status'].v then sampSendChat('/getwarn '.. reconInfo['id']) end end end},
            {"ТП к дороге",function() if hotKeyChecks() and not sampIsChatInputActive() then if reconInfo['status'].v then cmd_open_tpr('') end end end},

        }
    }


    local counter_main = 1
    for k,v in pairs(hotkeys_names_functions['main']) do
        if hotkeysTable['main'][counter_main] then
            if #hotkeysTable['main'][counter_main].v > 0 then
                rkeys.registerHotKey(hotkeysTable['main'][counter_main].v, 1, false, v[2])
            end
        end
        counter_main = counter_main + 1
    end

    local counter_cheats = 1
    for k,v in pairs(hotkeys_names_functions['cheats']) do
        if hotkeysTable['cheats'][counter_cheats] then
            if #hotkeysTable['cheats'][counter_cheats].v > 0 then
                rkeys.registerHotKey(hotkeysTable['cheats'][counter_cheats].v, 1, false, v[2])
            end
        end
        counter_cheats = counter_cheats + 1
    end

    local count_report = 1
    for k,v in pairs(hotkeys_names_functions['report']) do
        if hotkeysTable['report'][count_report] then
            if #hotkeysTable['report'][count_report].v > 0 then
                rkeys.registerHotKey(hotkeysTable['report'][count_report].v, 1, false, v[2])
            end
        end
        count_report = count_report + 1
    end


    local count_recon = 1
    for k,v in pairs(hotkeys_names_functions['recon']) do
        if hotkeysTable['recon'][count_recon] then
            if #hotkeysTable['recon'][count_recon].v > 0 then
                rkeys.registerHotKey(hotkeysTable['recon'][count_recon].v, 1, false, v[2])
            end
        end
        count_recon = count_recon + 1
    end

    if #formsHotKey['accept'].v > 0 then
        rkeys.registerHotKey(formsHotKey['accept'].v, 1, false, acceptForm)
    end

    if #formsHotKey['acceptW'].v > 0 then
        rkeys.registerHotKey(formsHotKey['acceptW'].v, 1, false, acceptFormW)
    end

    if #formsHotKey['proofs'].v > 0 then
        rkeys.registerHotKey(formsHotKey['proofs'].v, 1, false, proofsForm)
    end

    if #formsHotKey['disbandW'].v > 0 then
        rkeys.registerHotKey(formsHotKey['disbandW'].v, 1, false, disbandFormW)
    end

    if #formsHotKey['disband'].v > 0 then
        rkeys.registerHotKey(formsHotKey['disband'].v, 1, false, disbandForm)
    end

    change = {
        ['author_id'] = -1,
        ['author_nick'] = 'Nick_Name',
        ['intruder_id'] = -1,
        ['intruder_nick'] = 'Nick_Name',
        ['intruders_ids'] = {},
        ['intruders_nicks'] = {},
        ['my_id'] = idplayer,
        ['my_nick'] = nickplayerbyid,
        ['re_id'] = -1,
        ['re_nick'] = -1,
    }

    memory.write(sampGetBase() + 31102, 0, 1, true) -- ноп ф4

    -- показ радара в реконе
    local isbool, lib = loadDynamicLibrary("samp.dll")
    if isbool then
        if reconSettings['showRadar'].v then
            if SampVersion() == "R3" then
                writeMemory(lib + 661128, 2, 37008, true)
            else
                writeMemory(lib + 643864, 2, 37008, true)
            end
        elseif SampVersion() == "R3" then
            writeMemory(lib + 661128, 2, 3956, true)
        else
            writeMemory(lib + 643864, 2, 3956, true)
        end
    else
        sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Попробуйте повторить попытку, что-то пошло не так.", -1)
    end

    if SampVersion() == "R3" then
		memory.setuint8(sampGetBase() + 439232, 195, true)
	else
		memory.fill(sampGetBase() + 463858, 144, 5, true)
	end

    -------------------------------------------------------------------------
    themes_functions[mainini['theme'].v + 1]()
    
    sampRegisterChatCommand('connectik',function() sampConnectToServer('80.66.82.136',1337) end)
    sampRegisterChatCommand('toolsoff', function() imgui.ShowCursor = false showCursor(false) thisScript():unload() end)
    sampRegisterChatCommand('toolsreload', function() imgui.ShowCursor = false showCursor(false) thisScript():reload() end)
    sampRegisterChatCommand('checkmint',cmd_open_checkmint)
    sampRegisterChatCommand('rec', function() sampConnectToServer(ip,port) end)
    sampRegisterChatCommand('nrp_nicks', cmd_open_nrp_nicks)
    sampRegisterChatCommand('ip_window', cmd_open_ip)
    sampRegisterChatCommand('addchecker', cmd_add_checker)
    sampRegisterChatCommand('pcheck',cmd_open_pcheck)
    sampRegisterChatCommand('putobject',cmd_open_putobject)
    sampRegisterChatCommand("endmp", cmd_open_endmp)
    sampRegisterChatCommand("st", cmd_st)
    sampRegisterChatCommand("sw", cmd_sw)
    sampRegisterChatCommand("rmp", cmd_open_rmp)
    sampRegisterChatCommand('ghetto', cmd_open_ghetto)
    sampRegisterChatCommand('bizmafia', cmd_open_mafias)
    sampRegisterChatCommand('ftp', cmd_open_ftp)
    sampRegisterChatCommand('learn_tools', cmd_open_learn_tools)
    sampRegisterChatCommand('tpm', cmd_open_tpm)
    sampRegisterChatCommand('forms', cmd_open_forms)
    sampRegisterChatCommand('notices', cmd_open_notices)
    sampRegisterChatCommand('clr', cmd_clr)
    sampRegisterChatCommand('near', cmd_open_near)
    sampRegisterChatCommand('nearedit', cmd_open_nearedit)
    sampRegisterChatCommand('famgz', cmd_open_famgz)
    for k,v in pairs(bindsTable) do
        sampRegisterChatCommand(v[2],function(args) if isPermission then worker_binder(args,v[3],v[2],0, v[5]) end end)
        if #v[4].v > 0 then
            rkeys.registerHotKey(v[4].v, 1, false, function() if isPermission and hotKeyChecks() then worker_binder('',v[3],v[2],1, v[5]) end end)
        end
    end

	sampRegisterChatCommand('debug', function() toast('Привет тест,123', 5000, 2) mainini['debug'].v = not mainini['debug'].v ini.main.debug = mainini['debug'].v save() if mainini['debug'].v then sampAddChatMessage('[Debug] Debug logs activated',-1) else sampAddChatMessage('[Debug] Debug logs deactivated',-1) end end)
    sampRegisterChatCommand('spcarall',cmd_open_spcarall)
    sampRegisterChatCommand(u8:decode(command.v),cmd_openmenu)
    sampRegisterChatCommand('admins',function()
        if isPermission and checkersSettings['admins']['state'].v then
            
            local bufferTable = table_merge(checkersInfo['admins']['eight'],checkersInfo['admins']['seven'],checkersInfo['admins']['six'],checkersInfo['admins']['five'],checkersInfo['admins']['four'],checkersInfo['admins']['three'],checkersInfo['admins']['two'],checkersInfo['admins']['one'])
            local colors = {
                ini.adminsChecker.one,
                ini.adminsChecker.two,
                ini.adminsChecker.three,
                ini.adminsChecker.four,
                ini.adminsChecker.five,
                ini.adminsChecker.six,
                ini.adminsChecker.seven,
                ini.adminsChecker.eight,
            }
            sampAddChatMessage("", -1)
            sampAddChatMessage("", -1)
            sampAddChatMessage("", -1)
            sampAddChatMessage('{'..hex8tohex6(ini.adminsChecker.header)..'}Администрация онлайн[' .. checkersInfo['admins']['online'] .. '{'..hex8tohex6(ini.adminsChecker.header)..'} | ' .. checkersInfo['admins']['afk'] .. '{'..hex8tohex6(ini.adminsChecker.header)..'}]',-1)
            
            
            
            
                if #specialsTable > 0 and checkersSettings['admins']['showSpecial'].v then
                        for k,v in pairs(specialsTable) do
                            if sampGetPlayerIdByNickname(v[1]) ~= -1 then
                                
                                local g = table_merge(checkersInfo['admins']['eight'],checkersInfo['admins']['seven'],checkersInfo['admins']['six'],checkersInfo['admins']['five'],checkersInfo['admins']['four'],checkersInfo['admins']['three'],checkersInfo['admins']['two'],checkersInfo['admins']['one'])

                                local finded = false
                                for _,vn in pairs(g) do
                                    if vn['nick'] == v[1] then
                                        finded = true
                                    end
                                end

                                if not finded then
                                    local result_text = ''
                                    local admin_lvl = 9 - tonumber(v[2])
                                    if checkersSettings['admins']['showNick'].v then
                                        result_text = result_text .. '{'..hex8tohex6(colors[admin_lvl]) .. '}' .. v[1]
                                    end
        
                                    if checkersSettings['admins']['showId'].v then
                                        result_text = result_text .. '['..sampGetPlayerIdByNickname(v[1])..']'
                                    end
                                    
                                    if checkersSettings['admins']['showAfk'].v then
                                        result_text = result_text .. '{'.. hex8tohex6(ini.adminsChecker.dash) ..'} -{'..hex8tohex6(ini.adminsChecker.afktext)..'} AFK: {'..hex8tohex6(ini.adminsChecker.afkover)..'}N'
                                    end
                                    

                                    if admin_lvl == 5 and checkersSettings['admins']['five_state'].v then
                                        sampAddChatMessage(result_text,-1)
                                    elseif admin_lvl == 6 and checkersSettings['admins']['six_state'].v then
                                        sampAddChatMessage(result_text,-1)
                                    elseif admin_lvl == 7 and checkersSettings['admins']['seven_state'].v then
                                        sampAddChatMessage(result_text,-1)
                                    elseif admin_lvl == 8 and checkersSettings['admins']['eight_state'].v then
                                        sampAddChatMessage(result_text,-1)
                                    end



                                end

                            end
                        end
                    end
            
            
            
            for k,v in pairs(bufferTable) do
                local text_re = ''
                local result_text = ''
                if checkersSettings['admins']['showNick'].v then
                    result_text = result_text .. '{'..hex8tohex6(colors[tonumber(v['lvl'])]) .. '}' ..  v['nick']
                end

                if checkersSettings['admins']['showId'].v then
                    result_text = result_text .. '['..v['id']..']'
                end
                

                if checkersSettings['admins']['showAfk'].v then
                    if tonumber(v['afk']) > checkersSettings['admins']['dopusk'].v then
                        result_text = result_text .. '{'.. hex8tohex6(ini.adminsChecker.dash) ..'} - {'..hex8tohex6(ini.adminsChecker.afktext)..'}AFK: {'.. hex8tohex6(ini.adminsChecker.afkover) ..'}'..v['afk']
                    else
                        result_text = result_text .. '{'.. hex8tohex6(ini.adminsChecker.dash) ..'} - {'..hex8tohex6(ini.adminsChecker.afktext)..'}AFK: {'.. hex8tohex6(ini.adminsChecker.afknorma) ..'}'..v['afk']
                    end
                end

                if checkersSettings['admins']['showRe'].v then
                    if v['reconer'] ~= nil then
                        if tonumber(v['reconer']) == idplayer then
                            result_text = result_text .. '{'.. hex8tohex6(ini.adminsChecker.dash) ..'} - {'..hex8tohex6(ini.adminsChecker.recon)..'}Watching you'
                        else
                            result_text = result_text .. '{'.. hex8tohex6(ini.adminsChecker.dash) ..'} - {'..hex8tohex6(ini.adminsChecker.recon)..'}Watching '.. v['reconer']
                        end
                    end
                end

                if checkersSettings['admins']['showReputation'].v then
                    result_text = result_text .. '{'.. hex8tohex6(ini.adminsChecker.dash) ..'} - {'..hex8tohex6(ini.adminsChecker.reptext)..'}R: {'..hex8tohex6(ini.adminsChecker.reputation)..'}' .. v['reputation']
                end


                if v['reconer'] then
                    if tonumber(v['reconer']) == idplayer then
                        text_re = '{FFFFFF} - {ff0000}Watching you'
                    else
                        text_re = '{FFFFFF} - {ff0000}Watching ' .. v['reconer'] 
                    end
                end

                if checkersSettings['admins']['showSpecial'].v then
                    if tonumber(v['lvl']) == 5 and checkersSettings['admins']['five_state'].v then
                        sampAddChatMessage(result_text,-1)
                    elseif tonumber(v['lvl']) == 6 and checkersSettings['admins']['six_state'].v then
                        sampAddChatMessage(result_text,-1)
                    elseif tonumber(v['lvl']) == 7 and checkersSettings['admins']['seven_state'].v then
                        sampAddChatMessage(result_text,-1)
                    elseif tonumber(v['lvl']) == 8 and checkersSettings['admins']['eight_state'].v then
                        sampAddChatMessage(result_text,-1)
                    end
                end

                if tonumber(v['lvl']) == 1 and checkersSettings['admins']['one_state'].v then
                    sampAddChatMessage(result_text,-1)
                elseif tonumber(v['lvl']) == 2 and checkersSettings['admins']['two_state'].v then
                    sampAddChatMessage(result_text,-1)
                elseif tonumber(v['lvl']) == 3 and checkersSettings['admins']['three_state'].v then
                    sampAddChatMessage(result_text,-1)
                elseif tonumber(v['lvl']) == 4 and checkersSettings['admins']['four_state'].v then
                    sampAddChatMessage(result_text,-1)
                end


                
            end
        else
            sampSendChat('/admins')
        end
    end)
    sampRegisterChatCommand('thelp',cmd_open_ahelp)
    sampRegisterChatCommand('tpr',cmd_open_tpr)
    sampRegisterChatCommand(u8:decode(mainini['rslap'].v),cmd_open_rslap)
    sampRegisterChatCommand(u8:decode(mainini['rkick'].v),cmd_open_rkick)
    sampRegisterChatCommand(u8:decode(mainini['rpm'].v),cmd_open_rpm)
    sampRegisterChatCommand(u8:decode(mainini['abot'].v),cmd_open_abot)
    sampRegisterChatCommand(u8:decode(mainini['hgps'].v),cmd_open_hgps)
    sampRegisterChatCommand(u8:decode(mainini['hclr'].v),cmd_open_hclr)
    sampRegisterChatCommand(u8:decode(mainini['hlvl'].v),cmd_open_hlvl)
    sampRegisterChatCommand(u8:decode(mainini['hcmd'].v),cmd_open_hcmd)
    sampRegisterChatCommand(u8:decode(mainini['tp'].v),cmd_open_tp)
    sampRegisterChatCommand(u8:decode(mainini['tpcor'].v),cmd_open_tpcor)
    sampRegisterChatCommand(u8:decode(mainini['veh'].v),cmd_open_veh)
    sampRegisterChatCommand(u8:decode(mainini['rveh'].v),cmd_open_rveh)
    sampRegisterChatCommand(u8:decode(mainini['gun'].v),cmd_open_gun)
    sampRegisterChatCommand(u8:decode(mainini['rgun'].v),cmd_open_rgun)
    sampRegisterChatCommand(u8:decode(mainini['skin'].v),cmd_open_skin)
    sampRegisterChatCommand(u8:decode(mainini['rskin'].v),cmd_open_rskin)
    sampRegisterChatCommand(u8:decode(mainini['amember'].v),cmd_open_amember)
    sampRegisterChatCommand(u8:decode(mainini['calc'].v),cmd_open_calc)
    sampRegisterChatCommand(u8:decode(mainini['arepcar'].v),cmd_open_arepcar)

    authacc(auth['token'].v)
    lua_thread.create(control_afk)
    lua_thread.create(sender_admins)
    lua_thread.create(sender_leaders)
    lua_thread.create(wallhack)
    lua_thread.create(wallhackcar)
    lua_thread.create(bullettracer)
    lua_thread.create(render_leaders)
    lua_thread.create(render_longChat)
    lua_thread.create(render_joinExit)
    lua_thread.create(countOnline)
    lua_thread.create(render_admins)
    lua_thread.create(render_friends)
    lua_thread.create(godmode)
    lua_thread.create(airb)
    lua_thread.create(clickwarp)
    lua_thread.create(getfps)
    lua_thread.create(auther)
    lua_thread.create(autherGO)
    lua_thread.create(requestStatistic)
    lua_thread.create(aonlinerequest)
    lua_thread.create(auto_lovlia)
    lua_thread.create(render_near)
    lua_thread.create(updater_players)
    lua_thread.create(checker_apanel)
    lua_thread.create(render_killlist)
    lua_thread.create(aimrender)
    lua_thread.create(function() while true do wait(0) if timeNew then setTimeOfDay(timeNew, 0) end end end)
    --lua_thread.create(starter_tutorial_checker)
    render_pChats()
    lua_thread.create(
        function()
            while true do
                wait(60000)
                saveJson(patches['main-reserv'], ini)
            end
        end)

    lua_thread.create(function()
        while true do
            wait(0)
            if not formsInfoWarnings['isActive'] then
                if formsInfoWarnings['isKeyAccept'] then
                    formsInfoWarnings['isKeyAccept'] = false
                end

                if formsInfoWarnings['isKeyDisband'] then
                    formsInfoWarnings['isKeyDisband'] = false
                end
            end
        end
    end)

    lua_thread.create(
        function()
            while true do
                wait(0)
                for k,v in pairs(floodInfo) do
                    if os.time() - v[4] >= warningsSettings['flood']['seconds'].v then
                        table.remove(floodInfo, k)
                    end
                end

                for k,v in pairs(massDmInfo) do
                    if os.time() - v[3] >= warningsSettings['massDM']['seconds'].v then
                        table.remove(massDmInfo, k)
                    end
                end

                for k,v in pairs(adInfo) do
                    if os.time() - v[4] >= warningsSettings['ad']['seconds'].v then
                        table.remove(adInfo, k)
                    end
                end
            end
        end)
    --[[if sampGetGamestate() ~= 3 then
        antipause(true)
    end]]

    --lua_thread.create(login)
    while true do
        wait(0)
        window = ffi.C.GetActiveWindow()


        if statsSettings ~= nil and statsTable.countdaily.today ~= os.date("%a", os.time() + (statsSettings['update_early'].v * 3600)) then
            
            statsTable.countdaily.today = os.date("%a", os.time() + (statsSettings['update_early'].v * 3600))
            statsTable.countdaily.online_time = 0
            statsTable.countdaily.afk_time = 0
            statsTable.countdaily.reports = 0
            statsTable.countdaily.punishments = 0
            statsTable.countdaily.bans = 0
            statsTable.countdaily.warns = 0
            statsTable.countdaily.mutes = 0
            statsTable.countdaily.kicks = 0
            statsTable.countdaily.jails = 0
            statsTable.countdaily.reputation = 0
            statsTable.countdaily.forms = 0

            count_daily['online_time'].v = 0
            count_daily['afk_time'].v = 0
            count_daily['reports'].v = 0
            count_daily['punishments'].v = 0
            count_daily['bans'].v = 0
            count_daily['warns'].v = 0
            count_daily['mutes'].v = 0
            count_daily['kicks'].v = 0
            count_daily['jails'].v = 0
            count_daily['reputation'].v = 0
            count_daily['forms'].v = 0

            sampAddChatMessage("{2DF61C}[Новый день]{FFFFFF} Вся дневная статистика была обнулена.",-1)
            save()
        end

        if statsSettings ~= nil and statsTable.countweekly.week ~= number_week(statsSettings['update_early'].v * 3600) then
            for i = 1, 7 do
                statsTable.countdaysweek[i] = 0
                count_daysweek[i] = 0
            end
            statsTable.countweekly.week = number_week(statsSettings['update_early'].v * 3600)
            statsTable.countweekly.online_time = 0
            statsTable.countweekly.afk_time = 0
            statsTable.countweekly.forms = 0
            statsTable.countweekly.reports = 0
            statsTable.countweekly.punishments = 0
            statsTable.countweekly.bans = 0
            statsTable.countweekly. warns = 0
            statsTable.countweekly.mutes = 0
            statsTable.countweekly.kicks = 0
            statsTable.countweekly.jails = 0
            statsTable.countweekly.reputation = 0

            count_weekly['online_time'].v = 0
            count_weekly['afk_time'].v = 0
            count_weekly['reports'].v = 0
            count_weekly['punishments'].v = 0
            count_weekly['bans'].v = 0
            count_weekly['warns'].v = 0
            count_weekly['mutes'].v = 0
            count_weekly['kicks'].v = 0
            count_weekly['jails'].v = 0
            count_weekly['reputation'].v = 0
            count_weekly['forms'].v = 0

            save()
            sampAddChatMessage("{2DF61C}[Новая неделя]{FFFFFF} Вся недельная статистика была обнулена.",-1)
        end

        if firstauth then
            imgui.Process = true
        else
            if not window_auth.v then
                imgui.Process = false
            else
                imgui.Process = true
            end
        end

        if sampIsChatInputActive() and reportInfo['state'].v then
            reportInfo['chat_blocker'].v = true
        else
            reportInfo['chat_blocker'].v = false
        end


    
        imgui.ShowCursor = false




        
        if serverlist[ip .. ':' .. port] ~= nil and serverlist[ip .. ':' .. port] ~= mainini['servernumber'].v then
            ini.main.servernumber,mainini['servernumber'].v = serverlist[ip .. ':' .. port], serverlist[ip .. ':' .. port]
            save()
        elseif serverlist[ip .. ':' .. port] == nil then
            for i = 1,10 do
                sampAddChatMessage('ROBO-TOOLS ДОСТУПЕН ТОЛЬКО НА СЕРВЕРАХ ARIZONA RP SAMP',0xFFF6361C)
            end
            thisScript():unload()
        end

        if changePositions['fJetPack'] then
            sampToggleCursor(true)
            ini.cheats.xJP,ini.cheats.yJP = getCursorPos()
            ini.cheats.xJP = ini.cheats.xJP + 3
            ini.cheats.yJP = ini.cheats.yJP + 3
            if isKeyJustPressed(vkeys.VK_LBUTTON) then
                sampToggleCursor(false)
                save()
                imgui.Process = true
                changePositions['fJetPack'] = false
                sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Положение сохранено, все ранее открытые окна были проявлены.",-1)
            end
        end
    end
end


local sampIsPlayerConnectedOrig = sampIsPlayerConnected

function sampIsPlayerConnected(id_player)
    local _, id = sampGetPlayerIdByCharHandle(playerPed)
    if id == tonumber(id_player) then
        return true
    else
        return sampIsPlayerConnectedOrig(id_player)
    end
end


function multiStringSendChat(multiStringText,type, typeSender)
    local sendFunc = function(_text)
        for s in _text:gmatch("[^\n]+") do
            local res = tostring(s):match('wait%((%d+)%)')
            if res then
                wait(tonumber(res))
            else
                if typeSender == 1 then
                    sampSendChat(s)
                else
                    sampSetChatInputEnabled(true)
                    sampSetChatInputText(s)
                end
            end
        end
        is_running_bind = false
    end

    if type == 0 then
        lua_thread.create(sendFunc,multiStringText)
    else
        sendFunc(multiStringText)
    end
end

function use_argument(text,table)
    if not text:match('%{arg%[%d+%]%}') then return text end
    for w in text:gmatch('%{arg%[(%d+)%]%}') do
        local replacer = 'no parametr'
        if table[tonumber(w)] then replacer = tostring(table[tonumber(w)]) end
        text = text:gsub('%{arg%['..w..'%]%}',replacer)
    end
    return text
end

function paint_text(text, regular, table, type)
    if not regular:match("paint%(([A-Za-z %-%d+]+)%)") then
        return text
    end

    for w in text:gmatch("paint%(([A-Za-z %-%d+]+)%)") do
        local replacer = ""
        if type == 0 then
            if table[tostring(w)] then
                replacer = tostring("{" ..hex8tohex6(table[tostring(w)]) .. "}") 
            end
        end
        text = text:gsub("paint%(([A-Za-z %-%d+]+)%)", replacer)
    end
    return text
end


function count_arguments(text)
    local i = 0
    local numbers = {}
    for w in text:gmatch('%{arg%[(%d+)%]%}') do
        if not table_contains(numbers,tonumber(w)) then
            numbers[#numbers + 1] = tonumber(w)
            i = i + 1
        end
    end
    return i
end


function worker_binder(arg,text,cmd,type, typeSender)
    if not is_running_bind then
        is_running_bind = true
        text = tostring(text)
        arg = tostring(arg)
        local args = {}
        if #arg > 0 then
            for s in string.gmatch(arg, "[^%s+]+") do
                args[#args + 1] = s
            end
        end

        if text:match('%{arg%[%d+%]%}') then
            if count_arguments(text) > #args then
                local argwarning = ''
                for i = 1, count_arguments(text) do
                    argwarning = argwarning .. '[Аргумент №'.. i .. '] '
                end
                sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Используйте /'.. cmd .. ' ' .. argwarning,-1)
                is_running_bind = false
                return
            else
                text = use_argument(text, args)
            end
        end

        if (text:match('%{re_id%}') or text:match('%{re_nick%}')) and not reconInfo['status'].v then
            sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Бинд не будет выполнен, т.к вы не следите за игроком.',-1)
            is_running_bind = false
            return
        end

        text = change_tags(text,change)
        multiStringSendChat(text,type, typeSender)
    else
        sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Один из биндов уже выполняется!',-1)
    end
end



function imgui.BeforeDrawFrame()
    if fa_font == nil then
        local font_config = imgui.ImFontConfig() -- to use 'imgui.ImFontConfig.new()' on error
        font_config.MergeMode = true

        fa_font = imgui.GetIO().Fonts:AddFontFromFileTTF('moonloader/resource/fonts/fa-solid-900.ttf', 13.0, font_config, fa_glyph_ranges)
    end

    if fa_font_notf == nil then
        fa_font_notf = imgui.GetIO().Fonts:AddFontFromFileTTF('moonloader/resource/fonts/fa-solid-900.ttf', 20.0, nil, fa_glyph_ranges)
    end

    if fontsSizes['logins'] == nil then
        fontsSizes['logins'] = imgui.GetIO().Fonts:AddFontFromFileTTF(getFolderPath(0x14) .. '\\trebucbd.ttf', 20.0, nil, imgui.GetIO().Fonts:GetGlyphRangesCyrillic()) -- размер шрифта
    end


    if fontsSizes['update'] == nil then
        fontsSizes['update'] = imgui.GetIO().Fonts:AddFontFromFileTTF(getFolderPath(0x14) .. '\\trebucbd.ttf', 23.0, nil, imgui.GetIO().Fonts:GetGlyphRangesCyrillic()) -- размер шрифта
    end

    if fontsSizes['tutorialMain'] == nil then
        fontsSizes['tutorialMain'] = imgui.GetIO().Fonts:AddFontFromFileTTF(getFolderPath(0x14) .. '\\trebucbd.ttf', 15.0, nil, imgui.GetIO().Fonts:GetGlyphRangesCyrillic()) -- размер шрифта
    end
    

    if fontsSizes['mafbizes'] == nil then
        fontsSizes['mafbizes'] = imgui.GetIO().Fonts:AddFontFromFileTTF(getFolderPath(0x14) .. '\\trebucbd.ttf', 20.0, nil, imgui.GetIO().Fonts:GetGlyphRangesCyrillic()) -- размер шрифта
    end

    if textsizeimgui == nil then
        imgui.GetIO().FontGlobalScale = mainini['fontsize'].v
    end

end


function imgui.OnDrawFrame()
    if not isGamePaused() and not isPauseMenuActive() then
        
        auth_window()
        if isPermission then
            --start_window()
            update_window()
            preupdate_window()
            main_window()
            recon_window()
            report_window()
            rslap_window()
            rkick_window()
            rpm_window()
            form_accept_window()
            abot_window()
            hgps_window()
            auto_report_window()
            stats_window()
            hlvl_window()
            hclr_window()
            hcmd_window()
            tp_window()
            veh_window()
            rveh_window()
            gun_window()
            rgun_window()
            ahelp_window()
            skin_window()
            rskin_window()
            amember_window()
            --calc_window()
            mp_window()
            rmp_window()
            mpend_window()
            pcheck_window()
            add_notice_admin()
            draw_toast()

            ghetto_window()
            mafias_window()
            famghetto_window()
            formPunish_window()

            notices_window()
            nearedit_window()
            nrp_nicks_window()
            ip_window()
            putobject_window()
            --piePlayer_window()
        end
    end
end

function nearedit_window()
    if addonWindows['nearedit'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(300, 560), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))

        imgui.Begin(fa.ICON_FA_EDIT .. u8' Настройка чекера в радиусе', addonWindows['nearedit'], imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
            imgui.BeginChild('##nearedit', imgui.ImVec2(285, 525), true)
                if imgui.CustomButtonActivated("", checkersSettings['stream']['show'], imgui.ImVec2(270, 20)) then ini.checker_stream.show = checkersSettings['stream']['show'].v save() end
                imgui.PushItemWidth(270)
                if imgui.DragInt('##inradiuscheck!', checkersSettings['stream']['radius'],0.1,1,999, u8('Радиус поиска: %.0f м')) then ini.checker_stream.radius = checkersSettings['stream']['radius'].v save() end
                imgui.PopItemWidth()
                imgui.Separator()
                    imgui.CenterText("Подбор по уровню")
                imgui.Separator()
                imgui.PushItemWidth(132)
                    if imgui.DragInt('##fromlvl', checkersSettings['stream']['lvlFrom'],0.1,1,999, u8('От: %.0f')) then ini.checker_stream.lvlFrom = checkersSettings['stream']['lvlFrom'].v save() end
                    imgui.SameLine()
                    if imgui.DragInt('##tolvl', checkersSettings['stream']['lvlTo'],0.1,1,999, u8('До: %.0f')) then ini.checker_stream.lvlTo = checkersSettings['stream']['lvlTo'].v save() end
                imgui.PopItemWidth()
                imgui.PushItemWidth(270)
                imgui.Separator()
                if imgui.DragInt('##maxplayers!', checkersSettings['stream']['max'],0.1,1,999, u8('Отображаемые игроки: %.0f шт')) then ini.checker_stream.max = checkersSettings['stream']['max'].v save() end
                imgui.Separator()
                    imgui.CenterText("Настройка шрифта")
                imgui.Separator()

                if imgui.NewInputText('##fname',checkersSettings['stream']['fName'],270,u8'Название шрифта',2) then ini.checker_stream.fName = checkersSettings['stream']['fName'].v save() fonts['near'] = renderCreateFont(checkersSettings['stream']['fName'].v, checkersSettings['stream']['fsize'].v, checkersSettings['stream']['fflag'].v) end
                imgui.HintInputFont()
                if imgui.DragInt('##fsize',checkersSettings['stream']['fsize'], 0.1, 1, 50, u8('Размер шрифта: %.0f')) then ini.checker_stream.fsize = checkersSettings['stream']['fsize'].v save() fonts['near'] = renderCreateFont(checkersSettings['stream']['fName'].v, checkersSettings['stream']['fsize'].v, checkersSettings['stream']['fflag'].v) end
                if imgui.DragInt('##fOffs',checkersSettings['stream']['fOffs'], 0.1, 1, 100, u8('Оффсет шрифта: %.0f')) then ini.checker_stream.fOffs = checkersSettings['stream']['fOffs'].v save() end
                if imgui.DragInt('##fflag',checkersSettings['stream']['fflag'], 0.1, 1, 100, u8('Флаг шрифта: %.0f')) then ini.checker_stream.fflag = checkersSettings['stream']['fflag'].v save() fonts['near'] = renderCreateFont(checkersSettings['stream']['fName'].v, checkersSettings['stream']['fsize'].v, checkersSettings['stream']['fflag'].v) end
                imgui.PopItemWidth()
                if imgui.CustomRadioButton(fa.ICON_FA_ALIGN_LEFT, checkersSettings['stream']['fAlign'], 1, imgui.ImVec2(86.5,20)) then ini.checker_stream.fAlign = checkersSettings['stream']['fAlign'].v save() end
                imgui.Hint(u8"Центрирование текста по левому краю")
                imgui.SameLine()
                
                if imgui.CustomRadioButton(fa.ICON_FA_ALIGN_CENTER, checkersSettings['stream']['fAlign'], 2, imgui.ImVec2(86.5,20)) then ini.checker_stream.fAlign = checkersSettings['stream']['fAlign'].v save() end
                imgui.Hint(u8"Центрирование текста по центру")
                imgui.SameLine()
                if imgui.CustomRadioButton(fa.ICON_FA_ALIGN_RIGHT, checkersSettings['stream']['fAlign'], 3, imgui.ImVec2(86.5,20)) then ini.checker_stream.fAlign = checkersSettings['stream']['fAlign'].v save() end
                imgui.Hint(u8"Центрирование текста по правому краю")
                imgui.Separator()
                    imgui.BeginChild('##inlist', imgui.ImVec2(274, 100), false)
                        if imgui.CustomButtonActivated("Ник", checkersSettings['stream']['showNick'], imgui.ImVec2(270, 20)) then ini.checker_stream.showNick = checkersSettings['stream']['showNick'].v save() end
                        if imgui.CustomButtonActivated("ID", checkersSettings['stream']['showId'], imgui.ImVec2(270, 20)) then ini.checker_stream.showId = checkersSettings['stream']['showId'].v save() end
                        if imgui.CustomButtonActivated("ID(Text)", checkersSettings['stream']['showHeaderID'], imgui.ImVec2(270, 20)) then ini.checker_stream.showHeaderID = checkersSettings['stream']['showHeaderID'].v save() end
                        if imgui.CustomButtonActivated("Разделители", checkersSettings['stream']['showSeparator'], imgui.ImVec2(270, 20)) then ini.checker_stream.showSeparator = checkersSettings['stream']['showSeparator'].v save() end
                        if imgui.CustomButtonActivated("LVL", checkersSettings['stream']['showLVL'], imgui.ImVec2(270, 20)) then ini.checker_stream.showLVL = checkersSettings['stream']['showLVL'].v save() end
                        if imgui.CustomButtonActivated("LVL(Text)", checkersSettings['stream']['showHeaderLVL'], imgui.ImVec2(270, 20)) then ini.checker_stream.showHeaderLVL = checkersSettings['stream']['showHeaderLVL'].v save() end
                        if imgui.CustomButtonActivated("Ping", checkersSettings['stream']['showPing'], imgui.ImVec2(270, 20)) then ini.checker_stream.showPing = checkersSettings['stream']['showPing'].v save() end
                        if imgui.CustomButtonActivated("Ping(Text)", checkersSettings['stream']['showHeaderPing'], imgui.ImVec2(270, 20)) then ini.checker_stream.showHeaderPing = checkersSettings['stream']['showHeaderPing'].v save() end
                        if imgui.CustomButtonActivated("ID авто", checkersSettings['stream']['showCarId'], imgui.ImVec2(270, 20)) then ini.checker_stream.showCarId = checkersSettings['stream']['showCarId'].v save() end
                        if imgui.CustomButtonActivated("ID авто(Text)", checkersSettings['stream']['showHeaderCarId'], imgui.ImVec2(270, 20)) then ini.checker_stream.showHeaderCarId = checkersSettings['stream']['showHeaderCarId'].v save() end
                    imgui.EndChild()
                imgui.Separator()
                    imgui.BeginChild('##inlistcl', imgui.ImVec2(274, 100), false)
                        imgui.PushItemWidth(260)
                            if imgui.ColorEdit4(u8'Ник',checkersSettings['stream']['colorNick'],imgui.ColorEditFlags.AlphaBar) then ini.checker_stream.colorNick = float2hex(checkersSettings['stream']['colorNick']) save() end
                            imgui.Hint(u8"Ник")
                            if imgui.ColorEdit4(u8'ID',checkersSettings['stream']['colorId'],imgui.ColorEditFlags.AlphaBar) then ini.checker_stream.colorId = float2hex(checkersSettings['stream']['colorId']) save() end
                            imgui.Hint(u8"ID")
                            if imgui.ColorEdit4(u8'ID(Text)',checkersSettings['stream']['colorHeaderID'],imgui.ColorEditFlags.AlphaBar) then ini.checker_stream.colorHeaderID = float2hex(checkersSettings['stream']['colorHeaderID']) save() end
                            imgui.Hint(u8"ID(Text)")
                            if imgui.ColorEdit4(u8'Разделители',checkersSettings['stream']['colorSeparator'],imgui.ColorEditFlags.AlphaBar) then ini.checker_stream.colorSeparator = float2hex(checkersSettings['stream']['colorSeparator']) save() end
                            imgui.Hint(u8"Разделители")
                            if imgui.ColorEdit4(u8'LVL',checkersSettings['stream']['colorLVL'],imgui.ColorEditFlags.AlphaBar) then ini.checker_stream.colorLVL = float2hex(checkersSettings['stream']['colorLVL']) save() end
                            imgui.Hint(u8"LVL")
                            if imgui.ColorEdit4(u8'LVL(Text)',checkersSettings['stream']['colorHeaderLVL'],imgui.ColorEditFlags.AlphaBar) then ini.checker_stream.colorHeaderLVL = float2hex(checkersSettings['stream']['colorHeaderLVL']) save() end
                            imgui.Hint(u8"LVL(Text)")
                            if imgui.ColorEdit4(u8'Ping',checkersSettings['stream']['colorPing'],imgui.ColorEditFlags.AlphaBar) then ini.checker_stream.colorPing = float2hex(checkersSettings['stream']['colorPing']) save() end
                            imgui.Hint(u8"Ping")
                            if imgui.ColorEdit4(u8'Ping(Text)',checkersSettings['stream']['colorHeaderPing'],imgui.ColorEditFlags.AlphaBar) then ini.checker_stream.colorHeaderPing = float2hex(checkersSettings['stream']['colorHeaderPing']) save() end
                            imgui.Hint(u8"Ping(Text)")
                            if imgui.ColorEdit4(u8'ID авто',checkersSettings['stream']['colorCarId'],imgui.ColorEditFlags.AlphaBar) then ini.checker_stream.colorCarId = float2hex(checkersSettings['stream']['colorCarId']) save() end
                            imgui.Hint(u8"ID авто")
                            if imgui.ColorEdit4(u8'ID авто(Text)',checkersSettings['stream']['colorHeaderCarId'],imgui.ColorEditFlags.AlphaBar) then ini.checker_stream.colorHeaderCarId = float2hex(checkersSettings['stream']['colorHeaderCarId']) save() end
                            imgui.Hint(u8"ID авто(Text)")
                        imgui.PopItemWidth()
                    imgui.EndChild()
                    imgui.Separator()
                    if imgui.Button(fa.ICON_FA_ARROWS_ALT .. u8' Установить позицию на экране', imgui.ImVec2(270,20)) then moveInterface(checkersSettings['stream']['x'],checkersSettings['stream']['y'],function(x, y) ini.checker_stream.x = x ini.checker_stream.y = y save()  end) end
                imgui.EndChild()
        imgui.End()
    end
end

function add_notice_admin()
    if addonWindows['adminNotice'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(300, 200), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))

        imgui.Begin('##adminnotice', addonWindows['adminNotice'], imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoTitleBar)
            imgui.BeginChild('##noticechild', imgui.ImVec2(285, 184), true)
                imgui.CenterText(noticeAdminCreator['nick'] .. " - Создание заметки")
                imgui.Separator()
                imgui.CustomButtonActivated("", noticeAdminCreator['showNotice'], imgui.ImVec2(270, 20))
                imgui.NewInputText('##namenotice',noticeAdminCreator['notice'],270,u8'Заметка',2)
                imgui.Separator()
                imgui.CenterText("Цвет заметки")
                imgui.Separator()
                imgui.PushItemWidth(270)
                imgui.ColorEdit4(u8'Цвет заметки',noticeAdminCreator['colorNotice'],imgui.ColorEditFlags.AlphaBar)
                imgui.Separator()
                imgui.PopItemWidth()
                if imgui.Button(fa.ICON_FA_CHECK .. u8" Сохранить заметку", imgui.ImVec2(270, 20)) then
                    local isSomethingFind = false
                    for k,v in pairs(adminNoticesTable) do
                        if v['nick'] == noticeAdminCreator['nick'] then
                            isSomethingFind = true
                            adminNoticesTable[k] = {
                                nick = v['nick'],
                                color = float2hex(noticeAdminCreator['colorNotice']),
                                notice = u8:decode(noticeAdminCreator['notice'].v),
                                show = noticeAdminCreator['showNotice'].v 
                            }
                        break
                        end
                    end
                    if not isSomethingFind then
                        local insertingTable = {
                            nick = noticeAdminCreator['nick'],
                            color = float2hex(noticeAdminCreator['colorNotice']),
                            notice = u8:decode(noticeAdminCreator['notice'].v),
                            show = noticeAdminCreator['showNotice'].v 
                        }
                        table.insert(adminNoticesTable, insertingTable)
                    end
                    sampAddChatMessage("{2DF61C}[Информация]{FFFFFF} Заметка для ".. noticeAdminCreator['nick'] .. " успешно сохранена.", -1)
                    addonWindows['adminNotice'].v = false
                    saveJson(patches['noticesA'], adminNoticesTable)
                end
                if imgui.Button(fa.ICON_FA_TIMES .. u8" Закрыть", imgui.ImVec2(270, 20)) then addonWindows['adminNotice'].v = false end
                
            imgui.EndChild()
        imgui.End()
    end
end

function getfps() -- получение FPS с задержкой в обновлении()
    while true do 
        wait(1000)
        fpsValue = math.floor(memory.getfloat(0xB7CB50, true))
    end
end

function getPlayers(radius)
	local peds = getAllChars()
    local playersall = 0
	for _, v in pairs(peds) do
		local result, youid = sampGetPlayerIdByCharHandle(playerPed)
		local mx, my, mz = getCharCoordinates(playerPed)
		local x, y, z = getCharCoordinates(v)
		local distance = getDistanceBetweenCoords3d(mx, my, mz, x, y, z)
    	local result, id = sampGetPlayerIdByCharHandle(v)
    	if result and id ~= sampGetPlayerIdByCharHandle(PLAYER_PED) and distance < tonumber(radius) then
        	if id ~= youid then
        		playersall = playersall + 1
        	end
    	end
	end
    return playersall
end

function mp_window()
    if addonWindows['mp'].v then
        imgui.SetNextWindowSize(imgui.ImVec2(300, 103), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 1.1), ssh / 1.06), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))

        imgui.Begin('##eventinfo', addonWindows['mp'], imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoTitleBar)
            imgui.BeginChild('##ineventinfo', imgui.ImVec2(285, 87), true)
                imgui.TextColored(imgui.ImVec4(1.00, 1.00, 1.00, 0.40), u8"/endmp | /rmp")
                imgui.SameLine()
                imgui.CenterText(u8:decode(eventsTable[eventMenuStart['wichMP']]['name']))
                imgui.Separator()
                imgui.CenterText("Длительность: " .. get_min_clock(os.time() - eventMenuInfo['start']))
                imgui.CenterText("FPS: " ..fpsValue)
                imgui.CenterText("Игроков в зоне рендера:" .. (sampGetPlayerCount(true) - 1))
            imgui.EndChild()
        imgui.End()
    end
end

function rmp_window()
    if addonWindows['rmp'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(300, 345), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 1.1), ssh / 1.7), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))

        imgui.Begin('##eventradius', addonWindows['rmp'], imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoTitleBar)
            imgui.BeginChild('##inevsntinfo', imgui.ImVec2(285, 330), true)
                imgui.CenterText("Игроков в этом радиусе: ".. getPlayers(eventMenuInfo['radius'].v))
                imgui.Separator()
                imgui.PushItemWidth(269)
                imgui.DragInt('##radiusslider', eventMenuInfo['radius'],0.1,1,100, u8('Радиус: %.0f м'))
                imgui.PopItemWidth()
                imgui.Separator()
                if imgui.Button(u8"ХП", imgui.ImVec2(63.1, 20)) then sampSendChat("/hpall " .. eventMenuInfo['radius'].v) end
                imgui.SameLine()
                if imgui.Button(u8"Food", imgui.ImVec2(63.1, 20)) then sampSendChat("/eatall " .. eventMenuInfo['radius'].v) end
                imgui.SameLine()
                if imgui.Button(u8"Armour", imgui.ImVec2(63.1, 20)) then sampSendChat("/armourall " .. eventMenuInfo['radius'].v) end
                imgui.SameLine()
                if imgui.Button(u8"Weap", imgui.ImVec2(63.1, 20)) then sampSendChat("/weapall " .. eventMenuInfo['radius'].v) end
                
                if imgui.Button(u8"Azakon", imgui.ImVec2(63.1, 20)) then sampSendChat("/azakon " .. eventMenuInfo['radius'].v) end
                imgui.SameLine()
                if imgui.Button(u8"UnArm", imgui.ImVec2(63.1, 20)) then sampSendChat("/unarmourall " .. eventMenuInfo['radius'].v) end
                imgui.SameLine()
                if imgui.Button(u8"Repcars", imgui.ImVec2(63.1, 20)) then sampSendChat("/repcars " .. eventMenuInfo['radius'].v) end
                imgui.SameLine()
                if imgui.Button(u8"Spawn", imgui.ImVec2(63.1, 20)) then sampSendChat("/spplayers " .. eventMenuInfo['radius'].v) end

                if imgui.Button(u8'Freeze', imgui.ImVec2(269, 20)) then sampSendChat("/freezeall " .. eventMenuInfo['radius'].v) end
                if imgui.Button(u8'Unfreeze', imgui.ImVec2(269, 20)) then sampSendChat("/unfreezeall " .. eventMenuInfo['radius'].v) end

                imgui.Separator()
                imgui.CenterText("Оружие")
                imgui.Separator()

                imgui.PushItemWidth(240)
                imgui.DragInt('##nicegun',eventMenuInfo['gun'],0.1,0,33,u8("Оружие: %.0f ID"))
                imgui.SameLine()
                imgui.PopItemWidth()
                if imgui.Button(fa.ICON_FA_ANGRY) then imgui.OpenPopup(fa.ICON_FA_ANGRY .. u8' Выбор оружия') end
                imgui.Hint(u8"Кликните, чтобы открыть выбор оружия с картинками")

                if imgui.BeginPopupModal(fa.ICON_FA_ANGRY .. u8' Выбор оружия', imgui.ImBool(true),imgui.WindowFlags.NoResize) then
                    imgui.NewInputText('##infogun',finderTable['mgun'],983,u8'Название оружия',2)
                    imgui.BeginChild('##asdasdsadas', imgui.ImVec2(983, 590), true)
                    local newCounter = 1
                    for k,v in pairs(imgTextures['weps']) do
                        if tGunsName[v[2]]:match(finderTable['mgun'].v) then
                            if imgui.ImageButton(v[1],imgui.ImVec2(sw / 13.1, sh / 11.1)) then eventMenuInfo['gun'].v = v[2] imgui.CloseCurrentPopup() end
                            if newCounter%6 ~= 0 then
                                imgui.SameLine()
                            end
                            newCounter = newCounter + 1
                        end
                    end
                    imgui.EndChild()
                imgui.EndPopup()
                end
                imgui.PushItemWidth(269)
                imgui.DragInt('##sliderpatroonds', eventMenuInfo['ammo'],0.1,1,500, u8('Патроны: %.0f шт'))
                imgui.PopItemWidth()


                if imgui.Button(u8'Выдать', imgui.ImVec2(269, 20)) then
                    if eventMenuInfo['gun'].v ~= 0 then
                        sampSendChat('/gunall ' .. eventMenuInfo['radius'].v .. ' ' .. eventMenuInfo['gun'].v .. ' ' .. eventMenuInfo['ammo'].v)
                    else
                        sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Выберите оружие, чтобы его выдать.',-1)
                    end
                end

                imgui.Separator()
                imgui.CenterText("Скины")
                imgui.Separator()

                imgui.PushItemWidth(240)
                imgui.DragInt('##skinIsD',eventMenuInfo['skins'],0.1,1,568,u8("Скин: %.0f ID"))
                imgui.PopItemWidth()
                imgui.SameLine()
                if imgui.Button(fa.ICON_FA_TSHIRT) then imgui.OpenPopup(fa.ICON_FA_TSHIRT .. u8' Выбор скина') end
                imgui.Hint(u8"Кликните, чтобы открыть выбор скинов с картинками")
                if imgui.BeginPopupModal(fa.ICON_FA_TSHIRT .. u8' Выбор скина', imgui.ImBool(true),imgui.WindowFlags.NoResize) then
                    imgui.BeginChild('##skinchgild', imgui.ImVec2(983, 590), true)
                    local newCounter = 1
                    for k,v in pairs(imgTextures['skins']) do
                        if imgui.ImageButton(v,imgui.ImVec2(83, 151)) then eventMenuInfo['skins'].v = k imgui.CloseCurrentPopup() end
                
                        if k%10 ~= 0 then
                            imgui.SameLine()
                        end
                    end
                    imgui.EndChild()
                imgui.EndPopup()
                end

                if imgui.Button(u8"Выдать##skin", imgui.ImVec2(269,20)) then sampSendChat('/skinall ' .. eventMenuInfo['radius'].v .. ' ' .. eventMenuInfo['skins'].v) end
                

            imgui.EndChild()
        imgui.End()
    end
end

function mpend_window()
    if addonWindows['mpend'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(600, 215), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))

        imgui.Begin('##eventend', addonWindows['mpend'], imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
            imgui.BeginChild('##ineventinііfo', imgui.ImVec2(583, 185), true)
                imgui.CenterText('Завершение мероприятия "'.. u8:decode(eventsTable[eventMenuStart['wichMP']]['name']) .. '"')
            imgui.Separator()
            
            imgui.PushItemWidth(568)
            imgui.DragInt('##idwinner',eventMenuInfo['winner'],0.1,0,999,u8("ID победителя: %.0f"))
            imgui.PopItemWidth()
            imgui.BeginChild('##messageend', imgui.ImVec2(568, 40), true)
                imgui.SetCursorPosY((imgui.GetWindowHeight() / 2) - imgui.GetTextLineHeight() / 2)
                imgui.CenterText('Победитель мероприятия "'.. u8:decode(eventsTable[eventMenuStart['wichMP']]['name']) .. '" - ' .. replacePinId("@"..eventMenuInfo['winner'].v) .. ". Поздравляем!")
            imgui.EndChild()
            if imgui.Button(u8'Завершить мероприятие', imgui.ImVec2(568, 37.5)) then
                if addonWindows['mp'].v then
                    sampSendChat('/ao Победитель мероприятия "'.. u8:decode(eventsTable[eventMenuStart['wichMP']]['name']) .. '" - @'..eventMenuInfo['winner'].v .. ". Поздравляем!") 
                    addonWindows['mp'].v = false 
                    addonWindows['mpend'].v = false
                    addonWindows['rmp'].v = false
                    sampAddChatMessage("{2DF61C}[Event-Menu]{FFFFFF} Мероприятие окончено.", -1)
                    sampAddChatMessage("{2DF61C}[Event-Menu]{FFFFFF} Длительность мероприятия: " .. get_min_clock(os.time() - eventMenuInfo['start']), -1)
                    sampAddChatMessage("{2DF61C}[Event-Menu]{FFFFFF} Победитель мероприятия: " .. replacePinId("@"..eventMenuInfo['winner'].v), -1)
                    sampSendChat("/a [Robo-Tools] Event ended")
                else
                    sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Мероприятие уже закончено.", -1)
                end
            end
            if imgui.Button(u8'Завершить мероприятие без /ao', imgui.ImVec2(568, 37.5)) then
                if addonWindows['mp'].v then
                    addonWindows['mp'].v = false 
                    addonWindows['mpend'].v = false
                    addonWindows['rmp'].v = false
                    sampAddChatMessage("{2DF61C}[Event-Menu]{FFFFFF} Мероприятие окончено.", -1)
                    sampAddChatMessage("{2DF61C}[Event-Menu]{FFFFFF} Длительность мероприятия: " .. get_min_clock(os.time() - eventMenuInfo['start']), -1)
                    sampAddChatMessage("{2DF61C}[Event-Menu]{FFFFFF} Победитель мероприятия: " .. replacePinId("@"..eventMenuInfo['winner'].v), -1)
                    sampSendChat("/a [Robo-Tools] Event ended")
                else
                    sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Мероприятие уже закончено.", -1)
                end
            end
            imgui.EndChild()
        imgui.End()
    end
end

function putobject_window()
    if addonWindows['putobject'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(sw / 1.92, 290), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))

        imgui.Begin(fa.ICON_FA_OBJECT_GROUP .. u8' Установка объектов',addonWindows['putobject'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
        imgui.NewInputText('##infoobjeccrts',finderTable['objects'],983,u8'Название объекта',2)
        imgui.BeginChild('##infmultiobj', imgui.ImVec2(983, 230), true)
        local newCounter = 1
            for k,v in pairs(imgTextures['objects']) do
                if stringToLower(tObjectsName[k]):match(stringToLower(u8:decode(finderTable['objects'].v))) then
                    if imgui.ImageButton(v[1],imgui.ImVec2(sw / 12.8, sh / 10.8)) then
                        putObjectsSet['object'] = k - 1
                        sampSendChat('/putobject')
                    end
                    imgui.Hint(u8(tObjectsName[k]))
                    if newCounter%6 ~= 0 then
                        imgui.SameLine()
                    end
                    newCounter = newCounter + 1
                end
            end
        imgui.EndChild()
        imgui.End()
    end
end

function mafias_window()
    if addonWindows['mafias'].v then 
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(800, 500), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))
        if not mafiaPaintInfo['last'] or os.time() - mafiaPaintInfo['last'] > 60 then
            checkBussinesMafia()
        end

        imgui.Begin(fa.ICON_FA_MOTORCYCLE .. u8' Крышевание бизнесов',addonWindows['mafias'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
            imgui.BeginChild('##alltop', imgui.ImVec2(783, 100), true)
                imgui.BeginChild('##textlefttop', imgui.ImVec2(400, 85), true)
                imgui.PushFont(fontsSizes['mafbizes'])
                imgui.SetCursorPosY(imgui.GetCursorPosY() + 11)
                imgui.CenterText("Выберите несколько бизнесов из списка\nи укажите какой мафии вы хотите их отдать")
                imgui.PopFont()
                imgui.EndChild()

                imgui.SameLine()

                imgui.BeginChild('##textmiddletop', imgui.ImVec2(200, 85), true)
                imgui.CenterText("Бизнесы к выдаче")
                imgui.Separator()

                local mafiaTextChoose = ""
                for k,v in pairs(mafiaPaintInfo['enabledOrDisabled']) do
                    if v.v then
                        if #mafiaTextChoose ~= k then
                            mafiaTextChoose = mafiaTextChoose .. tostring(k) .. ", "
                            
                        else
                            mafiaTextChoose = mafiaTextChoose .. tostring(k)
                        end
                    end
                end
        
                mafiaTextChoose = mafiaTextChoose:gsub(", $",".")
                imgui.TextWrapped(mafiaTextChoose)
                imgui.EndChild()
                
                imgui.SameLine()

                imgui.BeginChild('##textrighttop', imgui.ImVec2(155, 85), true)
                imgui.CenterText("Мафия")
                imgui.Separator()
                imgui.PushItemWidth(140)
                imgui.PushStyleColor(imgui.Col.FrameBg, imgui.ImColor(hextorgba(tMafiaNames[mafiaPaintInfo['voteMafia'].v][3])):GetVec4())
                imgui.SetCursorPosY(imgui.GetCursorPosY() + 3.5)
                imgui.DragInt('##votemaf',mafiaPaintInfo['voteMafia'],0.1,1,4,u8(tMafiaNames[mafiaPaintInfo['voteMafia'].v][1]))
                if imgui.Button(u8"Выдать бизы", imgui.ImVec2(140, 20)) then
                    lua_thread.create(function()
                        for k,v in pairs(mafiaPaintInfo['enabledOrDisabled']) do
                            if v.v then
                                sampSendChat("/setbizmafia " .. k .. " " .. tMafiaNames[mafiaPaintInfo['voteMafia'].v][2])
                                mafiaPaintInfo['enabledOrDisabled'][k].v = false
                            end
                        end
                    end)
                end
                imgui.PopStyleColor()
                imgui.PopItemWidth()
                imgui.EndChild()
            imgui.EndChild()

            imgui.BeginChild('##allbottom', imgui.ImVec2(783, 360), true)
            local widthInWindow = 188
                imgui.CenterText("Список бизнесов")
                imgui.Separator()
                imgui.BeginChild('##RMWINDOW', imgui.ImVec2(widthInWindow, 325), true)
                    imgui.CenterText("Russian Mafia")
                    imgui.Separator()
                    imgui.BeginChild('##RMINWINDOW', imgui.ImVec2(widthInWindow, 290), false, imgui.WindowFlags.AlwaysVerticalScrollbar)
                        if mafiaPaintInfo['last'] == nil then
                            imgui.SpinnerCenter("##spinner_rm", 60, 5, 0xFFff6701, 0)
                        else
                            for k,v in pairs(mafiaPaintInfo['infoBizes']['rm']) do
                                if imgui.ButtonActivated(mafiaPaintInfo['enabledOrDisabled'][v[2]], u8(tostring(v[1]) .. '['..tostring(v[2])..']'), imgui.ImVec2(173, 20)) then
                                    mafiaPaintInfo['enabledOrDisabled'][v[2]].v = not mafiaPaintInfo['enabledOrDisabled'][v[2]].v
                                end
                            end
                        end
                    imgui.EndChild()
                imgui.EndChild()

                imgui.SameLine()

                imgui.BeginChild('##Yakuza', imgui.ImVec2(widthInWindow, 325), true)
                    imgui.CenterText("Yakuza")
                    imgui.Separator()
                    imgui.BeginChild('##YakuzaINWINDOW', imgui.ImVec2(widthInWindow, 290), false)
                        if mafiaPaintInfo['last'] == nil then
                            imgui.SpinnerCenter("##spinner_yak", 60, 5, 0xf44336FF, 0)
                        else
                            for k,v in pairs(mafiaPaintInfo['infoBizes']['yak']) do
                                if imgui.ButtonActivated(mafiaPaintInfo['enabledOrDisabled'][v[2]], u8(tostring(v[1]) .. '['..tostring(v[2])..']'), imgui.ImVec2(173, 20)) then
                                    mafiaPaintInfo['enabledOrDisabled'][v[2]].v = not mafiaPaintInfo['enabledOrDisabled'][v[2]].v
                                end
                            end
                        end
                    imgui.EndChild()
                imgui.EndChild()

                imgui.SameLine()

                imgui.BeginChild('##LCN3WINDOW', imgui.ImVec2(widthInWindow, 325), true)
                    imgui.CenterText("La Cosa Nostra")
                    imgui.Separator()
                    imgui.BeginChild('##LCN3NWINDOW', imgui.ImVec2(widthInWindow, 290), false)
                        if mafiaPaintInfo['last'] == nil then
                            imgui.SpinnerCenter("##spinner_yak", 60, 5, 0xFFb4009e, 0)
                        else
                            for k,v in pairs(mafiaPaintInfo['infoBizes']['lcn']) do
                                if imgui.ButtonActivated(mafiaPaintInfo['enabledOrDisabled'][v[2]], u8(tostring(v[1]) .. '['..tostring(v[2])..']'), imgui.ImVec2(173, 20)) then
                                    mafiaPaintInfo['enabledOrDisabled'][v[2]].v = not mafiaPaintInfo['enabledOrDisabled'][v[2]].v
                                end
                            end
                        end
                    imgui.EndChild()
                imgui.EndChild()

                imgui.SameLine()

                imgui.BeginChild('##Warlock MC', imgui.ImVec2(widthInWindow, 325), true)
                    imgui.CenterText("Warlock MC")
                    imgui.Separator()
                    imgui.BeginChild('##Warlock MCINWINDOW', imgui.ImVec2(widthInWindow, 290), false)
                        if mafiaPaintInfo['last'] == nil then
                            imgui.SpinnerCenter("##spinner_yak", 60, 5, 0xFF1a659a, 0)
                        else
                            for k,v in pairs(mafiaPaintInfo['infoBizes']['wmc']) do
                                if imgui.ButtonActivated(mafiaPaintInfo['enabledOrDisabled'][v[2]], u8(tostring(v[1]) .. '['..tostring(v[2])..']'), imgui.ImVec2(173, 20)) then
                                    mafiaPaintInfo['enabledOrDisabled'][v[2]].v = not mafiaPaintInfo['enabledOrDisabled'][v[2]].v
                                end
                            end
                        end
                    imgui.EndChild()
                imgui.EndChild()
            imgui.EndChild()
        imgui.End()
    end
end

function start_window()
    if addonWindows['startwindow'].v then
        imgui.ShowCursor = true
        if ini.main.toolsLastEtap == 1 then
            imgui.SetNextWindowSize(imgui.ImVec2(500, 200), imgui.Cond.FirstUseEver)
            imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))
            imgui.Begin(fa.ICON_FA_USER_GRADUATE .. u8' Введение в использование скрипта | Начало',true,imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
                imgui.SetCursorPosY(imgui.GetCursorPosY() + 10)
                imgui.PushFont(fontsSizes['tutorialMain'])
                    imgui.CenterText("Приветствуем, кажется вы первый раз запустили скрипт.")
                    imgui.CenterText("Хотите ли вы пройти обучение для того, чтобы разобраться?")
                imgui.PopFont()
                
                imgui.PushStyleColor(imgui.Col.Button, imgui.ImVec4(imgui.ImColor(hextorgba("468a02FF")):GetFloat4()))
                imgui.SetCursorPos(imgui.ImVec2((imgui.GetWindowWidth() / 2) - 150,imgui.GetCursorPosY() + 25))
                if imgui.Button(u8" Да", imgui.ImVec2(100,40)) then
                    ini.main.toolsLastEtap = 2
                    save()
                    sampAddChatMessage("{ec6606}[Обучение]{FFFFFF} Вы начали второй этап обучения.", -1)
                end
                imgui.PopStyleColor()
                imgui.SameLine()
                imgui.PushStyleColor(imgui.Col.Button, imgui.ImVec4(imgui.ImColor(hextorgba("ec6606FF")):GetFloat4()))
                if imgui.Button(u8" Нет, я уже робохомячок", imgui.ImVec2(200,40)) then sampAddChatMessage("{ec6606}[Обучение]{FFFFFF} Рады вас видеть снова, приступайте к работе.", -1) sampAddChatMessage("{ec6606}[Обучение]{FFFFFF} Если захотите пройти обучение снова - введите команду /learn_tools", -1) addonWindows['startwindow'].v = false ini.main.toolsFirstUse = false save() end
                imgui.PopStyleColor()
            imgui.End()
        elseif ini.main.toolsLastEtap == 2 then
            imgui.SetNextWindowSize(imgui.ImVec2(500, 200), imgui.Cond.FirstUseEver)
            imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))
            imgui.Begin(fa.ICON_FA_USER_GRADUATE .. u8' Введение в использование скрипта | Вторая часть',true,imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
                imgui.SetCursorPosY(imgui.GetCursorPosY() + 10)
                imgui.PushFont(fontsSizes['tutorialMain'])
                    imgui.CenterText("Рады, что вы согласились пройти наше обучение. Начнём!")
                    
                    imgui.CenterText("На экране будут появлятся подсказки, при необходимости.")
                    
                imgui.PopFont()

                imgui.PushStyleColor(imgui.Col.Button, imgui.ImVec4(imgui.ImColor(hextorgba("468a02FF")):GetFloat4()))
                imgui.SetCursorPos(imgui.ImVec2((imgui.GetWindowWidth() / 2) - 100,imgui.GetCursorPosY() + 25))
                if imgui.Button(u8" Хорошо, я понял(а)", imgui.ImVec2(200,40)) then
                    ini.main.toolsLastEtap = 3
                    save()
                    sampSetChatInputAndEnable("/thelp")
                end
                imgui.PopStyleColor()
            imgui.End()

        elseif ini.main.toolsLastEtap == 3 then
            imgui.SetNextWindowSize(imgui.ImVec2(500, 200), imgui.Cond.FirstUseEver)
            imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))
            imgui.Begin(fa.ICON_FA_USER_GRADUATE .. u8' Введение в использование скрипта | Вторая часть',true,imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
                imgui.SetCursorPosY(imgui.GetCursorPosY() + 10)
                imgui.PushFont(fontsSizes['tutorialMain'])
                    imgui.CenterText("Для того, чтобы узнать все команды скрипта - введите /thelp")
                imgui.PopFont()

                imgui.PushStyleColor(imgui.Col.Button, imgui.ImVec4(imgui.ImColor(hextorgba("468a02FF")):GetFloat4()))
                imgui.SetCursorPos(imgui.ImVec2((imgui.GetWindowWidth() / 2) - 100,imgui.GetCursorPosY() + 25))
                if imgui.Button(u8" Дальше", imgui.ImVec2(200,40)) then
                    ini.main.toolsLastEtap = 4
                    save()
                end
                imgui.PopStyleColor()
            imgui.End()

        elseif ini.main.toolsLastEtap == 4 then
            imgui.SetNextWindowSize(imgui.ImVec2(500, 200), imgui.Cond.FirstUseEver)
            imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))
            imgui.Begin(fa.ICON_FA_USER_GRADUATE .. u8' Введение в использование скрипта | Третья часть',true,imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
                imgui.SetCursorPosY(imgui.GetCursorPosY() + 10)
                imgui.PushFont(fontsSizes['tutorialMain'])
                    imgui.CenterText("Теперь вы узнали, какие есть команды в скрипте,\nоткройте меню настроек.")
                    imgui.SetCursorPosY(imgui.GetCursorPosY() + 5)
                    imgui.CenterText("{5b5b5b}Я не запомнил, мне нужна подсказка!")
                    imgui.Hint(u8"Для того, чтобы открыть меню настроек - вам нужно посмотреть команду активации в /thelp")
                imgui.PopFont()

            imgui.End()

        elseif ini.main.toolsLastEtap == 5 then
            imgui.SetNextWindowSize(imgui.ImVec2(300, 100), imgui.Cond.FirstUseEver)
            imgui.SetNextWindowPos(imgui.ImVec2((ssw / 1.5), ssh / 6.7), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))
            imgui.Begin(fa.ICON_FA_USER_GRADUATE .. u8' Ознакомление с настройками',true,imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
                imgui.SetCursorPosY(imgui.GetCursorPosY() + 10)
                imgui.PushFont(fontsSizes['tutorialMain'])

                imgui.PopFont()

            imgui.End()
        end
    end
end

function starter_tutorial_checker()
    while addonWindows['startwindow'].v do
        wait(0)
        if ini.main.toolsLastEtap == 4 then

        end
    end
end

function ip_window()
    if addonWindows['ip'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(800,170), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))

        imgui.Begin(fa.ICON_FA_DATABASE .. u8' Проверка IP',addonWindows['ip'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
            imgui.BeginChild('##ipcheck', imgui.ImVec2(783, 135), true)

            imgui.CenterText("{" .. hex8tohex6(ini.colorchats.colorValuesGetip) .. "}"..nick_steal)
            
            imgui.Columns(5, '##tableipcheck')
            imgui.Separator()
            imgui.CenterColumnText(" ")
            imgui.SetColumnWidth(-1, 100)
            imgui.NextColumn()
            imgui.CenterColumnText('{'.. hex8tohex6(ini.colorchats.colorTagsGetip) ..'}' .. u8"IP")
            imgui.SetColumnWidth(-1, 120)
            imgui.NextColumn()
            imgui.CenterColumnText('{'.. hex8tohex6(ini.colorchats.colorTagsGetip) ..'}' .. u8"Страна")
            imgui.SetColumnWidth(-1, 80)
            imgui.NextColumn()
            imgui.CenterColumnText('{'.. hex8tohex6(ini.colorchats.colorTagsGetip) ..'}' .. u8"Город")
            imgui.SetColumnWidth(-1, 120)
            imgui.NextColumn()
            imgui.CenterColumnText('{'.. hex8tohex6(ini.colorchats.colorTagsGetip) ..'}' .. u8"Провайдер")
            imgui.Separator()
            imgui.NextColumn()
            imgui.CenterColumnText('{'.. hex8tohex6(ini.colorchats.colorTextGetip) ..'}' .. u8"Регистрация")
            imgui.NextColumn()
            imgui.CenterColumnText('{'.. hex8tohex6(ini.colorchats.colorValuesGetip) ..'}' .. ipData['reg_steal'])
            imgui.NextColumn()
            imgui.CenterColumnText('{'.. hex8tohex6(ini.colorchats.colorValuesGetip) ..'}' .. ipData['info']['reg']['country'])
            imgui.NextColumn()
            imgui.CenterColumnText('{'.. hex8tohex6(ini.colorchats.colorValuesGetip) ..'}' .. ipData['info']['reg']['city'])
            imgui.NextColumn()
            imgui.CenterColumnText('{'.. hex8tohex6(ini.colorchats.colorValuesGetip) ..'}' .. ipData['info']['reg']['provider'])
            imgui.Separator()
            imgui.NextColumn()
            imgui.CenterColumnText('{'.. hex8tohex6(ini.colorchats.colorTextGetip) ..'}' .. u8"Сейчас")
            imgui.NextColumn()
            imgui.CenterColumnText('{'.. hex8tohex6(ini.colorchats.colorValuesGetip) ..'}' .. ipData['last_steal'])
            imgui.NextColumn()
            imgui.CenterColumnText('{'.. hex8tohex6(ini.colorchats.colorValuesGetip) ..'}' .. ipData['info']['last']['country'])
            imgui.NextColumn()
            imgui.CenterColumnText('{'.. hex8tohex6(ini.colorchats.colorValuesGetip) ..'}' .. ipData['info']['last']['city'])
            imgui.NextColumn()
            imgui.CenterColumnText('{'.. hex8tohex6(ini.colorchats.colorValuesGetip) ..'}' .. ipData['info']['last']['provider'])
            imgui.Columns(1)
            imgui.Separator()
            imgui.CenterText('{'.. hex8tohex6(ini.colorchats.colorTextGetip) .."}Расстояние между IP ~{".. hex8tohex6(ini.colorchats.colorValuesGetip) ..'}' .. ipData['info']['distance'])
            imgui.Separator()
            imgui.EndChild()
        imgui.End()
    end
end

function nrp_nicks_window()
    if addonWindows['nrpnicks'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(966,300), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))

        imgui.Begin(fa.ICON_FA_ELLIPSIS_H .. u8' Non-RP ники',addonWindows['nrpnicks'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
            imgui.BeginChild('##nrpnicks', imgui.ImVec2(950, 265), true)
                imgui.Columns(3,'nrpnamesnicks', true)
                imgui.SetColumnWidth(-1, 200)
                imgui.CenterColumnText(u8"Ник и ID")
                imgui.NextColumn()
                imgui.SetColumnWidth(-1, 60)
                imgui.CenterColumnText(u8"Уровень")
                imgui.NextColumn()
                imgui.CenterColumnText(u8"Действие")
                imgui.Separator()
                imgui.NextColumn()

                for i = 0, sampGetMaxPlayerId() do
                    if sampIsPlayerConnected(i) and sampGetPlayerScore(i) > 0 and (not sampGetPlayerNickname(i):match('^%u%a+_%u%a+$') or sampGetPlayerNickname(i):match('%d+')) then
                        imgui.CenterColumnText(tostring(sampGetPlayerNickname(i)) .. '['.. i ..']')
                        imgui.NextColumn()
                        imgui.CenterColumnText(tostring(sampGetPlayerScore(i)))
                        imgui.NextColumn()

                        if imgui.Button(u8'Следить##'..i, imgui.ImVec2(122.5, 20)) then
                            sampSendChat('/re '.. i)
                        end

                        imgui.SameLine()

                        if imgui.Button(u8'ТП в АЗ##'..i, imgui.ImVec2(100, 20)) then
                            sampSendChat('/az '.. i)
                        end

                        imgui.SameLine()

                        if imgui.Button(u8'ТП##'..i, imgui.ImVec2(60, 20)) then
                            sampSendChat('/goto '.. i)
                        end

                        imgui.SameLine()

                        if imgui.Button(u8'ТП к себе##'..i, imgui.ImVec2(122.5, 20)) then
                            sampSendChat('/gethere '.. i)
                        end

                        imgui.SameLine()

                        if imgui.Button(u8'Предупредить##'..i, imgui.ImVec2(122.5, 20)) then
                            sampSendChat('/pm ' .. i .. ' 1 Смените имя | Используйте /mn > смена имени')
                        end

                        imgui.SameLine()

                        if imgui.Button(u8'Наказать##'..i, imgui.ImVec2(122.5, 20)) then
                            imgui.OpenPopup(u8'Выдача наказания для ' .. sampGetPlayerNickname(i) .. '['.. i ..']')
                            globalReprimand = imgui.ImBuffer("",256)
                        end
                        
                        imgui.NextColumn()
                        if imgui.BeginPopupModal(u8'Выдача наказания для ' .. sampGetPlayerNickname(i) .. '['.. i ..']', imgui.ImBool(true), imgui.WindowFlags.NoResize) then
                            imgui.NewInputText("##manchik", globalReprimand, 1920 / 7.4, u8"Наказание", 2)
                            if imgui.Button(fa.ICON_FA_EXCLAMATION_CIRCLE .. u8' Отправить в чат', imgui.ImVec2(1920 / 7.4, 20)) then
                                sampSendChat(globalReprimand)
                            end
                        imgui.EndPopup()
                        end
                    end
                end
            imgui.EndChild()
        imgui.End()
    end
end

function piePlayer_window()
    imgui.ShowCursor = true
    imgui.SetNextWindowSize(imgui.ImVec2(800, 800), imgui.Cond.FirstUseEver)
    imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))

    imgui.Begin('##piemenuplayer',imgui.ImBool(true),imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoTitleBar)
        if pieOpened then imgui.OpenPopup('PieMenu') pieOpened = false end
        if pie.BeginPiePopup('PieMenu') then
            if pie.PieMenuItem('Test1') then end
            if pie.PieMenuItem('Test2') then end
            --if pie.PieMenuItem('Test5') then end
            if pie.PieMenuItem('Test3', false) then end
            if pie.PieMenuItem('Test3', false) then end
            if pie.PieMenuItem('Test3', false) then end
            if pie.PieMenuItem('Test3', false) then end

        pie.EndPiePopup()
        end
    imgui.End()
end

listTags = {
    {".", "Любой символ"},
    {"%a", "Латинская буква"},
    {"%c", "Управляющий символ"},
    {"%d", "Цифра"},
    {"%D", "Любая буква, или символ, кроме цифры"},
    {"%l", "Латинская буква в нижней раскладке"},
    {"%L", "Любая буква, символ, или цифра, кроме латинской буквы в нижней раскладке"},
    {"%p", "Символ пунктуации"},
    {"%s", "Пробел"},
    {"%P", "Любая буква, символ, или цифра, кроме символа пунктуации"},
    {"%S", "Любая буква, символ, или цифра, кроме символа пробела"},
    {"%u", "Латинские буквы в верхней раскладке"},
    {"%U", "Любая буква, символ, или цифра, кроме латинской буквы в верхней раскладке"},
    {"%w", "Любая латинская буква, или цифра"},
    {"%W", "Любой символ, или буква (русская), кроме латинской буквы, или цифры"},
    {"%x", "Шестнадцатеричное число"},
    {"%X", "Любая буква, или символ, кроме цифры, или латинской буквы, используемой в записи шестнадцатеричного числа"},
    {"%z", "Строковые параметры, содержащие символы с кодом 0"},
    {"+", "Модификатор каждого из тэга. Некий множитель тэгов"},
    {"*", "Модификатор каждого из тэга. Символ, который позволяет тулсу понять, что тот или иной тэг может не существовать, а может существовать"},

}


function notices_window()
    if addonWindows['notices'].v then
        local gz = ffi.cast("struct stGangzonePool*", sampGetGangzonePoolPtr())
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(895, 580), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))

        imgui.Begin(fa.ICON_FA_EDIT .. u8' Заметки',addonWindows['notices'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
        imgui.BeginChild('##leftlistnotices', imgui.ImVec2(120, 542), true)
        local nowText = fa.ICON_FA_SEARCH .. u8" Поиск"
        if not findNotices['isFinding'] then nowText = fa.ICON_FA_EDIT .. u8" Редакт" end
        if imgui.Button(nowText, imgui.ImVec2(105, 20)) then
            findNotices['isFinding'] = not findNotices['isFinding']
        end
        imgui.Hint(u8"Нажмите на эту кнопку, чтобы переключить режимы. Если горит поиск - значит ищите то, что вам надо. Если горит редакт - редактируйте то, что вам надо.")
        imgui.Separator()
        imgui.BeginChild('##llistnotices', imgui.ImVec2(120, 470), false)
        for k,v in pairs(noticesTable) do
            if imgui.ButtonActivated(imgui.ImBool((noticeSelected == k)), u8(v['name']), imgui.ImVec2(105, 20)) then noticeSelected = k noticeSelectedData['name'].v = u8(v['name']) noticeSelectedData['context'].v = u8(v['context']) end
        end
        imgui.EndChild()
        imgui.Separator()
        if imgui.Button(fa.ICON_FA_PLUS .. u8' Добавить', imgui.ImVec2(105, 20)) then
            local newTable = {
                name = "Заметка №".. #noticesTable + 1,
                context = "",
            }
            table.insert(noticesTable, newTable)
            saveJson(patches['notices'], noticesTable)
        end
        imgui.EndChild()

        imgui.SameLine()

        imgui.BeginChild('##rightcontextnotices', imgui.ImVec2(752, 542), true)
            if noticesTable[noticeSelected] ~= nil then
                if not findNotices['isFinding'] then
                    imgui.NewInputText('##noticename',noticeSelectedData['name'],736, u8'Название заметки',2)
                else
                    imgui.NewInputText('##find',findNotices['find'],736, fa.ICON_FA_SEARCH .. u8' Поиск',2)
                end
                imgui.Separator()
                if not findNotices['isFinding'] then
                    imgui.InputTextMultiline("##contextnotice",noticeSelectedData['context'],imgui.ImVec2(736,472))
                else
                    imgui.BeginChild('##listtext!', imgui.ImVec2(736, 472), true)
                        for line in noticeSelectedData['context'].v:gmatch("[^\r\n]+") do
                            if stringToLower(u8:decode(line)):match(stringToLower(u8:decode(findNotices['find'].v))) then
                                imgui.TextWrapped(line)
                            end
                        end
                    imgui.EndChild()
                end
                imgui.Separator()
                if imgui.ButtonClickable(not findNotices['isFinding'], fa.ICON_FA_CHECK .. u8' Сохранить изменения', imgui.ImVec2(365.5,20)) then
                    local isExistName = false

                    for k,v in pairs(noticesTable) do
                        if k ~= noticeSelected and stringToLower(u8:decode(noticeSelectedData['name'].v)) == stringToLower(v['name']) then
                            isExistName = true
                            break
                        end
                    end

                    if isExistName then
                        sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Заметка с таким названием уже существует.", -1)
                    else
                        noticesTable[noticeSelected]['name'] = u8:decode(noticeSelectedData['name'].v)
                        noticesTable[noticeSelected]['context'] = u8:decode(noticeSelectedData['context'].v)
                        saveJson(patches['notices'], noticesTable)
                        sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Вы успешно сохранили заметку.", -1)
                    end
                end
                imgui.SameLine()
                if imgui.ButtonClickable(not findNotices['isFinding'], fa.ICON_FA_DUMPSTER .. u8' Удалить заметку', imgui.ImVec2(365.5,20)) then
                    table.remove(noticesTable,noticeSelected)
                    sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Вы успешно удалили заметку.", -1)
                    saveJson(patches['notices'], noticesTable)
                    if noticesTable[noticeSelected] ~= nil then
                        noticeSelectedData['name'].v = u8(noticesTable[noticeSelected]['name']) noticeSelectedData['context'].v = u8(noticesTable[noticeSelected]['context'])
                    else
                        noticeSelected = 0
                    end
                end
            end
        imgui.EndChild()
        imgui.End()
    end
end

function popup_regulars()
    imgui.BeginChild('##regularspravochnik', imgui.ImVec2(500, 300), true)
        imgui.TextWrapped(u8"Регулярные выражения - это некий язык, который осуществляет поиск тех или иных шаблонов в тексте.")
        imgui.Separator()
        imgui.CenterText("Список тэгов")
        imgui.Separator()
        for k,v in pairs(listTags) do
            if imgui.Button(u8(v[1]),imgui.ImVec2(44,20)) then setClipboardText(v[1]) sampAddChatMessage('{2DF61C}[Копирование]{FFFFFF} Выбранный тэг был успешно скопирован в буфер обмена.',-1) end
            imgui.Hint(u8(v[2]))

            if k%10 ~= 0 then
                imgui.SameLine()
            end
        end
        imgui.Separator()
        imgui.CenterText("Текст | Пример")
        imgui.Button(u8"{F345FC}[PREMIUM] {FFFFFF}Dominik_Toretto[77]: ВЫПУСТИТЕ ИЗ ДЕМОРГАНА", imgui.ImVec2(485, 20))
        imgui.Separator()
        imgui.CenterText("Регулярное выражение | Пример")
        if imgui.Button(u8"{......}%[PREMIUM%]%s*{......}.+%[%d+%]: .+",  imgui.ImVec2(485, 20)) then setClipboardText("{......}%[PREMIUM%]%s*{......}.+%[%d+%]: .+") sampAddChatMessage('{2DF61C}[Копирование]{FFFFFF} Выбранный текст был успешно скопирован в буфер обмена.',-1) end

        imgui.TextWrapped(u8"В конечном итоге с помощью данного регулярного выражения можно будет вынести вип чат(премиум) в отдельное окно.")
    imgui.EndChild()
end

function formPunish_window()
    if addonWindows['formPunish'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(895, 605), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))

        imgui.Begin(fa.ICON_FA_PIGGY_BANK .. u8' Выдача наказаний оффлайн',addonWindows['formPunish'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
            imgui.BeginChild('##leftform', imgui.ImVec2(437, 545), false)
                imgui.BeginChild('##inleftformsettings', imgui.ImVec2(437, 80), true)
                imgui.CenterText("Настройка")
                imgui.Separator()
                if imgui.LazyButtonActivated("Автоматический разбан", formPunishSettings['autounban'], imgui.ImVec2(421, 20)) then ini.formPunish.autounban = formPunishSettings['autounban'].v save() end
                imgui.PushItemWidth(421)
                if imgui.DragInt('##kdbetweenforms',formPunishSettings['waitform'],5,0,10000, u8('Задержка между формами: %.0f мс')) then ini.formPunish.waitform = formPunishSettings['waitform'].v save() end
                imgui.PopItemWidth()
                imgui.EndChild()
                imgui.InputTextMultiline('##formcontext',formPunishSettings['formsInput'],imgui.ImVec2(437,460))
                imgui.Hint(u8"Поле для введения форм")
            imgui.EndChild()

            imgui.SameLine()

            imgui.BeginChild('##rightform', imgui.ImVec2(437, 545), false)
                imgui.CenterText("Ошибки принятия форм")
                imgui.Separator()
                imgui.BeginChild('##errorschild', imgui.ImVec2(437, 522), true)
                    imgui.Columns(2, "##columnserrors", true)
                    imgui.CenterColumnText(u8"Форма")
                    imgui.NextColumn()
                    imgui.CenterColumnText(u8"Ошибка")
                    imgui.Separator()
                    imgui.NextColumn()
                        for k,v in pairs(formPunishSettings['errors']) do
                            if #v['error'] ~= 0 then
                                imgui.CenterColumnText(u8(v['line']))
                                imgui.NextColumn()
                                imgui.CenterColumnText(u8(v['error']))
                                imgui.NextColumn()
                            end
                        end
                    imgui.Columns(1)
                imgui.EndChild()
            imgui.EndChild()
            local buttonName = fa.ICON_FA_PLAY .. u8' Начать выдачу'
            if formPunishSettings['isActive'] then buttonName = u8"Выдается" end
            if imgui.Button(buttonName, imgui.ImVec2(879, 20)) then
                formPunishSettings['errors'] = {}
                formPunishSettings['isActive'] = true
                formPunishSettings['formsCount'] = 0
                lua_thread.create(function()
                    for s in formPunishSettings['formsInput'].v:gmatch("[^\n]+") do

                        local isAvailableAmogus = false
                        preCheckFormError = ""
                        for k, v in pairs(accessesForms) do
                            if s:match("^/"..k) then
                                isAvailableAmogus = true
                                if v['typeCheck'] == 'off' then
                                    if v['access'] <= mainini['adminlvl'].v then
                                        if s:match(regularsForms[k]) then
                                            local isChange = s:match('^/unmuteoff (%S+) (.+)')
                                            if isChange and sampIsPlayerConnected(sampGetPlayerIdByNickname(isChange)) then s = "/unmute ".. s:match('^/unmuteoff (.+)') end
                                            formPunishSettings['formAwait'] = true
                                            formPunishSettings['lastFormWait'] = os.time()
                                            preCheckFormError = ""
                                            sampSendChat(u8:decode(s))
                                        else
                                            preCheckFormError = "Ошибка в аргументах"
                                        end
                                    else
                                        preCheckFormError = "Малый уровень админки"
                                    end
                                    break
                                else
                                    preCheckFormError = "Команда не выдается в оффлайне"
                                end
                            end
                        end
                        if not isAvailableAmogus then preCheckFormError = "Такой команды не существует" end
                        formPunishSettings['errors'][#formPunishSettings['errors'] + 1] = {['line'] = u8:decode(s), ['error'] = preCheckFormError} 

                        while formPunishSettings['formAwait'] do
                            wait(0)
                            if os.time() - formPunishSettings['lastFormWait'] > 3 and not (sampIsDialogActive() and sampGetCurrentDialogId() == 91) then
                                formPunishSettings['errors'][#formPunishSettings['errors']]['error'] = "Истекло время ожидания"
                                formPunishSettings['formAwait'] = false
                            end
                        end

                        wait(formPunishSettings['waitform'])
                    end
                    
                    wait(3500)
                    formPunishSettings['isActive'] = false
                    formPunishSettings['formAwait'] = false
                    local unsuccessForms = 0
                    for k,v in pairs(formPunishSettings['errors']) do
                        if #v['error'] ~= 0 then unsuccessForms = unsuccessForms + 1 else formPunishSettings['formsCount'] = formPunishSettings['formsCount'] + 1 end
                    end
                    sampAddChatMessage("{2DF61C}[Формы]{FFFFFF} Выдано {2DF61C}".. formPunishSettings['formsCount'] .. "{FFFFFF} форм. Не выдано: {F6361C}" .. unsuccessForms,-1)
                end)
            end
        imgui.End()
    end
end
function ghetto_window()
    if addonWindows['ghetto'].v then
        local gz = ffi.cast("struct stGangzonePool*", sampGetGangzonePoolPtr())
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(895, 580), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))

        imgui.Begin(fa.ICON_FA_SPRAY_CAN .. u8' Покраска территорий гетто',addonWindows['ghetto'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
        imgui.PushStyleColor(imgui.Col.ChildWindowBg, imgui.ImVec4(0,0,0,0))
        imgui.BeginChild('##leftghetto', imgui.ImVec2(570, 550), false)
            imgui.PushStyleVar(imgui.StyleVar.FrameRounding, 0)
            imgui.PushStyleVar(imgui.StyleVar.ItemSpacing, imgui.ImVec2(2,2))
            ghettoList = {{['count'] = 0},{['count'] = 0},{['count'] = 0},{['count'] = 0},{['count'] = 0},{['count'] = 0}}
            for i = 1, 130 do
                local tableArea = getColorArea(i)
                if tableArea then
                    local r,g,b,a = imgui.ImColor(tableArea['color']):GetFloat4()
                    for k,v in pairs({2569507584,2583651942,2568805329,2581790464,2580283596,2155378856}) do
                        if tableArea['color'] == v then
                            ghettoList[k]['count'] = ghettoList[k]['count'] + 1
                        end
                    end
                    
                    local nameArea = ""
                    if i == 23 or i == 57 or i == 95 or i == 87 or i == 117 or i == 79 then
                        nameArea = fa.ICON_FA_HOTEL
                    elseif i == 8 or i == 106 or i == 116 or i == 85 or i == 65 or i == 112 then
                        nameArea = fa.ICON_FA_SKULL
                    else
                        nameArea = i
                    end
                    
                    if not ghettoChose[i] then
                        a = 0.2
                    end
                    imgui.PushStyleColor(imgui.Col.Button, imgui.ImVec4(r,g,b,a))
                    if imgui.Button(nameArea..'##'..i,imgui.ImVec2(55,40)) then
                        ghettoChose[i] = not ghettoChose[i]
                    end

                    if i == 23 then imgui.Hint(u8"Респа Ballas") end
                    if i == 57 then imgui.Hint(u8"Респа Night Wolves") end
                    if i == 79 then imgui.Hint(u8"Респа Vagos") end
                    if i == 87 then imgui.Hint(u8"Респа Grove") end
                    if i == 95 then imgui.Hint(u8"Респа Rifa") end
                    if i == 117 then imgui.Hint(u8"Респа Aztec") end
                   

                    if i == 8 or i == 106 or i == 116 or i == 85 or i == 65 or i == 112 then
                        imgui.Hint(u8"Притон")
                    end
                    imgui.PopStyleColor(1)
                    if i%10 ~= 0 then imgui.SameLine() end
                end
            end
            imgui.PopStyleVar(2)
        imgui.EndChild()

        imgui.SameLine()

        imgui.BeginChild('##rightchildghetto', imgui.ImVec2(300, 545), true)
        imgui.CenterText("Выбор территорий для покраски")
        imgui.Separator()

        imgui.SetCursorPosY(imgui.GetCursorPosY() + 30)

        imgui.BeginChild("##statsterr", imgui.ImVec2(284,120), false)
        imgui.Separator()
        imgui.CenterText("Статистика территорий")
        imgui.Separator()
        ghettoList[1]['func'] = function() imgui.BufferingBar("buffer_bargrove", 1, imgui.ImVec2((ghettoList[1]['count'] / 130) * 600, 12), 4279272740,4279272740); imgui.Hint("Grove") end
        ghettoList[2]['func'] = function() imgui.BufferingBar("buffer_barrifa", 1, imgui.ImVec2((ghettoList[2]['count'] / 130) * 600, 12), 4288701744,4288701744); imgui.Hint("Rifa") end
        ghettoList[3]['func'] = function() imgui.BufferingBar("buffer_barvagos", 1, imgui.ImVec2((ghettoList[3]['count'] / 130) * 600, 12), 4279215532,4279215532); imgui.Hint("Vagos") end
        ghettoList[4]['func'] = function() imgui.BufferingBar("buffer_baraztec", 1, imgui.ImVec2((ghettoList[4]['count'] / 130) * 600, 12), 4286960665,4286960665); imgui.Hint("Aztec") end
        ghettoList[5]['func'] = function() imgui.BufferingBar("buffer_barballas", 1, imgui.ImVec2((ghettoList[5]['count'] / 130) * 600, 12), 4285672351,4285672351); imgui.Hint("Ballas") end
        ghettoList[6]['func'] = function() imgui.BufferingBar("buffer_barnw", 1, imgui.ImVec2((ghettoList[6]['count'] / 130) * 600, 12), 4282927177,4282927177); imgui.Hint("Night Wolves") end
        
        local ghettoListBuffer = clone(ghettoList)
        table.sort(ghettoListBuffer, function (left, right)
            return left['count'] > right['count']
        end)


        for k,v in pairs(ghettoListBuffer) do
            ghettoListBuffer[k]['func']()
        end

        imgui.EndChild()
        
        local ghettoTextChose = ""
        for k,v in pairs(ghettoChose) do
            if v then
                if #ghettoChose ~= k then
                    ghettoTextChose = ghettoTextChose .. tostring(k) .. ", "
                    
                else
                    ghettoTextChose = ghettoTextChose .. tostring(k)
                end
            end
        end

        ghettoTextChose = ghettoTextChose:gsub(", $",".")
            imgui.BeginChild("##chosedarea", imgui.ImVec2(284,220), false)
            imgui.Separator()
            imgui.CenterText("Выбранные территории")
            imgui.Separator()

            imgui.TextWrapped(tostring(ghettoTextChose))
            imgui.EndChild()

            

            imgui.BeginChild("##ButtonsPaint", imgui.ImVec2(284,130), false)
            imgui.Separator()
            imgui.PushItemWidth(283)
            imgui.PushStyleColor(imgui.Col.FrameBg, imgui.ImColor(tBandNames[voteBand.v][3]):GetVec4())
            imgui.DragInt('##voteband',voteBand,0.1,1,7,u8(tBandNames[voteBand.v][1]))
            imgui.PopStyleColor()
            imgui.PopItemWidth()

            if imgui.Button(fa.ICON_FA_MAP_MARKER_ALT .. u8" Телепортироваться", imgui.ImVec2(283, 48.5)) then
                lua_thread.create(function()
                    for k,v in pairs(ghettoChose) do
                        if v then
                            local tpArea = getColorArea(k)
                            if tpArea then
                                sendClickMap(tpArea['pos'][0] + 30,tpArea['pos'][1] - 30,getGroundZFor3dCoord(tpArea['pos'][0] + 30, tpArea['pos'][1] - 30, 999) + 15)
                                wait(1000)
                            end
                        end
                    end
                end)
            end

            if imgui.Button(fa.ICON_FA_SPRAY_CAN .. u8' Покрасить', imgui.ImVec2(283, 48.5)) then
                lua_thread.create(function()
                    for k,v in pairs(ghettoChose) do
                        if v then
                            local tpArea = getColorArea(k)
                            if tpArea then
                                sendClickMap(tpArea['pos'][0] + 30,tpArea['pos'][1] - 30,getGroundZFor3dCoord(tpArea['pos'][0] + 30, tpArea['pos'][1] - 30, 999) + 15)
                                wait(1000)
                                sampSendChat('/setgangzone ' .. tBandNames[voteBand.v][2])
                                ghettoChose[k] = false
                            end
                        end
                    end
                end)
            end

            imgui.EndChild()
        imgui.EndChild()
        imgui.PopStyleColor(1)
        imgui.End()    
    end
end


function famghetto_window()
    if addonWindows['famgz'].v then
        local gz = ffi.cast("struct stGangzonePool*", sampGetGangzonePoolPtr())
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(900, 709), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.Always,imgui.ImVec2(0.5,0.5))

        imgui.Begin(fa.ICON_FA_SPRAY_CAN .. u8' Покраска территорий семей',addonWindows['famgz'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize + imgui.WindowFlags.AlwaysAutoResize)

        if not familyGzInfo['last'] or os.time() - familyGzInfo['last'] > 25 then
            checkFamilyGangZone()
        end

        imgui.BeginChild('##leftwindow', imgui.ImVec2(880,674),false)

        if familyGzInfo['last'] then
            imgui.BeginChild('##inleftewindow', imgui.ImVec2(845,674), false)
            imgui.PushStyleVar(imgui.StyleVar.FrameRounding, 0)
            imgui.PushStyleVar(imgui.StyleVar.ItemSpacing, imgui.ImVec2(2,2))
            for i = 1, 156 do
                local tableArea = getColorAreaLV(i)
                if tableArea then
                    local textButton = ""
                    local posX = imgui.GetCursorPosX()
                    if familyGzInfo['fullList'][i] and familyGzInfo['fullList'][i]['owner'] then
                        textButton = familyGzInfo['fullList'][i]['owner']
                        imgui.PushStyleColor(imgui.Col.Button, imgui.ImColor(tableArea['color']):GetVec4())
                        if textButton == "Без хозяина" then textButton = "Свободна" end
                        if imgui.Button(u8(textButton)..'##'..i,imgui.ImVec2(68.75,50)) then
                            imgui.OpenPopup(fa.ICON_FA_SPRAY_CAN .. u8' Выбор семьи')
                            voteFamily = imgui.ImInt(1)
                            tpArea = clone(tableArea)
                        end
                        
                        imgui.PopStyleColor()
                    end
                    
                    if i%12 ~= 0 then imgui.SameLine() end
                end
            end
            imgui.PopStyleVar(2)
            imgui.EndChild()
            imgui.SameLine()
            imgui.BeginChild('##opener', imgui.ImVec2(40,674), false)
            local typeOpened = fa.ICON_FA_CHEVRON_RIGHT .. fa.ICON_FA_CHEVRON_RIGHT
            if isOpenedFamGz then typeOpened = fa.ICON_FA_CHEVRON_LEFT .. fa.ICON_FA_CHEVRON_LEFT end
            if imgui.Button(typeOpened, imgui.ImVec2(30,675)) then isOpenedFamGz = not isOpenedFamGz end
            imgui.EndChild()

        else
            imgui.SetCursorPos(imgui.ImVec2((imgui.GetWindowWidth() / 2) - 200, (imgui.GetWindowHeight() / 2) - 200))
            imgui.Spinner('##spinner_waiting', 200, 6, imgui.GetColorU32(imgui.GetStyle().Colors[imgui.Col.ButtonHovered]))
        end
        imgui.EndChild()
        
        if isOpenedFamGz then
            imgui.SameLine()
            imgui.BeginChild('##rightpaint', imgui.ImVec2(300, 674), true)
            imgui.CenterText("Выбор территорий для покраски")
            imgui.Separator()
    
            imgui.SetCursorPosY(imgui.GetCursorPosY() + 30)
    
            imgui.BeginChild("##statsterr", imgui.ImVec2(284,120), false)
            imgui.Separator()
            imgui.CenterText("Статистика территорий")
            imgui.Separator()


 
            imgui.EndChild()
            
            local ghettoTextChose = ""


                imgui.BeginChild("##chosedarea", imgui.ImVec2(284,220), false)
                imgui.Separator()
                imgui.CenterText("Выбранные территории")
                imgui.Separator()
    

                imgui.EndChild()
    
                
    
                imgui.BeginChild("##ButtonsPaint", imgui.ImVec2(284,130), false)
                imgui.Separator()
                imgui.NewInputText('##namefamily',paintFamily,283,u8'Название семьи',2)

                if imgui.Button(fa.ICON_FA_MAP_MARKER_ALT .. u8" Телепортироваться", imgui.ImVec2(283, 48.5)) then
                    lua_thread.create(function()
                        for k,v in pairs(ghettoChose) do
                            if v then
                                local tpArea = getColorArea(k)
                                if tpArea then
                                    sendClickMap(tpArea['pos'][0] + 30,tpArea['pos'][1] - 30,getGroundZFor3dCoord(tpArea['pos'][0] + 30, tpArea['pos'][1] - 30, 999) + 15)
                                    wait(1000)
                                end
                            end
                        end
                    end)
                end
    
                if imgui.Button(fa.ICON_FA_SPRAY_CAN .. u8' Покрасить', imgui.ImVec2(283, 48.5)) then
                    lua_thread.create(function()
                        for k,v in pairs(ghettoChose) do
                            if v then
                                local tpArea = getColorArea(k)
                                if tpArea then
                                    sendClickMap(tpArea['pos'][0] + 30,tpArea['pos'][1] - 30,getGroundZFor3dCoord(tpArea['pos'][0] + 30, tpArea['pos'][1] - 30, 999) + 15)
                                    wait(1000)
                                    sampSendChat('/setgangzone ' .. tBandNames[voteBand.v][2])
                                    ghettoChose[k] = false
                                end
                            end
                        end
                    end)
                end
    
                imgui.EndChild()
            imgui.EndChild()
        end
        imgui.End()    
    end
end


local list = {}
type_colors = {
    --[[INFO]]  [1] = {0.24, 0.55, 0.84, 1},
    --[[OK]]    [2] = {0.14, 0.71, 0.2, 1},
    --[[WARN]]  [3] = {0.93, 0.5, 0, 1},
    --[[ERROR]] [4] = {0.73, 0.01, 0.01, 1},
}

type_icons = {
    --[[INFO]]  [1] = fa.ICON_FA_INFO_CIRCLE,
    --[[OK]]    [2] = fa.ICON_FA_CHECK,
    --[[WARN]]  [3] = fa.ICON_FA_EXCLAMATION_TRIANGLE,
    --[[ERROR]] [4] = fa.ICON_FA_TIMES,
}


function provcheck_window()
    if addonWindows['provcheck'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(sw / 3, sh / 3.6), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))

        imgui.Begin(fa.ICON_FA_ELLIPSIS_H .. u8' Провайдеры игроков',addonWindows['provcheck'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
            
            imgui.ProgressBar(prov_info['current_value'],imgui.ImVec2(sw / 3.07, 25))
            local textButtonStartStop = u8"Проверить [".. sampGetPlayerCount(false) .. u8"] аккаунтов"
            if prov_info['state'] and not prov_info['stopping'] then
                textButtonStartStop = u8"Остановить"
            end

            if prov_info['stopping'] then
                textButtonStartStop = u8"Остановка..."
            end

            if imgui.Button(textButtonStartStop, imgui.ImVec2(sw / 3.07,25)) then
                if not prov_info['state'] then
                    prov_info['suspicions'] = {}
                    prov_info['current_value'] = 0
                    prov_info['state'] = true
                    prov_info['stopping'] = false
                    prov_info['temporary_suspicions'] = {}

                    lua_thread.create(function()
                        for i = 0, sampGetMaxPlayerId() do
                            prov_info['current_value'] = i / sampGetMaxPlayerId()
                            
                            sampSendChat("/getip " .. i)
                            
                            if prov_info['stopping'] then
                                break
                            end
                            wait(300)
                        end
                        wait(200)
                        prov_info['state'] = false
                        if not prov_info['stopping'] then
                            prov_info['current_value'] = 1
                        end
                    end)
                else

                end
            end


            imgui.BeginChild('##listsuspicions', imgui.ImVec2(sw / 3.07, sh / 5.2), true)
            imgui.Columns(2, '##tablepcheck', true)

            imgui.Columns(1)
            imgui.EndChild()
        imgui.End()
    end
end

function pcheck_window()
    if addonWindows['pcheck'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(sw / 3, sh / 3.6), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))

        imgui.Begin(fa.ICON_FA_ELLIPSIS_H .. u8' Мультиаккаунты',addonWindows['pcheck'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
            
            imgui.ProgressBar(pesok_info['current_value'],imgui.ImVec2(sw / 3.07, 25))
            local textButtonStartStop = u8"Проверить [".. sampGetPlayerCount(false) .. u8"] аккаунтов"
            if pesok_info['state'] and not pesok_info['stopping'] then
                textButtonStartStop = u8"Остановить"
            end

            if pesok_info['stopping'] then
                textButtonStartStop = u8"Остановка..."
            end

            if imgui.Button(textButtonStartStop, imgui.ImVec2(sw / 3.07,25)) then
                if not pesok_info['state'] then
                    pesok_info['suspicions'] = {}
                    pesok_info['current_value'] = 0
                    pesok_info['state'] = true
                    pesok_info['stopping'] = false
                    pesok_info['temporary_suspicions'] = {}

                    lua_thread.create(function()
                        for i = 0, sampGetMaxPlayerId() do
                            pesok_info['current_value'] = i / sampGetMaxPlayerId()
                            
                            sampSendChat("/pgetip " .. i)
                            
                            if pesok_info['stopping'] then
                                break
                            end
                            wait(300)
                        end
                        wait(200)
                        pesok_info['state'] = false
                        if not pesok_info['stopping'] then
                            pesok_info['current_value'] = 1
                        end
                    end)
                else
                    lua_thread.create(function()
                    pesok_info['stopping'] = true
                    pesok_info['state'] = false
                    wait(1000)
                    pesok_info['stopping'] = false
                    end)
                end
            end


            imgui.BeginChild('##listsuspicions', imgui.ImVec2(sw / 3.07, sh / 5.2), true)
            imgui.Columns(2, '##tablepcheck', true)
            imgui.SetColumnWidth(-1, 135)
            imgui.CenterColumnText(u8"IP")
            imgui.NextColumn()
            imgui.CenterColumnText(u8"Игровые аккаунты")
            imgui.Separator()
            imgui.NextColumn()
                for k,v in pairs(pesok_info['suspicions']) do
                    imgui.Button(v[1], imgui.ImVec2(125, 20))
                    imgui.NextColumn()
                    for k,v in pairs(v[2]) do
                        if imgui.Button(v[1]) then sampSendChat("/re " .. v[1]) end
                        imgui.SameLine()
                    end
                    
                    imgui.NextColumn()
                    imgui.Separator()
                end
            imgui.Columns(1)
            imgui.EndChild()
        imgui.End()
    end
end

function draw_toast()
    local resX, resY = getScreenResolution()
    local WinSizes = calcWinSize()
    local WINSIZEX, WINSIZEY = WinSizes.x, WinSizes.y
    imgui.SetNextWindowPos(imgui.ImVec2(resX - WINSIZEX - 10, 10), imgui.Cond.Always)
    imgui.SetNextWindowSize(imgui.ImVec2(WINSIZEX, WINSIZEY), imgui.Cond.Always)
    imgui.PushStyleColor(imgui.Col.WindowBg, imgui.ImVec4(0, 0, 0, 0))
    imgui.Begin('ChapoToast', window, imgui.WindowFlags.NoTitleBar + imgui.WindowFlags.NoMove + imgui.WindowFlags.NoResize)
    for i = 1, #list do
        if list[i] ~= nil then
            local data = list[i]
            imgui.PushStyleVar(imgui.StyleVar.ChildWindowRounding, 6)
            imgui.PushStyleColor(imgui.Col.ChildWindowBg, imgui.ImVec4(type_colors[data.type][1], type_colors[data.type][2], type_colors[data.type][3], type_colors[data.type][4]))
            local logoSize = 20
            local textSize = getNotfSize(data.title, data.text)
            local minSizeX = 100
            local size = {x = logoSize + textSize.x, y = textSize.y }
            if size.x < minSizeX then size.x = minSizeX end
            local logoPos = {x = 10, y = size.y / 2 - 5}
            imgui.SetCursorPosX(WINSIZEX - size.x - 10 - logoSize)
            imgui.BeginChild(tostring(i), imgui.ImVec2(size.x + logoSize, size.y), false)
                imgui.SetCursorPos(imgui.ImVec2(logoPos.x, logoPos.y))
                imgui.PushFont(fa_font_notf)
                imgui.Text(type_icons[data.type])
                imgui.PopFont()
                imgui.SetCursorPos(imgui.ImVec2(logoPos.x + 30, logoPos.y))
                imgui.Text(data.text)
            imgui.EndChild()
            imgui.PopStyleVar()
            imgui.PopStyleColor()
            if imgui.IsItemClicked() then
                table.remove(list, i)
            end
        end
    end
    imgui.End()
    imgui.PopStyleColor()
end


function getNotfSize(title, text)
    local x, y = 100, 57
    local title, text = u8(title), u8(text)
    local size_title = imgui.CalcTextSize(title).x
    local size_text = imgui.CalcTextSize(text)
    if size_title > size_text.x then
        x = size_title
    else
        x = size_text.x
    end
    return {x = x + 10, y = y}
end

function toast(text, time, type)
    if type > 0 and type < 5 then
        local text = u8(text)
        local title = ''
        local index = #list + 1
        lua_thread.create(function()
            list[index] = {title = title, text = text, type = type}
            wait(time)
            list[index] = nil
        end)
    end
end

function calcWinSize()
    local x, y = 400, 100
    local notfs = {}
    local totalX = 0
    local biggest_x = 0
    for i = 1, #list do
        if list[i] ~= nil then
            local data = list[i]
            local s = getNotfSize(data.title, data.text)
            y = y + s.y
            if s.x > biggest_x then x = s.x end
        end
    end
    return {x = x + 100, y = y + 50}
end

function update_window()
    if addonWindows['update'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(600, 500), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))

        imgui.Begin(fa.ICON_FA_FIRE .. u8' Последние обновления',addonWindows['update'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
            imgui.BeginChild('##inchildwindow', imgui.ImVec2(582, 464), true)
            imgui.PushFont(fontsSizes['update'])
            imgui.CenterText("{FF6600}Урааа!!! {0099FF}Обновление!!!")
            imgui.PopFont()
            imgui.Separator()
            imgui.BeginChild('##inchildwindow', imgui.ImVec2(582, 424), false)
                for k,v in pairs(listUpdate) do
                    if k <= 5 then
                        local header = v.v
                        local isOpened = 0
                        if k == 1 then header = fa.ICON_FA_FIRE .. u8(' ' .. header .. ' | Актуальная версия') isOpened = imgui.TreeNodeFlags.DefaultOpen end
                        if imgui.CollapsingHeader(header, true, isOpened) then
                            for line in v.context:gmatch("[^\r\n]+") do
                                for ks,valikj in pairs(split(line,86,{})) do
                                    imgui.TextColoredRGB(u8(valikj))
                                end
                            end
                        end
                    end
                end
            imgui.EndChild()
            imgui.EndChild()
        imgui.End()
    end
end

function preupdate_window()
    if addonWindows['preupdate'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(500, 500), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))

        imgui.Begin(fa.ICON_FA_GLASSES .. u8' Подготовка к обновлению',addonWindows['preupdate'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
            imgui.SpinnerCenter('##spinner_waiting_update', 100, 6, 0xCC5500FF, 30)
            imgui.SpinnerCenter('##spinner_waiting_update', 93, 6, 0xFF8ec127, 30)
            imgui.SpinnerCenter('##spinner_waiting_update', 98, 6, 0x8ec127FF, 30)
            imgui.SpinnerCenter('##spinner_waiting_update', 100, 6, 0x8ec127FF, -30)
            imgui.SpinnerCenter('##spinner_waiting_update', 93, 6, 0xFF8ec127, -30)
            imgui.SpinnerCenter('##spinner_waiting_update', 97, 6, 0xCC5500FF, -30)
            imgui.SetCursorPosY(imgui.GetCursorPosY() + 20)
            imgui.PushFont(fontsSizes['update'])
            if (os.time() - startWaitingUpdate < 30) then
                imgui.CenterText("Обновление начнется через ".. numberOf(30 - (os.time() - startWaitingUpdate), {' секунду', ' секунды', ' секунд'}) .. '.')
            else
                imgui.CenterText("Обновление вот-вот должно начаться.")
            end
            imgui.CenterText("Пожалуйста, завершите свою активность :)")
            imgui.PopFont()
            
        imgui.End()
    end
end

function auth_window()
    if window_auth.v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(sw / 3.84, sh / 3.6), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))

        
        imgui.Begin(fa.ICON_FA_SIGN_IN_ALT .. u8' Robo-Tools | '.. titleauth,window_auth.v,imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
        if wich_window.v == 0 then
        titleauth = u8'Авторизация'
        imgui.PushFont(fontsSizes['logins'])
        imgui.SetCursorPosX(sw / 19.2)
        imgui.SetCursorPosY(sh / 10.8)
        if imgui.NewInputText('##login',auth['login'],sw / 6.4,u8'Логин',2) then ini.auth.login = tostring(auth['login'].v) save() end  -- 1 - слева 2 - по центру 3 - справа подсказки
        imgui.SetCursorPosX(sw / 19.2)
        if imgui.NewInputText('##password',auth['password'],sw / 6.4,u8'Пароль',2,flag) then if auth['trust'].v then ini.auth.password = tostring(auth['password'].v) save() else ini.auth.password = "" save() end end
        imgui.PopFont()
        imgui.SameLine()
        imgui.SetCursorPosX(sw / 26.8)
        imgui.SetCursorPosY(sh / 8.12)
        if show_authpass.v then
            if imgui.Button(fa.ICON_FA_EYE) then show_authpass.v = false flag = imgui.InputTextFlags.Password end
        else 
            if imgui.Button(fa.ICON_FA_EYE_SLASH) then show_authpass.v = true flag = nil end
        end
        imgui.SetCursorPosX(sw / 19.2)
        if imgui.Checkbox(u8'Запомнить пароль',auth['trust']) then ini.auth.trust = auth['trust'].v save() end
        imgui.SameLine()
        imgui.SetCursorPosX(sw / 6.34)
        if imgui.Checkbox(u8'Автологин', auth['auto']) then ini.auth.auto = auth['auto'].v save() end

        imgui.PushStyleColor(imgui.Col.Button, imgui.ImVec4(0.14, 0.52, 0.79, 0.65))
        imgui.SetCursorPosX(sw / 19.2)
        if imgui.Button(title,imgui.ImVec2(sw / 6.4, sh / 36)) then
            if #auth['login'].v <= 0 or #auth['password'].v <= 0 then 
                errormsg = 'Одно из полей не заполнено!' 
            else 
                login_acc()
            end
        end 
        imgui.PopStyleColor()

        if errormsg ~= '' then
            imgui.CenterText('{F6361C}[Ошибка]: '..errormsg)
        end
    elseif wich_window.v == 1 then
        titleauth = u8'Подтверждение с ВК'
        imgui.PushFont(fontsSizes['logins'])
        imgui.SetCursorPosX(sw / 19.2)
        imgui.SetCursorPosY(sh / 10.8)
        if imgui.NewInputText('##login',auth['vk_code'],sw / 6.4,u8'Код с ВК',2) then  end  -- 1 - слева 2 - по центру 3 - справа подсказки
        imgui.PopFont()
        imgui.SetCursorPosX(sw / 19.2)
        imgui.PushStyleColor(imgui.Col.Button, imgui.ImVec4(0.14, 0.52, 0.79, 0.65))
        if imgui.Button(u8"Продолжить",imgui.ImVec2(sw / 6.4, sh / 36)) then
            send_vk()
        end     
        imgui.PopStyleColor()

        if errormsg ~= '' then
            imgui.CenterText('{F6361C}[Ошибка]: '..errormsg)
        end
    end
        imgui.End()


    end
end

function main_window()
    if windows['main'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(sw / 1.92, sh / 1.66), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))
        imgui.Begin(fa.ICON_FA_TOOLS .. u8' Robo-Tools',windows['main'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
        local size = imgui.GetWindowSize()
        local btns_sizeX = sw / 13.17
        local btns_sizeY = sh / 43.2
        imgui.BeginChild("##6526", imgui.ImVec2(sw / 12, sh / 1.74), true, imgui.WindowFlags.NoScrollbar)
        
        if imgui.ButtonActivated(windows['general'],fa.ICON_FA_CHALKBOARD .. u8' Главное',imgui.ImVec2(btns_sizeX,btns_sizeY)) then changewexcept('general') end
        --imgui.TutorialHint(u8"Нажмите на любую кнопку для того,\nчтобы открыть раздел", imgui.ImBool(true), 1)
        if imgui.ButtonActivated(windows['account'],fa.ICON_FA_USER_EDIT .. u8' Профиль',imgui.ImVec2(btns_sizeX,btns_sizeY)) then changewexcept('account') end
        imgui.Separator()
        imgui.CenterText('{6aebc8}Конфигурация')
        imgui.Separator()
        if imgui.ButtonActivated(windows['settings'],fa.ICON_FA_USER_COG .. u8' Основное',imgui.ImVec2(btns_sizeX,btns_sizeY)) then changewexcept('settings') end
        if imgui.ButtonActivated(windows['stats'],fa.ICON_FA_CHART_LINE .. u8' Статистика',imgui.ImVec2(btns_sizeX,btns_sizeY)) then changewexcept('stats') end
        if imgui.ButtonActivated(windows['styles'],fa.ICON_FA_PALETTE .. u8' Стилизация',imgui.ImVec2(btns_sizeX,btns_sizeY)) then changewexcept('styles') end
        if imgui.ButtonActivated(windows['cheats'],fa.ICON_FA_GHOST .. u8' Вспомогательное ПО',imgui.ImVec2(btns_sizeX,btns_sizeY)) then changewexcept('cheats') end
        if imgui.ButtonActivated(windows['keys'],fa.ICON_FA_KEYBOARD .. u8' Горячие клавиши',imgui.ImVec2(btns_sizeX,btns_sizeY)) then changewexcept('keys') end
        if imgui.ButtonActivated(windows['binder'],fa.ICON_FA_EDIT .. u8' Биндер',imgui.ImVec2(btns_sizeX,btns_sizeY)) then changewexcept('binder') end
        if imgui.ButtonActivated(windows['chats'],fa.ICON_FA_COMMENT .. u8' Чаты',imgui.ImVec2(btns_sizeX,btns_sizeY)) then changewexcept('chats') end
        if imgui.ButtonActivated(windows['event'],fa.ICON_FA_SMILE_WINK .. u8' Мероприятия',imgui.ImVec2(btns_sizeX,btns_sizeY)) then changewexcept('event') end
        if imgui.ButtonActivated(windows['report'],fa.ICON_FA_QUOTE_RIGHT .. u8' Репорт',imgui.ImVec2(btns_sizeX,btns_sizeY)) then changewexcept('report') end
        if imgui.ButtonActivated(windows['forms'],fa.ICON_FA_HANDSHAKE .. u8' Формы',imgui.ImVec2(btns_sizeX,btns_sizeY)) then changewexcept('forms') end
        if imgui.ButtonActivated(windows['checkers'],fa.ICON_FA_LAPTOP .. u8' Чекеры',imgui.ImVec2(btns_sizeX,btns_sizeY)) then changewexcept('checkers') end
        if imgui.ButtonActivated(windows['recon'],fa.ICON_FA_EYE .. u8' Слежка',imgui.ImVec2(btns_sizeX,btns_sizeY)) then changewexcept('recon') end
        if imgui.ButtonActivated(windows['warnings'],fa.ICON_FA_EXCLAMATION_TRIANGLE .. u8' Варнинги',imgui.ImVec2(btns_sizeX,btns_sizeY)) then changewexcept('warnings') end
        if imgui.ButtonActivated(windows['about'],fa.ICON_FA_INFO_CIRCLE .. u8' О скрипте',imgui.ImVec2(btns_sizeX,btns_sizeY)) then changewexcept('about') end

        imgui.EndChild()

        imgui.SameLine()
        imgui.BeginChild("##child", imgui.ImVec2(sw / 2.34 , sh / 1.741), true,imgui.WindowFlags.NoScrollbar)
        
        general_window()
        profile_window_settings()
        main_settings()
        stats_settings()
        stylization_window()
        cheat_window()
        report_window_settings()
        recon_window_settings()
        checkers_window_settings()
        hotkeys_window_settings()
        binder_window_settings()
        chats_window_settings()
        event_menu_settings()
        forms_window_settings()
        warnings_window_settings()
        about_window_settings()
        imgui.EndChild()
        imgui.End()

    end

end


function event_menu_settings()
    if windows['event'].v then
        imgui.BeginChild('##ineventmenuserver', imgui.ImVec2(sw / 2.388, 107), true)
            imgui.CenterText("Список мероприятий | Система работает в тестовом режиме")
            imgui.SameLine(780)
            imgui.TextColoredRGB(fa.ICON_FA_PLUS)
            imgui.Hint(u8'Нажмите на данную иконку, чтобы добавить меропритяие')
            if imgui.IsItemClicked() then
                imgui.OpenPopup(fa.ICON_FA_SMILE_WINK .. u8' Создание мероприятия')
                tableEventMenuCreate = {
                    ['name'] = imgui.ImBuffer("",256), --lim 32
                    ['rules'] = { --144
                        imgui.ImBuffer("",256),
                        imgui.ImBuffer("",256),
                        imgui.ImBuffer("",256),
                    },
                    
                    ['points'] = {
                        ['count'] = imgui.ImInt(1),
                        ['type'] = imgui.ImInt(0),
                        ['positions'] = {
                            {0, 0, 0, 0}
                        },
                    },
                
                    ['messageS'] = imgui.ImBuffer("",256), -- 100
                    ['p_limit'] = imgui.ImInt(10),
                    ['time_teleport'] = imgui.ImInt(60),
                    ['password'] = imgui.ImBuffer("",50),
                    ['hp'] = imgui.ImInt(100), --from 5 to 250
                    ['armour'] = imgui.ImInt(0),
                    ['skin'] = imgui.ImInt(101), -- 1 to 568,
                    ['gun'] = {
                        ['id'] = imgui.ImInt(0), -- 0 net oruzhia,
                        ['count'] = imgui.ImInt(0),
                    },
                    ['take_after'] = imgui.ImBool(false),
                    ['repeat_tp'] = imgui.ImBool(false),
                }
            end

            if imgui.BeginPopupModal(fa.ICON_FA_SMILE_WINK .. u8' Создание мероприятия', imgui.ImBool(true), imgui.WindowFlags.NoResize) then
                imgui.BeginChild('##inchildcreatemp', imgui.ImVec2(600, 485), true)
                    imgui.NewInputText('##namemp', tableEventMenuCreate['name'], 584, u8'Название мероприятия', 2)
                    imgui.BeginChild('##rulessss', imgui.ImVec2(584, 105), true)
                        imgui.CenterText("Правила мероприятия")
                        imgui.Separator()
                        imgui.NewInputText('##rules1', tableEventMenuCreate['rules'][1], 568, u8'Строка правил', 2)
                        imgui.NewInputText('##rules2', tableEventMenuCreate['rules'][2], 568, u8'Строка правил', 2)
                        imgui.NewInputText('##rules3', tableEventMenuCreate['rules'][3], 568, u8'Строка правил', 2)
                    imgui.EndChild()

                    imgui.BeginChild('##points', imgui.ImVec2(584, 105), true)
                        imgui.CenterText("Телепортация на мероприятие")
                        imgui.Separator()
                        imgui.BeginChild('##leftpoints', imgui.ImVec2(200, 70), true)
                        imgui.SetCursorPosY(imgui.GetCursorPosY() + 6)
                        imgui.PushItemWidth(184)
                            local typePosition = "Сломалось"
                            if table_typePositions[tableEventMenuCreate['points']['type'].v] ~= nil then
                                typePosition = table_typePositions[tableEventMenuCreate['points']['type'].v]
                            else
                                tableEventMenuCreate['points']['type'].v = 0
                            end
                            if imgui.DragInt('##countpoints',tableEventMenuCreate['points']['count'],0.1,1,10,u8("Количество точек: %.0f")) then 
                                for i = 1, tableEventMenuCreate['points']['count'].v do
                                    if tableEventMenuCreate['points']['positions'][i] == nil then
                                        tableEventMenuCreate['points']['positions'][i] = {0, 0, 0, 0}
                                    end
                                end
                            end
                            imgui.DragInt('##typeteleport',tableEventMenuCreate['points']['type'],0.1,0,2,u8("Спавн ".. typePosition))
                        imgui.PopItemWidth()
                        imgui.EndChild()
                        imgui.SameLine()
                        imgui.BeginChild('##rightpoints', imgui.ImVec2(363, 70), true)
                            if #tableEventMenuCreate['points']['positions'] > 0 then
                                for i = 1, tableEventMenuCreate['points']['count'].v do
                                    if imgui.Button("X: " .. tableEventMenuCreate['points']['positions'][i][1] .. " | Y: " .. tableEventMenuCreate['points']['positions'][i][2] .. " | Z: " .. tableEventMenuCreate['points']['positions'][i][3] .. ' | A: ' .. tableEventMenuCreate['points']['positions'][i][4] .. "##"..i, imgui.ImVec2(350, 20)) then
                                        tableEventMenuCreate['points']['positions'][i][1] = math.floor(select(1, getCharCoordinates(PLAYER_PED)))
                                        tableEventMenuCreate['points']['positions'][i][2] = math.floor(select(2, getCharCoordinates(PLAYER_PED)))
                                        tableEventMenuCreate['points']['positions'][i][3] = math.floor(select(3, getCharCoordinates(PLAYER_PED)))
                                        tableEventMenuCreate['points']['positions'][i][4] = math.floor(getCharHeading(PLAYER_PED))
                                    end
                                    imgui.Hint(u8"Кликните, чтобы установить вашу текущую позицию")
                                end
                            end
                        imgui.EndChild()
                    imgui.EndChild()

                    imgui.NewInputText('##servermess', tableEventMenuCreate['messageS'], 585, u8'Сообщение при начале МП на сервер', 2)
                    imgui.BeginChild('##othersettingsmp', imgui.ImVec2(584, 180), true)
                    imgui.PushItemWidth(282)
                    imgui.DragInt('##countplayers',tableEventMenuCreate['p_limit'],0.1,1,100,u8("Лимит игроков: %.0f"))
                    imgui.SameLine()
                    imgui.DragInt('##timeteleport',tableEventMenuCreate['time_teleport'],0.1,1,300,u8("Время телепорта: %.0f секунд"))
                    imgui.PopItemWidth()
                    if imgui.NewInputText('##passwordparol', tableEventMenuCreate['password'], 569, u8'Пароль', 2) then 
                        if len(tableEventMenuCreate['password'].v) > 0 then 
                            if tableEventMenuCreate['password'].v:match("(%d+)") then
                                tableEventMenuCreate['password'].v = tostring(tableEventMenuCreate['password'].v:match("(%d+)")) 
                            else
                                tableEventMenuCreate['password'].v = ""
                            end
                        end 
                    end
                    imgui.PushItemWidth(282)
                    imgui.DragInt('##hppoints',tableEventMenuCreate['hp'],0.1,5,250,u8("Здоровье: %.0f поинтов"))
                    imgui.SameLine()
                    imgui.DragInt('##armourpoints',tableEventMenuCreate['armour'],0.1,5,250,u8("Броня: %.0f поинтов"))
                    imgui.PopItemWidth()
                    imgui.PushItemWidth(537.5)
                    imgui.DragInt('##skinID',tableEventMenuCreate['skin'],0.1,1,568,u8("Скин: %.0f ID"))
                    imgui.SameLine()
                    if imgui.Button(fa.ICON_FA_TSHIRT) then imgui.OpenPopup(fa.ICON_FA_TSHIRT .. u8' Выбор скина') end
                    imgui.Hint(u8"Кликните, чтобы открыть выбор скинов с картинками")
                    if imgui.BeginPopupModal(fa.ICON_FA_TSHIRT .. u8' Выбор скина', imgui.ImBool(true),imgui.WindowFlags.NoResize) then
                        imgui.BeginChild('##skinchgild', imgui.ImVec2(983, 590), true)
                        local newCounter = 1
                        for k,v in pairs(imgTextures['skins']) do
                            if imgui.ImageButton(v,imgui.ImVec2(83, 151)) then tableEventMenuCreate['skin'].v = k imgui.CloseCurrentPopup() end
                    
                            if k%10 ~= 0 then
                                imgui.SameLine()
                            end
                        end
                        imgui.EndChild()
                    imgui.EndPopup()
                    end
                    imgui.PopItemWidth()

                    imgui.PushItemWidth(254)
                    imgui.DragInt('##namegun',tableEventMenuCreate['gun']['id'],0.1,0,33,u8("Оружие: %.0f ID"))
                    imgui.SameLine()
                    if imgui.Button(fa.ICON_FA_ANGRY) then imgui.OpenPopup(fa.ICON_FA_ANGRY .. u8' Выбор оружия') end
                    if imgui.BeginPopupModal(fa.ICON_FA_ANGRY .. u8' Выбор оружия', imgui.ImBool(true),imgui.WindowFlags.NoResize) then
                        imgui.NewInputText('##infogun',finderTable['mgun'],983,u8'Название оружия',2)
                        imgui.BeginChild('##asdasdsadas', imgui.ImVec2(983, 590), true)
                        local newCounter = 1
                        for k,v in pairs(imgTextures['weps']) do
                            if tGunsName[v[2]]:match(finderTable['mgun'].v) then
                                if imgui.ImageButton(v[1],imgui.ImVec2(sw / 13.1, sh / 11.1)) then tableEventMenuCreate['gun']['id'].v = v[2] imgui.CloseCurrentPopup() end
                                if newCounter%6 ~= 0 then
                                    imgui.SameLine()
                                end
                                newCounter = newCounter + 1
                            end
                        end
                        imgui.EndChild()
                    imgui.EndPopup()
                    end

                    imgui.Hint(u8"Кликните, чтобы открыть выбор оружия с картинками")
                    imgui.PopItemWidth()
                    imgui.PushItemWidth(282)
                    imgui.SameLine()
                    imgui.DragInt('##countgunnn',tableEventMenuCreate['gun']['count'],0.1,1,500,u8("Патронов: %.0f"))
                    imgui.PopItemWidth()

                    imgui.LazyButtonActivated('Забирать оружие',tableEventMenuCreate['take_after'], imgui.ImVec2(568.8, 20))
                    imgui.LazyButtonActivated('Повторный телепорт',tableEventMenuCreate['repeat_tp'], imgui.ImVec2(568.8, 20))
                    imgui.EndChild()
                    if imgui.Button(fa.ICON_FA_CHECK .. u8" Сохранить", imgui.ImVec2(584, 20)) then
                        errormsg = ""
                        local limitsTable = {
                            ['name'] = {false, "Уже существует мероприятие с таким названием"},
                            ['name_long'] = {false, "Длинна названия должна быть не больше 32-ух символов и не менее 5-ти"},
                            ['rules'] = {false, "Длинна 1 правила должна быть не более 144-ех символов"},
                            ['messageS'] = {false, "Длинна сообщения начала мероприятия должна быть не более 100 символов и не менее 5"},
                            ['password'] = {false, "Пароль должнен быть не меньше 0 и не больше 999999"},
                            ['p_limit'] = {false, "Количество игроков не должно превышать 100"},
                            ['time_teleport'] = {false, "Время телепорта не должно превышать 300 секунд"},
                            ['hp'] = {false, "Количество поинтов хп не должно быть меньше 5-ти и не более 250"},
                            ['armour'] = {false, "Количество поинтов брони не должно быть меньше 5-ти и не более 250"},
                            ['skin'] = {false, "Номер скина должен быть не меньше 1 и не более 568"},
                            ['gun'] = {false, "Номер оружия не должно быть ниже 0 и не более 33"},
                            ['guncount'] = {false, "Количество патронов не может быть ниже 0 и более 500"},
                        }

                        for keychik,valik in pairs(eventsTable) do
                            if valik == tableEventMenuCreate['name'].v then
                                limitsTable['name'][1] = true
                            end
                        end

                        if len(tableEventMenuCreate['name'].v) < 5 or len(tableEventMenuCreate['name'].v) > 32 then limitsTable['name_long'][1] = true end
                        for kr, vr in pairs(tableEventMenuCreate['rules']) do
                            if len(vr.v) > 144 then
                                limitsTable['rules'][1] = true
                            end
                        end

                        if len(tableEventMenuCreate['messageS'].v) > 100 or len(tableEventMenuCreate['messageS'].v) < 5 then limitsTable['messageS'][1] = true end
                        if #tableEventMenuCreate['password'].v > 0 and tonumber(tableEventMenuCreate['password'].v) > 999999 then limitsTable['password'][1] = true end
                        if tonumber(tableEventMenuCreate['p_limit'].v) > 100 then limitsTable['p_limit'][1] = true end
                        if tonumber(tableEventMenuCreate['time_teleport'].v) > 300 then limitsTable['time_teleport'][1] = true end

                        if tonumber(tableEventMenuCreate['hp'].v) < 0 or tonumber(tableEventMenuCreate['hp'].v) > 250 then limitsTable['hp'][1] = true end
                        if tonumber(tableEventMenuCreate['armour'].v) < 0 or tonumber(tableEventMenuCreate['armour'].v) > 250 then limitsTable['armour'][1] = true end
                        if tonumber(tableEventMenuCreate['skin'].v) < 1 or tonumber(tableEventMenuCreate['skin'].v) > 568 then limitsTable['skin'][1] = true end
                        if tonumber(tableEventMenuCreate['gun']['id'].v) < 0 or tonumber(tableEventMenuCreate['gun']['id'].v) > 33 then limitsTable['gun'][1] = true end
                        if tonumber(tableEventMenuCreate['gun']['count'].v) < 0 or tonumber(tableEventMenuCreate['gun']['id'].v) > 500 then limitsTable['guncount'][1] = true end



                        local isGood = false
                        for k,v in pairs(limitsTable) do
                            if v[1] then
                                isGood = true
                                errormsg = errormsg .. "\n" .. v[2]
                            end
                        end

                        if not isGood then
                            local imguiTableEventsNormal = {
                                ['name'] = tableEventMenuCreate['name'].v, --lim 32
                                ['rules'] = { --144

                                },
                                
                                ['points'] = {
                                    ['count'] = tableEventMenuCreate['points']['count'].v,
                                    ['type'] = tableEventMenuCreate['points']['type'].v,
                                    ['positions'] = clone(tableEventMenuCreate['points']['positions']),
                                },
                            
                                ['messageS'] = tableEventMenuCreate['messageS'].v, -- 100
                                ['p_limit'] = tableEventMenuCreate['p_limit'].v,
                                ['time_teleport'] = tableEventMenuCreate['time_teleport'].v,
                                ['password'] = tableEventMenuCreate['password'].v,
                                ['hp'] = tableEventMenuCreate['hp'].v, --from 5 to 250
                                ['armour'] = tableEventMenuCreate['armour'].v,
                                ['skin'] = tableEventMenuCreate['skin'].v, -- 1 to 568,
                                ['gun'] = {
                                    ['id'] = tableEventMenuCreate['gun']['id'].v, -- 0 net oruzhia,
                                    ['count'] = tableEventMenuCreate['gun']['count'].v,
                                },
                                ['take_after'] = tableEventMenuCreate['take_after'].v,
                                ['repeat_tp'] = tableEventMenuCreate['repeat_tp'].v,
                            }
                            for k,v in pairs(tableEventMenuCreate['rules']) do
                                imguiTableEventsNormal['rules'][k] = v.v
                            end

                            table.insert(eventsTableImgui, tableEventMenuCreate)
                            table.insert(eventsTable, imguiTableEventsNormal)
                            saveJson(patches['events'], eventsTable)
                            imgui.CloseCurrentPopup()
                            sampAddChatMessage("{2DF61C}[Создание]{FFFFFF} Вы успешно создали новое мероприятие.",-1)  

                        else
                            imgui.OpenPopup(fa.ICON_FA_TIMES .. u8' Ошибка')
                        end
                    end

                    if imgui.BeginPopupModal(fa.ICON_FA_TIMES .. u8' Ошибка', imgui.ImBool(true), imgui.WindowFlags.NoResize) then
                        imgui.BeginChild('##ingchildError', imgui.ImVec2(800, 100), true)
                            imgui.CenterText(errormsg)
                        imgui.EndChild()
                    imgui.EndPopup()
                    end
                imgui.EndChild()
            imgui.EndPopup()
            end
            imgui.Separator()
            imgui.BeginChild('##inscroll', imgui.ImVec2(sw / 2.388, 74), false)
            for k,v in pairs(eventsTableImgui) do
                if imgui.Button(v['name'].v .. '##'..k, imgui.ImVec2(259, 20)) then imgui.OpenPopup(fa.ICON_FA_SMILE_WINK .. u8' Редактирование мероприятия##'..k) end
                if imgui.BeginPopupModal(fa.ICON_FA_SMILE_WINK .. u8' Редактирование мероприятия##'..k, imgui.ImBool(true), imgui.WindowFlags.NoResize) then
                    imgui.BeginChild('##inchildcreatemp', imgui.ImVec2(600, 535), true)
                        imgui.NewInputText('##namemp', v['name'], 584, u8'Название мероприятия', 2)
                        imgui.BeginChild('##rulessss', imgui.ImVec2(584, 105), true)
                            imgui.CenterText("Правила мероприятия")
                            imgui.Separator()
                            imgui.NewInputText('##rules1', v['rules'][1], 568, u8'Строка правил', 2)
                            imgui.NewInputText('##rules2', v['rules'][2], 568, u8'Строка правил', 2)
                            imgui.NewInputText('##rules3', v['rules'][3], 568, u8'Строка правил', 2)
                        imgui.EndChild()
    
                        imgui.BeginChild('##points', imgui.ImVec2(584, 105), true)
                            imgui.CenterText("Телепортация на мероприятие")
                            imgui.Separator()
                            imgui.BeginChild('##leftpoints', imgui.ImVec2(200, 70), true)
                            imgui.SetCursorPosY(imgui.GetCursorPosY() + 6)
                            imgui.PushItemWidth(184)
                                local typePosition = "Сломалось"
                                if table_typePositions[v['points']['type'].v] ~= nil then
                                    typePosition = table_typePositions[v['points']['type'].v]
                                else
                                    v['points']['type'].v = 0
                                end
                                if imgui.DragInt('##countpoints',v['points']['count'],0.1,1,10,u8("Количество точек: %.0f")) then 
                                    for i = 1, v['points']['count'].v do
                                        if v['points']['positions'][i] == nil then
                                            v['points']['positions'][i] = {0, 0, 0, 0}
                                        end
                                    end
                                end
                                imgui.DragInt('##typeteleport',v['points']['type'],0.1,0,2,u8("Спавн ".. typePosition))
                            imgui.PopItemWidth()
                            imgui.EndChild()
                            imgui.SameLine()
                            imgui.BeginChild('##rightpoints', imgui.ImVec2(363, 70), true)
                                if #v['points']['positions'] > 0 then
                                    for i = 1, v['points']['count'].v do
                                        if imgui.Button("X: " .. v['points']['positions'][i][1] .. " | Y: " .. v['points']['positions'][i][2] .. " | Z: " .. v['points']['positions'][i][3] .. ' | A: ' .. v['points']['positions'][i][4] .. "##"..i, imgui.ImVec2(350, 20)) then
                                            v['points']['positions'][i][1] = math.floor(select(1, getCharCoordinates(PLAYER_PED)))
                                            v['points']['positions'][i][2] = math.floor(select(2, getCharCoordinates(PLAYER_PED)))
                                            v['points']['positions'][i][3] = math.floor(select(3, getCharCoordinates(PLAYER_PED)))
                                            v['points']['positions'][i][4] = math.floor(getCharHeading(PLAYER_PED))
                                        end
                                        imgui.Hint(u8"Кликните, чтобы установить вашу текущую позицию")
                                    end
                                end
                            imgui.EndChild()
                        imgui.EndChild()
    
                        imgui.NewInputText('##servermess', v['messageS'], 585, u8'Сообщение при начале МП на сервер', 2)
                        imgui.BeginChild('##othersettingsmp', imgui.ImVec2(584, 180), true)
                        imgui.PushItemWidth(282)
                        imgui.DragInt('##countplayers',v['p_limit'],0.1,1,100,u8("Лимит игроков: %.0f"))
                        imgui.SameLine()
                        imgui.DragInt('##timeteleport',v['time_teleport'],0.1,1,300,u8("Время телепорта: %.0f секунд"))
                        imgui.PopItemWidth()
                        imgui.NewInputText('##passwordparol', v['password'], 569, u8'Пароль', 2)
                        imgui.PushItemWidth(282)
                        imgui.DragInt('##hppoints',v['hp'],0.1,5,250,u8("Здоровье: %.0f поинтов"))
                        imgui.SameLine()
                        imgui.DragInt('##armourpoints',v['armour'],0.1,5,250,u8("Броня: %.0f поинтов"))
                        imgui.PopItemWidth()
                        imgui.PushItemWidth(537.5)
                        imgui.DragInt('##skinID',v['skin'],0.1,1,568,u8("Скин: %.0f ID"))
                        imgui.SameLine()
                        if imgui.Button(fa.ICON_FA_TSHIRT) then imgui.OpenPopup(fa.ICON_FA_TSHIRT .. u8' Выбор скина') end
                        imgui.Hint(u8"Кликните, чтобы открыть выбор скинов с картинками")
                        if imgui.BeginPopupModal(fa.ICON_FA_TSHIRT .. u8' Выбор скина', imgui.ImBool(true),imgui.WindowFlags.NoResize) then
                            imgui.BeginChild('##skinchgild', imgui.ImVec2(983, 590), true)
                            local newCounter = 1
                            for kim,vim in pairs(imgTextures['skins']) do
                                if imgui.ImageButton(vim,imgui.ImVec2(83, 151)) then v['skin'].v = kim imgui.CloseCurrentPopup() end
                        
                                if kim%10 ~= 0 then
                                    imgui.SameLine()
                                end
                            end
                            imgui.EndChild()
                        imgui.EndPopup()
                        end
                        imgui.PopItemWidth()
    
                        imgui.PushItemWidth(254)
                        imgui.DragInt('##namegun',v['gun']['id'],0.1,0,33,u8("Оружие: %.0f ID"))
                        imgui.SameLine()
                        if imgui.Button(fa.ICON_FA_ANGRY) then imgui.OpenPopup(fa.ICON_FA_ANGRY .. u8' Выбор оружия') end
                        if imgui.BeginPopupModal(fa.ICON_FA_ANGRY .. u8' Выбор оружия', imgui.ImBool(true),imgui.WindowFlags.NoResize) then
                            imgui.NewInputText('##infogun',finderTable['mgun'],983,u8'Название оружия',2)
                            imgui.BeginChild('##asdasdsadas', imgui.ImVec2(983, 590), true)
                            local newCounter = 1
                            for kim,vim in pairs(imgTextures['weps']) do

                                    if tGunsName[vim[2]]:match(finderTable['mgun'].v) then
                                        if imgui.ImageButton(vim[1],imgui.ImVec2(sw / 13.1, sh / 11.1)) then v['gun']['id'].v = vim[2] imgui.CloseCurrentPopup() end
                                        if newCounter%6 ~= 0 then
                                            imgui.SameLine()
                                        end
                                        newCounter = newCounter + 1
                                    end
                
                            end
                            imgui.EndChild()
                        imgui.EndPopup()
                        end
    
                        imgui.Hint(u8"Кликните, чтобы открыть выбор оружия с картинками")
                        imgui.PopItemWidth()
                        imgui.PushItemWidth(282)
                        imgui.SameLine()
                        imgui.DragInt('##countgunnn',v['gun']['count'],0.1,1,500,u8("Патронов: %.0f"))
                        imgui.PopItemWidth()
    
                        imgui.LazyButtonActivated('Забирать оружие',v['take_after'], imgui.ImVec2(568.8, 20))
                        imgui.LazyButtonActivated('Повторный телепорт',v['repeat_tp'], imgui.ImVec2(568.8, 20))
                        imgui.EndChild()
                        if imgui.Button(fa.ICON_FA_CHECK .. u8" Сохранить", imgui.ImVec2(584, 20)) then
                            errormsg = ""
                            local limitsTable = {
                                ['name'] = {false, "Уже существует мероприятие с таким названием"},
                                ['name_long'] = {false, "Длинна названия должна быть не больше 32-ух символов и не менее 5-ти"},
                                ['rules'] = {false, "Длинна 1 правила должна быть не более 144-ех символов"},
                                ['messageS'] = {false, "Длинна сообщения начала мероприятия должна быть не более 100 символов и не менее 5"},
                                ['password'] = {false, "Пароль должнен быть не меньше 0 и не больше 999999"},
                                ['p_limit'] = {false, "Количество игроков не должно превышать 100"},
                                ['time_teleport'] = {false, "Время телепорта не должно превышать 300 секунд"},
                                ['hp'] = {false, "Количество поинтов хп не должно быть меньше 5-ти и не более 250"},
                                ['armour'] = {false, "Количество поинтов брони не должно быть меньше 5-ти и не более 250"},
                                ['skin'] = {false, "Номер скина должен быть не меньше 1 и не более 568"},
                                ['gun'] = {false, "Номер оружия не должно быть ниже 0 и не более 33"},
                                ['guncount'] = {false, "Количество патронов не может быть ниже 0 и более 500"},
                            }
    
                            for keychik,valik in pairs(eventsTable) do
                                if keychik ~= k and valik == v['name'].v then
                                    limitsTable['name'][1] = true
                                end
                            end
    
                            if len(v['name'].v) < 5 or len(v['name'].v) > 32 then limitsTable['name_long'][1] = true end
                            for kr, vr in pairs(v['rules']) do
                                if len(vr.v) > 144 then
                                    limitsTable['rules'][1] = true
                                end
                            end
    
                            if len(v['messageS'].v) > 100 or len(v['messageS'].v) < 5 then limitsTable['messageS'][1] = true end
                            if #v['password'].v > 0 and tonumber(v['password'].v) > 999999 then limitsTable['password'][1] = true end
                            if tonumber(v['p_limit'].v) > 100 then limitsTable['p_limit'][1] = true end
                            if tonumber(v['time_teleport'].v) > 300 then limitsTable['time_teleport'][1] = true end
    
                            if tonumber(v['hp'].v) < 0 or tonumber(v['hp'].v) > 250 then limitsTable['hp'][1] = true end
                            if tonumber(v['armour'].v) < 0 or tonumber(v['armour'].v) > 250 then limitsTable['armour'][1] = true end
                            if tonumber(v['skin'].v) < 1 or tonumber(v['skin'].v) > 568 then limitsTable['skin'][1] = true end
                            if tonumber(v['gun']['id'].v) < 0 or tonumber(v['gun']['id'].v) > 33 then limitsTable['gun'][1] = true end
                            if tonumber(v['gun']['count'].v) < 0 or tonumber(v['gun']['id'].v) > 500 then limitsTable['guncount'][1] = true end
    
    
    
                            local isGood = false
                            for k,v in pairs(limitsTable) do
                                if v[1] then
                                    isGood = true
                                    errormsg = errormsg .. "\n" .. v[2]
                                end
                            end

                            if not isGood then
                                local imguiTableEventsNormal = {
                                    ['name'] = v['name'].v, --lim 32
                                    ['rules'] = { --144
        
                                    },
                                    
                                    ['points'] = {
                                        ['count'] = v['points']['count'].v,
                                        ['type'] = v['points']['type'].v,
                                        ['positions'] = clone(v['points']['positions']),
                                    },
                                
                                    ['messageS'] = v['messageS'].v, -- 100
                                    ['p_limit'] = v['p_limit'].v,
                                    ['time_teleport'] = v['time_teleport'].v,
                                    ['password'] = v['password'].v,
                                    ['hp'] = v['hp'].v, --from 5 to 250
                                    ['armour'] = v['armour'].v,
                                    ['skin'] = v['skin'].v, -- 1 to 568,
                                    ['gun'] = {
                                        ['id'] = v['gun']['id'].v, -- 0 net oruzhia,
                                        ['count'] = v['gun']['count'].v,
                                    },
                                    ['take_after'] = v['take_after'].v,
                                    ['repeat_tp'] = v['repeat_tp'].v,
                                }
        
                                for key,v in pairs(v['rules']) do
                                    imguiTableEventsNormal['rules'][key] = v.v
                                end
        
                                eventsTable[k] = imguiTableEventsNormal
                                saveJson(patches['events'], eventsTable)
                                imgui.CloseCurrentPopup()
                                sampAddChatMessage("{2DF61C}[Создание]{FFFFFF} Вы успешно сохранили мероприятие.",-1)  
                            else
                                imgui.OpenPopup(fa.ICON_FA_TIMES .. u8' Ошибка##'..k)
                            end
                        end

                        if imgui.BeginPopupModal(fa.ICON_FA_TIMES .. u8' Ошибка##'..k, imgui.ImBool(true), imgui.WindowFlags.NoResize) then
                            imgui.BeginChild('##ingchildError', imgui.ImVec2(800, 100), true)
                                imgui.CenterText(errormsg)
                            imgui.EndChild()
                        imgui.EndPopup()
                        end
    
                        if imgui.Button(fa.ICON_FA_DUMPSTER .. u8" Удалить", imgui.ImVec2(584, 20)) then
                            table.remove(eventsTable, k)
                            table.remove(eventsTableImgui, k)
                            saveJson(patches['events'], eventsTable)
                            imgui.CloseCurrentPopup()
                            sampAddChatMessage("{2DF61C}[Создание]{FFFFFF} Вы успешно удалили мероприятие.",-1)  
                        end
    
                        if imgui.Button(fa.ICON_FA_PLAY .. u8" Начать мероприятие", imgui.ImVec2(584, 20)) then
                            sampAddChatMessage("{2DF61C}[Event-Menu]{FFFFFF} Подготовка мероприятия началась.",-1)  
                            sampAddChatMessage("{2DF61C}[Event-Menu]{FFFFFF} Вы будете телепортированы на первую точку из списка тп.",-1)  
                            eventMenuStart['all'] = true
                            eventMenuStart['name'] = true
                            eventMenuStart['wichMP'] = k
                            sampSendChat("/ao " .. u8:decode(v['messageS'].v))
                            sampSendChat('/eventmenu')
                            imgui.CloseCurrentPopup()
                        end

                    imgui.EndChild()
                imgui.EndPopup()
                end
                if k%3 ~= 0 then
                    imgui.SameLine()
                end
            end
            imgui.EndChild()
        imgui.EndChild()

        imgui.BeginChild('##inObjectsSamples', imgui.ImVec2(sw / 2.388, 495), true)
        imgui.CenterText("Пользовательские шаблоны из серверных объектов")
        imgui.Separator()
        if imgui.ButtonClickable(true, u8"Руководство по созданию шаблонов", imgui.ImVec2(sw / 2.439,40)) then os.execute('explorer "https://youtu.be/jhvtnnoWDks"') end
        imgui.Hint(u8"Откроется на YouTube")
        imgui.Separator()
        local messageIsSaving = fa.ICON_FA_OBJECT_GROUP .. u8" Начать сохранение объектов"
        if objectsCreator['isWorking'] then 
            messageIsSaving = fa.ICON_FA_CHECK .. u8" Завершить сохранение объектов" 
        end
        if imgui.Button(messageIsSaving, imgui.ImVec2(sw / 2.439,20)) then
            if not objectsCreator['isWorking'] then
                objectsCreator['nameIs'].v = ""
                objectsCreator['startPosCreate'].v = false
                objectsCreator['startPosCoordinates'] = {0,0,0,0}
                objectsCreator['objects'] = {}              
                sampAddChatMessage('{2DF61C}[Objects-Menu]{FFFFFF} Сохранение объектов для создания шаблонов активировано.', -1)
                sampAddChatMessage('{2DF61C}[Objects-Menu]{FFFFFF} Ставьте объекты из /putobject и после завершения задуманного - нажмите кнопку завершения.', -1)
                objectsCreator['isWorking'] = true
            else
                sampAddChatMessage('{2DF61C}[Objects-Menu]{FFFFFF} Сохранение объектов завершено.', -1)
                sampAddChatMessage('{2DF61C}[Objects-Menu]{FFFFFF} В случае, если вы установили как минимум 1 объект - вам откроется окно сохранения.', -1)
                objectsCreator['isWorking'] = false
                if #objectsCreator['objects'] > 0 then
                    imgui.OpenPopup(fa.ICON_FA_OBJECT_GROUP .. u8' Сохранение шаблона')
                end
            end
        end
        
        if imgui.BeginPopupModal(fa.ICON_FA_OBJECT_GROUP .. u8' Сохранение шаблона', imgui.ImBool(true), imgui.WindowFlags.NoResize) then
            imgui.BeginChild('##inchobj', imgui.ImVec2(400, 369), true)
            imgui.NewInputText('##nameshablon', objectsCreator['nameIs'], 385, u8'Название шаблона', 2)
                imgui.LazyButtonActivated('Ставить в начальной точке', objectsCreator['startPosCreate'], imgui.ImVec2(385, 20))
                imgui.Hint(u8"В случае, если этот параметр включен - вы будете телепортированы на точку, от куда вы начинали ставить объекты, соответственно все объекты будут установлены там. В ином случае - объекты будут установлены относительно вашего местоположения.")
                imgui.Button(u8"Начальная точка: X: ".. objectsCreator['startPosCoordinates'][1] .. ' | Y: ' .. objectsCreator['startPosCoordinates'][2] .. " | Z: " .. objectsCreator['startPosCoordinates'][3] .. " | A: " ..objectsCreator['startPosCoordinates'][4], imgui.ImVec2(385, 20))
                imgui.Hint(u8"Начальная точка это то место, где вы установили первый объект из шаблона")
                imgui.BeginChild('##listObjects', imgui.ImVec2(385, 236), true)
                        
                    imgui.CenterText("Список объектов")
                    imgui.Separator()
                    imgui.BeginChild('##listObjectsNormal', imgui.ImVec2(375, 200), false)
                        for k,v in pairs(objectsCreator['objects']) do
                            imgui.Button(u8(tObjectsName[v['idObject'] + 1]), imgui.ImVec2(340, 20))
                            imgui.SameLine()
                            if imgui.Button(fa.ICON_FA_TRASH .. "##"..k) then table.remove(objectsCreator['objects'], k) end
                        end
                    imgui.EndChild()
                imgui.EndChild()
                if imgui.Button(fa.ICON_FA_CHECK .. u8' Сохранить шаблон', imgui.ImVec2(385, 20)) then
                    local isNormal = true
                    local isLong = false
                    local errormsg = ""
                    for k,v in pairs(objectsTable) do
                        if v['nameIs'] == objectsCreator['nameIs'].v then
                            isNormal = false
                        end
                    end

                    if len(objectsCreator['nameIs'].v) < 5 or len(objectsCreator['nameIs'].v) > 30 then
                        isNormal = false
                    end



                    if isNormal then
                        local normalTableCreator = {
                            ['nameIs'] = objectsCreator['nameIs'].v,
                            ['startPosCreate'] = objectsCreator['startPosCreate'].v,
                            ['startPosCoordinates'] = objectsCreator['startPosCoordinates'],
                            ['objects'] = objectsCreator['objects']
                        }
                        table.insert(objectsTable, normalTableCreator)
                        saveJson(patches['objects'], objectsTable)
                        sampAddChatMessage("{2DF61C}[Objects-Menu]{FFFFFF} Шаблон объектов успешно сохранён.", -1)
                        imgui.CloseCurrentPopup()
                    else
                        imgui.OpenPopup(fa.ICON_FA_TIMES .. u8' Ошибка##objects')
                    end
                    
                    
                end
                if imgui.BeginPopupModal(fa.ICON_FA_TIMES .. u8' Ошибка##objects', imgui.ImBool(true), imgui.WindowFlags.NoResize) then
                    imgui.BeginChild('##ingchildError', imgui.ImVec2(800, 100), true)
                    imgui.CenterText("Кажется поле названия шаблона пусто или составляет меньше 3-ех символов, или больше 30-ти")
                    imgui.EndChild()
                imgui.EndPopup()
                end
                if imgui.Button(fa.ICON_FA_TIMES .. u8' Отменить и удалить шаблон', imgui.ImVec2(385, 20)) then
                    objectsCreator = {
                        ['nameIs'] = imgui.ImBuffer("",256),
                        ['isWorking'] = false,
                        ['startPosCreate'] = imgui.ImBool(false),
                        ['startPosCoordinates'] = {0,0,0,0},
                        ['objects'] = {}
                    }
                    imgui.CloseCurrentPopup()
                end
            imgui.EndChild()
        imgui.EndPopup()
        end
        imgui.Separator()
        
        imgui.BeginChild('##listObjects', imgui.ImVec2(sw / 2.439, 380), true)
            for k,v in pairs(objectsTable) do
                if imgui.Button(v['nameIs'], imgui.ImVec2(188.9,40)) then
                    if not editorShablon['isWorking'] or editorShablon['id'] == k then
                        imgui.OpenPopup(fa.ICON_FA_OBJECT_GROUP .. u8' Редактирование шаблона##'..k)
                        editorShablon['id'] = k
                        editorShablon['nameIs'] = imgui.ImBuffer(v['nameIs'],256)
                        editorShablon['startPosCreate'] = imgui.ImBool(v['startPosCreate'])
                        editorShablon['startPosCoordinates'] = v['startPosCoordinates']
                        editorShablon['objects'] = v['objects']
                    else
                        sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Вы не можете открыть этот шаблон, пока другой редактируется.", -1)
                    end
                end

                if imgui.BeginPopupModal(fa.ICON_FA_OBJECT_GROUP .. u8' Редактирование шаблона##'..k, imgui.ImBool(true), imgui.WindowFlags.NoResize) then
                    imgui.BeginChild('##inchobj', imgui.ImVec2(400, 420), true)
                    imgui.NewInputText('##nameshablon', editorShablon['nameIs'], 385, u8'Название шаблона', 2)
                        imgui.LazyButtonActivated('Ставить в начальной точке', editorShablon['startPosCreate'], imgui.ImVec2(385, 20))
                        imgui.Hint(u8"В случае, если этот параметр включен - вы будете телепортированы на точку, от куда вы начинали ставить объекты, соответственно все объекты будут установлены там. В ином случае - объекты будут установлены относительно вашего местоположения.")
                        imgui.Button(u8"Начальная точка: X: ".. editorShablon['startPosCoordinates'][1] .. ' | Y: ' .. editorShablon['startPosCoordinates'][2] .. " | Z: " .. editorShablon['startPosCoordinates'][3] .. " | A: " ..editorShablon['startPosCoordinates'][4], imgui.ImVec2(385, 20))
                        imgui.Hint(u8"Начальная точка это то место, где вы установили первый объект из шаблона")
                        imgui.BeginChild('##listObjects', imgui.ImVec2(385, 236), true)
                                
                            imgui.CenterText("Список объектов")
                            imgui.Separator()
                            imgui.BeginChild('##listObjectsNormal', imgui.ImVec2(375, 200), false)
                                for k,v in pairs(editorShablon['objects']) do
                                    imgui.Button(u8(tObjectsName[v['idObject'] + 1]), imgui.ImVec2(340, 20))
                                    imgui.SameLine()
                                    if imgui.Button(fa.ICON_FA_TRASH .. "##"..k) then table.remove(editorShablon['objects'], k) end
                                end
                            imgui.EndChild()
                        imgui.EndChild()
                        if imgui.Button(fa.ICON_FA_OBJECT_GROUP .. u8' Установить шаблон', imgui.ImVec2(385, 20)) then
                            lua_thread.create(function()

                                if editorShablon['startPosCreate'].v then
                                    settingObjectsConfig['variant'] = 1
                                    setCharCoordinates(PLAYER_PED, editorShablon['startPosCoordinates'][1], editorShablon['startPosCoordinates'][2], editorShablon['startPosCoordinates'][3])
                                    setCharHeading(PLAYER_PED,editorShablon['startPosCoordinates'][4])
                                else
                                    settingObjectsConfig['variant'] = 0
                                end

                                wait(500)
                                settingObjectsConfig['id'] = k
                                settingObjectsConfig['waiting'] = false
                                local mX, mY, mZ = getCharCoordinates(playerPed)
                                local heading = getCharHeading(playerPed)
                                settingObjectsConfig['startPos'] = {mX, mY, mZ, heading}
                                settingObjectsConfig['nowObject'] = 0
                                settingObjectsConfig['isSetting'] = true

                                
                            end)
                        end
                        local textEDitor = fa.ICON_FA_CHECK .. u8' Начать редактирование шаблона'
                        if editorShablon['isWorking'] then textEDitor = fa.ICON_FA_TIMES .. u8" Шаблон редактируется" end
                        if imgui.Button(textEDitor, imgui.ImVec2(385, 20)) then
                            if not editorShablon['isWorking'] then
                                editorShablon['isWorking'] = true
                                sampAddChatMessage("{2DF61C}[Objects-Menu]{FFFFFF} Редактирование шаблона начато. Устанавливайте объекты", -1)
                                imgui.CloseCurrentPopup()
                            else
                                editorShablon['isWorking'] = false
                                sampAddChatMessage("{2DF61C}[Objects-Menu]{FFFFFF} Редактирование шаблона завершено. Сохранитесь.", -1)
                            end
                        end

                        if imgui.Button(fa.ICON_FA_CHECK .. u8' Сохранить шаблон', imgui.ImVec2(385, 20)) then
                            local isNormal = true
                            local errormsg = ""
                            for ke,v in pairs(objectsTable) do
                                if ke ~= k and v['nameIs'] == editorShablon['nameIs'].v then
                                    isNormal = false
                                end
                            end
        
                            if len(editorShablon['nameIs'].v) < 5 or len(editorShablon['nameIs'].v) > 30 then
                                isNormal = false
                            end
        
        
        
                            if isNormal then
                                local normalTableCreator = {
                                    ['nameIs'] = editorShablon['nameIs'].v,
                                    ['startPosCreate'] = editorShablon['startPosCreate'].v,
                                    ['startPosCoordinates'] = editorShablon['startPosCoordinates'],
                                    ['objects'] = editorShablon['objects']
                                }
                                objectsTable[k] = clone(normalTableCreator)
                                saveJson(patches['objects'], objectsTable)
                                sampAddChatMessage("{2DF61C}[Objects-Menu]{FFFFFF} Шаблон успешно сохранён.", -1)
                                imgui.CloseCurrentPopup()
                            else
                                imgui.OpenPopup(fa.ICON_FA_TIMES .. u8' Ошибка##objects')
                            end
                            
                            
                        end
                        if imgui.BeginPopupModal(fa.ICON_FA_TIMES .. u8' Ошибка##objects', imgui.ImBool(true), imgui.WindowFlags.NoResize) then
                            imgui.BeginChild('##ingchildError', imgui.ImVec2(800, 100), true)
                                imgui.CenterText("Кажется поле названия шаблона пусто или составляет меньше 3-ех символов, или больше 30-ти")
                            imgui.EndChild()
                        imgui.EndPopup()
                        end
                        if imgui.Button(fa.ICON_FA_TIMES .. u8' Удалить шаблон', imgui.ImVec2(385, 20)) then
                            editorShablon['isWorking'] = false
                            table.remove(objectsTable, k)
                            saveJson(patches['objects'], objectsTable)
                            imgui.CloseCurrentPopup()
                        end
                    imgui.EndChild()
                imgui.EndPopup()
                end

                if k%4 ~= 0 then
                    imgui.SameLine()
                end
            end
        imgui.EndChild()

        imgui.EndChild()
    end
end

function warnings_window_settings()
    if windows['warnings'].v then

        imgui.BeginChild('##reconsettings',imgui.ImVec2(sw / 2.388 , 56),true)
        imgui.CenterText('Конфигурация кнопок')
        imgui.Separator()

        local pushing = 365.5
        local tLastKeys = {}
        

        if imgui.HotKey("##key_acceptW_form", formsHotKey['acceptW'], tLastKeys, pushing) then
            local isDefined, data = rkeys.getHotKey(formsHotKey['acceptW'].v)
            if isDefined then
                if #formsHotKey['acceptW'].v ~= 0 then
                    formsHotKey['acceptW'].v = tLastKeys.v
                    sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Данная комбинация уже занята!',-1)
                end
            else
                local isDefined, data = rkeys.getHotKey(tLastKeys.v)

                if isDefined then
                    rkeys.unRegisterHotKey(tLastKeys.v)
                    sampAddChatMessage('{FFA500}[Сохранение]{FFFFFF} Хоткей успешно удалён.',-1)
                end
                if #formsHotKey['acceptW'].v > 0 then
                    rkeys.registerHotKey(formsHotKey['accept'].v, 1, false, acceptFormW)
                    sampAddChatMessage("{FFA500}[Сохранение]{FFFFFF} Хоткей успешно сохранен.",-1)
                end
            end
            saveJson(patches['forms_hotkey'],formsHotKey)
        end
        imgui.SameLine(15)
        imgui.TextColored(imgui.ImVec4(1.00, 1.00, 1.00, 0.40), u8'Клавиша принятия: ')

        imgui.SameLine(pushing + 13)
        
        if imgui.Button(fa.ICON_FA_TRASH .. '##deleteformhotkey') then
            if rkeys.isHotKeyDefined(tLastKeys.v) then
                rkeys.unRegisterHotKey(tLastKeys.v)
                sampAddChatMessage('{FFA500}[Сохранение]{FFFFFF} Хоткей успешно удалён.',-1)
            end
            formsHotKey['acceptW']['v'] = {}
            saveJson(patches['forms_hotkey'],formsHotKey)
        end

        imgui.SameLine()

        if imgui.HotKey("##key_disbandW_form", formsHotKey['disbandW'], tLastKeys, pushing) then
            local isDefined, data = rkeys.getHotKey(formsHotKey['disbandW'].v)
            if isDefined then
                if #formsHotKey['disbandW'].v ~= 0 then
                    formsHotKey['disbandW'].v = tLastKeys.v
                    sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Данная комбинация уже занята!',-1)
                end
            else
                local isDefined, data = rkeys.getHotKey(tLastKeys.v)

                if isDefined then
                    rkeys.unRegisterHotKey(tLastKeys.v)
                    sampAddChatMessage('{FFA500}[Сохранение]{FFFFFF} Хоткей успешно удалён.',-1)
                end
                if #formsHotKey['disbandW'].v > 0 then
                    rkeys.registerHotKey(formsHotKey['disbandW'].v, 1, false, disbandFormW)
                    sampAddChatMessage("{FFA500}[Сохранение]{FFFFFF} Хоткей успешно сохранен.",-1)
                end
            end
            saveJson(patches['forms_hotkey'],formsHotKey)
        end
        imgui.SameLine(412)
        imgui.TextColored(imgui.ImVec4(1.00, 1.00, 1.00, 0.40), u8'Клавиша скипа: ')


        imgui.SameLine(412 + pushing - 2.5)
        
        if imgui.Button(fa.ICON_FA_TRASH .. '##deleteformhotkeydisband') then
            if rkeys.isHotKeyDefined(tLastKeys.v) then
                rkeys.unRegisterHotKey(tLastKeys.v)
                sampAddChatMessage('{FFA500}[Сохранение]{FFFFFF} Хоткей успешно удалён.',-1)
            end
            formsHotKey['disbandW']['v'] = {}
            saveJson(patches['forms_hotkey'],formsHotKey)
        end


        imgui.EndChild()
        imgui.BeginChild('##leftwarnings',imgui.ImVec2(sw / 4.811, sh / 1.78),false,imgui.WindowFlags.NoScrollbar)
        
        imgui.BeginChild('##warningflood', imgui.ImVec2(sw / 4.811, 176), true)
        imgui.CenterText("Варнинг на флуд")
        imgui.Separator()
        if imgui.LazyButtonActivated('',warningsSettings['flood']['state'], imgui.ImVec2(sw / 5, 20)) then ini.warnings.flood = warningsSettings['flood']['state'].v save() end
        if imgui.CustomButtonActivated('Форма на наказание', warningsSettings['flood']['showForm'], imgui.ImVec2(sw / 5, 20)) then ini.warnings.showFloodForm = warningsSettings['flood']['showForm'].v save() end
        imgui.PushItemWidth(sw / 5)
        if imgui.DragInt('##countflood',warningsSettings['flood']['count'],1,2,10, u8('Количество сообщений: %.0f')) then ini.warnings.floodCount = warningsSettings['flood']['count'].v save() end
        imgui.Hint(u8"Указанное число будет отвечать за количество одинаковых сообщений, которое может быть отправлено. Если количество одинаковых сообщений будет >= указанного значения - в чат будет выслан варнинг")
        if imgui.DragInt('##secondsflood',warningsSettings['flood']['seconds'],1,5,300, u8('КД: %.0f секунд')) then ini.warnings.secondsFlood = warningsSettings['flood']['seconds'].v save() end
        if imgui.DragInt('##minutesflood',warningsSettings['flood']['minutes'],1,5,300, u8('Время мута: %.0f минут')) then ini.warnings.minutesFlood = warningsSettings['flood']['minutes'].v save() end
        if imgui.NewInputText('##reasonflood', warningsSettings['flood']['muteReason'], sw / 5, u8'Причина наказания', 2) then ini.warnings.muteFloodReason = u8:decode(warningsSettings['flood']['muteReason'].v) save() end
        
        imgui.PopItemWidth()
        
        
        imgui.EndChild()


        imgui.BeginChild('##warningad', imgui.ImVec2(sw / 4.811, 176), true)
        imgui.CenterText("Варнинг на рекламу[/vr]")
        imgui.Separator()

        if imgui.LazyButtonActivated('',warningsSettings['ad']['state'], imgui.ImVec2(sw / 5, 20)) then ini.warnings.Ad = warningsSettings['ad']['state'].v save() end
        if imgui.CustomButtonActivated('Форма на наказание', warningsSettings['ad']['showForm'], imgui.ImVec2(sw / 5, 20)) then ini.warnings.showAdForm = warningsSettings['ad']['showForm'].v save() end
        imgui.PushItemWidth(sw / 5)
        if imgui.DragInt('##countad',warningsSettings['ad']['count'],1,2,10, u8('Количество сообщений за период: %.0f')) then ini.warnings.adCount = warningsSettings['ad']['count'].v save() end
        imgui.Hint(u8"Указанное число будет отвечать за количество одинаковых сообщений, которое может быть отправлено за промежуток времени. Если количество одинаковых сообщений будет >= указанного значения - в /vr будет выслан варнинг")
        if imgui.DragInt('##secondsad',warningsSettings['ad']['seconds'],1,5,3000, u8('КД: %.0f секунд')) then ini.warnings.adSeconds = warningsSettings['ad']['seconds'].v save() end

        if imgui.DragInt('##minutesad',warningsSettings['ad']['minutes'],1,5,300, u8('Время мута: %.0f минут')) then ini.warnings.adMinutes = warningsSettings['ad']['minutes'].v save() end
        if imgui.NewInputText('##reasonad', warningsSettings['ad']['muteReason'], sw / 5, u8'Причина наказания', 2) then ini.warnings.muteAdReason = u8:decode(warningsSettings['ad']['muteReason'].v) save() end
        

        imgui.EndChild()


        imgui.BeginChild('##warningrvanka', imgui.ImVec2(sw / 4.811, 153), true)
        imgui.CenterText("Варнинг на рванку")
        imgui.Separator()
        if imgui.LazyButtonActivated('',warningsSettings['rvanka']['state'], imgui.ImVec2(sw / 5, 20)) then ini.warnings.rvanka = warningsSettings['rvanka']['state'].v save() end
        imgui.PushItemWidth(sw / 10.13)
        if imgui.DragFloat('##onfootspeedlimit',warningsSettings['rvanka']['onfootSpeedLimit'],0.1,0.01,10, u8('Чувствительность с ног: %.2f')) then ini.warnings.onfootSpeedLimit = warningsSettings['rvanka']['onfootSpeedLimit'].v save() end
        imgui.Hint(u8"Чувствительность обнаружения рванки с ног")
        imgui.SameLine()
        if imgui.DragFloat('##onfootdistlimit',warningsSettings['rvanka']['onfootDistLimit'],1,1,200, u8('Дистанция с ног: %.0f м')) then ini.warnings.onfootDistLimit = warningsSettings['rvanka']['onfootDistLimit'].v save() end
        imgui.Hint(u8"Дистанция обнаружения рванки с ног")
        if imgui.DragFloat('##incarspeedlimit',warningsSettings['rvanka']['incarSpeedLimit'],0.1,0.01,10, u8('Чувствительность с авто: %.2f')) then ini.warnings.incarSpeedLimit = warningsSettings['rvanka']['incarSpeedLimit'].v save() end
        imgui.Hint(u8"Чувствительность обнаружения рванки с авто")
        imgui.SameLine()
        if imgui.DragFloat('##incardistlimit',warningsSettings['rvanka']['incarDistLimit'],1,1,200, u8('Дистанция с авто: %.0f м')) then ini.warnings.incarDistLimit = warningsSettings['rvanka']['incarDistLimit'].v save() end
        imgui.Hint(u8"Дистанция обнаружения рванки с авто")

        if imgui.DragFloat('##unocupspeedlimit',warningsSettings['rvanka']['unocSpeedLimit'],0.1,0.01,10, u8('Чувствительность с пас: %.2f')) then ini.warnings.unocSpeedLimit = warningsSettings['rvanka']['unocSpeedLimit'].v save() end
        imgui.Hint(u8"Чувствительность обнаружения рванки с пассажирского места")
        imgui.SameLine()
        if imgui.DragFloat('##unocupdistlimit',warningsSettings['rvanka']['unocDistLimit'],1,1,200, u8('Дистанция с пас: %.0f м')) then ini.warnings.unocDistLimit = warningsSettings['rvanka']['unocDistLimit'].v save() end
        imgui.Hint(u8"Дистанция обнаружения рванки с пассажирского места")
        imgui.PopItemWidth()
        imgui.PushItemWidth(sw / 5)
        if imgui.DragInt('##cooldownsend',warningsSettings['rvanka']['coolDown'],1,1,60, u8('КД варнинга на одного человека: %.0f секунд')) then ini.warnings.coolDownRvanka = warningsSettings['rvanka']['coolDown'].v save() end
        imgui.PopItemWidth()

        imgui.EndChild()
   
        imgui.EndChild()

        imgui.SameLine()

        imgui.BeginChild('##rightwarnings', imgui.ImVec2(sw / 4.811, sh / 1.78), false, imgui.WindowFlags.NoScrollbar)

        imgui.BeginChild('##warningcaps', imgui.ImVec2(sw / 4.811, 153), true)
        imgui.CenterText("Варнинг на капс")
        imgui.Separator()

        if imgui.LazyButtonActivated('',warningsSettings['caps']['state'], imgui.ImVec2(sw / 5, 20)) then ini.warnings.caps = warningsSettings['caps']['state'].v save() end
        if imgui.CustomButtonActivated('Форма на наказание', warningsSettings['caps']['showForm'], imgui.ImVec2(sw / 5, 20)) then ini.warnings.showCapsForm = warningsSettings['caps']['showForm'].v save() end
        imgui.PushItemWidth(sw / 5)
        if imgui.DragInt('##percentcaps',warningsSettings['caps']['percent'],1,1,100, u8('Процент капса: %.0f %%')) then ini.warnings.percentCaps = warningsSettings['caps']['percent'].v save() end
        if imgui.DragInt('##minutescaps',warningsSettings['caps']['minutes'],1,5,300, u8('Время мута: %.0f минут')) then ini.warnings.minutesCaps = warningsSettings['caps']['minutes'].v save() end
        if imgui.NewInputText('##reasoncaps', warningsSettings['caps']['muteReason'], sw / 5, u8'Причина наказания', 2) then ini.warnings.muteCapsReason = u8:decode(warningsSettings['caps']['muteReason'].v) save() end
        
        imgui.PopItemWidth()
        

        imgui.EndChild()

        imgui.BeginChild('##warningpesok', imgui.ImVec2(sw / 4.811, 56), true)
        imgui.CenterText("Варнинг на песок")
        imgui.Separator()
        if imgui.LazyButtonActivated('',warningsSettings['pesok']['state'], imgui.ImVec2(sw / 5, 20)) then ini.warnings.pesok = warningsSettings['pesok']['state'].v save() end
        imgui.EndChild()


        --imgui.BeginChild('##warningaimbot', imgui.ImVec2(sw / 4.811, 150), true)
        --imgui.CenterText("Варнинг на AimBot | Отключено")
        --imgui.Separator()
        --if imgui.LazyButtonActivated('',warningsSettings['aimbot']['state'], imgui.ImVec2(sw / 5, 20)) then ini.warnings.aimBot = warningsSettings['aimbot']['state'].v save() end
        --if imgui.UnicButtonActivated('Попадание в одну часть тела', "Учитывается", "Не учитывается", warningsSettings['aimbot']['onePart'], imgui.ImVec2(sw / 5, 20)) then ini.warnings.aimBotOnePart = warningsSettings['aimbot']['onePart'].v save() end
        --imgui.Hint(u8"В случае если выстрел будет по другой части тела, не по той, которая была при предыдущем выстреле - счетчик будет сброшен")
        --if imgui.LazyButtonActivated('Сбивание счетчика при смене оружия',warningsSettings['aimbot']['aimBotOneGun'], imgui.ImVec2(sw / 5, 20)) then ini.warnings.aimBotOneGun = warningsSettings['aimbot']['aimBotOneGun'].v save() end
        --imgui.PushItemWidth(sw / 5)
        --if imgui.DragInt('##secondsaimbot',warningsSettings['aimbot']['seconds'],1,2,10, u8('Тайминги: %.0f секунд')) then ini.warnings.aimBotSeconds = warningsSettings['aimbot']['seconds'].v save() end
        --imgui.PopItemWidth()
        --imgui.PushItemWidth(sw / 6.55)
        --if imgui.Button('<<', imgui.ImVec2(40, 20)) then if warningAimBotSettings['count'] > 1 then warningAimBotSettings['count'] = warningAimBotSettings['count'] - 1 end end
        --imgui.SameLine()
        --if imgui.DragInt('##gunaimbot',warningsSettings['aimbot'][warningAimBotSettings['guns'][warningAimBotSettings['count']]],1,2,100, u8(warningAimBotSettings['guns'][warningAimBotSettings['count']] .. ' | Попаданий подряд: %.0f')) then ini.warnings[warningAimBotSettings['gunsIni'][warningAimBotSettings['count']]] = warningsSettings['aimbot'][warningAimBotSettings['guns'][warningAimBotSettings['count']]].v save() end
        --imgui.SameLine()
        --if imgui.Button('>>', imgui.ImVec2(40, 20)) then if warningAimBotSettings['count'] < 9 then warningAimBotSettings['count'] = warningAimBotSettings['count'] + 1 end end
        --imgui.PopItemWidth()
        --imgui.EndChild()

        imgui.BeginChild('##warningmassdm', imgui.ImVec2(sw / 4.811, 105), true)
        imgui.CenterText("Варнинг на Массовый ДМ")
        imgui.Separator()
        if imgui.LazyButtonActivated('',warningsSettings['massDM']['state'], imgui.ImVec2(sw / 5, 20)) then ini.warnings.massDM = warningsSettings['massDM']['state'].v save() end
        imgui.PushItemWidth(sw / 5)
        if imgui.DragInt('##massdmkd',warningsSettings['massDM']['seconds'],1,1,120, u8('КД: %.0f секунд')) then ini.warnings.massDMSeconds = warningsSettings['massDM']['seconds'].v save() end
        if imgui.DragInt('##massdcount',warningsSettings['massDM']['count'],1,2,10, u8('Количество убийств: %.0f')) then ini.warnings.countMassDM = warningsSettings['massDM']['count'].v save() end

        imgui.PopItemWidth()
        imgui.EndChild()


        imgui.BeginChild('##warningteamkill', imgui.ImVec2(sw / 4.811, 56), true)
        imgui.CenterText("Варнинг на TeamKill")
        imgui.Separator()
        if imgui.LazyButtonActivated('',warningsSettings['teamKill']['state'], imgui.ImVec2(sw / 5, 20)) then ini.warnings.teamKill = warningsSettings['teamKill']['state'].v save() end
        imgui.EndChild()

        imgui.EndChild()
    end
end

function chats_window_settings()

    if windows['chats'].v then
        imgui.BeginChild("##long-and-joinExit", imgui.ImVec2(sw / 4.811 , sh / 1.78),true)
        local text_offset = sw / 8
        local btn_offset = sw / 10.15

        imgui.BeginChild("##left-child-up", imgui.ImVec2(sw / 10.15, sh / 25),false)
        imgui.CenterText("Дальний чат")
        imgui.Separator()
        if imgui.CustomButtonActivated('',longChatSettings['show'], imgui.ImVec2(sw / 10.15, 20)) then ini.long_chat.show = longChatSettings['show'].v save() end
        imgui.EndChild()
        imgui.SameLine()

        imgui.BeginChild("##right-child-up", imgui.ImVec2(sw / 10.15, sh / 25),false)
        imgui.CenterText("Входы/выходы")
        imgui.Separator()
        if imgui.CustomButtonActivated('',logJoinExit['show'], imgui.ImVec2(sw / 10.15, 20)) then ini.joinExit.show = logJoinExit['show'].v save() end
        imgui.EndChild()
        imgui.Separator()
        imgui.CenterText("Конфигурация интерфейсов")

        imgui.BeginChild("##left-child-down", imgui.ImVec2(sw / 10.15, sh / 2.08),false)
        imgui.Separator()
        if imgui.CustomButtonActivated("Время", longChatSettings['showSendTime'], imgui.ImVec2(btn_offset,20)) then ini.long_chat.showSendTime = longChatSettings['showSendTime'].v save() end
        imgui.Hint(u8"Отображать время отправления")
        if imgui.CustomButtonActivated("Ник", longChatSettings['showSenderNick'], imgui.ImVec2(btn_offset,20)) then ini.long_chat.showSenderNick = longChatSettings['showSenderNick'].v save() end
        imgui.Hint(u8"Отображать ник отправителя")
        if imgui.CustomButtonActivated("ID", longChatSettings['showSenderID'], imgui.ImVec2(btn_offset,20)) then ini.long_chat.showSenderID = longChatSettings['showSenderID'].v save() end
        imgui.Hint(u8"Отображать ID отправителя")
        if imgui.CustomButtonActivated("Дистанция", longChatSettings['showSenderDist'], imgui.ImVec2(btn_offset,20))  then ini.long_chat.showSenderDist = longChatSettings['showSenderDist'].v save() end
        imgui.Hint(u8"Отображать дистанцию до отправителя")
        if imgui.CustomButtonActivated("Текст", longChatSettings['showSenderText'], imgui.ImVec2(btn_offset,20)) then ini.long_chat.showSenderText = longChatSettings['showSenderText'].v save() end
        imgui.Hint(u8"Отображать текст отправителя")

        if imgui.CustomRadioButton(fa.ICON_FA_ALIGN_LEFT, longChatSettings['centering'], 1, imgui.ImVec2(60,20)) then ini.long_chat.centering = longChatSettings['centering'].v save() end
        imgui.Hint(u8"Центрирование текста по левому краю")
        imgui.SameLine()
        
        if imgui.CustomRadioButton(fa.ICON_FA_ALIGN_CENTER, longChatSettings['centering'], 2, imgui.ImVec2(60,20)) then ini.long_chat.centering = longChatSettings['centering'].v save() end
        imgui.Hint(u8"Центрирование текста по центру")
        imgui.SameLine()
        if imgui.CustomRadioButton(fa.ICON_FA_ALIGN_RIGHT, longChatSettings['centering'], 3, imgui.ImVec2(60,20)) then ini.long_chat.centering = longChatSettings['centering'].v save() end
        imgui.Hint(u8"Центрирование текста по правому краю")
        imgui.Separator()
        if imgui.ColorEdit4(u8'Время',longChatSettings['colorTime'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.long_chat.colorTime = float2hex(longChatSettings['colorTime']) save() end
        imgui.SameLine()
        if imgui.ColorEdit4(u8'Ник',longChatSettings['colorNick'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.long_chat.colorNick = float2hex(longChatSettings['colorNick']) save() end
        imgui.SameLine()
        if imgui.ColorEdit4(u8'ID',longChatSettings['colorID'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.long_chat.colorID = float2hex(longChatSettings['colorID']) save() end
        imgui.SameLine()
        if imgui.ColorEdit4(u8'D',longChatSettings['colorDist'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.long_chat.colorDist = float2hex(longChatSettings['colorDist']) save() end
        imgui.Hint(u8"Окраска цифры дистанции до игрока")
        if imgui.ColorEdit4(u8'Dist(D)',longChatSettings['colorDistTag'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.long_chat.colorDistTag = float2hex(longChatSettings['colorDistTag']) save() end
        imgui.Hint(u8'Покраска буквы "D"')
        imgui.SameLine()
        if imgui.ColorEdit4(u8'Text',longChatSettings['colorText'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.long_chat.colorText = float2hex(longChatSettings['colorText']) save() end
        imgui.SameLine()
        if imgui.ColorEdit4(u8'База',longChatSettings['colorBased'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.long_chat.colorBased = float2hex(longChatSettings['colorBased']) save() end
        imgui.Hint(u8"Прозрачность регулируется с помощью Базы")
        imgui.Separator()
        if imgui.NewInputText('##fnamelc',longChatSettings['fname'],btn_offset,u8'Название шрифта',2) then ini.long_chat.fname = longChatSettings['fname'].v save() fonts['longChat'] = renderCreateFont(longChatSettings['fname'].v, longChatSettings['fsize'].v, longChatSettings['fflag'].v) end
        imgui.PushItemWidth(btn_offset)
        if imgui.DragInt('##fsizelc',longChatSettings['fsize'], 0.1, 1, 50, u8('Размер шрифта: %.0f')) then ini.long_chat.fsize = longChatSettings['fsize'].v save() fonts['longChat'] = renderCreateFont(longChatSettings['fname'].v, longChatSettings['fsize'].v, longChatSettings['fflag'].v) end
        if imgui.DragInt('##fOffslc',longChatSettings['fOffs'], 0.1, 1, 100, u8('Оффсет шрифта: %.0f')) then ini.long_chat.fOffs = longChatSettings['fOffs'].v save() end
        if imgui.DragInt('##fflaglc',longChatSettings['fflag'], 0.1, 1, 100, u8('Флаг шрифта: %.0f')) then ini.long_chat.fflag = longChatSettings['fflag'].v save() fonts['longChat'] = renderCreateFont(longChatSettings['fname'].v, longChatSettings['fsize'].v, longChatSettings['fflag'].v) end
        if imgui.DragInt('##linesChat', longChatSettings['linesChat'], 0.1, 1, 50, u8('Кол-во строк: %.0f')) then ini.long_chat.linesChat = longChatSettings['linesChat'].v save() end
        if imgui.Button(fa.ICON_FA_ARROWS_ALT .. u8' Редактировать позицию',imgui.ImVec2(btn_offset, sh / 54)) then moveInterface(longChatSettings['x'],longChatSettings['y'],function(x,y) ini.long_chat.x = x ini.long_chat.y = y save() end) end
        imgui.PopItemWidth()

        imgui.EndChild()

        imgui.SameLine()

        imgui.BeginChild("##right-child-down", imgui.ImVec2(sw / 10.15, sh / 2.08),false)
        imgui.Separator()
        if imgui.CustomButtonActivated('Время',logJoinExit['showJoinExitTime'],imgui.ImVec2(btn_offset, 20)) then ini.joinExit.showJoinExitTime = logJoinExit['showJoinExitTime'].v save() end
        imgui.Hint(u8"Отображать время входа/выхода")
        if imgui.CustomButtonActivated('Ник',logJoinExit['showNick'],imgui.ImVec2(btn_offset, 20)) then ini.joinExit.showNick = logJoinExit['showNick'].v save() end
        imgui.Hint(u8"Отображать ник входящего/выходящего")
        if imgui.CustomButtonActivated('ID',logJoinExit['showID'],imgui.ImVec2(btn_offset, 20)) then ini.joinExit.showID = logJoinExit['showID'].v save() end
        imgui.Hint(u8"Отображать ID входящего/выходящего")
        if imgui.CustomButtonActivated('Текст',logJoinExit['showText'],imgui.ImVec2(btn_offset, 20)) then ini.joinExit.showText = logJoinExit['showText'].v save() end
        imgui.Hint(u8"Отображать текст о входе/выходе")
        imgui.Button('',imgui.ImVec2(btn_offset, 20))
        if imgui.CustomRadioButton(fa.ICON_FA_ALIGN_LEFT .. "##123", logJoinExit['centering'], 1, imgui.ImVec2(60,20)) then ini.joinExit.centering = logJoinExit['centering'].v save() end
        imgui.Hint(u8"Центрирование текста по левому краю")
        imgui.SameLine()
        if imgui.CustomRadioButton(fa.ICON_FA_ALIGN_CENTER .. "##123", logJoinExit['centering'], 2, imgui.ImVec2(60,20)) then ini.joinExit.centering = logJoinExit['centering'].v save() end
        imgui.Hint(u8"Центрирование текста по центру")
        imgui.SameLine()
        if imgui.CustomRadioButton(fa.ICON_FA_ALIGN_RIGHT .. "##123", logJoinExit['centering'], 3, imgui.ImVec2(60,20)) then ini.joinExit.centering = logJoinExit['centering'].v save() end
        imgui.Hint(u8"Центрирование текста по правому краю")
        imgui.Separator()
        if imgui.ColorEdit4(u8'Основа##2',logJoinExit['colorBased'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.joinExit.colorBased = float2hex(logJoinExit['colorBased']) save() end
        imgui.SameLine()
        if imgui.ColorEdit4(u8'Время##2',logJoinExit['colorTime'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.joinExit.colorTime = float2hex(logJoinExit['colorTime']) save() end
        imgui.SameLine()
        if imgui.ColorEdit4(u8'Ник##2',logJoinExit['colorNick'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.joinExit.colorNick = float2hex(logJoinExit['colorNick']) save() end
        if imgui.ColorEdit4(u8'ID##2',logJoinExit['colorID'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.joinExit.colorID = float2hex(logJoinExit['colorID']) save() end
        imgui.SameLine(135)
        if imgui.ColorEdit4(u8'Text##2',logJoinExit['colorText'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.joinExit.colorText = float2hex(logJoinExit['colorText']) save() end
        imgui.Separator()
        imgui.PushItemWidth(btn_offset)
        if imgui.NewInputText('##fnameej',logJoinExit['fname'],btn_offset,u8'Название шрифта',2) then ini.joinExit.fname = logJoinExit['fname'].v save() fonts['joinExit'] = renderCreateFont(logJoinExit['fname'].v, logJoinExit['fsize'].v, logJoinExit['fflag'].v) end
        imgui.HintInputFont()
        if imgui.DragInt('##fsizeej',logJoinExit['fsize'], 0.1, 1, 50, u8('Размер шрифта: %.0f')) then ini.joinExit.fsize = logJoinExit['fsize'].v save() fonts['joinExit'] = renderCreateFont(logJoinExit['fname'].v, logJoinExit['fsize'].v, logJoinExit['fflag'].v) end
        if imgui.DragInt('##fOffsej',logJoinExit['fOffs'], 0.1, 1, 100, u8('Оффсет шрифта: %.0f')) then ini.joinExit.fOffs = logJoinExit['fOffs'].v save() end
        if imgui.DragInt('##fflagej',logJoinExit['fflag'], 0.1, 1, 100, u8('Флаг шрифта: %.0f')) then ini.joinExit.fflag = logJoinExit['fflag'].v save() fonts['joinExit'] = renderCreateFont(logJoinExit['fname'].v, logJoinExit['fsize'].v, logJoinExit['fflag'].v) end
        if imgui.DragInt('##linesChatej', logJoinExit['linesChat'], 0.1, 1, 50, u8('Кол-во строк: %.0f')) then ini.joinExit.linesChat = logJoinExit['linesChat'].v save() end
        imgui.PopItemWidth()
        if imgui.Button(fa.ICON_FA_ARROWS_ALT .. u8' Редактировать позицию##next',imgui.ImVec2(btn_offset, sh / 54)) then moveInterface(logJoinExit['x'],logJoinExit['y'],function(x,y) ini.joinExit.x = x ini.joinExit.y = y save() end) end
        imgui.EndChild()
        imgui.EndChild()

        imgui.SameLine()

        imgui.BeginChild("##custom-chats", imgui.ImVec2(sw / 4.811 , sh / 1.78),true)
            imgui.CenterText("Свои чаты")
            imgui.Separator()
            imgui.NewInputText('##chatname',personalChatSettings['name'],sw / 5,u8'Название чата',2)

            if imgui.CustomButtonActivated('',personalChatSettings['show'], imgui.ImVec2(sw / 5, 20)) then ini.joinExit.show = logJoinExit['show'].v save() end
            imgui.CustomButtonActivated("Время", personalChatSettings['showTime'], imgui.ImVec2(sw / 5,20))
            imgui.Hint(u8"Отображать время отправления")
            imgui.Separator()
            if imgui.Button(u8"Справочник по регулярным выражениям", imgui.ImVec2(sw / 5, 20)) then imgui.OpenPopup(u8'Справочник по регулярным выражениям ##boba') end
            if imgui.BeginPopupModal(u8'Справочник по регулярным выражениям ##boba', imgui.ImBool(true), imgui.WindowFlags.NoResize) then
                popup_regulars()
            imgui.EndPopup()
            end
            imgui.Separator()
            imgui.BeginChild("##regulars", imgui.ImVec2(sw / 4.811, 120), false, imgui.WindowFlags.NoScrollbar)
            local normalWidth = sw / 5.35
            
            for k,v in pairs(personalChatSettings['regex']) do
                local isClickablePalette = #v['regular'].v > 0
                if k ~= 1 then normalWidth = sw / 5.78 end
                imgui.NewInputText('##regular_'..k, v['regular'], normalWidth,u8"Регулярное выражение #"..k, 1)
                if k ~= 1 then 
                    imgui.SameLine(336)
                    if imgui.Button(fa.ICON_FA_TRASH .. '##'..k) then table.remove(personalChatSettings['regex'], k) end
                    imgui.SameLine()
                else
                    imgui.SameLine(362.5)
                end
                
                if imgui.ButtonClickable(isClickablePalette,fa.ICON_FA_PALETTE .. '##' ..k) then 
                    imgui.OpenPopup(fa.ICON_FA_PALETTE .. u8" Редактирование цветовой палитры #"..k) 
                    for w in v['regular'].v:gmatch("paint%(([A-Za-z %-%d+]+)%)") do
                        if personalChatSettings['regex'][k]['colors'][w] == nil then
                            personalChatSettings['regex'][k]['colors'][w] = imgui.ImFloat4(imgui.ImColor(hextorgba("FFFFFFFF")):GetFloat4())
                        end
                    end

                    for key,_ in pairs(v['colors']) do
                        if key ~= 'time' and key ~= 'based' then
                            if not v['regular'].v:match("paint%(".. key .."%)") then
                                personalChatSettings['regex'][k]['colors'][key] = nil
                            end
                        end
                    end
                end
                imgui.SetNextWindowSize(imgui.ImVec2(sw / 3.76, sh / 5.4), imgui.Cond.FirstUseEver)
                if imgui.BeginPopupModal(fa.ICON_FA_PALETTE .. u8" Редактирование цветовой палитры #"..k, imgui.ImBool(true), imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoScrollbar + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove) then
                    imgui.BeginChild('##pallettteeeeeeeeeee', imgui.ImVec2(sw / 3.875, sh / 6.6), true)
                    imgui.CenterText("Базовый цвет")
                    imgui.Separator()
                    imgui.PushItemWidth(sw / 4)
                    imgui.ColorEdit4("##bazacolor",v['colors']['based'],imgui.ColorEditFlags.AlphaBar)
                    imgui.Separator()
                    imgui.CenterText("Цвет времени")
                    imgui.Separator()
                    imgui.ColorEdit4("##timecolor",v['colors']['time'],imgui.ColorEditFlags.AlphaBar)
                    for k,v in pairs(v['colors']) do
                        if k ~= 'time' and k ~= 'based' then
                            imgui.Separator()
                            imgui.CenterText(u8:decode(tostring(k)))
                            imgui.Separator()
                            imgui.ColorEdit4("##customcolorname"..k, v, imgui.ColorEditFlags.AlphaBar)
                        end
                    end
                    imgui.PopItemWidth()
                    imgui.End()
                imgui.EndPopup()    
                end
            end
            imgui.EndChild()

            if imgui.Button(fa.ICON_FA_PLUS .. u8" Добавить регулярное выражение", imgui.ImVec2(sw / 5, 20)) then 
                table.insert(personalChatSettings['regex'],{['regular'] = imgui.ImBuffer("",256),['colors'] = {['based'] = imgui.ImFloat4(imgui.ImColor(hextorgba("FFFFFFFF")):GetFloat4()),['time'] = imgui.ImFloat4(imgui.ImColor(hextorgba("FFFFFFFF")):GetFloat4()),}}) 
            end
            imgui.Separator()
            imgui.PushItemWidth(sw / 5)
            local btn_offset_centering = 124.5
            imgui.CustomRadioButton(fa.ICON_FA_ALIGN_LEFT, personalChatSettings['centering'], 1, imgui.ImVec2(btn_offset_centering,20))
            imgui.Hint(u8"Центрирование текста по левому краю")
            imgui.SameLine()
            
            imgui.CustomRadioButton(fa.ICON_FA_ALIGN_CENTER, personalChatSettings['centering'], 2, imgui.ImVec2(btn_offset_centering,20))
            imgui.Hint(u8"Центрирование текста по центру")
            imgui.SameLine()
            imgui.CustomRadioButton(fa.ICON_FA_ALIGN_RIGHT, personalChatSettings['centering'], 3, imgui.ImVec2(btn_offset_centering,20))
            imgui.Hint(u8"Центрирование текста по правому краю")

            imgui.NewInputText('##fnamenew',personalChatSettings['fname'],sw / 5,u8'Название шрифта',2)
            imgui.HintInputFont()
            imgui.DragInt('##fsizenew',personalChatSettings['fsize'], 0.1, 1, 50, u8('Размер шрифта: %.0f'))
            imgui.DragInt('##fOffsnew',personalChatSettings['fOffs'], 0.1, 1, 100, u8('Оффсет шрифта: %.0f'))
            imgui.DragInt('##fflagnew',personalChatSettings['fflag'], 0.1, 1, 100, u8('Флаг шрифта: %.0f'))
            imgui.DragInt('##linesChatnew', personalChatSettings['linesChat'], 0.1, 1, 50, u8('Кол-во строк: %.0f'))
            if imgui.Button(fa.ICON_FA_ARROWS_ALT .. u8' Установить позицию на экране', imgui.ImVec2(sw / 5,20)) then moveInterface(personalChatSettings['x'],personalChatSettings['y'],function()  end) end
            imgui.PopItemWidth()
            imgui.Separator()
            if #errorPchat > 0 then
                imgui.TextWrapped(u8(errorPchat))
            end

            if imgui.Button(fa.ICON_FA_PLUS .. u8' Добавить чат', imgui.ImVec2(sw / 5, 20)) then
                local isExistName = false

                for _, vl in pairs(pChatsTableImgui) do
                    if stringToLower(u8:decode(vl['name'].v)) == stringToLower(u8:decode(personalChatSettings['name'].v)) then
                        isExistName = true
                    end
                end

                local isSomesFilled = false
                for key, vm in pairs(personalChatSettings['regex']) do
                    if #vm['regular'].v <= 0 then
                        if key ~= 1 then
                            table.remove(personalChatSettings['regex'], key)
                        end
                    else
                        isSomesFilled = true
                    end
                end

                if isExistName then
                    errorPchat = "Чат с таким названием существует"
                elseif len(personalChatSettings['name'].v) > 18 or len(personalChatSettings['name'].v) <= 0 then
                    errorPchat = "Название чата должно состоять не менее чем из 1-ого и не более чем из 18-ти символов"
                elseif not isSomesFilled then
                    errorPchat = "Хотя-бы одно регулярное выражение должно быть заполнено"
                else
                    local rightTable = {
                        ['name'] = u8:decode(personalChatSettings['name'].v),
                        ['show'] = personalChatSettings['show'].v,
                        ['regex'] = {},
                        ['x'] = personalChatSettings['x'].v,
                        ['y'] = personalChatSettings['y'].v,
                        ['centering'] = personalChatSettings['centering'].v,
                        ['showTime'] = personalChatSettings['showTime'].v,
                        ['fsize'] = personalChatSettings['fsize'].v,
                        ['fname'] = personalChatSettings['fname'].v,
                        ['fflag'] = personalChatSettings['fflag'].v,
                        ['fOffs'] = personalChatSettings['fOffs'].v,
                        ['linesChat'] = personalChatSettings['linesChat'].v,
                    }
                    fontsPChats[personalChatSettings['name'].v] = renderCreateFont(personalChatSettings['fname'].v, personalChatSettings['fsize'].v, personalChatSettings['fflag'].v)
                    for k,v in pairs(personalChatSettings['regex']) do
                        rightTable['regex'][#rightTable['regex'] + 1] = {['regular'] = u8:decode(v['regular'].v), ['colors'] = {}}
                        
                        for keykey, value in pairs(v['colors']) do
                            rightTable['regex'][#rightTable['regex']]['colors'][keykey] = float2hex(value)
                        end
                    end
                    errorPchat = ""
                    buffersPChats[personalChatSettings['name'].v] = {}

                    pChatsTable[#pChatsTable + 1] = clone(rightTable)
                    saveJson(patches['pChats'], pChatsTable)
                    pChatsTable = loadJson(patches['pChats'], pChatsTable)

                    local bingusreservimgui = {}
                    for k,v in pairs(pChatsTable) do
                        bingusreservimgui[k] = {
                            ['name'] = imgui.ImBuffer(u8(v['name']),256),
                            ['show'] = imgui.ImBool(v['show']),
                            ['regex'] = {},
                            ['x'] = imgui.ImFloat(v['x']),
                            ['y'] = imgui.ImFloat(v['y']),
                            ['centering'] = imgui.ImInt(v['centering']),
                            ['showTime'] = imgui.ImBool(v['showTime']),
                            ['fsize'] = imgui.ImInt(v['fsize']),
                            ['fname'] = imgui.ImBuffer(v['fname'],256),
                            ['fflag'] = imgui.ImInt(v['fflag']),
                            ['fOffs'] = imgui.ImInt(v['fOffs']),
                            ['linesChat'] = imgui.ImInt(v['linesChat']),
                        }

                        for kk,vv in pairs(v['regex']) do
                            bingusreservimgui[k]['regex'][#bingusreservimgui[k]['regex'] + 1] = {['regular'] = imgui.ImBuffer(u8(vv['regular']), 300), ['colors'] = {}}
                            
                            for keykey, value in pairs(vv['colors']) do
                                bingusreservimgui[k]['regex'][#bingusreservimgui[k]['regex']]['colors'][keykey] = imgui.ImFloat4(imgui.ImColor(hextorgba(value)):GetFloat4())
                            end
                        end
                    end

                    pChatsTableImgui = clone(bingusreservimgui)
                    render_TableChat(#pChatsTableImgui,pChatsTableImgui[#pChatsTableImgui])
                    personalChatSettings['name'].v = ""
                    personalChatSettings['show'].v = false
                    personalChatSettings['regex'] = {
                        {
                            ['regular'] = imgui.ImBuffer("",256),
                            ['colors'] = {
                                ['based'] = imgui.ImFloat4(imgui.ImColor(hextorgba("FFFFFFFF")):GetFloat4()),
                                ['time'] = imgui.ImFloat4(imgui.ImColor(hextorgba("FFFFFFFF")):GetFloat4()),
                            }
                        }
                    }
                    personalChatSettings['x'].v = sw / 2
                    personalChatSettings['y'].v = sh / 2
                    personalChatSettings['centering'].v = 1
                    personalChatSettings['showTime'].v = true
                    personalChatSettings['fsize'].v = 9
                    personalChatSettings['fname'].v = "Arial"
                    personalChatSettings['fflag'].v = 5
                    personalChatSettings['fOffs'].v = 16
                    personalChatSettings['linesChat'].v = 5

                end

            end
            imgui.Separator()
            imgui.BeginChild('##listchats', imgui.ImVec2(sw / 5, 115), false)
                for k,v in pairs(pChatsTableImgui) do
                dntForget = k
                    if imgui.Button(v['name'].v, imgui.ImVec2(sw / 10.11, 20)) then
                        errorPchat = ""
                        imgui.OpenPopup(fa.ICON_FA_EDIT .. u8' Редактирование чата #'..k)
                    end
                    
                    if imgui.BeginPopupModal(fa.ICON_FA_EDIT .. u8' Редактирование чата #'..k, imgui.ImBool(true), imgui.WindowFlags.NoResize) then
                        imgui.BeginChild("##custom-chats", imgui.ImVec2(sw / 4.811 , sh / 2.15),true)
                        if imgui.NewInputText('##chatname',v['name'],sw / 5,u8'Название чата',2) then saveChat(dntForget) end

                        if imgui.CustomButtonActivated('',v['show'], imgui.ImVec2(sw / 5, 20)) then saveChat(dntForget) end
                        imgui.CustomButtonActivated("Время", v['showTime'], imgui.ImVec2(sw / 5,20))
                        imgui.Hint(u8"Отображать время отправления")
                        imgui.Separator()
                        if imgui.Button(u8"Справочник по регулярным выражениям", imgui.ImVec2(sw / 5, 20)) then imgui.OpenPopup(u8'Справочник по регулярным выражениям ##'..k) end
                        if imgui.BeginPopupModal(u8'Справочник по регулярным выражениям ##'..k, imgui.ImBool(true), imgui.WindowFlags.NoResize) then
                            popup_regulars()
                        imgui.EndPopup()
                        end

                        imgui.Separator()
                        imgui.BeginChild("##regulars", imgui.ImVec2(sw / 4.811, 120), false, imgui.WindowFlags.NoScrollbar)
                        local normalWidth = sw / 5.35

                     
                        for k,v in pairs(v['regex']) do
                            local isClickablePalette = #v['regular'].v > 0
                            if k ~= 1 then normalWidth = sw / 5.78 end
                            if imgui.NewInputText('##regular_fd'..k, v['regular'], normalWidth,u8"Регулярное выражение #"..k, 1) then saveChat(dntForget) end
                            if k ~= 1 then 
                                imgui.SameLine(336)
                                if imgui.Button(fa.ICON_FA_TRASH .. '##'..k) then table.remove(v['regex'], k) saveChat(dntForget) end
                                imgui.SameLine()
                            else
                                imgui.SameLine(362.5)
                            end
                            
                            if imgui.ButtonClickable(isClickablePalette,fa.ICON_FA_PALETTE .. '##' ..k) then 
                                imgui.OpenPopup(fa.ICON_FA_PALETTE .. u8" Редактирование цветовой палитры #"..k) 
                                for w in v['regular'].v:gmatch("paint%(([A-Za-zА-Яа-я %-%d+]+)%)") do
                                    if editChatsTable['regex'][k]['colors'][w] == nil then
                                        editChatsTable['regex'][k]['colors'][w] = imgui.ImFloat4(imgui.ImColor(hextorgba("FFFFFFFF")):GetFloat4())
                                    end
                                end
            
                                for key,_ in pairs(v['colors']) do
                                    if key ~= 'time' and key ~= 'based' then
                                        if not v['regular'].v:match("paint%(".. key .."%)") then
                                            editChatsTable['regex'][k]['colors'][key] = nil
                                        end
                                    end
                                end
                            end
                            imgui.SetNextWindowSize(imgui.ImVec2(sw / 3.76, sh / 5.4), imgui.Cond.FirstUseEver)
                            if imgui.BeginPopupModal(fa.ICON_FA_PALETTE .. u8" Редактирование цветовой палитры #"..k, imgui.ImBool(true), imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoScrollbar + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove) then
                                imgui.BeginChild('##pallettteeeeeeeeeee', imgui.ImVec2(sw / 3.875, sh / 6.6), true)
                                imgui.CenterText("Базовый цвет")
                                imgui.Separator()
                                imgui.PushItemWidth(sw / 4)
                                if imgui.ColorEdit4("##bazacolor",v['colors']['based'],imgui.ColorEditFlags.AlphaBar) then saveChat(dntForget) end
                                imgui.Separator()
                                imgui.CenterText("Цвет времени")
                                imgui.Separator()
                                if imgui.ColorEdit4("##timecolor",v['colors']['time'],imgui.ColorEditFlags.AlphaBar) then saveChat(dntForget) end
                                for k,v in pairs(v['colors']) do
                                    if k ~= 'time' and k ~= 'based' then
                                        imgui.Separator()
                                        imgui.CenterText(u8:decode(tostring(k)))
                                        imgui.Separator()
                                        if imgui.ColorEdit4("##customcolorname"..k, v, imgui.ColorEditFlags.AlphaBar) then saveChat(dntForget) end
                                    end
                                end
                                imgui.PopItemWidth()
                                imgui.End()
                            imgui.EndPopup()    
                            end
                        end
            
                        imgui.EndChild()

                        if imgui.Button(fa.ICON_FA_PLUS .. u8" Добавить регулярное выражение", imgui.ImVec2(sw / 5, 20)) then 
                            table.insert(v['regex'],{['regular'] = imgui.ImBuffer("",256),['colors'] = {['based'] = imgui.ImFloat4(imgui.ImColor(hextorgba("FFFFFFFF")):GetFloat4()),['time'] = imgui.ImFloat4(imgui.ImColor(hextorgba("FFFFFFFF")):GetFloat4()),}}) 
                        end
                        imgui.Separator()
                        imgui.PushItemWidth(sw / 5)
                        local btn_offset_centering = 124.5
                        if imgui.CustomRadioButton(fa.ICON_FA_ALIGN_LEFT, v['centering'], 1, imgui.ImVec2(btn_offset_centering,20)) then saveChat(dntForget) end
                        imgui.Hint(u8"Центрирование текста по левому краю")
                        imgui.SameLine()
                        
                        if imgui.CustomRadioButton(fa.ICON_FA_ALIGN_CENTER, v['centering'], 2, imgui.ImVec2(btn_offset_centering,20)) then saveChat(dntForget) end
                        imgui.Hint(u8"Центрирование текста по центру")
                        imgui.SameLine()
                        if imgui.CustomRadioButton(fa.ICON_FA_ALIGN_RIGHT, v['centering'], 3, imgui.ImVec2(btn_offset_centering,20)) then saveChat(dntForget) end
                        imgui.Hint(u8"Центрирование текста по правому краю")
            
                        if imgui.NewInputText('##fnamenew',v['fname'],sw / 5,u8'Название шрифта',2) then saveChat(dntForget) end
                        imgui.HintInputFont()
                        if imgui.DragInt('##fsizenew',v['fsize'], 0.1, 1, 50, u8('Размер шрифта: %.0f')) then saveChat(dntForget) end
                        if imgui.DragInt('##fOffsnew',v['fOffs'], 0.1, 1, 100, u8('Оффсет шрифта: %.0f')) then saveChat(dntForget) end
                        if imgui.DragInt('##fflagnew',v['fflag'], 0.1, 1, 100, u8('Флаг шрифта: %.0f')) then saveChat(dntForget) end
                        if imgui.DragInt('##linesChatnew', v['linesChat'], 0.1, 1, 50, u8('Кол-во строк: %.0f')) then saveChat(dntForget) end

                        if imgui.Button(fa.ICON_FA_ARROWS_ALT .. u8' Редактировать позицию на экране', imgui.ImVec2(sw / 5,20)) then moveInterface(v['x'],v['y'],function(x,y) saveChat(dntForget) end) end
                        imgui.PopItemWidth()
                        imgui.Separator()
                        if #errorEPChat > 0 then
                            imgui.TextWrapped(u8(errorEPChat))
                        end

                        if imgui.Button(fa.ICON_FA_DUMPSTER .. u8' Удалить', imgui.ImVec2(sw / 5, 20)) then
                            errorEPChat = ""
                        table.remove(pChatsTableImgui, k)
                        table.remove(pChatsTable, k)
                        saveJson(patches['pChats'], pChatsTable)
                        sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Вы успешно удалили чат.",-1)  
                        imgui.CloseCurrentPopup()
                        end
                        imgui.EndChild()
                    imgui.EndPopup()
                    end

                    if k%2 ~= 0 then
                        imgui.SameLine()
                    end
                end
            imgui.EndChild()
        imgui.EndChild()

    end
end

function saveChat(keyChat)
    local isExistName = false

    for kl, vl in pairs(pChatsTableImgui) do
      
            if kl ~= keyChat and stringToLower(u8:decode(vl['name'].v)) == stringToLower(u8:decode(pChatsTableImgui[keyChat]['name'].v)) then
                isExistName = true
            end
        
    end

    local isSomesFilled = false
    for key, vm in pairs(pChatsTableImgui[keyChat]['regex']) do
        if #vm['regular'].v <= 0 then
            if key ~= 1 then
                table.remove(pChatsTableImgui[keyChat]['regex'], key)
            end
        else
            isSomesFilled = true
        end
    end

    if isExistName then
        errorEPChat = "Чат с таким названием существует"
    elseif len(pChatsTableImgui[keyChat]['name'].v) > 18 or len(pChatsTableImgui[keyChat]['name'].v) <= 0 then
        errorEPChat = "Название чата должно состоять не менее чем из 1-ого и не более чем из 18-ти символов"
    elseif not isSomesFilled then
        errorEPChat = "Хотя-бы одно регулярное выражение должно быть заполнено"
    else
        local rightTable = {
            ['name'] = u8:decode(pChatsTableImgui[keyChat]['name'].v),
            ['show'] = pChatsTableImgui[keyChat]['show'].v,
            ['regex'] = {},
            ['x'] = pChatsTableImgui[keyChat]['x'].v,
            ['y'] = pChatsTableImgui[keyChat]['y'].v,
            ['centering'] = pChatsTableImgui[keyChat]['centering'].v,
            ['showTime'] = pChatsTableImgui[keyChat]['showTime'].v,
            ['fsize'] = pChatsTableImgui[keyChat]['fsize'].v,
            ['fname'] = pChatsTableImgui[keyChat]['fname'].v,
            ['fflag'] = pChatsTableImgui[keyChat]['fflag'].v,
            ['fOffs'] = pChatsTableImgui[keyChat]['fOffs'].v,
            ['linesChat'] = pChatsTableImgui[keyChat]['linesChat'].v,
        }
        if buffersPChats[pChatsTableImgui[keyChat]['name'].v] == nil then buffersPChats[pChatsTableImgui[keyChat]['name'].v] = {} end
        fontsPChats[pChatsTableImgui[keyChat]['name'].v] = renderCreateFont(rightTable['fname'], rightTable['fsize'], rightTable['fflag'])
        for k,v in pairs(pChatsTableImgui[keyChat]['regex']) do
            rightTable['regex'][#rightTable['regex'] + 1] = {['regular'] = u8:decode(v['regular'].v), ['colors'] = {}}
            
            for keykey, value in pairs(v['colors']) do
                rightTable['regex'][#rightTable['regex']]['colors'][keykey] = float2hex(value)
            end
        end
        errorEPChat = ""
        pChatsTable[keyChat] = rightTable
        saveJson(patches['pChats'], pChatsTable)
        pChatsTable = loadJson(patches['pChats'])
    end
end

function binder_window_settings()
    if windows['binder'].v then
        imgui.BeginChild("##info-binder", imgui.ImVec2(sw / 2.39, sh / 4), true, imgui.WindowFlags.NoScrollbar)
            imgui.CenterText('Тэги и информация')
            imgui.Separator()
            local btn_size = imgui.ImVec2(sw / 10.026, sh / 54)
            imgui.BeginChild("##info-binder-left", imgui.ImVec2(sw / 4.3, sh / 4.1), false, imgui.WindowFlags.NoScrollbar)
               
                if imgui.Button('{author_id}',btn_size) then setClipboardText('{author_id}') sampAddChatMessage('{2DF61C}[Копирование]{FFFFFF} Выбранный тэг был успешно скопирован в буфер обмена.',-1) end
                imgui.SameLine()
                imgui.TextColoredRGB(u8' - ID автора репорта')
        
                if imgui.Button('{author_nick}',btn_size) then setClipboardText('{author_nick}') sampAddChatMessage('{2DF61C}[Копирование]{FFFFFF} Выбранный тэг был успешно скопирован в буфер обмена.',-1) end
                imgui.SameLine()
                imgui.TextColoredRGB(u8' - ник автора репорта')
        
                if imgui.Button('{intruder_id}',btn_size) then setClipboardText('{intruder_id}') sampAddChatMessage('{2DF61C}[Копирование]{FFFFFF} Выбранный тэг был успешно скопирован в буфер обмена.',-1) end
                imgui.SameLine()
                imgui.TextColoredRGB(u8' - первый ID из текста жалобы')
        
                if imgui.Button('{intruders_ids}',btn_size) then setClipboardText('{intruders_ids}') sampAddChatMessage('{2DF61C}[Копирование]{FFFFFF} Выбранный тэг был успешно скопирован в буфер обмена.',-1) end
                imgui.SameLine()
                imgui.TextColoredRGB(u8' - все ID из текста жалобы')
        
                if imgui.Button('{intruder_nick}',btn_size) then setClipboardText('{intruder_nick}') sampAddChatMessage('{2DF61C}[Копирование]{FFFFFF} Выбранный тэг был успешно скопирован в буфер обмена.',-1) end
                imgui.SameLine()
                imgui.TextColoredRGB(u8' - первый ник(по айди) из текста жалобы')
        
                if imgui.Button('{intruders_nicks}',btn_size) then setClipboardText('{intruders_nicks}') sampAddChatMessage('{2DF61C}[Копирование]{FFFFFF} Выбранный тэг был успешно скопирован в буфер обмена.',-1) end
                imgui.SameLine()
                imgui.TextColoredRGB(u8' - все ники(по айди) из текста жалобы')
        
                if imgui.Button('{my_id}',btn_size) then setClipboardText('{my_id}') sampAddChatMessage('{2DF61C}[Копирование]{FFFFFF} Выбранный тэг был успешно скопирован в буфер обмена.',-1) end
                imgui.SameLine()
                imgui.TextColoredRGB(u8' - ваш текущий айди')
        
                if imgui.Button('{my_nick}',btn_size) then setClipboardText('{my_nick}') sampAddChatMessage('{2DF61C}[Копирование]{FFFFFF} Выбранный тэг был успешно скопирован в буфер обмена.',-1) end
                imgui.SameLine()
                imgui.TextColoredRGB(u8' - ваш текущий ник')

                if imgui.Button('{re_id}',btn_size) then setClipboardText('{re_id}') sampAddChatMessage('{2DF61C}[Копирование]{FFFFFF} Выбранный тэг был успешно скопирован в буфер обмена.',-1) end
                imgui.SameLine()
                imgui.TextColoredRGB(u8' - ID игрока, за которым вы следите')

                if imgui.Button('{re_nick}',btn_size) then setClipboardText('{re_nick}') sampAddChatMessage('{2DF61C}[Копирование]{FFFFFF} Выбранный тэг был успешно скопирован в буфер обмена.',-1) end
                imgui.SameLine()
                imgui.TextColoredRGB(u8' - ник игрока, за которым вы следите')

                

            imgui.EndChild()
            imgui.SameLine()
            imgui.BeginChild("##info-binder-right", imgui.ImVec2(sw / 4, sh / 4.1), false, imgui.WindowFlags.NoScrollbar)
            if imgui.Button('@id',btn_size) then setClipboardText('@id') sampAddChatMessage('{2DF61C}[Копирование]{FFFFFF} Выбранный тэг был успешно скопирован в буфер обмена.',-1) end
            imgui.SameLine()
            imgui.TextColoredRGB(u8' - выводит ник по айди')
            imgui.Hint(u8'Данная конструкция выведет ник определенного ID. Например: Привет, @23! Выведет: Привет, Abobus_Abobusovich[23]!')

            if imgui.Button('{arg[number]}',btn_size) then setClipboardText('{arg[number]}') sampAddChatMessage('{2DF61C}[Копирование]{FFFFFF} Выбранный тэг был успешно скопирован в буфер обмена.',-1) end
            imgui.SameLine()
            imgui.TextColoredRGB(u8' - аргументы команды')
            imgui.Hint(u8'Если вы хотите создать команду, которой требуются аргументы - вы можете получить их с помощью {arg[1]} .. {arg[2]} .. {arg[3]} ...')

            if imgui.Button('wait(time)',btn_size) then setClipboardText('wait(time)') sampAddChatMessage('{2DF61C}[Копирование]{FFFFFF} Выбранная функций была успешно скопирована в буфер обмена.',-1) end
            imgui.SameLine()
            imgui.TextColoredRGB(u8' - задержка')
            imgui.Hint(u8'Если вы хотите сделать задержку между строками - используйте "wait(время в миллисекундах)" 1 секунда - 1000 миллисекунд')


            imgui.EndChild()


            
        imgui.EndChild()

        imgui.BeginChild("##сontext-binder", imgui.ImVec2(sw / 2.39, sh / 3.25), true, imgui.WindowFlags.NoScrollbar)
            imgui.CenterText("Добавление и редактирование биндов")
            imgui.Separator()

            imgui.NewInputText('##new_bind_name',newBindSettings['name'],sw / 2.437,u8'Название нового бинда',1)
            imgui.NewInputText('##new_bind_command',newBindSettings['command'],sw / 2.87,u8'Команда активации',1)
            imgui.SameLine(sw / 3.17)
            imgui.TextColored(imgui.ImVec4(1.00, 1.00, 1.00, 0.40), u8'Клавиша: ')
            imgui.SameLine(sw / 2.88)

            local tLastKeys = {}
            if imgui.HotKey("##key_bind_form", newBindSettings['hotkey'], tLastKeys, 100) then
                local isDefined, data = rkeys.getHotKey(newBindSettings['hotkey'].v)
                if isDefined then
                    if #newBindSettings['hotkey'].v ~= 0 then
                        newBindSettings['hotkey'].v = tLastKeys.v
                        sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Данная комбинация уже занята!',-1)
                    end
                end
            end
    
            imgui.SameLine()
            
            if imgui.Button(fa.ICON_FA_TRASH .. '##deleteasddsahotkey') then
                newBindSettings['hotkey'].v = {}
            end

            imgui.SetCursorPosX(12)
            imgui.TextColored(imgui.ImVec4(1.00, 1.00, 1.00, 0.40), u8'Контекст бинда')
            imgui.InputTextMultiline('##new_bind_context',newBindSettings['context'],imgui.ImVec2(sw / 2.437, sh / 15))
            local stringRightType = "Произошла ошибка, верните нормальное значение"
            if table_TypesBind[newBindSettings['type'].v] ~= nil then
                stringRightType = table_TypesBind[newBindSettings['type'].v]
            end
            imgui.PushItemWidth(sw / 2.437)
            imgui.DragInt('##new_bind_type',newBindSettings['type'], 0.1, 1, 2, u8(stringRightType))
            imgui.PopItemWidth()
            imgui.TextColoredRGB(u8(errormsg))
            if imgui.Button(fa.ICON_FA_PLUS .. u8' Добавить бинд', imgui.ImVec2(sw / 2.437, sh / 54)) then
                local isExistName = false

                for _,vl in pairs(bindsTable) do
                    if stringToLower(vl[1]) == stringToLower(u8:decode(newBindSettings['name'].v)) then
                        isExistName = true 
                    end
                end

                local isExistCMD = false

                for _,vl in pairs(bindsTable) do
                    if stringToLower(vl[2]) == stringToLower(u8:decode(newBindSettings['command'].v)) then
                        isExistCMD = true 
                    end
                end

                if isExistName then
                    errormsg = 'Бинд с таким названием существует'
                elseif isExistCMD then
                    errormsg = 'Бинд с такой командой существует'
                elseif len(newBindSettings['name'].v) > 18 or len(newBindSettings['name'].v) <= 0 then
                    errormsg = 'Название бинда должно состоять не менее чем из 1-ого и не более чем из 18-ти символов'
                elseif len(newBindSettings['command'].v) > 25 or len(newBindSettings['command'].v) <= 0 then
                    errormsg = 'Команда бинда должна состоять не менее чем из 1-ого и не более чем из 25-ти символов'
                elseif len(newBindSettings['context'].v) > 5000 or len(newBindSettings['context'].v) <= 0 then
                    errormsg = 'Контекст бинда должен состоять не менее чем из 1-ого и не более чем из 5000 символов'
                elseif newBindSettings['type'].v > 2 and newBindSettings['type'].v < 1 then
                    errormsg = "Тип бинда может соответствовать либо 1 либо 2"
                else
                    errormsg = ''
                    local indexadd = #bindsTable + 1
                    bindsTable[indexadd] = {u8:decode(newBindSettings['name'].v),u8:decode(newBindSettings['command'].v),u8:decode(newBindSettings['context'].v), {v = newBindSettings['hotkey'].v}, newBindSettings['type'].v}
                    sampRegisterChatCommand(bindsTable[indexadd][2],function(args) worker_binder(args,bindsTable[indexadd][3],bindsTable[indexadd][2],0, bindsTable[indexadd][5]) end)
                    if #bindsTable[indexadd][4].v > 0 then
                        rkeys.registerHotKey(newBindSettings['hotkey'].v, 1, false, function() if hotKeyChecks() then worker_binder('',bindsTable[indexadd][3],bindsTable[indexadd][2],1, bindsTable[indexadd][5]) end end)
                    end
                    newBindSettings['name'].v = ''
                    newBindSettings['command'].v = ''
                    newBindSettings['context'].v = ''
                    newBindSettings['type'].v = 1
                    newBindSettings['hotkey'].v = {}


                    saveJson(patches['binds'],bindsTable)
                    sampAddChatMessage("{2DF61C}[Создание]{FFFFFF} Вы успешно создали новый бинд.",-1)  
                end
            end

            imgui.Separator()

            imgui.BeginChild("##сontext-binder-binds", imgui.ImVec2(sw / 2.39, sh / 8.5), false)
                for k,v in pairs(bindsTable) do
                    if imgui.Button(u8(v[1]),imgui.ImVec2(sw / 9.93, sh / 54)) then veryOldHotkeyBind = {v = {}} errormsg = '' buferringText1 = imgui.ImBuffer(u8(v[1]),256) buferringText2 = imgui.ImBuffer(u8(v[2]),40) buferringText3 = imgui.ImBuffer(u8(v[3]),10000) hotkeyInBind = v[4] bufferTypeBind = imgui.ImInt(1) if v[5] ~= nil then bufferTypeBind.v = v[5] end imgui.OpenPopup(fa.ICON_FA_EDIT .. u8' Редактирование бинда##'..k) end
                    
                    if imgui.BeginPopupModal(fa.ICON_FA_EDIT .. u8' Редактирование бинда##'..k, true, imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoScrollbar + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove + imgui.WindowFlags.AlwaysAutoResize) then

                        imgui.NewInputText('##bind_name',buferringText1,sw / 6.4,u8'Название нового бинда',1)
                        imgui.NewInputText('##bind_command',buferringText2,sw / 6.4,u8'Команда активации',1)

                        local tLastKeys = {}
                        if imgui.HotKey("##key_bind_form"..k, hotkeyInBind, tLastKeys, sw / 7.03) then
                            if hotkeyInBind.v ~= veryOldHotkeyBind.v then
                                veryOldHotkeyBind = tLastKeys
                            end
                            local isDefined, data = rkeys.getHotKey(hotkeyInBind.v)
                            if isDefined then
                                if #hotkeyInBind.v ~= 0 then
                                    hotkeyInBind.v = tLastKeys.v
                                    sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Данная комбинация уже занята!',-1)
                                end
                            end
                        end
                
                        imgui.SameLine()
                        
                        if imgui.Button(fa.ICON_FA_TRASH .. '##deleteasddsahotkey') then
                            hotkeyInBind.v = {}
                        end

                        imgui.SetCursorPosX(12)
                        imgui.TextColored(imgui.ImVec4(1.00, 1.00, 1.00, 0.40), u8'Контекст бинда')
                        imgui.InputTextMultiline('##bind_context',buferringText3,imgui.ImVec2(sw / 6.4, sh / 15))

                        local stringRightType = "Произошла ошибка, верните нормальное значение"
                        if table_TypesBind[bufferTypeBind.v] ~= nil then
                            stringRightType = table_TypesBind[bufferTypeBind.v]
                        end
                        imgui.PushItemWidth(sw / 6.4)
                        imgui.DragInt('##bindTRype',bufferTypeBind, 0.1, 1, 2, u8(stringRightType))
                        imgui.PopItemWidth()

                        imgui.CenterText(errormsg)

                        if imgui.Button(fa.ICON_FA_CHECK ..u8' Сохранить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                            local isExistName = false

                            for keychik,vl in pairs(bindsTable) do
                                if stringToLower(vl[1]) == stringToLower(u8:decode(buferringText1.v)) and keychik ~= k then
                                    isExistName = true 
                                end
                            end
            
                            local isExistCMD = false
            
                            for keychik,vl in pairs(bindsTable) do
                                if stringToLower(vl[2]) == stringToLower(u8:decode(buferringText2.v)) and keychik ~= k then
                                    isExistCMD = true 
                                end
                            end
            
                            if isExistName then
                                errormsg = 'Бинд с таким названием существует'
                            elseif isExistCMD then
                                errormsg = 'Бинд с такой командой существует'
                            elseif len(buferringText1.v) > 18 or len(buferringText1.v) <= 0 then
                                errormsg = 'Название бинда должно состоять не менее чем из 1-ого и не более чем из 18-ти символов'
                            elseif len(buferringText2.v) > 25 or len(buferringText2.v) <= 0 then
                                errormsg = 'Команда бинда должна состоять не менее чем из 1-ого и не более чем из 25-ти символов'
                            elseif len(buferringText3.v) > 5000 or len(buferringText3.v) <= 0 then
                                errormsg = 'Контекст бинда должен состоять не менее чем из 1-ого и не более чем из 5000 символов'
                            elseif bufferTypeBind.v > 2 and bufferTypeBind.v < 1 then
                                errormsg = "Тип бинда может соответствовать либо 1 либо 2"
                            else
                                errormsg = ''
                                sampUnregisterChatCommand(bindsTable[k][2])
                                if #veryOldHotkeyBind.v > 0 and rkeys.isHotKeyDefined(veryOldHotkeyBind.v) then
                                    rkeys.unRegisterHotKey(veryOldHotkeyBind.v)
                                end

                                bindsTable[k] = {u8:decode(buferringText1.v),u8:decode(buferringText2.v),u8:decode(buferringText3.v), {v = hotkeyInBind.v}, bufferTypeBind.v}
                                
                                sampRegisterChatCommand(u8:decode(buferringText2.v),function(args) worker_binder(args,u8:decode(buferringText3.v),u8:decode(buferringText2.v),0, bufferTypeBind.v) end)
                                if #bindsTable[k][4].v > 0 then
                                    rkeys.unRegisterHotKey(bindsTable[k][4].v)
                                    rkeys.registerHotKey(bindsTable[k][4].v, 1, false, function() if hotKeyChecks() then worker_binder('',bindsTable[k][3],bindsTable[k][2],1, bindsTable[k][5]) end end)
                                end
                                saveJson(patches['binds'],bindsTable)
                                sampAddChatMessage("{2DF61C}[Создание]{FFFFFF} Вы успешно сохранили изменения.",-1)
                                imgui.CloseCurrentPopup()
                            end

                        end
        
                        if imgui.Button(fa.ICON_FA_DUMPSTER ..u8' Удалить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                            errormsg = ''
                            sampUnregisterChatCommand(bindsTable[k][2])
                            if #bindsTable[k][4].v > 0 and rkeys.isHotKeyDefined(bindsTable[k][4].v) then
                                rkeys.unRegisterHotKey(bindsTable[k][4].v)
                            end
                            table.remove(bindsTable,k)
                            saveJson(patches['binds'],bindsTable)
                            sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Вы успешно удалили бинд.",-1)  
                            imgui.CloseCurrentPopup()
                        end
        
                        if imgui.Button(fa.ICON_FA_TIMES ..u8' Отменить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                            errormsg = ''
                            imgui.CloseCurrentPopup()
                        end
        
                    imgui.EndPopup()
                    end

                    if k%4 ~= 0 then
                        imgui.SameLine()
                    end


                end
            imgui.EndChild()

        imgui.EndChild()

    end
end

function general_window()
    --генерал гавс
    if windows['general'].v then

        imgui.TextColoredRGB(fa.ICON_FA_CHEVRON_RIGHT .. u8" Привет,")
        imgui.SameLine()
        imgui.TextColoredRGB("{1CF6B4}".. nickplayerbyid .. "{FFFFFF},")
        imgui.SameLine()
        imgui.TextColoredRGB(u8"в данном разделе можно посмотреть свою полную статистику и еще другие плюшки.")
        

        imgui.Columns(2,"##generalgavs",true)
        imgui.Separator()
        imgui.CenterColumnText(u8"Название")
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Значение")
        imgui.Separator()
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Текущий ник")
        imgui.NextColumn()
        imgui.CenterColumnText(u8('{1CF6B4}'..nickplayerbyid))

        imgui.NextColumn()
        imgui.CenterColumnText(u8"Уровень администрирования")
        imgui.NextColumn()
        imgui.CenterColumnText('{7FFFD4}'.. mainini['adminlvl'].v)
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Номер игрового сервера")
        imgui.NextColumn()
        imgui.CenterColumnText('{7FFFD4}'.. mainini['servernumber'].v)
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Автологин аккаунта")
        imgui.NextColumn()
        imgui.CenterColumnText(getTextGeneral(mainini['passwordauto'].v))
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Автологин в /apanel")
        imgui.NextColumn()
        imgui.CenterColumnText(getTextGeneral(mainini['passwordautoadmin'].v))
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Организация при входе")
        imgui.NextColumn()
        if mainini['organisationafter'].v then
            imgui.CenterColumnText(getTextGeneral(mainini['organisationafter'].v) .. u8' | Организация: ' .. table_organisations[mainini['organisation'].v + 1])
        else
            imgui.CenterColumnText(getTextGeneral(mainini['organisationafter'].v))
        end
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Скин при входе")
        imgui.NextColumn()
        if mainini['skinafter'].v then
            imgui.CenterColumnText(getTextGeneral(mainini['skinafter'].v) .. u8' | Скин: ' .. tostring(mainini['numberskin'].v))
        else
            imgui.CenterColumnText(getTextGeneral(mainini['skinafter'].v))
        end
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Телепорт в /az при входе")
        imgui.NextColumn()
        imgui.CenterColumnText(getTextGeneral(mainini['azafter'].v))
        imgui.NextColumn()
        imgui.CenterColumnText(u8"/gotoint при входе")
        imgui.NextColumn()
        if mainini['iintstate'].v then
            imgui.CenterColumnText(getTextGeneral(mainini['iintstate'].v) .. u8' | Интерьер: ' .. mainini['iintnumber'].v)
        else
            imgui.CenterColumnText(getTextGeneral(mainini['iintstate'].v))
        end
        imgui.NextColumn()
        imgui.CenterColumnText(u8"/tpcor при входе")
        imgui.NextColumn()
        if mainini['coordsafterstate'].v then
            imgui.CenterColumnText(getTextGeneral(mainini['coordsafterstate'].v) .. u8' | Координаты: ' .. mainini['coordsafter'].v)
        else
            imgui.CenterColumnText(getTextGeneral(mainini['coordsafterstate'].v))
        end
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Команда активации")
        imgui.NextColumn()
        imgui.CenterColumnText('{7FFFD4}/'..u8(command.v))

        imgui.Columns(1)
        imgui.Separator()
        imgui.CenterText("Статистика онлайна")
        imgui.Columns(4, "##statsmain", true)
        imgui.Separator()
        imgui.CenterColumnText(u8"Период")
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Значение")
        imgui.NextColumn()
        imgui.CenterColumnText(u8"День")
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Значение")
        imgui.Separator()
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Сессия | Полный")
        imgui.NextColumn()
        imgui.CenterColumnText(normalonline(count_session['online_time'].v,900))
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Понедельник")
        imgui.NextColumn()
        imgui.CenterColumnText(normalonline(count_daysweek[1], 14400))
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Сессия | АФК")
        imgui.NextColumn()
        imgui.CenterColumnText(normalonlineafk(count_session['afk_time'].v,count_session['online_time'].v))
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Вторник")
        imgui.NextColumn()
        imgui.CenterColumnText(normalonline(count_daysweek[2], 14400))

        imgui.NextColumn()
        imgui.CenterColumnText(u8"День")
        imgui.NextColumn()
        imgui.CenterColumnText(normalonline(count_daily['online_time'].v,14400))
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Среда")
        imgui.NextColumn()
        imgui.CenterColumnText(normalonline(count_daysweek[3], 14400))

        imgui.NextColumn()
        imgui.CenterColumnText(u8"День | АФК")
        imgui.NextColumn()
        imgui.CenterColumnText(normalonlineafk(count_daily['afk_time'].v,count_daily['online_time'].v))
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Четверг")
        imgui.NextColumn()
        imgui.CenterColumnText(normalonline(count_daysweek[4], 14400))


        imgui.NextColumn()
        imgui.CenterColumnText(u8"Неделя")
        imgui.NextColumn()
        imgui.CenterColumnText(normalonline(count_weekly['online_time'].v,100800))
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Пятница")
        imgui.NextColumn()
        imgui.CenterColumnText(normalonline(count_daysweek[5], 14400))

        imgui.NextColumn()
        imgui.CenterColumnText(u8"Неделя | АФК")
        imgui.NextColumn()
        imgui.CenterColumnText(normalonlineafk(count_weekly['afk_time'].v,count_weekly['online_time'].v))
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Суббота")
        imgui.NextColumn()
        imgui.CenterColumnText(normalonline(count_daysweek[6], 14400))

        imgui.NextColumn()
        imgui.CenterColumnText(u8"Все время")
        imgui.NextColumn()
        imgui.CenterColumnText(normalonline(count_all['online_time'].v,14400))
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Воскресенье")
        imgui.NextColumn()
        imgui.CenterColumnText(normalonline(count_daysweek[7], 14400))

        imgui.Columns(1)
        imgui.Separator()
        imgui.CenterText("Статистика продуктивности")
        imgui.Columns(8, '##productivepunishments', true)
        imgui.Separator()
        imgui.CenterColumnText(u8"Период")
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Репорты")
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Баны")
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Варны")
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Муты")
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Джайлы")
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Кики")
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Наказаний")
        imgui.Hint(u8"Общее количество наказаний")
        imgui.Separator()
        imgui.NextColumn()
        imgui.CenterColumnText(u8"День")
        imgui.NextColumn()
        imgui.CenterColumnText(tostring(count_daily['reports'].v))
        imgui.NextColumn()
        imgui.CenterColumnText(tostring(count_daily['bans'].v))
        imgui.NextColumn()
        imgui.CenterColumnText(tostring(count_daily['warns'].v))
        imgui.NextColumn()
        imgui.CenterColumnText(tostring(count_daily['mutes'].v))
        imgui.NextColumn()
        imgui.CenterColumnText(tostring(count_daily['jails'].v))
        imgui.NextColumn()
        imgui.CenterColumnText(tostring(count_daily['kicks'].v))
        imgui.NextColumn()
        imgui.CenterColumnText(tostring(count_daily['punishments'].v))
        
        imgui.NextColumn()
        imgui.CenterColumnText(u8"Неделя")
        imgui.NextColumn()
        imgui.CenterColumnText(tostring(count_weekly['reports'].v))
        imgui.NextColumn()
        imgui.CenterColumnText(tostring(count_weekly['bans'].v))
        imgui.NextColumn()
        imgui.CenterColumnText(tostring(count_weekly['warns'].v))
        imgui.NextColumn()
        imgui.CenterColumnText(tostring(count_weekly['mutes'].v))
        imgui.NextColumn()
        imgui.CenterColumnText(tostring(count_weekly['jails'].v))
        imgui.NextColumn()
        imgui.CenterColumnText(tostring(count_weekly['kicks'].v))
        imgui.NextColumn()
        imgui.CenterColumnText(tostring(count_weekly['punishments'].v))

        imgui.NextColumn()
        imgui.CenterColumnText(u8"Все время")
        imgui.NextColumn()
        imgui.CenterColumnText(tostring(count_all['reports'].v))
        imgui.NextColumn()
        imgui.CenterColumnText(tostring(count_all['bans'].v))
        imgui.NextColumn()
        imgui.CenterColumnText(tostring(count_all['warns'].v))
        imgui.NextColumn()
        imgui.CenterColumnText(tostring(count_all['mutes'].v))
        imgui.NextColumn()
        imgui.CenterColumnText(tostring(count_all['jails'].v))
        imgui.NextColumn()
        imgui.CenterColumnText(tostring(count_all['kicks'].v))
        imgui.NextColumn()
        imgui.CenterColumnText(tostring(count_all['punishments'].v))

        imgui.Columns(1)
        imgui.Separator()
    end
end

function stats_settings()
    if windows['stats'].v then
        imgui.BeginChild('##reconsettings',imgui.ImVec2(sw / 2.388 , 127),true)
        imgui.CenterText('Общая конфигурация')
        imgui.Separator()
        
        if imgui.CustomButtonActivated('',statsSettings['state'], imgui.ImVec2(sw / 2.435,20)) then ini.stats.state = statsSettings['state'].v save() end
        
        if imgui.CustomButtonActivated('Заголовок',statsSettings['show_header'], imgui.ImVec2(sw / 9.94,20)) then ini.stats.show_header = statsSettings['show_header'].v save() end
        imgui.SameLine()
        if imgui.CustomButtonActivated('Сессия',statsSettings['show_session'], imgui.ImVec2(sw / 9.94,20)) then ini.stats.show_session = statsSettings['show_session'].v save() end
        imgui.SameLine()
        if imgui.CustomButtonActivated('Дата',statsSettings['show_date'], imgui.ImVec2(sw / 9.94,20)) then ini.stats.show_date = statsSettings['show_date'].v save() end
        imgui.SameLine()
        if imgui.CustomButtonActivated('Репорт',statsSettings['show_report'], imgui.ImVec2(sw / 9.94,20)) then ini.stats.show_report = statsSettings['show_report'].v save() end
        imgui.PushItemWidth(sw / 2.435)
        local needly_number = tostring(statsSettings['update_early'].v):gsub("-", "")
        if imgui.DragInt('##update_early',statsSettings['update_early'], 0.1, -23, 23, u8('Сбрасывать на '.. numberOf(tonumber(needly_number), {' час', ' часа', ' часов'}) ..' '.. (statsSettings['update_early'].v < 0 and "позже" or "раньше"))) then ini.stats.update_early = statsSettings['update_early'].v end
        imgui.PopItemWidth()
        if imgui.Button(fa.ICON_FA_ARROWS_ALT .. u8' Редактировать позицию на экране', imgui.ImVec2(sw / 2.435,20)) then moveInterface(statsSettings['x'],statsSettings['y'],function(x,y) ini.stats.x = x ini.stats.y = y save() end) end
        
        imgui.EndChild()

        imgui.BeginChild('##leftrectangle', imgui.ImVec2(sw / 7.4, 475), true)
            imgui.CenterText('Дневная статистика')
            imgui.Separator()
            imgui.BeginChild("##inChildChild", imgui.ImVec2(sw / 7.4, 410), false)
                if imgui.TextAccept(u8'Показывать онлайн',statsSettings['daily_online'],210) then ini.stats.daily_online = statsSettings['daily_online'].v save() end
                if imgui.TextAccept(u8'Показывать АФК',statsSettings['daily_afk'],210) then ini.stats.daily_afk = statsSettings['daily_afk'].v save() end
                if imgui.TextAccept(u8'Показывать чистый онлайн',statsSettings['daily_clear_online'],210) then ini.stats.daily_clear_online = statsSettings['daily_clear_online'].v save() end
                
                if imgui.TextAccept(u8'Показывать кол-во отв. репортов',statsSettings['daily_reports'],210) then ini.stats.daily_reports = statsSettings['daily_reports'].v save() end
                if imgui.TextAccept(u8'Показывать кол-во наказаний',statsSettings['daily_punishments'],210) then ini.stats.daily_punishments = statsSettings['daily_punishments'].v save() end
                if imgui.TextAccept(u8'Показывать кол-во банов',statsSettings['daily_bans'],210) then ini.stats.daily_bans = statsSettings['daily_bans'].v save() end
                
                if imgui.TextAccept(u8'Показывать кол-во варнов',statsSettings['daily_warns'],210) then ini.stats.daily_warns = statsSettings['daily_warns'].v save() end
                if imgui.TextAccept(u8'Показывать кол-во джайлов',statsSettings['daily_jails'],210) then ini.stats.daily_jails = statsSettings['daily_jails'].v save() end
                if imgui.TextAccept(u8'Показывать кол-во мутов',statsSettings['daily_mutes'],210) then ini.stats.daily_mutes = statsSettings['daily_mutes'].v save() end
                if imgui.TextAccept(u8'Показывать кол-во киков',statsSettings['daily_kicks'],210) then ini.stats.daily_kicks = statsSettings['daily_kicks'].v save() end
                if imgui.TextAccept(u8'Показывать кол-во репутации',statsSettings['daily_reputation'],210) then ini.stats.daily_reputation = statsSettings['daily_reputation'].v save() end
                if imgui.TextAccept(u8'Показывать кол-во прин. форм',statsSettings['daily_forms'],210) then ini.stats.daily_forms = statsSettings['daily_forms'].v save() end
            imgui.EndChild()
            imgui.Separator()
            if imgui.Button(fa.ICON_FA_CALENDAR_TIMES .. u8" Сбросить", imgui.ImVec2(243, 20)) then
                statsTable.countdaily.online_time = 0
                statsTable.countdaily.afk_time = 0
                statsTable.countdaily.reports = 0
                statsTable.countdaily.punishments = 0
                statsTable.countdaily.bans = 0
                statsTable.countdaily.warns = 0
                statsTable.countdaily.mutes = 0
                statsTable.countdaily.kicks = 0
                statsTable.countdaily.jails = 0
                statsTable.countdaily.reputation = 0
                statsTable.countdaily.forms = 0
    
                count_daily['online_time'].v = 0
                count_daily['afk_time'].v = 0
                count_daily['reports'].v = 0
                count_daily['punishments'].v = 0
                count_daily['bans'].v = 0
                count_daily['warns'].v = 0
                count_daily['mutes'].v = 0
                count_daily['kicks'].v = 0
                count_daily['jails'].v = 0
                count_daily['reputation'].v = 0
                count_daily['forms'].v = 0
                sampAddChatMessage("{2DF61C}[Информация]{FFFFFF} Вся дневная статистика была обнулена.",-1)
                saveJson(patches['stats'], statsTable)
            end
        imgui.EndChild()
        imgui.SameLine()

        imgui.BeginChild('##middlyrectangle', imgui.ImVec2(sw / 6.2, 475), true)
            imgui.CenterText('Недельная статистика')
            imgui.Separator()
            imgui.BeginChild("##inChildChisld", imgui.ImVec2(sw / 6.2, 410), false)
                if imgui.TextAccept(u8'Показывать онлайн',statsSettings['weekly_online'],260) then ini.stats.weekly_online = statsSettings['weekly_online'].v save() end
                if imgui.TextAccept(u8'Показывать АФК',statsSettings['weekly_afk'],260) then ini.stats.weekly_afk = statsSettings['weekly_afk'].v save() end
                if imgui.TextAccept(u8'Показывать чистый онлайн',statsSettings['weekly_clear_online'],260) then ini.stats.weekly_clear_online = statsSettings['weekly_clear_online'].v save() end
            
                if imgui.TextAccept(u8'Показывать кол-во отв. репортов',statsSettings['weekly_reports'],260) then ini.stats.weekly_reports = statsSettings['weekly_reports'].v save() end
                if imgui.TextAccept(u8'Показывать кол-во наказаний',statsSettings['weekly_punishments'],260) then ini.stats.weekly_punishments = statsSettings['weekly_punishments'].v save() end
                if imgui.TextAccept(u8'Показывать кол-во банов',statsSettings['weekly_bans'],260) then ini.stats.weekly_bans = statsSettings['weekly_bans'].v save() end
            
                if imgui.TextAccept(u8'Показывать кол-во варнов',statsSettings['weekly_warns'],260) then ini.stats.weekly_warns = statsSettings['weekly_warns'].v save() end
                if imgui.TextAccept(u8'Показывать кол-во джайлов',statsSettings['weekly_jails'],260) then ini.stats.weekly_jails = statsSettings['weekly_jails'].v save() end
                if imgui.TextAccept(u8'Показывать кол-во мутов',statsSettings['weekly_mutes'],260) then ini.stats.weekly_mutes = statsSettings['weekly_mutes'].v save() end
                if imgui.TextAccept(u8'Показывать кол-во киков',statsSettings['weekly_kicks'],260) then ini.stats.weekly_kicks = statsSettings['weekly_kicks'].v save() end
                if imgui.TextAccept(u8'Показывать кол-во репутации',statsSettings['weekly_reputation'],260) then ini.stats.weekly_reputation = statsSettings['weekly_reputation'].v save() end
                if imgui.TextAccept(u8'Показывать кол-во прин. форм',statsSettings['weekly_forms'],260) then ini.stats.weekly_forms = statsSettings['weekly_forms'].v save() end
            imgui.EndChild()      
            imgui.Separator()
            if imgui.Button(fa.ICON_FA_CALENDAR_TIMES .. u8" Сбросить", imgui.ImVec2(293, 20)) then
                for i = 1, 7 do
                    statsTable.countdaysweek[i] = 0
                    count_daysweek[i] = 0
                end
                statsTable.countweekly.online_time = 0
                statsTable.countweekly.afk_time = 0
                statsTable.countweekly.reports = 0
                statsTable.countweekly.punishments = 0
                statsTable.countweekly.bans = 0
                statsTable.countweekly.warns = 0
                statsTable.countweekly.mutes = 0
                statsTable.countweekly.kicks = 0
                statsTable.countweekly.jails = 0
                statsTable.countweekly.reputation = 0
                statsTable.countweekly.forms = 0
    
                count_weekly['online_time'].v = 0
                count_weekly['afk_time'].v = 0
                count_weekly['reports'].v = 0
                count_weekly['punishments'].v = 0
                count_weekly['bans'].v = 0
                count_weekly['warns'].v = 0
                count_weekly['mutes'].v = 0
                count_weekly['kicks'].v = 0
                count_weekly['jails'].v = 0
                count_weekly['reputation'].v = 0
                count_weekly['forms'].v = 0
                sampAddChatMessage("{2DF61C}[Информация]{FFFFFF} Вся недельная статистика была обнулена.",-1)
                saveJson(patches['stats'], statsTable)
            end
        imgui.EndChild()
        imgui.SameLine()

        imgui.BeginChild('##rightrectangle', imgui.ImVec2(sw / 8.4, 475), true)
            imgui.CenterText('Абсолютная статистика')
            imgui.Separator()
            imgui.BeginChild("##inChildChisld", imgui.ImVec2(sw / 8.4, 410), false)
                if imgui.TextAccept(u8'Показывать онлайн',statsSettings['all_online'],210) then ini.stats.all_online = statsSettings['all_online'].v save() end
                if imgui.TextAccept(u8'Показывать АФК',statsSettings['all_afk'],210) then ini.stats.all_afk = statsSettings['all_afk'].v save() end
                if imgui.TextAccept(u8'Показывать чистый онлайн',statsSettings['all_clear_online'],210) then ini.stats.all_clear_online = statsSettings['all_clear_online'].v save() end
            
                if imgui.TextAccept(u8'Показывать кол-во отв. репортов',statsSettings['all_reports'],210) then ini.stats.all_reports = statsSettings['all_reports'].v save() end
                if imgui.TextAccept(u8'Показывать кол-во наказаний',statsSettings['all_punishments'],210) then ini.stats.all_punishments = statsSettings['all_punishments'].v save() end
                if imgui.TextAccept(u8'Показывать кол-во банов',statsSettings['all_bans'],210) then ini.stats.all_bans = statsSettings['all_bans'].v save() end
            
                if imgui.TextAccept(u8'Показывать кол-во варнов',statsSettings['all_warns'],210) then ini.stats.all_warns = statsSettings['all_warns'].v save() end
                if imgui.TextAccept(u8'Показывать кол-во джайлов',statsSettings['all_jails'],210) then ini.stats.all_jails = statsSettings['all_jails'].v save() end
                if imgui.TextAccept(u8'Показывать кол-во мутов',statsSettings['all_mutes'],210) then ini.stats.all_mutes = statsSettings['all_mutes'].v save() end
                if imgui.TextAccept(u8'Показывать кол-во киков',statsSettings['all_kicks'],210) then ini.stats.all_kicks = statsSettings['all_kicks'].v save() end
                if imgui.TextAccept(u8'Показывать кол-во репутации',statsSettings['all_reputation'],210) then ini.stats.all_reputation = statsSettings['all_reputation'].v save() end
                if imgui.TextAccept(u8'Показывать кол-во прин. форм',statsSettings['all_forms'],210) then ini.stats.all_forms = statsSettings['all_forms'].v save() end
            
            imgui.EndChild()
            imgui.Separator()
            if imgui.Button(fa.ICON_FA_CALENDAR_TIMES .. u8" Сбросить", imgui.ImVec2(212, 20)) then
                statsTable.countall.online_time = 0
                statsTable.countall.afk_time = 0
                statsTable.countall.reports = 0
                statsTable.countall.punishments = 0
                statsTable.countall.bans = 0
                statsTable.countall.warns = 0
                statsTable.countall.mutes = 0
                statsTable.countall.kicks = 0
                statsTable.countall.jails = 0
                statsTable.countall.reputation = 0
                statsTable.countall.forms = 0
    
                count_all['online_time'].v = 0
                count_all['afk_time'].v = 0
                count_all['reports'].v = 0
                count_all['punishments'].v = 0
                count_all['bans'].v = 0
                count_all['warns'].v = 0
                count_all['mutes'].v = 0
                count_all['kicks'].v = 0
                count_all['jails'].v = 0
                count_all['reputation'].v = 0
                count_all['forms'].v = 0
                sampAddChatMessage("{2DF61C}[Информация]{FFFFFF} Абсолютная статистика была обнулена.",-1)
                saveJson(patches['stats'], statsTable)
            end
        imgui.EndChild()
    
    end
end

function about_window_settings()
    if windows['about'].v then


        if imgui.CollapsingHeader(fa.ICON_FA_CLOCK .. u8' Лог обновлений') then
            for k,v in pairs(listUpdate) do
                local header = v.v
                if k == 1 then header = fa.ICON_FA_FIRE .. u8(' ' .. header .. ' | Актуальная версия') end
                if imgui.CollapsingHeader(header) then
                    imgui.TextWrapped(u8(v.context))
                end
            end
        end
        imgui.Separator()
        imgui.SetCursorPosX(sw / 19.2)
        if imgui.Button(u8'Проверить обновления скрипта',imgui.ImVec2(sw / 9.6, sh / 54)) then autoupdate("https://api.robo-tools.online/update.json", '['..thisScript().name..']: ', "https://robo-tools.online/", true, false) end
        imgui.SameLine()
        if imgui.Button(u8'Перезагрузить скрипт',imgui.ImVec2(sw / 9.6, sh / 54)) then imgui.ShowCursor = false showCursor(false) thisScript():reload() end
        imgui.SameLine()
        if imgui.Button(u8'Выключить скрипт',imgui.ImVec2(sw / 9.6, sh / 54)) then imgui.ShowCursor = false showCursor(false) thisScript():unload() end
        imgui.SetCursorPosX(sw / 19.2)
        if imgui.Button(u8'Беседа пользователей РХ',imgui.ImVec2(sw / 9.6, sh / 54)) then os.execute('explorer "https://vk.me/join/AJQ1d0GejSF4CAy8crOHiHuU"') end
        imgui.SameLine()
        if imgui.Button(u8'Разработчик скрипта',imgui.ImVec2(sw / 9.6, sh / 54)) then os.execute('explorer "https://vk.me/ravexl"') end
        imgui.SameLine()
        if imgui.Button(u8'Группа проекта',imgui.ImVec2(sw / 9.6, sh / 54)) then os.execute('explorer "https://vk.me/robo_hamster"') end

        imgui.SetCursorPosY(imgui.GetCursorPosY() + 150)
        imgui.CenterText('Разработчик - Leeky_Rave', true)
    end
end

function profile_window_settings()
    if windows['account'].v then
        imgui.Columns(2,'##accountinfo',true)
            imgui.Separator()
            imgui.CenterColumnText(u8'Логин')
            imgui.NextColumn()
            imgui.CenterColumnText(u8(userInfo['login']))
            imgui.NextColumn()

            imgui.CenterColumnText(u8'Ник')
            imgui.NextColumn()
            imgui.CenterColumnText(u8(userInfo['nick']))
            imgui.NextColumn()

            imgui.CenterColumnText(u8'ВК')
            imgui.NextColumn()
            imgui.CenterColumnText(u8('https://vk.com/id'.. userInfo['vk_id']))
            imgui.NextColumn()

            imgui.CenterColumnText(u8'Уровень доступа')
            imgui.NextColumn()
            imgui.CenterColumnText(u8(userInfo['access']))
            imgui.NextColumn()

            imgui.CenterColumnText(u8'Статус')
            imgui.NextColumn()
            if tonumber(userInfo['isTester']) == 0 then
                imgui.CenterColumnText(u8("Пользователь"))
            else
                imgui.CenterColumnText(u8("Тестер"))
            end
            
            imgui.NextColumn()

            imgui.CenterColumnText(u8'Действие персональной подписки')
            imgui.NextColumn()
            if userInfo['expires_subscribe'] >= os.time() then
                imgui.CenterColumnText(u8(os.date('{2DF61C}%d-%m-%Y %H:%M', userInfo['expires_subscribe'])))
            else 
                imgui.CenterColumnText(u8("{F6361C}Истекло"))
            end
            imgui.NextColumn()

            imgui.CenterColumnText(u8'Действие серверной подписки')
            imgui.NextColumn()
            if userInfo['expires_ssubscribe'] >= os.time() then
                imgui.CenterColumnText(u8(os.date('{2DF61C}%d-%m-%Y %H:%M', userInfo['expires_ssubscribe'])))
            else 
                imgui.CenterColumnText(u8("{F6361C}Истекло"))
            end
            imgui.NextColumn()

            imgui.CenterColumnText(u8'Дата регистрации')
            imgui.NextColumn()
            imgui.CenterColumnText(u8(os.date('%d-%m-%Y', userInfo['reg_time'])))
            imgui.NextColumn()


        imgui.Columns(1)
        imgui.Separator()

    end
end

function forms_window_settings() 
    if windows['forms'].v then
        imgui.BeginChild('##acceptforms',imgui.ImVec2(sw / 2.388, sh / 1.78),true,imgui.WindowFlags.NoScrollbar)
        imgui.CenterText('Принятие форм')
        imgui.Separator()
        imgui.BeginChild('##leftchild', imgui.ImVec2(sw / 3.85, sh / 5), false)
        local tLastKeys = {}
        if imgui.HotKey("##key_accept_form", formsHotKey['accept'], tLastKeys, 100) then
            local isDefined, data = rkeys.getHotKey(formsHotKey['accept'].v)
            if isDefined then
                if #formsHotKey['accept'].v ~= 0 then
                    formsHotKey['accept'].v = tLastKeys.v
                    sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Данная комбинация уже занята!',-1)
                end
            else
                local isDefined, data = rkeys.getHotKey(tLastKeys.v)

                if isDefined then
                    rkeys.unRegisterHotKey(tLastKeys.v)
                    sampAddChatMessage('{FFA500}[Сохранение]{FFFFFF} Хоткей успешно удалён.',-1)
                end
                if #formsHotKey['accept'].v > 0 then
                    rkeys.registerHotKey(formsHotKey['accept'].v, 1, false, acceptForm)
                    sampAddChatMessage("{FFA500}[Сохранение]{FFFFFF} Хоткей успешно сохранен.",-1)
                end
            end
            saveJson(patches['forms_hotkey'],formsHotKey)
        end

        imgui.SameLine()
        
        if imgui.Button(fa.ICON_FA_TRASH .. '##deleteformhotkey') then
            if rkeys.isHotKeyDefined(tLastKeys.v) then
                rkeys.unRegisterHotKey(tLastKeys.v)
                sampAddChatMessage('{FFA500}[Сохранение]{FFFFFF} Хоткей успешно удалён.',-1)
            end
            formsHotKey['accept']['v'] = {}
            saveJson(patches['forms_hotkey'],formsHotKey)
        end

        imgui.SameLine()
        imgui.TextColoredRGB(u8'Принятие формы')

        imgui.SameLine(260)

        if imgui.HotKey("##key_proofs_form", formsHotKey['proofs'], tLastKeys, 100) then
            local isDefined, data = rkeys.getHotKey(formsHotKey['proofs'].v)
            if isDefined then
                if #formsHotKey['proofs'].v ~= 0 then
                    formsHotKey['proofs'].v = tLastKeys.v
                    sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Данная комбинация уже занята!',-1)
                end
            else
                local isDefined, data = rkeys.getHotKey(tLastKeys.v)

                if isDefined then
                    rkeys.unRegisterHotKey(tLastKeys.v)
                    sampAddChatMessage('{FFA500}[Сохранение]{FFFFFF} Хоткей успешно удалён.',-1)
                end
                if #formsHotKey['proofs'].v > 0 then
                    rkeys.registerHotKey(formsHotKey['proofs'].v, 1, false, proofsForm)
                    sampAddChatMessage("{FFA500}[Сохранение]{FFFFFF} Хоткей успешно сохранен.",-1)
                end
            end
            saveJson(patches['forms_hotkey'],formsHotKey)
        end

        imgui.SameLine()
        
        if imgui.Button(fa.ICON_FA_TRASH .. '##deleteformasdadshotkey') then
            if rkeys.isHotKeyDefined(tLastKeys.v) then
                rkeys.unRegisterHotKey(tLastKeys.v)
                sampAddChatMessage('{FFA500}[Сохранение]{FFFFFF} Хоткей успешно удалён.',-1)
            end
            formsHotKey['proofs']['v'] = {}
            saveJson(patches['forms_hotkey'],formsHotKey)
        end

        imgui.SameLine()
        imgui.TextColoredRGB(u8'Запрос док-в')


        if imgui.HotKey("##key_disband_form", formsHotKey['disband'], tLastKeys, 100) then
            local isDefined, data = rkeys.getHotKey(formsHotKey['disband'].v)
            if isDefined then
                if #formsHotKey['disband'].v ~= 0 then
                    formsHotKey['disband'].v = tLastKeys.v
                    sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Данная комбинация уже занята!',-1)
                end
            else
                local isDefined, data = rkeys.getHotKey(tLastKeys.v)

                if isDefined then
                    rkeys.unRegisterHotKey(tLastKeys.v)
                    sampAddChatMessage('{FFA500}[Сохранение]{FFFFFF} Хоткей успешно удалён.',-1)
                end
                if #formsHotKey['disband'].v > 0 then
                    rkeys.registerHotKey(formsHotKey['disband'].v, 1, false, disbandForm)
                    sampAddChatMessage("{FFA500}[Сохранение]{FFFFFF} Хоткей успешно сохранен.",-1)
                end
            end
            saveJson(patches['forms_hotkey'],formsHotKey)
        end

        imgui.SameLine()
        if imgui.Button(fa.ICON_FA_TRASH .. '##deleteformhotkeadsadsasdydisband') then
            if rkeys.isHotKeyDefined(tLastKeys.v) then
                rkeys.unRegisterHotKey(tLastKeys.v)
                sampAddChatMessage('{FFA500}[Сохранение]{FFFFFF} Хоткей успешно удалён.',-1)
            end
            formsHotKey['disband']['v'] = {}
            saveJson(patches['forms_hotkey'],formsHotKey)
        end
        imgui.SameLine()
        imgui.TextColoredRGB(u8'Отклонение формы')

        imgui.SameLine(260)
        if imgui.Button(fa.ICON_FA_ARROWS_ALT .. u8' Редактировать позицию на экране') then moveInterface(formsIniSettings['x'],formsIniSettings['y'],function(x,y) ini.forms.x = x ini.forms.y = y save() end) end

        imgui.PushItemWidth(sw / 3.9)
        if imgui.NewInputText('##sound_url',formsIniSettings['sound_url'],sw / 3.9,u8'Название звукового файла',2) then
            if doesFileExist(workdir .. "\\resource\\RoboScripts\\RoboTools\\sounds\\" .. formsIniSettings['sound_url'].v) then
                if loadAudioStream(workdir .. "\\resource\\RoboScripts\\RoboTools\\sounds\\" .. formsIniSettings['sound_url'].v) then
                    ini.forms.sound_url = formsIniSettings['sound_url'].v
                    save()
                    sampAddChatMessage('{2DF61C}[Сохранение]{FFFFFF} Звук успешно сохранен!',-1)
                else
                    sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Звук должен быть в формате .mp3',-1)
                end
            end
            
        end
        imgui.Hint(u8'Звуковой файл должен быть в папке /resource/RoboScripts/RoboTools/sounds, а так-же быть формата .mp3')
        if imgui.DragInt('##volumeform',formsIniSettings['volume'], 0.1, 1, 100, u8('Громкость: %.0f %%')) then ini.forms.volume = formsIniSettings['volume'].v end
        if imgui.DragInt('##timeform',formsIniSettings['time'], 0.1, 1, 10000, u8('Время ожидания: %.0f мс')) then ini.forms.time = formsIniSettings['time'].v end
        imgui.PopItemWidth()
        if imgui.Button(fa.ICON_FA_TIMES .. u8' Отключить все параметры',imgui.ImVec2(sw / 9,sh / 54)) then
            for k,v in pairs(normalQueueForms) do
                formsSettingsImgui[v]['accept'].v = false
                formsSettingsImgui[v]['auto_accept'].v = false
                formsSettingsImgui[v]['sound'].v = false
                formsSettings[v] = {accept = false, auto_accept = false, sound = false}
            end
            sampAddChatMessage('{2DF61C}[Сохранение]{FFFFFF} Все параметры форм успешно отключены.',-1)
            saveJson(patches['forms'],formsSettings)
        end
        imgui.SameLine()
        if imgui.Button(fa.ICON_FA_TIMES .. u8' Отключить все ручные принятия',imgui.ImVec2(sw / 7,sh / 54)) then
            for k,v in pairs(normalQueueForms) do
                formsSettingsImgui[v]['accept'].v = false
                formsSettings[v]['accept'] = false
            end
            sampAddChatMessage('{2DF61C}[Сохранение]{FFFFFF} Все ручные принятия форм успешно отключены.',-1)
            saveJson(patches['forms'],formsSettings)
        end 
        if imgui.Button(fa.ICON_FA_TIMES .. u8' Отключить все авто-принятия',imgui.ImVec2(sw / 9,sh / 54)) then
            for k,v in pairs(normalQueueForms) do
                formsSettingsImgui[v]['auto_accept'].v = false
                formsSettings[v]['auto_accept'] = false
            end
            sampAddChatMessage('{2DF61C}[Сохранение]{FFFFFF} Все авто-принятия форм успешно отключены.',-1)
            saveJson(patches['forms'],formsSettings)
        end
        imgui.SameLine()
        if imgui.Button(fa.ICON_FA_TIMES .. u8' Отключить все звуковые уведомления',imgui.ImVec2(sw / 7,sh / 54)) then 
            for k,v in pairs(normalQueueForms) do
                formsSettingsImgui[v]['sound'].v = false
                formsSettings[v]['sound'] = false
            end
            sampAddChatMessage('{2DF61C}[Сохранение]{FFFFFF} Все звуковые уведомления форм успешно отключены.',-1)
            saveJson(patches['forms'],formsSettings)
        end
        if imgui.Button(fa.ICON_FA_CHECK .. u8' Включить все звуковые уведомления',imgui.ImVec2(sw / 3.9,sh / 54)) then 
            for k,v in pairs(normalQueueForms) do
                formsSettingsImgui[v]['sound'].v = true
                formsSettings[v]['sound'] = true
            end
            sampAddChatMessage('{2DF61C}[Сохранение]{FFFFFF} Все звуковые уведомления форм успешно отключены.',-1)
            saveJson(patches['forms'],formsSettings)
        end
        if imgui.Button(fa.ICON_FA_ID_CARD .. u8' Автоматически настроить под ваш уровень',imgui.ImVec2(sw / 3.9,sh / 54)) then
            for k,v in pairs(accessesForms) do
                if v['access'] <= mainini['adminlvl'].v then
                    formsSettingsImgui[k]['accept'].v = true
                    formsSettings[k]['accept'] = true
                else
                    formsSettingsImgui[k]['accept'].v = false
                    formsSettings[k]['accept'] = false
                end
            end
            sampAddChatMessage('{2DF61C}[Сохранение]{FFFFFF} Принятие форм было успешно настроено под ваш уровень администрирования.',-1)
            saveJson(patches['forms'],formsSettings)
        end
        imgui.EndChild()
        imgui.SameLine()
        imgui.BeginChild('##rightchild',imgui.ImVec2(sw / 6.75, sh / 5), false)
        local btn_offset = sw / 7.2
        if imgui.ColorEdit4(u8'Подсвечивать в чате',formsIniSettings['colored_form_color'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.forms.colored_form_color = float2hex(formsIniSettings['colored_form_color']) save() end
        imgui.SameLine()
        if imgui.TextAccept('',formsIniSettings['colored_form'],btn_offset) then ini.forms.colored_form = formsIniSettings['colored_form'].v save() end
        if imgui.TextAccept(u8'Показывать уведомление на экране',formsIniSettings['show_flash'],btn_offset) then ini.forms.show_flash = formsIniSettings['show_flash'].v save() end
        if imgui.TextAccept(u8'Показывать уведомление в чате',formsIniSettings['show_chat'],btn_offset) then ini.forms.show_chat = formsIniSettings['show_chat'].v save() end
        if imgui.TextAccept(u8'Показывать оставшееся время',formsIniSettings['show_time'],btn_offset) then ini.forms.show_time = formsIniSettings['show_time'].v save() end
        if imgui.TextAccept(u8'Показывать ник отправителя формы',formsIniSettings['show_nick'],btn_offset) then ini.forms.show_nick = formsIniSettings['show_nick'].v save() end
        if imgui.TextAccept(u8'Заходить в слежку за формой',formsIniSettings['is_re_punish'],btn_offset) then ini.forms.is_re_punish = formsIniSettings['is_re_punish'].v save() end
        if imgui.ColorEdit4(u8'Цвет ["A-Form"]',formsIniSettings['tag_color'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.forms.tag_color = float2hex(formsIniSettings['tag_color']) save() end
        imgui.SameLine(150)
        if imgui.ColorEdit4(u8'Цвет текста в чате',formsIniSettings['default_color'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.forms.default_color = float2hex(formsIniSettings['default_color']) save() end
        if imgui.ColorEdit4(u8'Цвет кнопки одобрения',formsIniSettings['color_accept'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.forms.color_accept = float2hex(formsIniSettings['color_accept']) save() end
        if imgui.ColorEdit4(u8'Цвет кнопки отклонения',formsIniSettings['color_disband'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.forms.color_disband = float2hex(formsIniSettings['color_disband']) save() end
        if imgui.ColorEdit4(u8'Цвет автора в чате',formsIniSettings['color_author'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.forms.color_author = float2hex(formsIniSettings['color_author']) save() end
        
        imgui.EndChild()
        imgui.BeginChild('##hedaersschild', imgui.ImVec2(781, 20), false)
        imgui.Columns(4,'##tableacceptes')
            imgui.SetColumnWidth(-1,sw / 14.7)
            imgui.CenterColumnText(u8'Команда')
            imgui.NextColumn()
            imgui.CenterColumnText(u8'Ручное принятие')
            imgui.NextColumn()
            imgui.CenterColumnText(u8'Авто-принятие')
            imgui.NextColumn()
            imgui.CenterColumnText(u8'Звуковое уведомление')
            imgui.Separator()
            imgui.Columns(1)
        imgui.EndChild()
        imgui.BeginChild('##contextcontextchild', imgui.ImVec2(790, 330), false)
            imgui.Columns(4,'##contextacceptes')
            imgui.SetColumnWidth(-1,sw / 14.7)
                for k,v in pairs(normalQueueForms) do
                    imgui.Button(u8(v),imgui.ImVec2(sw / 16, sh / 45))
                    imgui.NextColumn()
                    imgui.SetCursorPosX((imgui.GetColumnOffset() + (imgui.GetColumnWidth() / 2)) - (sw / 96) / 2)
                    if imgui.Checkbox('##checkboxformsaccept_'..k, formsSettingsImgui[v]['accept']) then formsSettings[v]['accept'] = formsSettingsImgui[v]['accept'].v saveJson(patches['forms'],formsSettings) end
                    imgui.NextColumn()
                    imgui.SetCursorPosX((imgui.GetColumnOffset() + (imgui.GetColumnWidth() / 2)) - (sw / 96) / 2)
                    if imgui.Checkbox('##checkboxformsaccept_auto_'..k, formsSettingsImgui[v]['auto_accept']) then formsSettings[v]['auto_accept'] = formsSettingsImgui[v]['auto_accept'].v saveJson(patches['forms'],formsSettings) end
                    imgui.NextColumn()
                    imgui.SetCursorPosX((imgui.GetColumnOffset() + (imgui.GetColumnWidth() / 2)) - (sw / 96) / 2)
                    if imgui.Checkbox('##checkboxformsaccept_sound_'..k, formsSettingsImgui[v]['sound']) then formsSettings[v]['sound'] = formsSettingsImgui[v]['sound'].v saveJson(patches['forms'],formsSettings) end
                    imgui.NextColumn()
                    imgui.Separator()
                end
            imgui.Columns(1)
        imgui.EndChild()
        
        imgui.EndChild()
    end
end

function hotkeys_window_settings() 
    if windows['keys'].v then
        local tLastKeys = {}
        imgui.BeginChild('##mainhotkey',imgui.ImVec2(sw / 7.4, sh / 1.78),false,imgui.WindowFlags.NoScrollbar)
            imgui.CenterText('Основное')
            imgui.Separator()
            local counter = 1
            for k,v in pairs(hotkeys_names_functions['main']) do

                if not hotkeysTable['main'][counter] then
                    hotkeysTable['main'][counter] = {}
                    hotkeysTable['main'][counter].v = {}
                end

                if imgui.HotKey("##unique_main_bind"..k..unpack(v), hotkeysTable['main'][counter], tLastKeys, 100) then
                    
                    local isDefined, data = rkeys.getHotKey(hotkeysTable['main'][counter].v)
                    if isDefined then
                        if #hotkeysTable['main'][counter].v ~= 0 then
                            hotkeysTable['main'][counter].v = tLastKeys.v
                            sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Данная комбинация уже занята!',-1)
                        end
                    else
                        local isDefined, data = rkeys.getHotKey(tLastKeys.v)

                        if isDefined then
                            rkeys.unRegisterHotKey(tLastKeys.v)
                            sampAddChatMessage('{FFA500}[Сохранение]{FFFFFF} Хоткей успешно удалён.',-1)
                        end

                        if #hotkeysTable['main'][counter].v  > 0 then
                            rkeys.registerHotKey(hotkeysTable['main'][counter].v, 1, false, v[2])
                            sampAddChatMessage("{FFA500}[Сохранение]{FFFFFF} Хоткей успешно сохранен.",-1)
                        end
                    end
                    saveJson(patches['hotkeys'],hotkeysTable)
                end

                imgui.SameLine()
                if imgui.Button(fa.ICON_FA_TRASH .. '##'..k .. unpack(v)) then
                    if rkeys.isHotKeyDefined(tLastKeys.v) then
                        rkeys.unRegisterHotKey(tLastKeys.v)
                        sampAddChatMessage('{FFA500}[Сохранение]{FFFFFF} Хоткей успешно удалён.',-1)
                    end
                    hotkeysTable['main'][counter]['v'] = {}
                    saveJson(patches['hotkeys'],hotkeysTable)
                end
                imgui.SameLine()
                imgui.TextColoredRGB(u8(v[1]))
                if v[3] then
                    imgui.Hint(u8(v[3]))
                end
                counter = counter + 1
            end

            
        imgui.EndChild()
        imgui.SameLine()
        imgui.BeginChild('##cheatshotkey',imgui.ImVec2(sw / 6.2, sh / 1.78),false,imgui.WindowFlags.NoScrollbar)
        imgui.CenterText('Вспомогательное ПО')
        imgui.Separator()
        local counter = 1
        for k,v in pairs(hotkeys_names_functions['cheats']) do

            if not hotkeysTable['cheats'][counter] then
                hotkeysTable['cheats'][counter] = {}
                hotkeysTable['cheats'][counter].v = {}
            end

            if imgui.HotKey("##unique_cheats_bind"..k..unpack(v), hotkeysTable['cheats'][counter], tLastKeys, 100) then
                local isDefined, data = rkeys.getHotKey(hotkeysTable['cheats'][counter].v)
                if isDefined then
                    if #hotkeysTable['cheats'][counter].v ~= 0 then
                        hotkeysTable['cheats'][counter].v = tLastKeys.v
                        sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Данная комбинация уже занята!',-1)
                    end
                else
                    local isDefined, data = rkeys.getHotKey(tLastKeys.v)

                    if isDefined then
                        rkeys.unRegisterHotKey(tLastKeys.v)
                        sampAddChatMessage('{FFA500}[Сохранение]{FFFFFF} Хоткей успешно удалён.',-1)
                    end

                    if #hotkeysTable['cheats'][counter].v  > 0 then
                        rkeys.registerHotKey(hotkeysTable['cheats'][counter].v, 1, false, v[2])
                        sampAddChatMessage("{FFA500}[Сохранение]{FFFFFF} Хоткей успешно сохранен.",-1)
                    end
                end
                saveJson(patches['hotkeys'],hotkeysTable)
            end

            imgui.SameLine()
            if imgui.Button(fa.ICON_FA_TRASH .. '##'..k .. unpack(v)) then
                if rkeys.isHotKeyDefined(tLastKeys.v) then
                    rkeys.unRegisterHotKey(tLastKeys.v)
                    sampAddChatMessage('{FFA500}[Сохранение]{FFFFFF} Хоткей успешно удалён.',-1)
                end
                hotkeysTable['cheats'][counter]['v'] = {}
                saveJson(patches['hotkeys'],hotkeysTable)
            end
            imgui.SameLine()
            imgui.TextColoredRGB(u8(v[1]))
            if v[3] then
                imgui.Hint(u8(v[3]))
            end
            counter = counter + 1
        end

        imgui.CenterText('Репорт')
        imgui.Separator()
        local counter = 1
        for k,v in pairs(hotkeys_names_functions['report']) do

            if not hotkeysTable['report'][counter] then
                hotkeysTable['report'][counter] = {}
                hotkeysTable['report'][counter].v = {}
            end

            if imgui.HotKey("##unique_report_bind"..k..unpack(v), hotkeysTable['report'][counter], tLastKeys, 100) then
                local isDefined, data = rkeys.getHotKey(hotkeysTable['report'][counter].v)
                if isDefined then
                    if #hotkeysTable['report'][counter].v ~= 0 then
                        hotkeysTable['report'][counter].v = tLastKeys.v
                        sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Данная комбинация уже занята!',-1)
                    end
                else
                    local isDefined, data = rkeys.getHotKey(tLastKeys.v)

                    if isDefined then
                        rkeys.unRegisterHotKey(tLastKeys.v)
                        sampAddChatMessage('{FFA500}[Сохранение]{FFFFFF} Хоткей успешно удалён.',-1)
                    end

                    if #hotkeysTable['report'][counter].v  > 0 then
                        rkeys.registerHotKey(hotkeysTable['report'][counter].v, 1, false, v[2])
                        sampAddChatMessage("{FFA500}[Сохранение]{FFFFFF} Хоткей успешно сохранен.",-1)
                    end
                end
                saveJson(patches['hotkeys'],hotkeysTable)
            end

            imgui.SameLine()
            if imgui.Button(fa.ICON_FA_TRASH .. '##'..k .. unpack(v)) then
                if rkeys.isHotKeyDefined(tLastKeys.v) then
                    rkeys.unRegisterHotKey(tLastKeys.v)
                    sampAddChatMessage('{FFA500}[Сохранение]{FFFFFF} Хоткей успешно удалён.',-1)
                end
                hotkeysTable['report'][counter]['v'] = {}
                saveJson(patches['hotkeys'],hotkeysTable)
            end
            imgui.SameLine()
            imgui.TextColoredRGB(u8(v[1]))
            if v[3] then
                imgui.Hint(u8(v[3]))
            end
            counter = counter + 1
        end

    imgui.EndChild()
    imgui.SameLine()

    imgui.BeginChild('##reportshotkey',imgui.ImVec2(sw / 8.4, sh / 1.78),false,imgui.WindowFlags.NoScrollbar)
        imgui.CenterText('Слежка')
        imgui.Separator()
        local counter = 1
        for k,v in pairs(hotkeys_names_functions['recon']) do

            if not hotkeysTable['recon'][counter] then
                hotkeysTable['recon'][counter] = {}
                hotkeysTable['recon'][counter].v = {}
            end

            if imgui.HotKey("##unique_recon_bind"..k..unpack(v), hotkeysTable['recon'][counter], tLastKeys, 100) then
                local isDefined, data = rkeys.getHotKey(hotkeysTable['recon'][counter].v)
                if isDefined then
                    if #hotkeysTable['recon'][counter].v ~= 0 then
                        hotkeysTable['recon'][counter].v = tLastKeys.v
                        sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Данная комбинация уже занята!',-1)
                    end
                else
                    local isDefined, data = rkeys.getHotKey(tLastKeys.v)

                    if isDefined then
                        rkeys.unRegisterHotKey(tLastKeys.v)
                        sampAddChatMessage('{FFA500}[Сохранение]{FFFFFF} Хоткей успешно удалён.',-1)
                    end

                    if #hotkeysTable['recon'][counter].v  > 0 then
                        rkeys.registerHotKey(hotkeysTable['recon'][counter].v, 1, false, v[2])
                        sampAddChatMessage("{FFA500}[Сохранение]{FFFFFF} Хоткей успешно сохранен.",-1)
                    end
                end
                saveJson(patches['hotkeys'],hotkeysTable)
            end

            imgui.SameLine()
            if imgui.Button(fa.ICON_FA_TRASH .. '##'..k .. unpack(v)) then
                if rkeys.isHotKeyDefined(tLastKeys.v) then
                    rkeys.unRegisterHotKey(tLastKeys.v)
                    sampAddChatMessage('{FFA500}[Сохранение]{FFFFFF} Хоткей успешно удалён.',-1)
                end
                hotkeysTable['recon'][counter]['v'] = {}
                saveJson(patches['hotkeys'],hotkeysTable)
            end
            imgui.SameLine()
            imgui.TextColoredRGB(u8(v[1]))
            if v[3] then
                imgui.Hint(u8(v[3]))
            end
            counter = counter + 1
        end
        
    imgui.EndChild()

    end
end

function rslap_window()
    if addonWindows['rslap'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(sw / 7, sh / 3.7), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))
        imgui.Begin(fa.ICON_FA_ANGLE_DOUBLE_UP .. u8' Слап в радиусе',addonWindows['rslap'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
        imgui.Columns(2,'##columnsslap',true)
        imgui.Separator()
        for k,v in pairs(inSpherePlayers) do
            if sampIsPlayerConnected(v) then
                imgui.CenterColumnText(u8(sampGetPlayerNickname(v)))
                imgui.NextColumn()
                if imgui.Button(u8'Удалить##'..k,imgui.ImVec2(sw / 15.2, sh / 54)) then table.remove(inSpherePlayers,k) end
                imgui.Separator()
                imgui.NextColumn()
            end
        end
        imgui.Columns(1)
        imgui.PushItemWidth(sw / 7.4)
        imgui.DragInt('##slapdirection',directionSlap, 0.1, 1, 2, u8(directionsTable[directionSlap.v]))
        imgui.PopItemWidth()
        if imgui.Button(u8'Слапнуть',imgui.ImVec2(sw / 7.4,sh / 54)) then
            addonWindows['rslap'].v = false
            lua_thread.create(function()
                for k,v in pairs(inSpherePlayers) do
                    sampSendChat('/slap ' .. v .. ' ' .. directionSlap.v)
                    wait(500)
                end
                inSpherePlayers = {}
            end)
        end
        imgui.End()
    end
end

function rkick_window()
    if addonWindows['rkick'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(sw / 7, sh / 3.7), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))
        imgui.Begin(fa.ICON_FA_BLIND .. u8' Кик в радиусе',addonWindows['rkick'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
        imgui.Columns(2,'##columnskick',true)
        imgui.Separator()
        for k,v in pairs(inSpherePlayers) do
            if sampIsPlayerConnected(v) then
                imgui.CenterColumnText(u8(sampGetPlayerNickname(v)))
                imgui.NextColumn()
                if imgui.Button(u8'Удалить##'..k,imgui.ImVec2(sw / 15.2, sh / 54)) then table.remove(inSpherePlayers,k) end
                imgui.Separator()
                imgui.NextColumn()
            end
        end
        imgui.Columns(1)
        imgui.NewInputText('##reasonkick',reasonKick,sw / 7.4,u8'Причина кика',2)
        imgui.PushItemWidth(sw / 7.4)
        imgui.DragInt('##kickcd',cooldownKick, 0.1, 1, 15, u8'Задержка между киками: %.0f секунд')
        imgui.PopItemWidth()
        if imgui.Button(u8'Кикнуть',imgui.ImVec2(sw / 7.4,sh / 54)) then 
            lua_thread.create(function()
                for k,v in pairs(inSpherePlayers) do
                    sampSendChat('/kick ' .. v .. ' ' .. u8:decode(reasonKick.v))
                    wait(cooldownKick.v * 1000)
                end
            end)
            addonWindows['rkick'].v = false
            inSpherePlayers = {}
        end
        imgui.End()
    end
end

function rpm_window()
    if addonWindows['rpm'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(sw / 7, sh / 3.7), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))
        imgui.Begin(fa.ICON_FA_COMMENT_DOTS .. u8' /pm в радиусе',addonWindows['rpm'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
        imgui.Columns(2,'##columnskick',true)
        imgui.Separator()
        for k,v in pairs(inSpherePlayers) do
            if sampIsPlayerConnected(v) then
                imgui.CenterColumnText(u8(sampGetPlayerNickname(v)))
                imgui.NextColumn()
                if imgui.Button(u8'Удалить##'..k,imgui.ImVec2(sw / 15.2, sh / 54)) then table.remove(inSpherePlayers,k) end
                imgui.Separator()
                imgui.NextColumn()
            end
        end
        imgui.Columns(1)
        imgui.NewInputText('##messagerpm',messagerpm,sw / 7.4,u8'Сообщение',2)
        imgui.PushItemWidth(sw / 7.4)
        imgui.DragInt('##method',typerpm, 0.1, 0, 1, u8'Метод отправки: %.0f')
        imgui.PopItemWidth()
        if imgui.Button(u8'Отправить',imgui.ImVec2(sw / 7.4,sh / 54)) then 
            lua_thread.create(function()
                addonWindows['rpm'].v = false
                for k,v in pairs(inSpherePlayers) do
                    sampSendChat('/pm ' .. v .. ' ' .. typerpm.v .. ' ' .. u8:decode(messagerpm.v))
                    wait(500)
                end
            end)
            
            inSpherePlayers = {}
        end
        imgui.End()
    end
end

function form_accept_window()
    if addonWindows['form_accept'].v and formsIniSettings['is_re_punish'].v then
        imgui.SetNextWindowSize(imgui.ImVec2(sw / 12, sh / 13), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((formsIniSettings['x'].v), formsIniSettings['y'].v),imgui.ImVec2(0.5,0.5)) 
        imgui.Begin(fa.ICON_FA_HANDSHAKE .. u8' Слежка по форме',addonWindows['form_accept'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove)
            if imgui.Button(fa.ICON_FA_CHECK_DOUBLE .. u8" Принять", imgui.ImVec2(sw / 13.2, sh / 47)) then workerForm(formsInfoCheck['context'], formsInfoCheck['nick'], formsInfoCheck['id']) end
            if imgui.Button(fa.ICON_FA_FILE_VIDEO .. u8" Доказательства", imgui.ImVec2(sw / 13.2, sh / 47)) then proofsForm() end
        imgui.End()
    end
end

function abot_window()
    if addonWindows['abot'].v and abotInfo[abotCurrent] and sampIsPlayerConnected(abotInfo[abotCurrent]) then
        imgui.SetNextWindowSize(imgui.ImVec2(sw / 7, sh / 6), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((reconSettings['xBot'].v), reconSettings['yBot'].v),imgui.ImVec2(0.5,0.5)) 
        imgui.Begin(fa.ICON_FA_ROBOT .. u8' Проверка на ботов | ' .. abotLVL .. ' LVLs',true,imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove)
        imgui.CenterText('Найдено ' .. #abotInfo .. ' аккаунтов')
        imgui.Separator()
        if sampIsPlayerConnected(abotInfo[abotCurrent]) then
            imgui.TextColoredRGB(u8'Текущий игрок: ' .. sampGetPlayerNickname(abotInfo[abotCurrent]) .. '['..abotInfo[abotCurrent]..']')
        end
        imgui.Separator()
        imgui.CenterText('Подозрения')
        imgui.Separator()
        imgui.Columns(2,'##warnings',true)
            imgui.CenterColumnText(u8'Подозрение')
            imgui.NextColumn()
            imgui.CenterColumnText(u8'Статус')
            imgui.NextColumn()
            imgui.CenterColumnText(u8'Ракбот')
            imgui.NextColumn()
            if reconInfo['afkTime']:match('%d+') and tonumber(reconInfo['afkTime']) >= 90000 then
                imgui.CenterColumnText(u8'{FF2B2B} Присутствует')
                imgui.Hint('С большой вероятностью тот, кто сидит за аккаунтом - бот, а не настоящий игрок.\nПопробуйте слапнуть игрока или заспавнить, в случае, если афк собьется или игрок зависнет в воздухе - игрок является ботом.')
            else
                imgui.CenterColumnText(u8'{4EFF2B}Отсутствует')
            end

            imgui.NextColumn()
            imgui.CenterColumnText(u8'Взлом')
            imgui.NextColumn()
            if reconInfo['steal'] then
                imgui.CenterColumnText(u8'{FF2B2B} Присутствует')
                imgui.Hint('Возникли подозрения по поводу взлома, пожалуйста, проверьте рег.данные игрока.')
            elseif mainini['adminlvl'].v <= 1 then
                imgui.CenterColumnText(u8'{ffff00}Отсутствует')
                imgui.Hint(u8'Ваш уровень администрирования не позволяет вам произвести автоматическую проверку игрока на взлом!')
            else
                imgui.CenterColumnText(u8'{4EFF2B}Отсутствует')
            end
        imgui.Columns(1)
        imgui.Separator()
        if imgui.Button(u8'<<',imgui.ImVec2(sw / 25,sh / 54)) then if #abotInfo > 1 and abotCurrent > 1 then abotCurrent = abotCurrent - 1 sampSendChat('/re ' .. abotInfo[abotCurrent]) end end
        imgui.SameLine()
        if imgui.Button(u8'Выход',imgui.ImVec2(sw / 20,sh / 54)) then addonWindows['abot'].v = not addonWindows['abot'].v end
        imgui.SameLine()
        if imgui.Button(u8'>>',imgui.ImVec2(sw / 25,sh / 54)) then if #abotInfo > abotCurrent then abotCurrent = abotCurrent + 1 sampSendChat('/re ' .. abotInfo[abotCurrent]) end end
        imgui.End()
    end
end

function hgps_window()
    if addonWindows['hgps'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(sw / 3.76, sh / 5.4), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))
        imgui.Begin(fa.ICON_FA_MAP_MARKER_ALT .. u8' Помощь по /gps',addonWindows['hgps'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
        gps_list(1)
        imgui.End()
    end
end

function hlvl_window()
    if addonWindows['hlvl'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(sw / 3.76, sh / 5.4), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))
        imgui.Begin(fa.ICON_FA_MAP_MARKER_ALT .. u8' Помощь по работам',addonWindows['hlvl'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
        lvl_list(1)
        imgui.End()
    end
end

function hclr_window()
    if addonWindows['hclr'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(1160, 640), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))
        imgui.Begin(fa.ICON_FA_TINT .. u8' Список цветов',addonWindows['hclr'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize + imgui.WindowFlags.AlwaysAutoResize)
        color_list(1)
        imgui.End()
    end
end

function hcmd_window()
    if addonWindows['hcmd'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(sw / 3.76, sh / 5.4), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))
        imgui.Begin(fa.ICON_FA_TERMINAL .. u8' Список команд',addonWindows['hcmd'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
        cmd_list(1)
        imgui.End()
    end
end

function tp_window()
    if addonWindows['tp'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(sw / 3.2, sh / 3.06), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))
        imgui.Begin(fa.ICON_FA_MAP_PIN .. u8' Телепортация',addonWindows['tp'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
        imgui.BeginChild('ChildTp', imgui.ImVec2(sw / 17, sh / 3.39), true)
        local btn_size = imgui.ImVec2(sw / 19.8, sh / 11)
        if imgui.ButtonActivated(tpWindows[1],u8'Помещения',btn_size) then tpWindows[1].v = true tpWindows[2].v = false tpWindows[3].v = false end
        if imgui.ButtonActivated(tpWindows[2],u8'Улица',btn_size) then tpWindows[1].v = false tpWindows[2].v = true tpWindows[3].v = false end
        if imgui.ButtonActivated(tpWindows[3],u8'Свои точки',btn_size) then tpWindows[1].v = false tpWindows[2].v = false tpWindows[3].v = true end
        imgui.EndChild()
        imgui.SameLine()
        imgui.BeginChild('MainTp', imgui.ImVec2(sw / 4.11, sh / 3.39), true)
        local otherOrganisations = clone(table_organisations)
        table.remove(otherOrganisations,1)
        if tpWindows[1].v then
            for k,v in pairs(otherOrganisations) do
                if imgui.Button(v,imgui.ImVec2(sw / 13, sh / 40.00004662)) then sampSendChat('/tp ' .. k) addonWindows['tp'].v = false end
                if k%3 ~= 0 then
                    imgui.SameLine()
                end
            end
        end
         
        if tpWindows[2].v then
            for k,v in pairs(otherOrganisations) do
                if imgui.Button(v,imgui.ImVec2(sw / 13, sh / 40.00004662)) then
                    sendClickMap(tpStreet[k][1],tpStreet[k][2],tpStreet[k][3])
                    setCharHeading(PLAYER_PED,tpStreet[k][4])
                    addonWindows['tp'].v = false
                end

                if k%3 ~= 0 then
                    imgui.SameLine()
                end
            end
        end

        if tpWindows[3].v then
            if imgui.Button(fa.ICON_FA_PLUS .. u8' Добавить точку телепорта', imgui.ImVec2(200,20)) then errormsg = '' nameTP = imgui.ImBuffer('',256) xAdd,yAdd,zAdd,angleAdd,worldAdd = imgui.ImInt(0),imgui.ImInt(0),imgui.ImInt(0),imgui.ImInt(0),imgui.ImInt(0) imgui.OpenPopup(fa.ICON_FA_PLUS .. u8' Добавление точки телепорта') end
            if tpWindows[4].v == 0 then imgui.SameLine(sw / 5.95) if imgui.Button(u8'Режим телепортации') then tpWindows[4].v = 1 end elseif tpWindows[4].v == 1 then imgui.SameLine(sw / 6.2) if imgui.Button(u8'Режим редактирования') then tpWindows[4].v = 0 end end
            imgui.Separator()
            if imgui.Button(fa.ICON_FA_MAP_MARKER_ALT .. u8' Телепорт на маркер', imgui.ImVec2(451,20)) then
                if tpMarker() then
                    addonWindows['tp'].v = false
                end
            end

            if imgui.Button(fa.ICON_FA_MAP_MARKED_ALT .. u8' Телепорт на метку', imgui.ImVec2(451,20)) then
                if tpMetka() then
                    addonWindows['tp'].v = false
                end
            end

            imgui.Separator()
            if imgui.BeginPopupModal(fa.ICON_FA_PLUS .. u8' Добавление точки телепорта', true, imgui.WindowFlags.NoResize + imgui.WindowFlags.AlwaysAutoResize) then
                imgui.NewInputText('##nametp',nameTP,sw / 6.085,u8'Название точки',2)
                imgui.PushItemWidth(sw / 25)
                imgui.DragInt('##xadd',xAdd, 0.1, -100000,100000, u8('X: %.0f'))
                imgui.SameLine()
                imgui.DragInt('##yadd',yAdd, 0.1, -100000,100000, u8('Y: %.0f'))
                imgui.SameLine()
                imgui.DragInt('##zadd',zAdd, 0.1, -100000,100000, u8('Z: %.0f'))
                imgui.SameLine()
                imgui.DragInt('##angleadd',angleAdd, 0.1, 0,360, u8('A: %.0f °'))
                imgui.PopItemWidth()
                imgui.PushItemWidth(sw / 6.085)
                imgui.DragInt('##worldAdd',worldAdd, 0.1, -1,1000, u8('Интерьер: %.0f'))
                imgui.PopItemWidth()
                if imgui.Button(u8'Использовать текущие координаты', imgui.ImVec2(sw / 6.085, sh / 54)) then 
                    xAdd.v = math.floor(select(1, getCharCoordinates(PLAYER_PED)))
                    yAdd.v = math.floor(select(2, getCharCoordinates(PLAYER_PED)))
                    zAdd.v = math.floor(select(3, getCharCoordinates(PLAYER_PED)))
                    angleAdd.v = math.floor(getCharHeading(PLAYER_PED))
                    worldAdd.v = getCharActiveInterior(PLAYER_PED)
                end
                imgui.CenterText(errormsg)
                if imgui.Button(u8'Сохранить', imgui.ImVec2(sw / 6.085, sh / 54)) then
                    isExist = false
                    for _,vl in pairs(tpPoints) do
                        if stringToLower(vl[1]) == stringToLower(u8:decode(nameTP.v)) then
                           isExist = true 
                        end
                    end
                    if isExist then
                        errormsg = 'Точка с таким названием уже существует'
                    elseif len(nameTP.v) > 20 then
                        errormsg = 'Название точки телепорта должно состоять\nне более чем из 20-ти символов'
                    elseif len(nameTP.v) < 1 then
                        errormsg = 'Название точки телепорта должно состоять\nне менее чем из 1-ого символа'
                    else
                        errormsg = ''
                        tpPoints[#tpPoints + 1] = {u8:decode(nameTP.v),xAdd.v,yAdd.v,zAdd.v,angleAdd.v,worldAdd.v}
                        saveJson(patches['points'],tpPoints)
                        sampAddChatMessage("{2DF61C}[Создание]{FFFFFF} Вы успешно создали новую точку телепортации.",-1)  
                        imgui.CloseCurrentPopup()
                    end
                end
                if imgui.Button(u8'Отмена', imgui.ImVec2(sw / 6.085, sh / 54)) then errormsg = '' imgui.CloseCurrentPopup() end
            imgui.EndPopup()
            end

            for k,v in pairs(tpPoints) do
                if imgui.Button(u8(v[1] .. '##' .. k),imgui.ImVec2(sw / 13, sh / 40.00004662)) then
                    if tpWindows[4].v == 0 then
                        sendClickMap(v[2],v[3],v[4])
                        setCharCoordinates(PLAYER_PED,v[2],v[3],v[4])
                        setCharHeading(PLAYER_PED,v[5])
                        setCharInterior(PLAYER_PED,v[6])
                        setInteriorVisible(v[6])
                        sampSendInteriorChange(v[6])
                        addonWindows['tp'].v = false
                    elseif tpWindows[4].v == 1 then
                        errormsg = '' nameTP = imgui.ImBuffer(u8(v[1]),256) xAdd,yAdd,zAdd,angleAdd,worldAdd = imgui.ImInt(v[2]),imgui.ImInt(v[3]),imgui.ImInt(v[4]),imgui.ImInt(v[5]),imgui.ImInt(v[6]) imgui.OpenPopup(fa.ICON_FA_PLUS .. u8' Редактирование точки телепорта##'..k .. v[1])
                    end
                end
                if k%3 ~= 0 then
                    imgui.SameLine()
                end
                if imgui.BeginPopupModal(fa.ICON_FA_PLUS .. u8' Редактирование точки телепорта##'..k .. v[1], true, imgui.WindowFlags.NoResize + imgui.WindowFlags.AlwaysAutoResize) then
                    imgui.NewInputText('##nametp',nameTP,sw / 6.085,u8'Название точки',2)
                    imgui.PushItemWidth(sw / 25)
                    imgui.DragInt('##xadd',xAdd, 0.1, -100000,100000, u8('X: %.0f'))
                    imgui.SameLine()
                    imgui.DragInt('##yadd',yAdd, 0.1, -100000,100000, u8('Y: %.0f'))
                    imgui.SameLine()
                    imgui.DragInt('##zadd',zAdd, 0.1, -100000,100000, u8('Z: %.0f'))
                    imgui.SameLine()
                    imgui.DragInt('##angleadd',angleAdd, 0.1, 0,360, u8('A: %.0f °'))
                    imgui.PopItemWidth()
                    imgui.PushItemWidth(sw / 6.085)
                    imgui.DragInt('##worldAdd',worldAdd, 0.1, -1,1000, u8('Интерьер: %.0f'))
                    imgui.PopItemWidth()
                    if imgui.Button(u8'Использовать текущие координаты', imgui.ImVec2(sw / 6.085, sh / 54)) then 
                        xAdd.v = math.floor(select(1, getCharCoordinates(PLAYER_PED)))
                        yAdd.v = math.floor(select(2, getCharCoordinates(PLAYER_PED)))
                        zAdd.v = math.floor(select(3, getCharCoordinates(PLAYER_PED)))
                        angleAdd.v = math.floor(getCharHeading(PLAYER_PED))
                        worldAdd.v = getCharActiveInterior(PLAYER_PED)
                    end
                    imgui.CenterText(errormsg)
                    if imgui.Button(u8'Сохранить', imgui.ImVec2(sw / 6.085, sh / 54)) then
                        isExist = false
                        for kv,vl in pairs(tpPoints) do
                            if kv ~= k and stringToLower(vl[1]) == stringToLower(u8:decode(nameTP.v)) then
                               isExist = true 
                            end
                        end
                        if isExist then
                            errormsg = 'Точка с таким названием уже существует'
                        elseif len(nameTP.v) > 20 then
                            errormsg = 'Название точки телепорта должно состоять\nне более чем из 20-ти символов'
                        elseif len(nameTP.v) < 1 then
                            errormsg = 'Название точки телепорта должно состоять\nне менее чем из 1-ого символа'
                        else
                            errormsg = ''
                            tpPoints[k] = {u8:decode(nameTP.v),xAdd.v,yAdd.v,zAdd.v,angleAdd.v,worldAdd.v}
                            saveJson(patches['points'],tpPoints)
                            sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Вы успешно сохранили изменения.",-1)  
                            imgui.CloseCurrentPopup()
                        end
                    end
                    if imgui.Button(u8'Удалить', imgui.ImVec2(sw / 6.085, sh / 54)) then
                        errormsg = ''
                        table.remove(tpPoints, k)
                        saveJson(patches['points'],tpPoints)
                        sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Вы успешно удалили точку телепортации.",-1)  
                        imgui.CloseCurrentPopup()
                    end
                    if imgui.Button(u8'Отмена', imgui.ImVec2(sw / 6.085, sh / 54)) then errormsg = '' imgui.CloseCurrentPopup() end
                imgui.EndPopup()
                end
            end

        end
        imgui.EndChild()
        imgui.End()
    end
end

function veh_window()
    if addonWindows['veh'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(sw / 1.92, sh / 1.66), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))
        local nick_given = ''
        local tt_info = ''
        if sampIsPlayerConnected(vehInfo[1]) then
            nick_given = u8(' - '..sampGetPlayerNickname(vehInfo[1]) .. '['..vehInfo[1]..']') 
        else
            nick_given = u8' - Игрок оффлайн'
        end

        if tonumber(vehInfo[2]) == 0 then
            tt_info = ' - NO TT'
        elseif tonumber(vehInfo[2]) == 1 then
            tt_info = ' - TT'
        end
        imgui.Begin(fa.ICON_FA_SPACE_SHUTTLE .. u8' Выдача транспорта'..nick_given..tt_info ,addonWindows['veh'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
        imgui.NewInputText('##infsoloa',finderTable['veh'],983,u8'Название авто',2)
        imgui.BeginChild('##infinsolo', imgui.ImVec2(983, 590), true)
        local newCounter = 1
            for k,v in pairs(imgTextures['vehs']) do
                if tCarsName[399 + k]:match(finderTable['veh'].v) then
                    if imgui.ImageButton(v,imgui.ImVec2(sw / 12.8, sh / 10.8)) then sampSendChat('/plveh '.. vehInfo[1] .. ' ' .. 399 + k .. ' ' .. vehInfo[2]) addonWindows['veh'].v = false end
                    imgui.Hint(u8''..tCarsName[399 + k] .. '['..399 + k..']\n/plveh '.. vehInfo[1] .. ' ' .. 399 + k .. ' ' .. vehInfo[2])
                    if newCounter%6 ~= 0 then
                        imgui.SameLine()
                    end
                    newCounter = newCounter + 1
                end
            end
        imgui.EndChild()
        imgui.End()
    end
end

function rveh_window()
    if addonWindows['rveh'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(sw / 1.92, sh / 1.66), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))
        local tt_info = ''
        if tonumber(vehInfo[2]) == 0 then
            tt_info = ' - NO TT'
        elseif tonumber(vehInfo[2]) == 1 then
            tt_info = ' - TT'
        end

        imgui.Begin(fa.ICON_FA_SPACE_SHUTTLE .. u8' Выдача транспорта в радиусе - '..vehInfo[3]..u8' метров' .. tt_info,addonWindows['rveh'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
        imgui.NewInputText('##infmultia',finderTable['rveh'],983,u8'Название авто',2)
        imgui.BeginChild('##infmulti', imgui.ImVec2(983, 590), true)
        local newCounter = 1
            for k,v in pairs(imgTextures['vehs']) do
                if tCarsName[399 + k]:match(finderTable['rveh'].v) then
                    if imgui.ImageButton(v,imgui.ImVec2(sw / 12.8, sh / 10.8)) then
                        lua_thread.create(function()
                            for _,val in pairs(inSpherePlayers) do
                                if sampIsPlayerConnected(v) then
                                    sampSendChat('/plveh '.. val .. ' ' .. 399 + k .. ' ' .. vehInfo[2])
                                end
                            end
                            addonWindows['rveh'].v = false
                        end)
                    end

                    imgui.Hint(u8''..tCarsName[399 + k] .. '['..399 + k..']\n/plveh ('.. points_unpack(inSpherePlayers) .. ') ' .. 399 + k .. ' ' .. vehInfo[2])
                    if newCounter%6 ~= 0 then
                        imgui.SameLine()
                    end
                    newCounter = newCounter + 1
                end
            end
        imgui.EndChild()
        imgui.End()
    end
end


function getTargetBlipCoordinatesFixed()
    local bool, x, y, z = getTargetBlipCoordinates()
    if not bool then return false end
    requestCollision(x, y)
    loadScene(x, y, z)
    local bool, x, y, z = getTargetBlipCoordinates()
    return bool, x, y, z
end


function SearchMarker(posX, posY, posZ, radius, isRace)
    local ret_posX = 0.0
    local ret_posY = 0.0
    local ret_posZ = 0.0
    local isFind = false

    for id = 0, 31 do
        local MarkerStruct = 0
        MarkerStruct = 0xC7F168 + id * 56
        local MarkerPosX = representIntAsFloat(readMemory(MarkerStruct + 0, 4, false))
        local MarkerPosY = representIntAsFloat(readMemory(MarkerStruct + 4, 4, false))
        local MarkerPosZ = representIntAsFloat(readMemory(MarkerStruct + 8, 4, false))

        if MarkerPosX ~= 0.0 or MarkerPosY ~= 0.0 or MarkerPosZ ~= 0.0 then
            ret_posX = MarkerPosX
            ret_posY = MarkerPosY
            ret_posZ = MarkerPosZ
            isFind = true
        end
    end

    return isFind, ret_posX, ret_posY, ret_posZ
end


function points_unpack(table)
    local result = ""
    for k,v in pairs(table) do
        if #tostring(result) > 0 then
            result = tostring(result) .. ' ' .. tostring(v)
        else
            result = tostring(v)
        end
    end
    return result
end

function gun_window()
    if addonWindows['gun'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(sw / 1.92, sh / 1.66), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))
        local nick_given = ''
        if sampIsPlayerConnected(gunInfo[1]) then
            nick_given = u8(' - '..sampGetPlayerNickname(gunInfo[1]) .. '['..gunInfo[1]..']') 
        else
            nick_given = u8' - Игрок оффлайн'
        end

        imgui.Begin(fa.ICON_FA_ANGRY .. u8' Выдача оружия'..nick_given.. ' - ' .. gunInfo[2] .. u8' пт.' ,addonWindows['gun'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
        imgui.NewInputText('##infsoladsoa',finderTable['gun'],983,u8'Название оружия',2)
        imgui.BeginChild('##infinsadsolo', imgui.ImVec2(983, 590), true)
        local newCounter = 1
        for k,v in pairs(imgTextures['weps']) do
            if tGunsName[v[2]]:match(finderTable['gun'].v) then
                if imgui.ImageButton(v[1],imgui.ImVec2(sw / 13.1, sh / 11.1)) then sampSendChat('/givegun '.. gunInfo[1] .. ' ' .. v[2] .. ' ' .. gunInfo[2]) addonWindows['gun'].v = false  end
                imgui.Hint(u8''..tGunsName[v[2]] .. '['..v[2]..']\n/givegun '.. gunInfo[1] .. ' ' .. v[2] .. ' ' .. gunInfo[2])
                if newCounter%6 ~= 0 then
                    imgui.SameLine()
                end
                newCounter = newCounter + 1
            end
        end
        imgui.EndChild()
        imgui.End()
    end
end

function rgun_window()
    if addonWindows['rgun'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(sw / 1.92, sh / 1.66), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))
        local nick_given = ''
        if sampIsPlayerConnected(gunInfo[1]) then
            nick_given = u8(' - '..sampGetPlayerNickname(gunInfo[1]) .. '['..gunInfo[1]..']') 
        else
            nick_given = u8' - Игрок оффлайн'
        end

        imgui.Begin(fa.ICON_FA_ANGRY .. u8' Выдача оружия в радиусе - ' .. gunInfo[3] .. u8' метров - ' .. gunInfo[2] .. u8' пт.',addonWindows['rgun'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
        imgui.NewInputText('##infshholoa',finderTable['rgun'],983,u8'Название оружия',2)
        imgui.BeginChild('##infhhinsolo', imgui.ImVec2(983, 590), true)
        local newCounter = 1
        for k,v in pairs(imgTextures['weps']) do
            if tGunsName[v[2]]:match(finderTable['rgun'].v) then
                if imgui.ImageButton(v[1],imgui.ImVec2(sw / 13.1, sh / 11.1)) then 
                    if mainini.adminlvl.v >= 3 then
                        sampSendChat('/gunall ' .. gunInfo[3] .. ' ' .. v[2] .. ' ' .. gunInfo[2])
                    else
                        lua_thread.create(function()
                            for _,val in pairs(inSpherePlayers) do
                                if sampIsPlayerConnected(v) then
                                    sampSendChat('/givegun '.. val .. ' ' .. v[2] .. ' ' .. gunInfo[2]) 
                                end
                            end
                            addonWindows['rgun'].v = false
                        end)
                    end
                end
                imgui.Hint(u8''..tGunsName[v[2]] .. '['..v[2]..']\n/givegun ('.. points_unpack(inSpherePlayers) .. ') ' .. v[2] .. ' ' .. gunInfo[2])
                if newCounter%6 ~= 0 then
                    imgui.SameLine()
                end

                newCounter = newCounter + 1
            end
        end
        imgui.EndChild()
        imgui.End()
    end
end

function sampSetChatInputAndEnable(text)
    if not sampIsChatInputActive() then
        sampSetChatInputEnabled(true)
        sampSetChatInputText(text)
    end
end

function skin_window()
    if addonWindows['skin'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(sw / 1.92, sh / 1.66), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))

        local nick_given = ''
        local temporary_or_not = "Временный скин"
        if sampIsPlayerConnected(skinInfo[1]) then
            nick_given = u8(' - '..sampGetPlayerNickname(skinInfo[1]) .. '['..skinInfo[1]..']') 
        else
            nick_given = u8' - Игрок оффлайн'
        end

        if tonumber(skinInfo[2]) == 1 then
            temporary_or_not = "Постоянный скин"
        end

        imgui.Begin(fa.ICON_FA_TSHIRT .. u8' Выдача скина' .. nick_given .. ' - ' .. u8(temporary_or_not),addonWindows['skin'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
            for k,v in pairs(imgTextures['skins']) do
                if imgui.ImageButton(v,imgui.ImVec2(83, 151)) then sampSendChat('/setskin '.. skinInfo[1] .. ' ' .. k .. ' ' .. skinInfo[2]) addonWindows['skin'].v = false end
                imgui.Hint(u8'/setskin '.. skinInfo[1] .. ' ' .. k .. ' ' .. skinInfo[2])
                if k%10 ~= 0 then
                    imgui.SameLine()
                end
            end
        imgui.End()
    end
end

function rskin_window()
    if addonWindows['rskin'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(sw / 1.92, sh / 1.66), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))

        local nick_given = ''
        local temporary_or_not = "Временный скин"
        if sampIsPlayerConnected(skinInfo[1]) then
            nick_given = u8(' - '..sampGetPlayerNickname(skinInfo[1]) .. '['..skinInfo[1]..']') 
        else
            nick_given = u8' - Игрок оффлайн'
        end

        if tonumber(skinInfo[2]) == 1 then
            temporary_or_not = "Постоянный скин"
        end

        imgui.Begin(fa.ICON_FA_TSHIRT .. u8' Выдача скина в радиусе - ' .. skinInfo[3] .. u8' метров - ' .. u8(temporary_or_not),addonWindows['rskin'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
            for k,v in pairs(imgTextures['skins']) do
                if imgui.ImageButton(v,imgui.ImVec2(83, 151)) then 
                    if mainini.adminlvl.v >= 4 then
                        sampSendChat('/skinall ' .. skinInfo[3] .. ' ' .. k .. ' ' .. skinInfo[2])
                    else
                        lua_thread.create(function()
                            for _,val in pairs(inSpherePlayers) do
                                if sampIsPlayerConnected(v) then
                                    sampSendChat('/setskin '.. val .. ' ' .. k .. ' ' .. skinInfo[2])
                                end
                            end
                            addonWindows['rskin'].v = false
                        end)
                    end

                end
                imgui.Hint(u8'/setskin ('.. points_unpack(inSpherePlayers) .. ') ' .. k .. ' ' .. skinInfo[2])
                if k%10 ~= 0 then
                    imgui.SameLine()
                end
            end



        imgui.End()
        
    end
end

function amember_window()
    if addonWindows['amember'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(500, 300), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))
        imgui.Begin(fa.ICON_FA_BRIEFCASE .. u8' Вступление в организацию',addonWindows['amember'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
        imgui.PushItemWidth(485)
        imgui.DragInt('##rank',rankAmember,0.1,1,9,u8("Ранг: %.0f"))
        imgui.PopItemWidth()
        imgui.PushStyleVar(imgui.StyleVar.FrameRounding, 0)
        imgui.PushStyleVar(imgui.StyleVar.ItemSpacing, imgui.ImVec2(0,0))
        imgui.BeginChild('##listorgs', imgui.ImVec2(500, 240), false, imgui.WindowFlags.NoScrollbar)
        for k,v in pairs(table_organisations) do
            if k ~= 1 then
                imgui.PushStyleColor(imgui.Col.Button, colorOrgsFloat[k - 1])
                if imgui.Button(icons_amember[k - 1] .. ' ' .. v, imgui.ImVec2(162,50)) then addonWindows['amember'].v = false sampSendChat('/amember '.. (k - 1) .. ' ' .. rankAmember.v) end
                imgui.PopStyleColor(1)
                if (k-1)%3 ~= 0 then
                    imgui.SameLine()
                end
            end
        end
        imgui.EndChild()
        imgui.PopStyleVar(2)
        imgui.End()
    end
end

local resultCalculator = '';
local inputBufferText = imgui.ImBuffer(256)



function calc_window()
    if addonWindows['calc'].v then
        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(sw / 7.1, sh / 4), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))
        imgui.Begin(fa.ICON_FA_CALCULATOR .. u8' Калькулятор',addonWindows['calc'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
            imgui.BeginChild('##childcalc', imgui.ImVec2(sw / 7.55, sh / 4.45), true);
            imgui.Text(resultCalculator);
            imgui.NewInputText('##resultcalc',inputBufferText,sw / 8,u8'Результат',2)
            if imgui.Button('9', imgui.ImVec2(40, 40)) then
                inputBufferText.v = string.format('%s9', inputBufferText.v);
            end
            imgui.SameLine();
            if imgui.Button('8', imgui.ImVec2(40, 40)) then
                inputBufferText.v = string.format('%s8', inputBufferText.v);
            end
            imgui.SameLine();
            if imgui.Button('7', imgui.ImVec2(40, 40)) then
                inputBufferText.v = string.format('%s7', inputBufferText.v);
            end
            imgui.SameLine();
            if imgui.Button('/', imgui.ImVec2(40, 40)) then
                local bufferFirstNum, bufferAct = resultCalculator:match('(%d+)(.+)');
                if tonumber(bufferFirstNum) then
                    local numResult = tonumber(bufferFirstNum) / tonumber(inputBufferText.v);
                    resultCalculator = string.format('%s/', tostring(numResult));
                    inputBufferText.v = '';
                else
                    resultCalculator = string.format('%s/', inputBufferText.v);
                    inputBufferText.v = '';
                end
            end
            imgui.SameLine();
            if imgui.Button('CLR', imgui.ImVec2(40, 40)) then
                inputBufferText.v = '';
                resultCalculator = '';
            end
            --imgui.SameLine();
            if imgui.Button('6', imgui.ImVec2(40, 40)) then
                inputBufferText.v = string.format('%s6', inputBufferText.v);
            end
            imgui.SameLine();
            if imgui.Button('5', imgui.ImVec2(40, 40)) then
                inputBufferText.v = string.format('%s5', inputBufferText.v);
            end
            imgui.SameLine();
            if imgui.Button('4', imgui.ImVec2(40, 40)) then
                inputBufferText.v = string.format('%s4', inputBufferText.v);
            end
            imgui.SameLine();
            if imgui.Button('*', imgui.ImVec2(40, 40)) then
                local bufferFirstNum, bufferAct = resultCalculator:match('(%d+)(.+)');
                if tonumber(bufferFirstNum) then
                    local numResult = tonumber(bufferFirstNum) * tonumber(inputBufferText.v);
                    resultCalculator = string.format('%s*', tostring(numResult));
                    inputBufferText.v = '';
                else
                    resultCalculator = string.format('%s*', inputBufferText.v);
                    inputBufferText.v = '';
                end
            end
            imgui.SameLine();
            if imgui.Button('SQRT', imgui.ImVec2(40, 40)) then
                if tonumber(inputBufferText.v) then
                    local bufferResult = math.sqrt(tonumber(inputBufferText.v));
                    resultCalculator = tostring(bufferResult);
                end
            end
            if imgui.Button('3', imgui.ImVec2(40, 40)) then
                inputBufferText.v = string.format('%s3', inputBufferText.v);
            end
            imgui.SameLine();
            if imgui.Button('2', imgui.ImVec2(40, 40)) then
                inputBufferText.v = string.format('%s2', inputBufferText.v);
            end
            imgui.SameLine();
            if imgui.Button('1', imgui.ImVec2(40, 40)) then
                inputBufferText.v = string.format('%s1', inputBufferText.v);
            end
            imgui.SameLine();
            if imgui.Button('-', imgui.ImVec2(40, 40)) then
                local bufferFirstNum, bufferAct = resultCalculator:match('(%d+)(.+)');
                if tonumber(bufferFirstNum) and bufferAct then
                    local numResult = tonumber(bufferFirstNum) - tonumber(inputBufferText.v);
                    resultCalculator = string.format('%s-', tostring(numResult));
                    inputBufferText.v = '';
                else
                    resultCalculator = string.format('%s-', inputBufferText.v);
                    inputBufferText.v = '';
                end
            end
            imgui.SameLine();
            if imgui.Button('^', imgui.ImVec2(40, 40)) then
                resultCalculator = string.format('%s^', inputBufferText.v);
                inputBufferText.v = '';
            end
            if imgui.Button('0', imgui.ImVec2(85, 40)) then
                inputBufferText.v = string.format('%s0', inputBufferText.v);
            end
            imgui.SameLine();
            if imgui.Button('+', imgui.ImVec2(40, 40)) then
                local bufferFirstNum, bufferAct = resultCalculator:match('(%d+)(.+)');
                if tonumber(bufferFirstNum) and bufferAct then
                    local numResult = tonumber(bufferFirstNum) + tonumber(inputBufferText.v);
                    resultCalculator = string.format('%s+', tostring(numResult));
                    inputBufferText.v = '';
                else
                    resultCalculator = string.format('%s+', inputBufferText.v);
                    inputBufferText.v = '';
                end
            end
            imgui.SameLine();
            if imgui.Button('=', imgui.ImVec2(40, 40)) then
                local bufferFirstNum, bufferAct = resultCalculator:match('(%d+)(.+)');
                if bufferAct == '+' then
                    local numResult = tonumber(bufferFirstNum) + tonumber(inputBufferText.v);
                    resultCalculator = tostring(numResult);
                elseif bufferAct == '-' then
                    local numResult = tonumber(bufferFirstNum) - tonumber(inputBufferText.v);
                    resultCalculator = tostring(numResult);
                elseif bufferAct == '/' then
                    local numResult = tonumber(bufferFirstNum) / tonumber(inputBufferText.v);
                    resultCalculator = tostring(numResult);
                elseif bufferAct == '*' then
                    local numResult = tonumber(bufferFirstNum) * tonumber(inputBufferText.v);
                    resultCalculator = tostring(numResult);
                elseif bufferAct == '^' then
                    local numResult = tonumber(bufferFirstNum) ^ tonumber(inputBufferText.v);
                    resultCalculator = tostring(numResult);
                end
                inputBufferText.v = '';
            end
            imgui.SameLine()
            imgui.EndChild()
        imgui.End()
    end
end

function checkers_window_settings()
    if windows['checkers'].v then
        imgui.BeginChild('##admchecker',imgui.ImVec2(sw / 4.811, sh / 1.78),true,imgui.WindowFlags.NoScrollbar)
        imgui.CenterText('Конфигурация чекера админов')
        imgui.Separator()
        local btn_offset = sw / 12
        local text_offset = sw / 8

        if imgui.CustomButtonActivated('',checkersSettings['admins']['state'], imgui.ImVec2(sw / 5, 20)) then ini.adminsChecker.state = checkersSettings['admins']['state'].v save() end

        imgui.PushItemWidth(sw / 5)
        if imgui.DragInt('##delaya',checkersSettings['admins']['delay'], 0.1, 100, 5000, u8('Частота обновления: %.0f мс')) then ini.adminsChecker.delay = checkersSettings['admins']['delay'].v save() end
        if imgui.DragInt('##dopuska',checkersSettings['admins']['dopusk'], 0.1, 1, 1800, u8('Допуск АФК: %.0f')) then ini.adminsChecker.dopusk = checkersSettings['admins']['dopusk'].v save() end
        imgui.Separator()
        imgui.CenterText('Конфигурация интерфейса')
        imgui.SameLine(sw / 6.2)
        if imgui.RadioButton('1##achecker',wsachecker[1],0) then end
        imgui.SameLine()
        if imgui.RadioButton('2##achecker',wsachecker[1],1) then end
        imgui.Separator()
        if wsachecker[1].v == 0 then
            if imgui.TextAccept(u8'Показывать 5+ админов',checkersSettings['admins']['showSpecial'],btn_offset) then ini.adminsChecker.showSpecial = checkersSettings['admins']['showSpecial'].v save() end
            imgui.SameLine(text_offset)
            if imgui.TextAccept(u8'Показывать ник',checkersSettings['admins']['showNick'],sw / 5.05) then ini.adminsChecker.showNick = checkersSettings['admins']['showNick'].v save() end
            if imgui.TextAccept(u8'Показывать ID',checkersSettings['admins']['showId'],btn_offset) then ini.adminsChecker.showId = checkersSettings['admins']['showId'].v save() end
            imgui.SameLine(text_offset)
            if imgui.TextAccept(u8'Показывать АФК',checkersSettings['admins']['showAfk'],sw / 5.05) then ini.adminsChecker.showAfk = checkersSettings['admins']['showAfk'].v save() end
            if imgui.TextAccept(u8'Показывать рекон',checkersSettings['admins']['showRe'],btn_offset) then ini.adminsChecker.showRe = checkersSettings['admins']['showRe'].v save() end
            imgui.SameLine(text_offset)
            if imgui.TextAccept(u8'Показывать репутацию',checkersSettings['admins']['showReputation'],sw / 5.05) then ini.adminsChecker.showReputation = checkersSettings['admins']['showReputation'].v save() end
            if imgui.TextAccept(u8'Показывать актив',checkersSettings['admins']['showActive'],btn_offset) then ini.adminsChecker.showActive = checkersSettings['admins']['showActive'].v save() end
            imgui.SameLine(text_offset)
            if imgui.RadioIcon(u8'Центрирование',fa.ICON_FA_ALIGN_LEFT,checkersSettings['admins']['centering'],'1') then ini.adminsChecker.centering = checkersSettings['admins']['centering'].v save() end
            imgui.SameLine()
            if imgui.RadioIcon('',fa.ICON_FA_ALIGN_CENTER,checkersSettings['admins']['centering'],'2') then ini.adminsChecker.centering = checkersSettings['admins']['centering'].v save() end
            imgui.SameLine()
            if imgui.RadioIcon('',fa.ICON_FA_ALIGN_RIGHT,checkersSettings['admins']['centering'],'3') then ini.adminsChecker.centering = checkersSettings['admins']['centering'].v save() end
            if imgui.ColorEdit4(u8'Мл.Модератор',colorsAdmins['one'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.adminsChecker.one = float2hex(colorsAdmins['one']) save() end
            imgui.SameLine()
            if imgui.TextAccept('',checkersSettings['admins']['one_state'],btn_offset) then ini.adminsChecker.one_state = checkersSettings['admins']['one_state'].v save() end
            imgui.Hint(u8'Для того, чтобы включить/отключить показ первых уровней администраторов в чекере - нажмите на данную иконку.')
            imgui.SameLine(text_offset)
            if imgui.ColorEdit4(u8'Куратор',colorsAdmins['five'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.adminsChecker.five = float2hex(colorsAdmins['five']) save() end
            imgui.SameLine()
            if imgui.TextAccept('',checkersSettings['admins']['five_state'],sw / 5.05) then ini.adminsChecker.five_state = checkersSettings['admins']['five_state'].v save() end
            imgui.Hint(u8'Для того, чтобы включить/отключить показ пятых уровней администраторов в чекере - нажмите на данную иконку.')
            if imgui.ColorEdit4(u8'Модератор',colorsAdmins['two'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.adminsChecker.two = float2hex(colorsAdmins['two']) save() end
            imgui.SameLine()
            if imgui.TextAccept('',checkersSettings['admins']['two_state'],btn_offset) then ini.adminsChecker.two_state = checkersSettings['admins']['two_state'].v save() end
            imgui.Hint(u8'Для того, чтобы включить/отключить показ вторых уровней администраторов в чекере - нажмите на данную иконку.')
            imgui.SameLine(text_offset)
            if imgui.ColorEdit4(u8'Заместитель ГА',colorsAdmins['six'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.adminsChecker.six = float2hex(colorsAdmins['six']) save() end
            imgui.SameLine()
            if imgui.TextAccept('',checkersSettings['admins']['six_state'],sw / 5.05) then ini.adminsChecker.six_state = checkersSettings['admins']['six_state'].v save() end
            imgui.Hint(u8'Для того, чтобы включить/отключить показ шестых уровней администраторов в чекере - нажмите на данную иконку.')
            if imgui.ColorEdit4(u8'Ст.Модератор',colorsAdmins['three'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.adminsChecker.three = float2hex(colorsAdmins['three']) save() end
            imgui.SameLine()
            if imgui.TextAccept('',checkersSettings['admins']['three_state'],btn_offset) then ini.adminsChecker.three_state = checkersSettings['admins']['three_state'].v save() end
            imgui.Hint(u8'Для того, чтобы включить/отключить показ третьих уровней администраторов в чекере - нажмите на данную иконку.')
            imgui.SameLine(text_offset)
            if imgui.ColorEdit4(u8'Гл.Администратор',colorsAdmins['seven'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.adminsChecker.seven = float2hex(colorsAdmins['seven']) save() end
            imgui.SameLine()
            if imgui.TextAccept('',checkersSettings['admins']['seven_state'],sw / 5.05) then ini.adminsChecker.seven_state = checkersSettings['admins']['seven_state'].v save() end
            imgui.Hint(u8'Для того, чтобы включить/отключить показ седьмых уровней администраторов в чекере - нажмите на данную иконку.')
            if imgui.ColorEdit4(u8'Администратор',colorsAdmins['four'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.adminsChecker.four = float2hex(colorsAdmins['four']) save() end
            imgui.SameLine()
            if imgui.TextAccept('',checkersSettings['admins']['four_state'],btn_offset) then end
            imgui.Hint(u8'Для того, чтобы включить/отключить показ четвёртых уровней администраторов в чекере - нажмите на данную иконку.')
            imgui.SameLine(text_offset)
            if imgui.ColorEdit4(u8'Спец.Админ',colorsAdmins['eight'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.adminsChecker.eight = float2hex(colorsAdmins['eight']) save() end
            imgui.SameLine()
            if imgui.TextAccept('',checkersSettings['admins']['eight_state'],sw / 5.05) then ini.adminsChecker.eight_state = checkersSettings['admins']['eight_state'].v save() end
            imgui.Hint(u8'Для того, чтобы включить/отключить показ восьмых уровней администраторов в чекере - нажмите на данную иконку.')
        elseif wsachecker[1].v == 1 then
            if imgui.ColorEdit4(u8'Заголовок',colorsAdmins['header'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.adminsChecker.header = float2hex(colorsAdmins['header']) save() end
            imgui.SameLine(text_offset)
            if imgui.ColorEdit4(u8'Норма адм.статы',colorsAdmins['normal'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.adminsChecker.normal = float2hex(colorsAdmins['normal']) save() end
            if imgui.ColorEdit4(u8'Нарушение адм.статы ',colorsAdmins['over'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.adminsChecker.over = float2hex(colorsAdmins['over']) save() end
            if imgui.ColorEdit4(u8'Текст АФК',colorsAdmins['afktext'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.adminsChecker.afktext = float2hex(colorsAdmins['afktext']) save() end
            imgui.SameLine(text_offset)
            if imgui.ColorEdit4(u8'Норма АФК',colorsAdmins['afknorma'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.adminsChecker.afknorma = float2hex(colorsAdmins['afknorma']) save() end
            if imgui.ColorEdit4(u8'Превышение АФК',colorsAdmins['afkover'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.adminsChecker.afkover = float2hex(colorsAdmins['afkover']) save() end
            imgui.SameLine(text_offset)
            if imgui.ColorEdit4(u8'Прочерки',colorsAdmins['dash'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.adminsChecker.dash = float2hex(colorsAdmins['dash']) save() end
            if imgui.ColorEdit4(u8'Слежка',colorsAdmins['recon'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.adminsChecker.recon = float2hex(colorsAdmins['recon']) save() end
            if imgui.ColorEdit4(u8'Текст репутации',colorsAdmins['reptext'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.adminsChecker.reptext = float2hex(colorsAdmins['reptext']) save() end
            imgui.SameLine(text_offset)
            if imgui.ColorEdit4(u8'Репутация',colorsAdmins['reputation'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.adminsChecker.reputation = float2hex(colorsAdmins['reputation']) save() end
            if imgui.ColorEdit4(u8'Текст актива',colorsAdmins['activetext'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.adminsChecker.activetext = float2hex(colorsAdmins['activetext']) save() end
            imgui.SameLine(text_offset)
            if imgui.ColorEdit4(u8'Актив',colorsAdmins['active'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.adminsChecker.active = float2hex(colorsAdmins['active']) save() end
        end
        imgui.Separator()
        if imgui.NewInputText('##fnamea',checkersSettings['admins']['fname'],sw / 5,u8'Название шрифта',2) then ini.adminsChecker.fname = checkersSettings['admins']['fname'].v save() fonts['achecker'] = renderCreateFont(checkersSettings['admins']['fname'].v, checkersSettings['admins']['fsize'].v, checkersSettings['admins']['fflag'].v) end
        imgui.HintInputFont()
        if imgui.DragInt('##fsizea',checkersSettings['admins']['fsize'], 0.1, 1, 50, u8('Размер шрифта: %.0f')) then ini.adminsChecker.fsize = checkersSettings['admins']['fsize'].v save() fonts['achecker'] = renderCreateFont(checkersSettings['admins']['fname'].v, checkersSettings['admins']['fsize'].v, checkersSettings['admins']['fflag'].v) end
        if imgui.DragInt('##fOffsa',checkersSettings['admins']['fOffs'], 0.1, 1, 100, u8('Оффсет шрифта: %.0f')) then ini.adminsChecker.fOffs = checkersSettings['admins']['fOffs'].v save() end
        if imgui.DragInt('##fflaga',checkersSettings['admins']['fflag'], 0.1, 1, 100, u8('Флаг шрифта: %.0f')) then ini.adminsChecker.fflag = checkersSettings['admins']['fflag'].v save() fonts['achecker'] = renderCreateFont(checkersSettings['admins']['fname'].v, checkersSettings['admins']['fsize'].v, checkersSettings['admins']['fflag'].v) end
        if imgui.Button(fa.ICON_FA_ARROWS_ALT .. u8' Редактировать позицию на экране',imgui.ImVec2(sw / 5, sh / 54)) then moveInterface(checkersSettings['admins']['x'],checkersSettings['admins']['y'],function(x,y) ini.adminsChecker.x = x ini.adminsChecker.y = y save() end) end
        imgui.PopItemWidth()
        imgui.Separator()
        imgui.CenterText('Старшая Администрация')
        imgui.SameLine(sw / 5.1)
        imgui.TextColoredRGB(fa.ICON_FA_USER_PLUS)
        if imgui.IsItemClicked() then errormsg = '' buferringText1 = imgui.ImBuffer('',256) actionNumber = imgui.ImInt(1) imgui.OpenPopup(fa.ICON_FA_USER_PLUS .. u8' Добавление 5+ админа##525') end
        if imgui.BeginPopupModal(fa.ICON_FA_USER_PLUS .. u8' Добавление 5+ админа##525',true,imgui.WindowFlags.AlwaysAutoResize + imgui.WindowFlags.NoResize) then
            imgui.NewInputText('##name',buferringText1,sw / 6.4,u8'Ник администратора',2)
            imgui.PushItemWidth(sw / 6.4)
            imgui.DragInt('##drint',actionNumber, 0.1, 1, 4, u8(adminPermTable[actionNumber.v]))
            imgui.PopItemWidth()
            imgui.CenterText(errormsg)
            if imgui.Button(fa.ICON_FA_CHECK ..u8' Сохранить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                local isExist = false
                for kv,vk in pairs(specialsTable) do
                    if stringToLower(vk[1]) == stringToLower(buferringText1.v) then
                        isExist = true
                    end
                end
                if isExist then
                    errormsg = 'Такой администратор уже существует!'
                elseif len(buferringText1.v) < 2 then 
                    errormsg = 'Ник должнен состоять\nболее чем из 2-ух символов' 
                elseif len(buferringText1.v) > 32 then
                    errormsg = 'Ник должен состоять\nне более чем из 32-ух символов' 
                elseif actionNumber.v <= 0 or actionNumber.v > 4 then
                    errormsg = 'Такой должности не существует.\nИспользуйте слайдер корректно'
                else
                    errormsg = ''
                    specialsTable[#specialsTable + 1] = {u8:decode(buferringText1.v),actionNumber.v}
                    specialsSorted = clone(specialsTable)
                    table.sort(specialsSorted, function (left, right)
                        return left[2] < right[2]
                    end)
                    saveJson(patches['specials'],specialsTable)
                    sampAddChatMessage("{2DF61C}[Создание]{FFFFFF} Вы успешно добавили нового 5+ администратора.",-1)  
                    imgui.CloseCurrentPopup()
                    end 
                end

                if imgui.Button(fa.ICON_FA_TIMES ..u8' Отменить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                    errormsg = ''
                    imgui.CloseCurrentPopup()
                end

        imgui.EndPopup()
        end
        imgui.Columns(2,'##checker5+header',true)
        imgui.Separator()
        imgui.CenterColumnText(u8'Ник')
        imgui.NextColumn()
        imgui.CenterColumnText(u8'Взаимодействие')
        imgui.Columns(1)
        imgui.Separator()
        imgui.BeginChild('##checkers5+list', imgui.ImVec2(sw / 5, 128), true)
        imgui.Columns(2,'##checker5+',true)
        for k,v in pairs(specialsTable) do
            imgui.SetColumnWidth(-1, 190.5)
            imgui.CenterColumnText(u8(v[1]))
            imgui.NextColumn()
            imgui.CenterColumnText(u8'Редактировать')
            if imgui.IsItemClicked() then errormsg = '' buferringText1 = imgui.ImBuffer(u8(v[1]),256) actionNumber = imgui.ImInt(v[2]) imgui.OpenPopup(fa.ICON_FA_USER_PLUS .. u8' Редактирование 5+ админа##'..v[1]..k) end
            if imgui.BeginPopupModal(fa.ICON_FA_USER_PLUS .. u8' Редактирование 5+ админа##'..v[1]..k,true,imgui.WindowFlags.AlwaysAutoResize + imgui.WindowFlags.NoResize) then
                imgui.NewInputText('##name',buferringText1,sw / 6.4,u8'Ник администратора',2)
                imgui.PushItemWidth(sw / 6.4)
                imgui.DragInt('##drint',actionNumber, 0.1, 1, 4, u8(adminPermTable[actionNumber.v]))
                imgui.PopItemWidth()
                imgui.CenterText(errormsg)
                if imgui.Button(fa.ICON_FA_CHECK ..u8' Сохранить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                    local isExist = false
                    for kv,vk in pairs(specialsTable) do
                        if kv ~= k and stringToLower(vk[1]) == stringToLower(buferringText1.v) then
                            isExist = true
                        end
                    end
                    if isExist then
                        errormsg = 'Такой администратор уже существует!'
                    elseif len(buferringText1.v) < 2 then 
                        errormsg = 'Ник должнен состоять\nболее чем из 2-ух символов' 
                    elseif len(buferringText1.v) > 32 then
                        errormsg = 'Ник должен состоять\nне более чем из 32-ух символов' 
                    elseif actionNumber.v <= 0 or actionNumber.v > 4 then
                        errormsg = 'Такой должности не существует.\nИспользуйте слайдер корректно'
                    else
                        errormsg = ''
                        specialsTable[k][1] = u8:decode(buferringText1.v)
                        specialsTable[k][2] = actionNumber.v
                        specialsSorted = clone(specialsTable)
                        table.sort(specialsSorted, function (left, right)
                            return left[2] < right[2]
                        end)
                        saveJson(patches['specials'],specialsTable)
                        sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Вы успешно сохранили изменения.",-1)  
                        imgui.CloseCurrentPopup()
                        end 
                    end
                    
                    if imgui.Button(fa.ICON_FA_DUMPSTER ..u8' Удалить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                        errormsg = ''
                        table.remove(specialsTable,k)
                        specialsSorted = clone(specialsTable)
                        table.sort(specialsSorted, function (left, right)
                            return left[2] < right[2]
                        end)
                        saveJson(patches['specials'],specialsTable)
                        sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Вы успешно удалили 5+ админа.",-1)  
                        imgui.CloseCurrentPopup()
                    end
    
                    if imgui.Button(fa.ICON_FA_TIMES ..u8' Отменить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                        errormsg = ''
                        imgui.CloseCurrentPopup()
                    end

            imgui.EndPopup()
            end
            imgui.NextColumn()
        end

        imgui.Columns(1)
        imgui.EndChild()
        imgui.EndChild()
        imgui.SameLine()
        imgui.BeginChild('##leadchecker',imgui.ImVec2(sw / 4.811, sh / 1.78),true)
        if wsfchecker[1].v == 0 then
            imgui.CenterText('Конфигурация чекера лидеров')
        elseif wsfchecker[1].v == 1 then
            imgui.CenterText('Конфигурация чекера игроков')
        end
        imgui.SameLine(sw / 6.2)
        if imgui.RadioButton('1##chooself',wsfchecker[1],0) then end
        imgui.Hint(u8'Переключите на этот пункт, если хотите открыть чекер лидеров')
        imgui.SameLine()
        if imgui.RadioButton('2##lchooself',wsfchecker[1],1) then end
        imgui.Hint(u8'Переключите на этот пункт, если хотите открыть чекер игроков')
        imgui.Separator()
        local btn_offset = sw / 12
        local text_offset = sw / 8
        if wsfchecker[1].v == 0 then 
            if imgui.CustomButtonActivated('',checkersSettings['leaders']['state'], imgui.ImVec2(sw / 5, 20)) then ini.leadersChecker.state = checkersSettings['leaders']['state'].v save() end
            imgui.PushItemWidth(sw / 5)
            if imgui.DragInt('##delaylider',checkersSettings['leaders']['delay'], 0.1, 100, 5000, u8('Частота обновления: %.0f мс')) then ini.leadersChecker.delay = checkersSettings['leaders']['delay'].v save() end
            imgui.Button('',imgui.ImVec2(sw / 5,sh / 54))
            imgui.Separator()
            if imgui.RadioButton('1##lchecker',wslchecker[1],0) then end
            imgui.SameLine()
            if imgui.RadioButton('2##lchecker',wslchecker[1],1) then end
            imgui.SameLine()
            imgui.CenterText('Конфигурация интерфейса')
            imgui.SameLine(sw / 5.95)
            if imgui.RadioButton('3##lchecker',wslchecker[1],2) then end
            imgui.SameLine()
            if imgui.RadioButton('4##lchecker',wslchecker[1],3) then end
            imgui.Separator()
            if wslchecker[1].v == 0 then
                if imgui.TextAccept(u8'Показывать ники',checkersSettings['leaders']['nickstate'],btn_offset) then ini.leadersChecker.nickstate = checkersSettings['leaders']['nickstate'].v save() end
                imgui.SameLine(text_offset)
                if imgui.TextAccept(u8'Показывать АФК',checkersSettings['leaders']['activeState'],sw / 5.05) then ini.leadersChecker.activeState = checkersSettings['leaders']['activeState'].v save() end
                if imgui.TextAccept(u8'Показывать ID',checkersSettings['leaders']['idstate'],btn_offset) then ini.leadersChecker.idstate = checkersSettings['leaders']['idstate'].v save() end
                imgui.SameLine(text_offset)
                if imgui.TextAccept(u8'Показывать замов',checkersSettings['leaders']['zamstate'],sw / 5.05) then ini.leadersChecker.zamstate = checkersSettings['leaders']['zamstate'].v save() end
                if imgui.TextAccept(u8'Показывать организацию',checkersSettings['leaders']['orgstate'],btn_offset) then ini.leadersChecker.orgstate = checkersSettings['leaders']['orgstate'].v save() end
                imgui.SameLine(text_offset)
                if imgui.TextAccept(u8'Показывать АФК состав',checkersSettings['leaders']['afkstate'],sw / 5.05) then ini.leadersChecker.afkstate = checkersSettings['leaders']['afkstate'].v save() end
                if imgui.TextAccept(u8'Показывать /members',checkersSettings['leaders']['ingamestate'],btn_offset) then ini.leadersChecker.ingamestate = checkersSettings['leaders']['ingamestate'].v save() end
                imgui.SameLine(text_offset)
                if imgui.TextAccept(u8'Показывать заголовки',checkersSettings['leaders']['headerstate'],sw / 5.05) then ini.leadersChecker.headerstate = checkersSettings['leaders']['headerstate'].v save() end
                if imgui.TextAccept(u8'Одинаковый цвет',checkersSettings['leaders']['orgequalsnickid'],btn_offset) then ini.leadersChecker.orgequalsnickid = checkersSettings['leaders']['orgequalsnickid'].v save() end
                imgui.Hint(u8'При активном статусе данной функции - цвет организации и цвет ников лидеров будут одинаковы')
                imgui.SameLine(text_offset)
                if imgui.RadioIcon(u8'Центрирование',fa.ICON_FA_ALIGN_LEFT,checkersSettings['leaders']['centering'],'1') then ini.leadersChecker.centering = checkersSettings['leaders']['centering'].v save() end
                imgui.SameLine()
                if imgui.RadioIcon('',fa.ICON_FA_ALIGN_CENTER,checkersSettings['leaders']['centering'],'2') then ini.leadersChecker.centering = checkersSettings['leaders']['centering'].v save() end
                imgui.SameLine()
                if imgui.RadioIcon('',fa.ICON_FA_ALIGN_RIGHT,checkersSettings['leaders']['centering'],'3') then ini.leadersChecker.centering = checkersSettings['leaders']['centering'].v save() end
                for i = 1,8 do
                    if imgui.ColorEdit4(u8(checkersSettings['leaders']['in_settings_titles'][i][1]),colorOrgs[i],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.colororgs[i] = float2hex(colorOrgs[i]) save() end
                    imgui.SameLine()
                    if(i % 2 ~= 0) then
                        if imgui.TextAccept('',checkersSettings['lstates'][i],btn_offset) then ini.lstates[i] = checkersSettings['lstates'][i].v save() end
                        imgui.SameLine(text_offset)
                    else
                        if imgui.TextAccept('',checkersSettings['lstates'][i],sw / 5.05) then ini.lstates[i] = checkersSettings['lstates'][i].v save() end
                    end
                end
            elseif wslchecker[1].v == 1 then
                for i = 9,22 do
                    if imgui.ColorEdit4(u8(checkersSettings['leaders']['in_settings_titles'][i][1]),colorOrgs[i],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.colororgs[i] = float2hex(colorOrgs[i]) save() end
                    imgui.SameLine()
                    if(i % 2 ~= 0) then
                        if imgui.TextAccept('',checkersSettings['lstates'][i],btn_offset) then ini.lstates[i] = checkersSettings['lstates'][i].v save() end
                        imgui.SameLine(text_offset)
                    else
                        if imgui.TextAccept('',checkersSettings['lstates'][i],sw / 5.05) then ini.lstates[i] = checkersSettings['lstates'][i].v save() end
                    end
                end

            elseif wslchecker[1].v == 2 then
                for i = 23,29 do
                    if imgui.ColorEdit4(u8(checkersSettings['leaders']['in_settings_titles'][i][1]),colorOrgs[i],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.colororgs[i] = float2hex(colorOrgs[i]) save() end
                    imgui.SameLine()
                    if(i % 2 ~= 0) then
                        if imgui.TextAccept('',checkersSettings['lstates'][i],btn_offset) then ini.lstates[i] = checkersSettings['lstates'][i].v save() end
                        imgui.SameLine(text_offset)
                    else
                        if imgui.TextAccept('',checkersSettings['lstates'][i],sw / 5.05) then ini.lstates[i] = checkersSettings['lstates'][i].v save() end
                    end
                end
                if imgui.ColorEdit4(u8"Заголовок орг",additionColorOrgs['org_header'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.leadersChecker.org_header = float2hex(additionColorOrgs['org_header']) save() end
                if imgui.ColorEdit4(u8"Заголовок АФК",additionColorOrgs['active_header'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.leadersChecker.active_header = float2hex(additionColorOrgs['active_header']) save() end
                imgui.SameLine(text_offset)
                if imgui.ColorEdit4(u8"Заголовок ников",additionColorOrgs['nick_header'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.leadersChecker.nick_header = float2hex(additionColorOrgs['nick_header']) save() end
                if imgui.ColorEdit4(u8"Заголовок замов",additionColorOrgs['deputy_header'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.leadersChecker.deputy_header = float2hex(additionColorOrgs['deputy_header']) save() end
                imgui.SameLine(text_offset)
                if imgui.ColorEdit4(u8"Заголовок состава",additionColorOrgs['members_header'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.leadersChecker.members_header = float2hex(additionColorOrgs['members_header']) save() end
                if imgui.ColorEdit4(u8"Значение АФК",additionColorOrgs['active_value'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.leadersChecker.active_value = float2hex(additionColorOrgs['active_value']) save() end
                imgui.SameLine(text_offset)
                if imgui.ColorEdit4(u8"Значение ника",additionColorOrgs['nick_value'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.leadersChecker.nick_value = float2hex(additionColorOrgs['nick_value']) save() end
            elseif wslchecker[1].v == 3 then
                if imgui.ColorEdit4(u8"Значение айди",additionColorOrgs['id_value'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.leadersChecker.id_value = float2hex(additionColorOrgs['id_value']) save() end
                imgui.SameLine(text_offset)
                if imgui.ColorEdit4(u8"Количество замов",additionColorOrgs['deputy_value'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.leadersChecker.deputy_value = float2hex(additionColorOrgs['deputy_value']) save() end
                if imgui.ColorEdit4(u8"Значение состава",additionColorOrgs['members_value'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.leadersChecker.members_value = float2hex(additionColorOrgs['members_value']) save() end
                imgui.SameLine(text_offset)
                if imgui.ColorEdit4(u8"Значение АФК состава",additionColorOrgs['members_afk_value'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.leadersChecker.members_afk_value = float2hex(additionColorOrgs['members_afk_value']) save() end

            end
            imgui.Separator()
            if imgui.NewInputText('##fnamelead',checkersSettings['leaders']['fname'],sw / 5,u8'Название шрифта',2) then ini.leadersChecker.fname = checkersSettings['leaders']['fname'].v save() fonts['lchecker'] = renderCreateFont(checkersSettings['leaders']['fname'].v, checkersSettings['leaders']['fsize'].v, checkersSettings['leaders']['fflag'].v) end
            imgui.HintInputFont()
            if imgui.DragInt('##fsizelead',checkersSettings['leaders']['fsize'], 0.1, 1, 50, u8('Размер шрифта: %.0f')) then ini.leadersChecker.fsize = checkersSettings['leaders']['fsize'].v save() fonts['lchecker'] = renderCreateFont(checkersSettings['leaders']['fname'].v, checkersSettings['leaders']['fsize'].v, checkersSettings['leaders']['fflag'].v) end
            if imgui.DragInt('##fOffslead',checkersSettings['leaders']['fOffs'], 0.1, 1, 100, u8('Оффсет шрифта: %.0f')) then ini.leadersChecker.fOffs = checkersSettings['leaders']['fOffs'].v save() end
            if imgui.DragInt('##fOffsxlead',checkersSettings['leaders']['fOffsx'], 0.1, 1, 200, u8('Оффсет шрифта по X: %.0f')) then ini.leadersChecker.fOffsx = checkersSettings['leaders']['fOffsx'].v save() end
            if imgui.DragInt('##fflaglead',checkersSettings['leaders']['fflag'], 0.1, 1, 100, u8('Флаг шрифта: %.0f')) then ini.leadersChecker.fflag = checkersSettings['leaders']['fflag'].v save() fonts['lchecker'] = renderCreateFont(checkersSettings['leaders']['fname'].v, checkersSettings['leaders']['fsize'].v, checkersSettings['leaders']['fflag'].v) end
            if imgui.Button(fa.ICON_FA_ARROWS_ALT .. u8' Редактировать позицию на экране',imgui.ImVec2(sw / 5, sh / 54)) then moveInterface(checkersSettings['leaders']['x'],checkersSettings['leaders']['y'],function(x,y) ini.leadersChecker.x = x ini.leadersChecker.y = y save() end) end
            elseif wsfchecker[1].v == 1 then
                if imgui.CustomButtonActivated('',checkersSettings['friends']['state'], imgui.ImVec2(sw / 5, 20)) then ini.friendChecker.state = checkersSettings['friends']['state'].v save() end
                imgui.PushItemWidth(sw / 5)
                if imgui.DragInt('##distancefriend',checkersSettings['friends']['distance_render'], 0.1, 50, 5000, u8('Дистанция прорисовки: %.0f м')) then ini.friendChecker.distance_render = checkersSettings['friends']['distance_render'].v save() end
                imgui.Separator()
                if imgui.TextAccept(u8'Показывать ник',checkersSettings['friends']['show_nick'],btn_offset) then ini.friendChecker.show_nick = checkersSettings['friends']['show_nick'].v save() end
                imgui.SameLine(text_offset)
                if imgui.TextAccept(u8'Показывать ID',checkersSettings['friends']['show_id'],sw / 5.05) then ini.friendChecker.show_id = checkersSettings['friends']['show_id'].v save() end
                if imgui.TextAccept(u8'Показывать расстояние',checkersSettings['friends']['show_distance'],btn_offset) then ini.friendChecker.show_distance = checkersSettings['friends']['show_distance'].v save() end
                imgui.SameLine(text_offset)
                if imgui.TextAccept(u8'Показывать заголовок',checkersSettings['friends']['show_header'],sw / 5.05) then ini.friendChecker.show_header = checkersSettings['friends']['show_header'].v save() end
                if imgui.TextAccept(u8'Рисовать линии',checkersSettings['friends']['instreamstate'],btn_offset) then ini.friendChecker.instreamstate = checkersSettings['friends']['instreamstate'].v save() end
                imgui.SameLine(text_offset)
                if imgui.RadioIcon(u8'Центрирование',fa.ICON_FA_ALIGN_LEFT,checkersSettings['friends']['centering'],'1') then ini.adminsChecker.centering = checkersSettings['admins']['centering'].v save() end
                imgui.SameLine()
                if imgui.RadioIcon('',fa.ICON_FA_ALIGN_CENTER,checkersSettings['friends']['centering'],'2') then ini.friendChecker.centering = checkersSettings['friends']['centering'].v save() end
                imgui.SameLine()
                if imgui.RadioIcon('',fa.ICON_FA_ALIGN_RIGHT,checkersSettings['friends']['centering'],'3') then ini.friendChecker.centering = checkersSettings['friends']['centering'].v save() end
                
                if imgui.ColorEdit4(u8'Цвет ника',colorFriends['nick_color'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.friendChecker.nick_color = float2hex(colorFriends['nick_color']) save() end
                imgui.SameLine(text_offset)
                if imgui.ColorEdit4(u8'Цвет ID',colorFriends['id_color'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.friendChecker.id_color = float2hex(colorFriends['id_color']) save() end
                if imgui.ColorEdit4(u8'Цвет заголовка',colorFriends['header_color'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.friendChecker.header_color = float2hex(colorFriends['header_color']) save() end
                imgui.SameLine(text_offset)
                if imgui.ColorEdit4(u8'Заголовок дистанции',colorFriends['distance_header_color'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.friendChecker.distance_header_color = float2hex(colorFriends['distance_header_color']) save() end
                if imgui.ColorEdit4(u8'Значение дистанции',colorFriends['distance_color'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.friendChecker.distance_color = float2hex(colorFriends['distance_color']) save() end
                imgui.SameLine(text_offset)
                if imgui.ColorEdit4(u8'Цвет линий',colorFriends['line_color'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.friendChecker.line_color = float2hex(colorFriends['line_color']) save() end
                imgui.Separator()
                if imgui.NewInputText('##fnamefriends',checkersSettings['friends']['fname'],sw / 5,u8'Название шрифта',2) then ini.friendChecker.fname = checkersSettings['friends']['fname'].v save() fonts['fchecker'] = renderCreateFont(checkersSettings['friends']['fname'].v, checkersSettings['friends']['fsize'].v, checkersSettings['friends']['fflag'].v) end
                imgui.HintInputFont()
                if imgui.DragInt('##fsizefriends',checkersSettings['friends']['fsize'], 0.1, 1, 50, u8('Размер шрифта: %.0f')) then ini.friendChecker.fsize = checkersSettings['friends']['fsize'].v save() fonts['fchecker'] = renderCreateFont(checkersSettings['friends']['fname'].v, checkersSettings['friends']['fsize'].v, checkersSettings['friends']['fflag'].v) end
                if imgui.DragInt('##fOffsfriends',checkersSettings['friends']['fOffs'], 0.1, 1, 100, u8('Оффсет шрифта: %.0f')) then ini.friendChecker.fOffs = checkersSettings['friends']['fOffs'].v save() end
                if imgui.DragInt('##fflagfriends',checkersSettings['friends']['fflag'], 0.1, 1, 100, u8('Флаг шрифта: %.0f')) then ini.friendChecker.fflag = checkersSettings['friends']['fflag'].v save() fonts['fchecker'] = renderCreateFont(checkersSettings['friends']['fname'].v, checkersSettings['friends']['fsize'].v, checkersSettings['friends']['fflag'].v) end
                if imgui.Button(fa.ICON_FA_ARROWS_ALT .. u8' Редактировать позицию на экране',imgui.ImVec2(sw / 5, sh / 54)) then moveInterface(checkersSettings['friends']['x'],checkersSettings['friends']['y'],function(x,y) ini.friendChecker.x = x ini.friendChecker.y = y save() end) end
                imgui.Separator()
                imgui.CenterText('Игроки')
                imgui.SameLine(sw / 5.1)
                imgui.TextColoredRGB(fa.ICON_FA_USER_PLUS)
                if imgui.IsItemClicked() then errormsg = '' buferringText1 = imgui.ImBuffer('',256) imgui.OpenPopup(fa.ICON_FA_USER_PLUS .. u8' Добавление игрока##525') end
                if imgui.BeginPopupModal(fa.ICON_FA_USER_PLUS .. u8' Добавление игрока##525',true,imgui.WindowFlags.AlwaysAutoResize + imgui.WindowFlags.NoResize) then
                    imgui.NewInputText('##nameplayer',buferringText1,sw / 6.4,u8'Ник игрока',2)
                    imgui.CenterText(errormsg)
                    if imgui.Button(fa.ICON_FA_CHECK ..u8' Сохранить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                        local isExist = false
                        for kv,vk in pairs(friendsTable) do
                            if stringToLower(vk[1]) == stringToLower(u8:decode(buferringText1.v)) then
                                isExist = true
                            end
                        end
                        if isExist then
                            errormsg = 'Такой игрок уже существует!'
                        elseif len(buferringText1.v) < 2 then 
                            errormsg = 'Ник должнен состоять\nболее чем из 2-ух символов' 
                        elseif len(buferringText1.v) > 32 then
                            errormsg = 'Ник должен состоять\nне более чем из 32-ух символов' 
                        else
                            errormsg = ''
                            friendsTable[#friendsTable + 1] = {u8:decode(buferringText1.v)}
                            saveJson(patches['friends'],friendsTable)
                            sampAddChatMessage("{2DF61C}[Создание]{FFFFFF} Вы успешно добавили нового игрока.",-1)  
                            imgui.CloseCurrentPopup()
                        end 
                    end
        
                        if imgui.Button(fa.ICON_FA_TIMES ..u8' Отменить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                            errormsg = ''
                            imgui.CloseCurrentPopup()
                        end
                imgui.EndPopup()
                end
                imgui.Columns(2,'##checkerplayers+',true)
                imgui.Separator()
                imgui.CenterColumnText(u8'Ник')
                imgui.NextColumn()
                imgui.CenterColumnText(u8'Взаимодействие')
                imgui.Separator()
                imgui.NextColumn()
                for k,v in pairs(friendsTable) do
                    imgui.CenterColumnText(u8(v[1]))
                    imgui.NextColumn()
                    imgui.CenterColumnText(u8'Редактировать')
                    if imgui.IsItemClicked() then errormsg = '' buferringText1 = imgui.ImBuffer(u8(v[1]),256) imgui.OpenPopup(fa.ICON_FA_USER_PLUS .. u8' Редактирование игрока##'..v[1]..k) end
                    if imgui.BeginPopupModal(fa.ICON_FA_USER_PLUS .. u8' Редактирование игрока##'..v[1]..k,true,imgui.WindowFlags.AlwaysAutoResize + imgui.WindowFlags.NoResize) then
                        imgui.NewInputText('##nameplayer',buferringText1,sw / 6.4,u8'Ник игрока',2)
                        imgui.CenterText(errormsg)
                        if imgui.Button(fa.ICON_FA_CHECK ..u8' Сохранить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                            local isExist = false
                            for kv,vk in pairs(friendsTable) do
                                if kv ~= k and stringToLower(vk[1]) == stringToLower(u8:decode(buferringText1.v)) then
                                    isExist = true
                                end
                            end
                            if isExist then
                                errormsg = 'Такой игрок уже существует!'
                            elseif len(buferringText1.v) < 2 then 
                                errormsg = 'Ник должнен состоять\nболее чем из 2-ух символов' 
                            elseif len(buferringText1.v) > 32 then
                                errormsg = 'Ник должен состоять\nне более чем из 32-ух символов' 
                            else
                                errormsg = ''
                                friendsTable[k][1] = u8:decode(buferringText1.v)
                                saveJson(patches['friends'],friendsTable)
                                sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Вы успешно сохранили изменения.",-1)  
                                imgui.CloseCurrentPopup()
                                end 
                            end
                            
                            if imgui.Button(fa.ICON_FA_DUMPSTER ..u8' Удалить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                                errormsg = ''
                                table.remove(friendsTable,k)
                                saveJson(patches['friends'],friendsTable)
                                sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Вы успешно удалили игрока из чекера.",-1)  
                                imgui.CloseCurrentPopup()
                            end
            
                            if imgui.Button(fa.ICON_FA_TIMES ..u8' Отменить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                                errormsg = ''
                                imgui.CloseCurrentPopup()
                            end
        
                    imgui.EndPopup()
                    end
                    imgui.NextColumn()
                end
                imgui.Columns(1)
            end
            imgui.EndChild()
    end
end




function auto_report_window()
    if reportSettings['autoot'].v and sampGetGamestate() == 3 then
        imgui.SetNextWindowSize(imgui.ImVec2(150, 85), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((reportSettings['x'].v), reportSettings['y'].v),imgui.ImVec2(0.5,0.5))
        imgui.Begin(fa.ICON_FA_TOOLS .. u8' Авто-ловля',true,imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
            imgui.CenterText('Тип ловли: ' .. types_lovlia[reportSettings['typeot'].v + 1])

            if formsInfo['isAccept'] then
                if not reportInfo['state'].v and not reconInfo['status'].v then
                    imgui.CenterText('Статус: {2DF61C}Ловим')
                elseif reportInfo['state'].v then
                    imgui.CenterText('Статус: {ffff00}Отвечаем')
                elseif reconInfo['status'].v then
                    imgui.CenterText('Статус: {ffff00}Следим')
                end
            else
                imgui.CenterText('Статус: {F6361C}No Accept')
            end
            imgui.CenterText('В простое: ' .. get_min_clock(os.time() - reportInfo['start_time']))
        imgui.End()
    end
end

function report_window()
    if reportSettings['state'].v and reportInfo['state'].v and not reportInfo['chat_blocker'].v then
        imgui.SetNextWindowSize(imgui.ImVec2(sw / 3.2, sh / 4.32), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))


        imgui.Begin(fa.ICON_FA_TOOLS .. u8' Работа по репорту',true,imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize + imgui.WindowFlags.AlwaysAutoResize)
        imgui.ShowCursor = true
        local report_length = len(reportInfo['lastAnswer'].v)
        local btn_size = imgui.ImVec2(sw / 10.026, sh / 54)
        if reportSettings['showAuthor'].v then
            imgui.TextColoredRGB(u8'Жалоба от '.. reportInfo['lastNick'].v .. "[".. reportInfo['lastID'].v .. "]")
        end
        imgui.SameLine()

        if reportSettings['showReAuthor'].v then
        imgui.TextDisabled(fa.ICON_FA_EYE)
        imgui.Hint(u8"Зайти в слежку за автором репорта без ответа на сам репорт")
        if imgui.IsItemClicked() then sampSendChat("/re ".. reportInfo['lastID'].v) end
        end
        if reportSettings['showTimeAnswer'].v then
            imgui.SameLine()
            local timereport = os.time() - reportInfo['start_time']
            local secondsreport = timereport
            local minutes_report = 0
            if secondsreport >= 60 then minutes_report = math.modf(secondsreport / 60) end
            if minutes_report > 0 then secondsreport = secondsreport - (minutes_report * 60) end
            if minutes_report < 10 then minutes_report = '0'..tostring(minutes_report) end 
            if secondsreport < 10 then secondsreport = '0'..tostring(secondsreport) end
            imgui.CenterText(minutes_report .. ':' .. secondsreport)
        end

        imgui.SameLine()
        if reportSettings['showPlatform'].v then
            
            
            if reportInfo['game']:find(u8'Лаунчер') then
                imgui.SetCursorPosX(sw / 3.57)
                imgui.TextColoredRGB('{4EFF2B}' .. fa.ICON_FA_GAMEPAD)
                imgui.Hint(u8"Для игры на сервере игрок использует официальный лаунчер")
            elseif reportInfo['game']:find(u8'Клиент') then
                imgui.SetCursorPosX(sw / 3.56)
                imgui.TextColoredRGB('{FF2B2B}' .. fa.ICON_FA_DESKTOP)
                imgui.Hint(u8"Для игры на сервере игрок использует клиент SAMP")
            elseif reportInfo['game']:find(u8'Мобайл') then
                imgui.SetCursorPosX(sw / 3.525)
                imgui.TextColoredRGB('{4EFF2B}' .. fa.ICON_FA_MOBILE_ALT)
                imgui.Hint(u8"Для игры на сервере игрок использует официальный мобильный лаунчер")
            end
        end

        if reportSettings['showRetranslit'].v then
            imgui.SameLine()
            imgui.SetCursorPosX(sw / 3.43)
            imgui.TextColoredRGB(fa.ICON_FA_RETWEET)
            imgui.Hint(u8'Чтобы поменять каламбур из английских символов на русские в тексте репорта - нажмите на эту иконку')
            if imgui.IsItemClicked() then reportInfo['lastText'].v = RusToEng(reportInfo['lastText'].v) end
            imgui.SameLine()
            imgui.TextColoredRGB(fa.ICON_FA_SYNC)
            imgui.Hint(u8'Чтобы поменять каламбур из английских символов на русские в вашем ответе - нажмите на эту иконку')
            if imgui.IsItemClicked() then reportInfo['lastAnswer'].v = u8(RusToEng(u8:decode(reportInfo['lastAnswer'].v))) end
        end
        imgui.Separator()
        if reportSettings['showChoiseSave'].v then
            imgui.RadioButton(u8'Не сохранять репорт', reportInfo['savetype'], 1)
            imgui.SameLine()
            imgui.RadioButton(u8'Сохранить в базу данных тулса',reportInfo['savetype'],2)
            imgui.SameLine()
            imgui.RadioButton(u8'Сохранить в базу данных сервера', reportInfo['savetype'], 3)
            imgui.Separator()
        end
        if reportSettings['showText'].v then
            imgui.TextWrapped(u8(reportInfo['lastText'].v))
        end
        if reportSettings['showLimit'].v then
            if report_length > 60 then imgui.TextColoredRGB(u8'{2DF61C}Ваш ответ состоит из '.. report_length .. u8' символов. Не беспокойтесь, ответ разделится :)') end
        end
        if reportSettings['showInput'].v then
            if imgui.IsWindowAppearing() then
                imgui.SetKeyboardFocusHere(-1)
            end
            imgui.PushAllowKeyboardFocus(false)
                imgui.NewInputText('##answer',reportInfo['lastAnswer'],sw / 3.28,u8'Ваш ответ',2)
            imgui.PopAllowKeyboardFocus()
        end
        imgui.Separator()
        local tableButtons = {
            {reportSettings['fastLVL'].v,function() if reportSettings['fastLVL'].v then
                if imgui.Button(fa.ICON_FA_USER_ASTRONAUT .. u8' Помощь по работам', btn_size) then otherWindows['report'].v = true searcherReport.v = '' imgui.OpenPopup(fa.ICON_FA_USER_ASTRONAUT .. u8' Помощь по работам') end
                imgui.SetNextWindowSize(imgui.ImVec2(sw / 3.76, sh / 5.4), imgui.Cond.FirstUseEver)
                if imgui.BeginPopupModal(fa.ICON_FA_USER_ASTRONAUT .. u8' Помощь по работам', otherWindows['report'], imgui.WindowFlags.NoResize) then
                    lvl_list(0)
                imgui.EndPopup()
                end
            end 
        end},

        {reportSettings['fastAnsw'].v,function() if reportSettings['fastAnsw'].v then
            if imgui.Button(fa.ICON_FA_WIND .. u8' Быстрые ответы', btn_size) then otherWindows['report'].v = true searcherReport.v = '' imgui.OpenPopup(fa.ICON_FA_WIND .. u8' Быстрые ответы') end
            imgui.SetNextWindowSize(imgui.ImVec2(sw / 3.76, sh / 5.4), imgui.Cond.FirstUseEver)
            if imgui.BeginPopupModal(fa.ICON_FA_WIND .. u8' Быстрые ответы', otherWindows['report'], imgui.WindowFlags.NoResize) then
                fast_list(0)
            imgui.EndPopup()
            end
        end 
    end},

            {reportSettings['helpGPS'].v,function() if reportSettings['helpGPS'].v then
                if imgui.Button(fa.ICON_FA_MAP_MARKER_ALT .. u8' Помощь по /gps', btn_size) then otherWindows['report'].v = true searcherReport.v = '' imgui.OpenPopup(fa.ICON_FA_MAP_MARKER_ALT ..u8' Помощь по /gps') end
                imgui.SetNextWindowSize(imgui.ImVec2(sw / 3.76, sh / 5.4), imgui.Cond.FirstUseEver)
                if imgui.BeginPopupModal(fa.ICON_FA_MAP_MARKER_ALT ..u8' Помощь по /gps', otherWindows['report'], imgui.WindowFlags.NoResize) then
                    gps_list(0)
                imgui.EndPopup()
                end
            end 
        end},

            {reportSettings['listCMD'].v,function() if reportSettings['listCMD'].v then
                if imgui.Button(fa.ICON_FA_TERMINAL .. u8' Список команд', btn_size) then otherWindows['report'].v = true searcherReport.v = '' imgui.OpenPopup(fa.ICON_FA_TERMINAL ..u8' Список команд') end
                imgui.SetNextWindowSize(imgui.ImVec2(sw / 3.76, sh / 5.4), imgui.Cond.FirstUseEver)
                if imgui.BeginPopupModal(fa.ICON_FA_TERMINAL ..u8' Список команд', otherWindows['report'], imgui.WindowFlags.NoResize) then
                    cmd_list(0)
                imgui.EndPopup()
                end
            end 
        end},

            {reportSettings['similarBD'].v,function() if reportSettings['similarBD'].v then
                if imgui.Button(fa.ICON_FA_DATABASE .. u8' Схожие вопросы', btn_size) then 
                    otherWindows['report'].v = true 
                    searcherReport.v = ''
                    errormsg = ''
                    local args = {}
                    args['headers'] = {['Content-Type'] = 'application/json'}
                    pcall(asyncHttpRequest, 'GET', 'https://api.robo-tools.online/get_report.php?question='.. u8(reportInfo['lastText'].v) .. '&percent='..reportSettings['percent'].v, args,
                    function(response)
                        if response.status_code == 200 then
                            local response = cjson.decode(response.text)
                            if tostring(response.error) == '0' then
                                simInfo = response.similars
                            elseif tostring(response.error) == '1' then
                                errormsg = [[Auth-API не может получить ваш IP.]]
                                firstauth = false
                                window_auth.v = true
                            elseif tostring(response.error) == '2' then
                                errormsg = [[Ваш айпи находится в бан-листе приложения.]]
                                firstauth = false
                                window_auth.v = true
                            elseif tostring(response.error) == '6' then
                                errormsg = [[Некоторые из параметров не переданы.]]
                            elseif tostring(response.error) == '7' then
                                errormsg = "Увы, но в БД не зарегистрировано репортов, которые могли быть похож на ваш.\nВы можете изменить процент совпадения в настройках и попробовать еще раз."
                            end 
                        else
                            sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Произошла ошибка во время выполнения SIM-REPORT запроса: ".. response.status_code .. ".",-1)
                        end
                    end,
                    function(err)
                    print(err)
                    end)
                    imgui.OpenPopup(fa.ICON_FA_DATABASE .. u8' Схожие вопросы') 
                end 
                imgui.SetNextWindowSize(imgui.ImVec2(630, sh / 5.4), imgui.Cond.FirstUseEver)
                if imgui.BeginPopupModal(fa.ICON_FA_DATABASE .. u8' Схожие вопросы', otherWindows['report'], imgui.WindowFlags.NoResize) then
                    similar_reports()
                imgui.EndPopup()
                end
            end 
        end},

            {reportSettings['sendAchat'].v,function() if reportSettings['sendAchat'].v then
                if imgui.Button(fa.ICON_FA_RETWEET.. u8' Переслать в /a', btn_size) then sendQuestion() end
            end
        end},

            {reportSettings['transmit'].v,function() if reportSettings['transmit'].v then
                if imgui.Button(fa.ICON_FA_SHARE .. u8' Передать репорт', btn_size) then sendTransmit() end
            end 
        end},

            {reportSettings['reAuthor'].v,function() 
            
                if reportSettings['reAuthor'].v then
                    
                    if reportInfo['isReconMe'].v and reportSettings['paintButtons'].v then
                        imgui.PushStyleColor(imgui.Col.Button, imgui.GetStyle().Colors[24])
                    end

                    if imgui.Button(fa.ICON_FA_EYE .. u8' Следить за автором', btn_size) then sendAuthor() end
                        
                    if reportInfo['isReconMe'].v and reportSettings['paintButtons'].v then
                        imgui.PopStyleColor()
                    end
                end 
            end},

            {reportSettings['reWarner'].v,function()
                    if reportInfo['isReconIntruder'].v and reportSettings['paintButtons'].v then
                        imgui.PushStyleColor(imgui.Col.Button, imgui.GetStyle().Colors[24])
                    end

                    if reportSettings['reWarner'].v then
                        if imgui.Button(fa.ICON_FA_EYE .. u8' Следить за нарушителем', btn_size) then sendWarner() end
                    end
                
                    if reportInfo['isReconIntruder'].v and reportSettings['paintButtons'].v then
                        imgui.PopStyleColor()
                    end
                end},


            {reportSettings['colorsList'].v,function() if reportSettings['colorsList'].v then
                if imgui.Button(fa.ICON_FA_TINT .. u8' Список цветов', btn_size) then otherWindows['report'].v = true searcherReport.v = '' imgui.OpenPopup(fa.ICON_FA_TINT .. u8' Список цветов') end
                imgui.SetNextWindowSize(imgui.ImVec2(sw / 1.91,sh / 2), imgui.Cond.FirstUseEver)
                if imgui.BeginPopupModal(fa.ICON_FA_TINT .. u8' Список цветов', otherWindows['report'],imgui.WindowFlags.AlwaysAutoResize) then
                    color_list(0)
                imgui.EndPopup()
                end
            end
        end},
        }
        local reserveTable = {}
        for k,v in pairs(tableButtons) do
            if v[1] then
                reserveTable[#reserveTable + 1] = v
            end
        end

        for k,v in pairs(rButtonsTable) do
            reserveTable[#reserveTable + 1] = {['text'] = v[1],['answer'] = v[2],['action'] = v[3]}
        end

        for k,v in pairs(reserveTable) do
            if v['text'] ~= nil and v['answer'] ~= nil and v['action'] ~= nil then
               if type(v['action']) == 'number' and (v['action'] > 0 and v['action'] <= 3) then
                    if imgui.Button(u8(v['text']),btn_size) then
                        if v['action'] == 1 then
                            sendAnswer(u8(v['answer']), 0)
                        elseif v['action'] == 2 then
                            reportInfo['lastAnswer'].v = reportInfo['lastAnswer'].v .. u8(v['answer'])
                        elseif v['action'] == 3 then
                            sendAnswer(v['answer'], 0)
                            sampSendChat('/re '.. reportInfo['lastID'].v)
                        end
                    end
               end
            else
                v[2]()
            end
            if k%3 ~= 0 and reserveTable[k + 1] ~= nil then
                imgui.SameLine()
            end
        end


        imgui.Separator()
        

        if imgui.Button(fa.ICON_FA_PAPER_PLANE .. u8' Отправить ответ',imgui.ImVec2(sw / 10.02, sh / 54)) then reportSendAnswer() end
        imgui.SameLine()
        imgui.SetCursorPosX(sw / 4.78)
        if imgui.Button(fa.ICON_FA_TIMES .. u8' Закрыть',imgui.ImVec2(sw / 10.02, sh / 54)) then otherWindows['report'].v = true imgui.OpenPopup(fa.ICON_FA_CHECK_CIRCLE .. u8' Подтверждение закрытия')  end
      
        imgui.SetNextWindowSize(imgui.ImVec2(sw / 7, sh / 11.5), imgui.Cond.FirstUseEver)
        if imgui.BeginPopupModal(fa.ICON_FA_CHECK_CIRCLE .. u8' Подтверждение закрытия', true, imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoScrollbar + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove + imgui.WindowFlags.AlwaysAutoResize) then
          imgui.CenterText('Вы действительно хотите закрыть репорт?')
          imgui.CenterText('Из за этого можно потерять репутацию.')
          if imgui.Button(fa.ICON_FA_CHECK .. u8' Да',imgui.ImVec2(sw / 15.1,sh / 54)) then sampSendDialogResponse(1334,0,-1,-1) imgui.CloseCurrentPopup() reportInfo['state'].v = false end
          imgui.SameLine()
          if imgui.Button(fa.ICON_FA_TIMES .. u8' Нет', imgui.ImVec2(sw / 15.1, sh / 54)) then imgui.CloseCurrentPopup() end
          imgui.EndPopup()
      end

        imgui.End()
    end
end

function report_window_settings()
    if windows['report'].v then
        local size = imgui.GetWindowSize()
        local btn_size = imgui.ImVec2(sw / 17, sh / 50)
        imgui.BeginChild('##main',imgui.ImVec2(sw / 4.811, sh / 1.78),true)
        imgui.CenterText('Основная конфигурация')
        imgui.Separator()
        imgui.TextColoredRGB(u8'Тэги')
        imgui.SameLine()
        imgui.TextDisabled(fa.ICON_FA_QUESTION)
        imgui.Hint(u8'Тэги - это некие "горячие слова", которые заменяются на определенные значения, которое за ними закреплено. Чтобы их использовать - достаточно написать их в "горячие ответы" или использовать прямо в репорте.')

        if imgui.Button('{author_id}',btn_size) then setClipboardText('{author_id}') sampAddChatMessage('{2DF61C}[Копирование]{FFFFFF} Выбранный тэг был успешно скопирован в буфер обмена.',-1) end
        imgui.SameLine()
        imgui.TextColoredRGB(u8' - ID автора репорта')

        if imgui.Button('{author_nick}',btn_size) then setClipboardText('{author_nick}') sampAddChatMessage('{2DF61C}[Копирование]{FFFFFF} Выбранный тэг был успешно скопирован в буфер обмена.',-1) end
        imgui.SameLine()
        imgui.TextColoredRGB(u8' - ник автора репорта')

        if imgui.Button('{intruder_id}',btn_size) then setClipboardText('{intruder_id}') sampAddChatMessage('{2DF61C}[Копирование]{FFFFFF} Выбранный тэг был успешно скопирован в буфер обмена.',-1) end
        imgui.SameLine()
        imgui.TextColoredRGB(u8' - первый ID из текста жалобы')

        if imgui.Button('{intruders_ids}',btn_size) then setClipboardText('{intruders_ids}') sampAddChatMessage('{2DF61C}[Копирование]{FFFFFF} Выбранный тэг был успешно скопирован в буфер обмена.',-1) end
        imgui.SameLine()
        imgui.TextColoredRGB(u8' - все ID из текста жалобы')

        if imgui.Button('{intruder_nick}',btn_size) then setClipboardText('{intruder_nick}') sampAddChatMessage('{2DF61C}[Копирование]{FFFFFF} Выбранный тэг был успешно скопирован в буфер обмена.',-1) end
        imgui.SameLine()
        imgui.TextColoredRGB(u8' - первый ник(по айди) из текста жалобы')

        if imgui.Button('{intruders_nicks}',btn_size) then setClipboardText('{intruders_nicks}') sampAddChatMessage('{2DF61C}[Копирование]{FFFFFF} Выбранный тэг был успешно скопирован в буфер обмена.',-1) end
        imgui.SameLine()
        imgui.TextColoredRGB(u8' - все ники(по айди) из текста жалобы')

        if imgui.Button('{my_id}',btn_size) then setClipboardText('{my_id}') sampAddChatMessage('{2DF61C}[Копирование]{FFFFFF} Выбранный тэг был успешно скопирован в буфер обмена.',-1) end
        imgui.SameLine()
        imgui.TextColoredRGB(u8' - ваш текущий айди')

        if imgui.Button('{my_nick}',btn_size) then setClipboardText('{my_nick}') sampAddChatMessage('{2DF61C}[Копирование]{FFFFFF} Выбранный тэг был успешно скопирован в буфер обмена.',-1) end
        imgui.SameLine()
        imgui.TextColoredRGB(u8' - ваш текущий ник')

        imgui.Separator()
        imgui.CenterText('Горячие ответы')
        imgui.Separator()
        
        if imgui.NewInputText('##Слежка за нарушителем',reportSettings['reportwarner'],sw / 5,u8'Слежка за нарушителем',2) then ini.report.reportwarner = u8:decode(reportSettings['reportwarner'].v) save() end
        if imgui.NewInputText('##Слежка за автором',reportSettings['reportauthor'],sw / 5,u8'Слежка за автором',2) then ini.report.reportauthor = u8:decode(reportSettings['reportauthor'].v) save() end
        if imgui.NewInputText('##Передам репорт',reportSettings['reportsend'],sw / 5,u8'Передача репорта',2) then ini.report.reportsend = u8:decode(reportSettings['reportsend'].v) save() end
        if imgui.NewInputText('##Оффлайн игрок',reportSettings['reportoffline'],sw / 5,u8'Игрок оффлайн',2) then ini.report.reportoffline = u8:decode(reportSettings['reportoffline'].v) save() end
        
        imgui.Separator()
        imgui.CenterText('Автоматическое принятие репорта')
        imgui.Separator()

        if imgui.LazyButtonActivated('',reportSettings['autoot'], imgui.ImVec2(sw / 5,20)) then reportInfo['start_time'] = os.time() end
        if imgui.TextAccept(u8'Скрытие флуда',reportSettings['hideflood'],sw / 18) then ini.report.hideflood = reportSettings['hideflood'].v save() end
        imgui.PushItemWidth(sw / 20)
        if imgui.Combo(u8'Тип принятия', reportSettings['typeot'], {u8'Флуда',u8'Ловля'}, -1) then ini.report.typeot = reportSettings['typeot'].v save() end
        imgui.SameLine()
        imgui.TextDisabled(fa.ICON_FA_QUESTION)
        imgui.Hint(u8'Флуда - это способ принятия репорта методом постоянной отправки определенного количества сообщений с определенным к.д, указаным ниже.\nЛовля - это способ принятия репорта методом принятия репорта, как только скрипт поймает сообщение о новом репорте.\nЧто один, что другой способ ~одинаково эффективны.')
        if imgui.InputInt(u8'Задержка между итерациями', reportSettings['waitot']) then ini.report.waitot = reportSettings['waitot'].v save() end
        imgui.SameLine()
        imgui.TextDisabled(fa.ICON_FA_QUESTION)
        imgui.Hint(u8'Задержка между итерациями - это время в милисекундах между отправкой определенного количества сообщений.')
        if imgui.InputInt(u8'Сообщений за итерацию', reportSettings['count']) then if reportSettings['count'].v > 0 then ini.report.count = reportSettings['count'].v save() end end
        imgui.SameLine()
        imgui.TextDisabled(fa.ICON_FA_QUESTION)
        imgui.Hint(u8'Сообщений за итерацию - это количество сообщений, которое отправляется каждую итерацию цикла флуда.')
        imgui.PopItemWidth()
        if imgui.Button(fa.ICON_FA_ARROWS_ALT .. u8' Редактировать позицию на экране##autoflood',imgui.ImVec2(385,sh / 54)) then moveInterface(reportSettings['x'],reportSettings['y'],function(x,y) ini.report.x = x ini.report.y = y save() end) end
        imgui.Separator()
        imgui.CenterText('Схожие ответы')
        imgui.Separator()
        imgui.PushItemWidth(sw / 5)
        if imgui.DragInt('##drint',reportSettings['percent'], 0.1, 1, 100, u8('Процент совпадения: %.0f')) then ini.report.percent = reportSettings['percent'].v save() end
        imgui.PopItemWidth()
        imgui.EndChild()
        imgui.SameLine()
        imgui.BeginChild('##other',imgui.ImVec2(sw / 4.811, sh / 1.78),true)
        imgui.CenterText('Конфигурация окна репорта')
        imgui.Separator()
        local padding = sw / 8.5
        if imgui.CustomButtonActivated('',reportSettings['state'], imgui.ImVec2(sw / 5,20)) then ini.report.hideflood = reportSettings['hideflood'].v save() end
        if imgui.TextAccept(u8'Очередь слежки',reportSettings['showRe'],padding) then ini.report.showRe = reportSettings['showRe'].v save() end
        if imgui.TextAccept(u8'Показывать от кого репорт',reportSettings['showAuthor'],padding) then ini.report.showAuthor = reportSettings['showAuthor'].v save() end
        if imgui.TextAccept(u8'Показывать re-иконку',reportSettings['showReAuthor'],padding) then ini.report.showReAuthor = reportSettings['showReAuthor'].v save() end
        if imgui.TextAccept(u8'Показывать иконки транслитерации',reportSettings['showRetranslit'],padding) then ini.report.showRetranslit = reportSettings['showRetranslit'].v save() end
        if imgui.TextAccept(u8'Показывать выбор сохранения',reportSettings['showChoiseSave'],padding) then ini.report.showChoiseSave = reportSettings['showChoiseSave'].v save() end
        if imgui.TextAccept(u8'Показывать суть репорта',reportSettings['showText'],padding) then ini.report.showText = reportSettings['showText'].v save() end
        if imgui.TextAccept(u8'Показывать лимит символов',reportSettings['showLimit'],padding) then ini.report.showLimit = reportSettings['showLimit'].v save() end
        if imgui.TextAccept(u8'Показывать поле ввода',reportSettings['showInput'],padding) then ini.report.showInput = reportSettings['showInput'].v save() end
        if imgui.TextAccept(u8'Показывать платформу',reportSettings['showPlatform'],padding) then ini.report.showPlatform = reportSettings['showPlatform'].v save() end
        if imgui.TextAccept(u8'Красить кнопки',reportSettings['paintButtons'],padding) then ini.report.paintButtons = reportSettings['paintButtons'].v save() end
        if imgui.TextAccept(u8'Показывать время в репорте',reportSettings['showTimeAnswer'],padding) then ini.report.showTimeAnswer = reportSettings['showTimeAnswer'].v save() end

        imgui.Hint(u8"Если вам приходит репорт и скрипт обнаружит в нем просьбу о помощи или жалобу на нарушителя - он сделает выделенной определенную кнопку, и даст возможность используя ENTER выполнить функцию кнопки, если функция отключена - ничего не выделит")

        imgui.TextColoredRGB(u8'Тип репорта на сервере')
        imgui.SameLine()
        imgui.PushItemWidth(100)
        if imgui.Combo('##combotypereport',reportSettings['typeReport'],{u8"С очередью", u8"Без очереди"}) then ini.report.typeReport = reportSettings['typeReport'].v save() end
        imgui.Hint(u8'Если на сервере настроен репорт без очереди - выберите "Без очереди", в противном случае - "С очередью"')
        imgui.PopItemWidth()
        imgui.Separator()
        imgui.CenterText('Конфигурация статичных кнопок')
        imgui.Separator()
        local inpopupMegaFunc = function(index)
            imgui.BeginChild('##inpopup'..index, imgui.ImVec2(300, 200), true)
                if imgui.CustomButtonActivated("Кнопка", reportSettings[index], imgui.ImVec2(283, 20)) then ini.report[index] = reportSettings[index].v save() end
                imgui.Separator()
                imgui.CenterText("Позиция в окне")
                imgui.Separator()

                for i = 1, 10 do
                    imgui.RadioButton(tostring(i),imgui.ImInt(1),i)
                    if i%3 ~= 0 then
                        imgui.SameLine(i%3 * 129)
                    end
                end

                for k,v in pairs(rButtonsTable) do
                    k = k + 10
                    imgui.RadioButton(tostring(k),imgui.ImInt(1),k)
                    if k%3 ~= 0 then
                        imgui.SameLine(k%3 * 129)
                    end
                end
            imgui.EndChild()
        end
        if imgui.ButtonActivated(reportSettings['fastLVL'], u8"Работы", imgui.ImVec2(125,20)) then imgui.OpenPopup(u8'Работы') end
        imgui.SameLine()
        if imgui.ButtonActivated(reportSettings['fastAnsw'], u8"Быстрые ответы", imgui.ImVec2(125,20)) then imgui.OpenPopup(u8'Быстрые ответы') end
        imgui.SameLine()
        if imgui.ButtonActivated(reportSettings['helpGPS'], u8"Навигатор", imgui.ImVec2(125,20)) then imgui.OpenPopup(u8'Навигатор') end

        if imgui.ButtonActivated(reportSettings['listCMD'], u8"Команды", imgui.ImVec2(125,20)) then imgui.OpenPopup(u8'Команды') end
        imgui.SameLine()
        if imgui.ButtonActivated(reportSettings['similarBD'], u8"Схожие вопросы", imgui.ImVec2(125,20)) then imgui.OpenPopup(u8'Схожие вопросы') end
        imgui.SameLine()
        if imgui.ButtonActivated(reportSettings['sendAchat'], u8"Переслать в /a", imgui.ImVec2(125,20)) then imgui.OpenPopup(u8'Переслать в /a') end

        if imgui.ButtonActivated(reportSettings['transmit'], u8"След. за авт.", imgui.ImVec2(125,20)) then imgui.OpenPopup(u8'След. за авт.') end
        imgui.SameLine()
        if imgui.ButtonActivated(reportSettings['reAuthor'], u8"След. за наруш.", imgui.ImVec2(125,20)) then imgui.OpenPopup(u8'След. за наруш.') end
        imgui.SameLine()
        if imgui.ButtonActivated(reportSettings['colorsList'], u8"Список цветов", imgui.ImVec2(125,20)) then imgui.OpenPopup(u8'Список цветов') end

        if imgui.BeginPopupModal(u8'Работы', imgui.ImBool(true), imgui.WindowFlags.NoResize) then
            inpopupMegaFunc('fastLVL')
        imgui.EndPopup()
        end

        if imgui.BeginPopupModal(u8'Быстрые ответы', imgui.ImBool(true), imgui.WindowFlags.NoResize) then
            inpopupMegaFunc('fastAnsw')
        imgui.EndPopup()
        end

        if imgui.BeginPopupModal(u8'Навигатор', imgui.ImBool(true), imgui.WindowFlags.NoResize) then
            inpopupMegaFunc('helpGPS')
        imgui.EndPopup()
        end

        if imgui.BeginPopupModal(u8'Команды', imgui.ImBool(true), imgui.WindowFlags.NoResize) then
            inpopupMegaFunc('listCMD')
        imgui.EndPopup()
        end

        if imgui.BeginPopupModal(u8'Схожие вопросы', imgui.ImBool(true), imgui.WindowFlags.NoResize) then
            inpopupMegaFunc('similarBD')
        imgui.EndPopup()
        end

        if imgui.BeginPopupModal(u8'Переслать в /a', imgui.ImBool(true), imgui.WindowFlags.NoResize) then
            inpopupMegaFunc('sendAchat')
        imgui.EndPopup()
        end

        if imgui.BeginPopupModal(u8'След. за авт.', imgui.ImBool(true), imgui.WindowFlags.NoResize) then
            inpopupMegaFunc('transmit')
        imgui.EndPopup()
        end

        if imgui.BeginPopupModal(u8'След. за наруш.', imgui.ImBool(true), imgui.WindowFlags.NoResize) then
            inpopupMegaFunc('reAuthor')
        imgui.EndPopup()
        end

        if imgui.BeginPopupModal(u8'Список цветов', imgui.ImBool(true), imgui.WindowFlags.NoResize) then
            inpopupMegaFunc('colorsList')
        imgui.EndPopup()
        end

        imgui.Separator()
        imgui.CenterText('Пользовательские кнопки')
        imgui.SameLine(sw / 5.1)
        imgui.TextColoredRGB(fa.ICON_FA_PLUS)
        imgui.Hint(u8'Нажмите на данную иконку, чтобы добавить пользовательскую кнопку')
        if imgui.IsItemClicked() then errormsg = '' buferringText1 = imgui.ImBuffer('',256) buferringText2 = imgui.ImBuffer('',256) actionNumber = imgui.ImInt(1) imgui.OpenPopup(fa.ICON_FA_PLUS .. u8' Добавление пользовательской кнопки') end
        if imgui.BeginPopupModal(fa.ICON_FA_PLUS .. u8' Добавление пользовательской кнопки', true, imgui.WindowFlags.NoResize + imgui.WindowFlags.AlwaysAutoResize) then
            imgui.NewInputText('##name',buferringText1,sw / 6.4,u8'Название кнопки',2)
            imgui.NewInputText('##text',buferringText2,sw / 6.4,u8'Текст ответа',2)
            imgui.PushItemWidth(sw / 6.4)
            imgui.DragInt('##drint',actionNumber, 0.1, 1, 3, u8('Действие: '..actionTable[actionNumber.v]))
            imgui.PopItemWidth()
            imgui.CenterText(errormsg)
            if imgui.Button(fa.ICON_FA_CHECK ..u8' Сохранить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                local isExist = false
                for k,v in pairs(rButtonsTable) do
                    if stringToLower(u8(v[1])) == stringToLower(buferringText1.v) then
                        isExist = true
                    end
                end
                if isExist then
                    errormsg = 'Кнопка с таким названием уже существует!'
                elseif len(buferringText1.v) < 1 then 
                    errormsg = 'Название кнопки должно состоять\nболее чем из 2-ух символов' 
                elseif len(buferringText1.v) > 23 then
                    errormsg = 'Название кнопки должно состоять\nне более чем из 23-ех символов' 
                elseif len(buferringText2.v) > 85 then
                    errormsg = 'Текст ответа должнен состоять\nне более чем из 85-ти символов'
                elseif len(buferringText2.v) < 1 then
                    errormsg = 'Текст ответа должнен состоять\nболее чем из 2-ух символов'
                elseif actionNumber.v <= 0 or actionNumber.v > 3 then
                    errormsg = 'Такого действия не существует.\nИспользуйте слайдер корректно'
                else
                    errormsg = ''
                    rButtonsTable[#rButtonsTable + 1] = {u8:decode(buferringText1.v),u8:decode(buferringText2.v),actionNumber.v}
                    saveJson(patches['rbuttons'],rButtonsTable)
                    sampAddChatMessage("{2DF61C}[Создание]{FFFFFF} Вы успешно создали пользовательскую кнопку.",-1)  
                    imgui.CloseCurrentPopup()
                end 
            end

            if imgui.Button(fa.ICON_FA_TIMES ..u8' Отменить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                errormsg = ''
                imgui.CloseCurrentPopup()
            end
        imgui.EndPopup()
        end
        imgui.Separator()
        local btn_size = imgui.ImVec2(sw / 10.57, 20)
            imgui.BeginChild('##listbuttons', imgui.ImVec2(383, 59), true)
                for k,v in ipairs(rButtonsTable) do
                    if imgui.Button(u8(v[1]),btn_size) then errormsg = '' buferringText1 = imgui.ImBuffer(u8(v[1]),256) buferringText2 = imgui.ImBuffer(u8(v[2]),256) actionNumber = imgui.ImInt(v[3]) imgui.OpenPopup(fa.ICON_FA_EDIT .. u8' Редактирование пользовательской кнопки##'..k) end
                    if imgui.BeginPopupModal(fa.ICON_FA_EDIT .. u8' Редактирование пользовательской кнопки##'..k, true, imgui.WindowFlags.NoResize + imgui.WindowFlags.AlwaysAutoResize) then
                        imgui.NewInputText('##name',buferringText1,sw / 6.4,u8'Название кнопки',2)
                        imgui.NewInputText('##text',buferringText2,sw / 6.4,u8'Текст ответа',2)
                        imgui.PushItemWidth(sw / 6.4)
                        imgui.DragInt('##drint',actionNumber, 0.1, 1, 3, u8('Действие: '..actionTable[actionNumber.v]))
                        imgui.PopItemWidth()
                        imgui.CenterText(errormsg)
                        if imgui.Button(fa.ICON_FA_CHECK ..u8' Сохранить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                                local isExist = false
                                for kv,v in pairs(rButtonsTable) do
                                    if kv ~= k and stringToLower(u8(v[1])) == stringToLower(buferringText1.v) then
                                        isExist = true
                                    end
                                end
                                if isExist then
                                    errormsg = 'Кнопка с таким названием уже существует!'
                                elseif len(buferringText1.v) < 1 then 
                                    errormsg = 'Название кнопки должно состоять\nболее чем из 2-ух символов' 
                                elseif len(buferringText1.v) > 23 then
                                    errormsg = 'Название кнопки должно состоять\nне более чем из 23-ех символов' 
                                elseif len(buferringText2.v) > 85 then
                                    errormsg = 'Текст ответа должнен состоять\nне более чем из 75-ти символов'
                                elseif len(buferringText2.v) < 1 then
                                    errormsg = 'Текст ответа должнен состоять\nболее чем из 2-ух символов'
                                elseif actionNumber.v <= 0 or actionNumber.v > 3 then
                                    errormsg = 'Такого действия не существует.\nИспользуйте слайдер корректно'
                                else
                                errormsg = ''
                                rButtonsTable[k] = {u8:decode(buferringText1.v),u8:decode(buferringText2.v),actionNumber.v}
                                saveJson(patches['rbuttons'],rButtonsTable)
                                sampAddChatMessage("{2DF61C}[Создание]{FFFFFF} Вы успешно сохранили изменения.",-1)  
                                imgui.CloseCurrentPopup()
                            end 
                        end
                        
                        if imgui.Button(fa.ICON_FA_DUMPSTER ..u8' Удалить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                            errormsg = ''
                            table.remove(rButtonsTable,k)
                            saveJson(patches['rbuttons'],rButtonsTable)
                            sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Вы успешно удалили пользовательскую кнопку.",-1)  
                            imgui.CloseCurrentPopup()
                        end

                        if imgui.Button(fa.ICON_FA_TIMES ..u8' Отменить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                            errormsg = ''
                            imgui.CloseCurrentPopup()
                        end
                    imgui.EndPopup()
                    end
                    if k%2 ~= 0 then
                        imgui.SameLine()
                    end
                end
            imgui.EndChild()
            imgui.Separator()
                imgui.CenterText("Остальное")
            imgui.Separator()
            imgui.BeginGroup()
                if imgui.ColorEdit4("##colorheader",reportSettings['headerColor'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.report.headerColor = float2hex(reportSettings['headerColor']) save() end
                imgui.Hint(u8"Цвет заголовка [Репорт]")
                imgui.SameLine()
                if imgui.ColorEdit4("##ColorAmount",reportSettings['amountColor'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.report.amountColor = float2hex(reportSettings['amountColor']) save() end
                imgui.Hint(u8"Цвет количества полученной репутации")
                imgui.SameLine()
                if imgui.ColorEdit4(u8"Выводить обновление репутации",reportSettings['basedColor'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.report.basedColor = float2hex(reportSettings['basedColor']) save() end
                imgui.Hint(u8"Цвет остального текста")
                imgui.SameLine()
                if imgui.TextAccept('',reportSettings['showDifferenceReputation']) then ini.report.showDifferenceReputation = reportSettings['showDifferenceReputation'].v save() end
            imgui.EndGroup()
        
            imgui.BeginGroup()
                if imgui.ColorEdit4(u8"Выводить информацию об репорте",reportSettings['colorTextResponse'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.report.colorTextResponse = float2hex(reportSettings['colorTextResponse']) save() end
                imgui.Hint(u8"Цвет текста слева(наименований)")
                imgui.SameLine()
                if imgui.TextAccept('',reportSettings['showInfoResponse']) then ini.report.showInfoResponse = reportSettings['showInfoResponse'].v save() end
            imgui.EndGroup()

            imgui.BeginGroup()
                if imgui.ColorEdit4(u8"Выводить бортики репорта",reportSettings['colorBordersResponse'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.report.colorBordersResponse = float2hex(reportSettings['colorBordersResponse']) save() end
                imgui.Hint(u8"Цвет бортиков сверху и снизу основной информации")
                imgui.SameLine()
                if imgui.TextAccept('',reportSettings['showBordersResponse']) then ini.report.showBordersResponse = reportSettings['showBordersResponse'].v save() end
            imgui.EndGroup()
            
            imgui.SameLine(245)

            imgui.BeginGroup()
                if imgui.ColorEdit4(u8"Выводить автора",reportSettings['colorAuthorResponse'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.report.colorAuthorResponse = float2hex(reportSettings['colorAuthorResponse']) save() end
                imgui.Hint(u8"Цвет ника автора")
                imgui.SameLine()
                if imgui.TextAccept('',reportSettings['showAuthorResponse']) then ini.report.showAuthorResponse = reportSettings['showAuthorResponse'].v save() end
            imgui.EndGroup()

            imgui.BeginGroup()
                if imgui.ColorEdit4(u8"Выводить суть репорта",reportSettings['colorContextResponse'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.report.colorContextResponse = float2hex(reportSettings['colorContextResponse']) save() end
                imgui.Hint(u8"Цвет сути репорта")
                imgui.SameLine()
                if imgui.TextAccept('',reportSettings['showContextResponse']) then ini.report.showContextResponse = reportSettings['showContextResponse'].v save() end
            imgui.EndGroup()

            imgui.SameLine(245)

            imgui.BeginGroup()
                if imgui.ColorEdit4(u8"Выводить ответ",reportSettings['colorAnswerResponse'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.report.colorAnswerResponse = float2hex(reportSettings['colorAnswerResponse']) save() end
                imgui.Hint(u8"Цвет ответа репорта")
                imgui.SameLine()
                if imgui.TextAccept('',reportSettings['showAnswerResponse']) then ini.report.showAnswerResponse = reportSettings['showAnswerResponse'].v save() end
            imgui.EndGroup()
            

            imgui.BeginGroup()
                if imgui.ColorEdit4(u8"Выводить количество ответов",reportSettings['colorReportResponse'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.report.colorReportResponse = float2hex(reportSettings['colorReportResponse']) save() end
                imgui.Hint(u8"Цвет количества отвеченного репорта")
                imgui.SameLine()
                if imgui.TextAccept('',reportSettings['showReportResponse']) then ini.report.showReportResponse = reportSettings['showReportResponse'].v save() end
            imgui.EndGroup()


        imgui.EndChild()
    end
end


function stats_window()
    if statsSettings['state'].v then
        imgui.SetNextWindowSize(imgui.ImVec2(200, 100), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2(statsSettings['x'].v,statsSettings['y'].v),imgui.ImVec2(0.5,0.5))
        if not statsSettings['show_header'].v then
            imgui.Begin(fa.ICON_FA_CHART_LINE .. u8" Статистика",false,imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoMove + imgui.WindowFlags.NoResize + imgui.WindowFlags.AlwaysAutoResize + imgui.WindowFlags.NoTitleBar + imgui.WindowFlags.NoBringToFrontOnFocus)
        else
            imgui.Begin(fa.ICON_FA_CHART_LINE .. u8" Статистика",false,imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoMove + imgui.WindowFlags.NoResize + imgui.WindowFlags.AlwaysAutoResize + imgui.WindowFlags.NoBringToFrontOnFocus)
        end


        
        if statsSettings['show_session'].v then imgui.TextColoredRGB(u8'Текущая сессия: ' .. get_clock(count_session['online_time'].v)) end
        if statsSettings['daily_online'].v then imgui.TextColoredRGB(u8'Онлайн за день: ' .. get_clock(count_daily['online_time'].v)) end
        if statsSettings['daily_afk'].v then imgui.TextColoredRGB(u8'АФК за день: ' .. get_clock(count_daily['afk_time'].v)) end
        if statsSettings['daily_clear_online'].v then imgui.TextColoredRGB(u8'Чистый онлайн за день: ' .. get_clock(count_daily['online_time'].v - count_daily['afk_time'].v)) end
        if statsSettings['daily_reports'].v then imgui.TextColoredRGB(u8'Репортов за день: ' ..  count_daily['reports'].v) end
        if statsSettings['daily_punishments'].v then imgui.TextColoredRGB(u8'Наказаний за день: ' .. count_daily['punishments'].v) end
        if statsSettings['daily_bans'].v then imgui.TextColoredRGB(u8'Банов за день: ' .. count_daily['bans'].v) end
        if statsSettings['daily_warns'].v then imgui.TextColoredRGB(u8'Варнов за день: ' .. count_daily['warns'].v) end
        if statsSettings['daily_mutes'].v then imgui.TextColoredRGB(u8'Мутов за день: ' .. count_daily['mutes'].v) end
        if statsSettings['daily_kicks'].v then imgui.TextColoredRGB(u8'Киков за день: ' .. count_daily['kicks'].v) end
        if statsSettings['daily_jails'].v then imgui.TextColoredRGB(u8'Джайлов за день: ' .. count_daily['jails'].v) end
        if statsSettings['daily_reputation'].v then imgui.TextColoredRGB(u8'Репутации за день: ' .. count_daily['reputation'].v) end
        if statsSettings['daily_forms'].v then imgui.TextColoredRGB(u8'Форм за день: ' .. count_daily['forms'].v) end

        if statsSettings['weekly_online'].v then imgui.TextColoredRGB(u8'Онлайн за неделю: ' .. get_clock(count_weekly['online_time'].v)) end
        if statsSettings['weekly_afk'].v then imgui.TextColoredRGB(u8'АФК за неделю: ' .. get_clock(count_weekly['afk_time'].v)) end
        if statsSettings['weekly_clear_online'].v then imgui.TextColoredRGB(u8'Чистый онлайн за неделю: ' .. get_clock(count_weekly['online_time'].v - count_weekly['afk_time'].v)) end
        if statsSettings['weekly_reports'].v then imgui.TextColoredRGB(u8'Репортов за неделю: ' ..  count_weekly['reports'].v) end
        if statsSettings['weekly_punishments'].v then imgui.TextColoredRGB(u8'Наказаний за неделю: ' .. count_weekly['punishments'].v) end
        if statsSettings['weekly_bans'].v then imgui.TextColoredRGB(u8'Банов за неделю: ' .. count_weekly['bans'].v) end
        if statsSettings['weekly_warns'].v then imgui.TextColoredRGB(u8'Варнов за неделю: ' .. count_weekly['warns'].v) end
        if statsSettings['weekly_mutes'].v then imgui.TextColoredRGB(u8'Мутов за неделю: ' .. count_weekly['mutes'].v) end
        if statsSettings['weekly_kicks'].v then imgui.TextColoredRGB(u8'Киков за неделю: ' .. count_weekly['kicks'].v) end
        if statsSettings['weekly_jails'].v then imgui.TextColoredRGB(u8'Джайлов за неделю: ' .. count_weekly['jails'].v) end
        if statsSettings['weekly_reputation'].v then imgui.TextColoredRGB(u8'Репутации за неделю: ' .. count_weekly['reputation'].v) end
        if statsSettings['weekly_forms'].v then imgui.TextColoredRGB(u8'Форм за неделю: ' .. count_weekly['forms'].v) end


        if statsSettings['all_online'].v then imgui.TextColoredRGB(u8'Онлайн за все время: ' .. get_clock(count_all['online_time'].v)) end
        if statsSettings['all_afk'].v then imgui.TextColoredRGB(u8'АФК за все время: ' .. get_clock(count_all['afk_time'].v)) end
        if statsSettings['all_clear_online'].v then imgui.TextColoredRGB(u8'Чистый онлайн за все время: ' .. get_clock(count_all['online_time'].v - count_all['afk_time'].v)) end
        if statsSettings['all_reports'].v then imgui.TextColoredRGB(u8'Репортов за все время: ' ..  count_all['reports'].v) end
        if statsSettings['all_punishments'].v then imgui.TextColoredRGB(u8'Наказаний за все время: ' .. count_all['punishments'].v) end
        if statsSettings['all_bans'].v then imgui.TextColoredRGB(u8'Банов за все время: ' .. count_all['bans'].v) end
        if statsSettings['all_warns'].v then imgui.TextColoredRGB(u8'Варнов за все время: ' .. count_all['warns'].v) end
        if statsSettings['all_mutes'].v then imgui.TextColoredRGB(u8'Мутов за все время: ' .. count_all['mutes'].v) end
        if statsSettings['all_kicks'].v then imgui.TextColoredRGB(u8'Киков за все время: ' .. count_all['kicks'].v) end
        if statsSettings['all_jails'].v then imgui.TextColoredRGB(u8'Джайлов за все время: ' .. count_all['jails'].v) end
        if statsSettings['all_reputation'].v then imgui.TextColoredRGB(u8'Репутации за все время: ' .. count_all['reputation'].v) end
        if statsSettings['all_forms'].v then imgui.TextColoredRGB(u8'Форм за все время: ' .. count_all['forms'].v) end

        if statsSettings['show_report'].v then imgui.TextColoredRGB(u8'Репорта сейчас: ' .. count_session['report_now']) end

        if statsSettings['show_date'].v then imgui.TextColoredRGB(u8"Текущая дата: " .. os.date("%d.%m.%Y")) end
        if statsSettings['show_date'].v then imgui.TextColoredRGB(u8"Текущее время: " .. os.date("%X",os.time())) end


        imgui.End()
         
    end
end
function recon_window()
    if reconInfo['status'].v then
        if reportSettings['showRe'].v then
            if reportInfo['showRe'].v then
                imgui.SetNextWindowSize(imgui.ImVec2(sw / 11, sh / 14.4), imgui.Cond.FirstUseEver)
                imgui.SetNextWindowPos(imgui.ImVec2((ssw / 4), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))    
                imgui.Begin(fa.ICON_FA_EYE .. u8' Слежка',reportInfo['showRe'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize + imgui.WindowFlags.AlwaysAutoResize)
                for k,v in pairs(change['intruders_ids']) do
                    if(sampIsPlayerConnected(v)) then
                        if imgui.Button(u8(sampGetPlayerNickname(v) .. '['..v..']'),imgui.ImVec2(sw / 12, sh / 54)) then sampSendChat('/re ' .. v) end
                    else
                        if imgui.Button(u8('OFFLINE | ID - '.. v),imgui.ImVec2(sw / 12, sh / 54)) then sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Игрок оффлайн.', -1) end
                    end
                end
                imgui.End()
            end
        end


        if reconSettings['showRecon'].v then
            local pedExist, ped = sampGetCharHandleBySampPlayerId(reconInfo['id'])
            if reconSettings['showKeysP'].v and pedExist then
                local plState = (isCharOnFoot(ped) and "onfoot" or "vehicle")
                imgui.SetNextWindowSize(imgui.ImVec2(383, 117), imgui.Cond.FirstUseEver)
                imgui.SetNextWindowPos(imgui.ImVec2((reconSettings['xKeys'].v), reconSettings['yKeys'].v),imgui.ImVec2(0.5,0.5))
                imgui.Begin('##keysrecon',reconSettings['showKeysP'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoTitleBar)
                    imgui.BeginGroup()
                    imgui.SetCursorPosX(43)
                    KeyCap(reconSettings['showW'].v, (keys[plState]["W"] ~= nil), "W", imgui.ImVec2(30,30))
                    KeyCap(reconSettings['showA'].v, (keys[plState]["A"] ~= nil), "A", imgui.ImVec2(30,30))
                    imgui.SameLine()
                    KeyCap(reconSettings['showS'].v, (keys[plState]["S"] ~= nil), "S", imgui.ImVec2(30,30))
                    imgui.SameLine()
                    KeyCap(reconSettings['showD'].v, (keys[plState]["D"] ~= nil), "D", imgui.ImVec2(30,30))
                    imgui.EndGroup()

                    
                    imgui.SameLine(nil, 20)

                    imgui.BeginGroup()
                    KeyCap(reconSettings['showShift'].v, (keys[plState]["Shift"] ~= nil), "Shift", imgui.ImVec2(70,30))
                    imgui.SameLine()
                    KeyCap(reconSettings['showAlt'].v, (keys[plState]["Alt"] ~= nil), "Alt", imgui.ImVec2(30,30))
                    imgui.SameLine()
                    KeyCap(reconSettings['showCtrl'].v, (keys[plState]["Ctrl"] ~= nil), "Ctrl", imgui.ImVec2(30,30))
                    imgui.SameLine()
                    KeyCap(reconSettings['showUp'].v, (keys[plState]["Up"] ~= nil), "Up", imgui.ImVec2(40,30))
                    imgui.SameLine()
                    KeyCap(reconSettings['showF'].v, (keys[plState]["F"] ~= nil), "F", imgui.ImVec2(26,30))
                    imgui.SameLine()
                    KeyCap(reconSettings['showC'].v, (keys[plState]["C"] ~= nil), "C", imgui.ImVec2(26,30))


                    KeyCap(reconSettings['showSpace'].v, (keys[plState]["Space"] ~= nil), "Space", imgui.ImVec2(140,30))
                    imgui.SameLine()
                    KeyCap(reconSettings['showDown'].v, (keys[plState]["Down"] ~= nil), "Down", imgui.ImVec2(40,30))
                    imgui.SameLine()
                    KeyCap(reconSettings['showE'].v, (keys[plState]["E"] ~= nil), "E", imgui.ImVec2(26,30))
                    imgui.SameLine()
                    KeyCap(reconSettings['showQ'].v, (keys[plState]["Q"] ~= nil), "Q", imgui.ImVec2(26,30))

                    imgui.EndGroup()
                    imgui.Separator()
                    imgui.BeginGroup()
                        KeyCap(reconSettings['showRKM'].v, (keys[plState]["RKM"] ~= nil), "RKM", imgui.ImVec2(181,30))
                        imgui.SameLine()
                        KeyCap(reconSettings['showLKM'].v, (keys[plState]["LKM"] ~= nil), "LKM", imgui.ImVec2(181,30))
                    imgui.EndGroup()
                imgui.End()
            end

            if reconSettings['showCars'].v then
                if reconInfo['waitingForCheck'] or (#reconInfo['cars'] > 0 or (#reconInfo['cars'] == 0 and reconSettings['showIfNoCar'].v)) then
                    imgui.SetNextWindowSize(imgui.ImVec2(sw / 6.4, 117), imgui.Cond.FirstUseEver)
                    imgui.SetNextWindowPos(imgui.ImVec2((reconSettings['carsX'].v), reconSettings['carsY'].v),imgui.ImVec2(0.5,0.5))
                    local flagCars = imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize

                    if not reconSettings['showHeaderCars'].v then
                        flagCars = flagCars + imgui.WindowFlags.NoTitleBar
                    end
                    imgui.Begin(fa.ICON_FA_CAR .. u8' Список авто игрока',true, flagCars)
                        if reconInfo['waitingForCheck'] then
                            imgui.SetCursorPos(imgui.ImVec2((imgui.GetWindowWidth() / 2) - 30, (imgui.GetWindowHeight() / 2) - 30))
                            imgui.Spinner('##spinner_waiting_cars', 30, 4, imgui.GetColorU32(imgui.GetStyle().Colors[imgui.Col.ButtonHovered]))
                        else
                            for k,v in pairs(reconInfo['cars']) do
                                if imgui.Button(u8(v[1] .. '['.. v[2] .. ']'), imgui.ImVec2(285,20)) then sampSendChat('/getherecar '.. v[2]) end
                                imgui.Hint(u8"Кликните, чтобы телепортировать авто к игроку")
                            end
                        end
                    imgui.End()
                end
            end

            if reconSettings['showFastPunish'].v then
                local btn_size = imgui.ImVec2(sw / 13.3, sh / 45)
                imgui.SetNextWindowSize(imgui.ImVec2(sw / 12, sh / 6), imgui.Cond.FirstUseEver)
                if reconSettings['xPunish'].v == -1 and reconSettings['yPunish'].v == -1 then
                    imgui.SetNextWindowPos(imgui.ImVec2((ssw / 1.399), ssh / 1.5),imgui.ImVec2(0.5,0.5))
                else
                    imgui.SetNextWindowPos(imgui.ImVec2((reconSettings['xPunish'].v), reconSettings['yPunish'].v),imgui.ImVec2(0.5,0.5))
                end
                imgui.Begin(u8'Быстрые наказания', reconInfo['status'], imgui.WindowFlags.NoTitleBar + imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove)
                if imgui.Button(u8'Бан по айпи', btn_size) then errormsg = '' otherWindows['qpunish'].v = true imgui.OpenPopup(fa.ICON_FA_EXCLAMATION_CIRCLE .. u8" Бан по айпи") end
                if imgui.BeginPopupModal(fa.ICON_FA_EXCLAMATION_CIRCLE .. u8" Бан по айпи", otherWindows['qpunish'],imgui.WindowFlags.AlwaysAutoResize) then
                    imgui.ShowCursor = true
                    for k,v in pairs(qpunishTable['banip']) do
                        if imgui.Button(u8(v),btn_size) then imgui.CloseCurrentPopup() sampSendChat('/banip '.. reconInfo['id'] .. ' ' .. v) end
                    end
                imgui.EndPopup()
                end
                if imgui.Button(u8'Бан', btn_size) then errormsg = '' otherWindows['qpunish'].v = true imgui.OpenPopup(fa.ICON_FA_EXCLAMATION_CIRCLE .. u8" Бан") end
                if imgui.BeginPopupModal(fa.ICON_FA_EXCLAMATION_CIRCLE .. u8" Бан", otherWindows['qpunish'],imgui.WindowFlags.AlwaysAutoResize) then
                    for k,v in pairs(qpunishTable['ban']) do
                        if imgui.Button(u8(v[1]),btn_size) then imgui.OpenPopup(fa.ICON_FA_EXCLAMATION_CIRCLE .. u8(" " .. v[1])) bufferingCount = imgui.ImInt(v[2]) end
                        if imgui.BeginPopupModal(fa.ICON_FA_EXCLAMATION_CIRCLE .. u8(" " .. v[1]), true,imgui.WindowFlags.AlwaysAutoResize) then
                            imgui.ShowCursor = true
                            imgui.PushItemWidth(sw / 13.3)
                            imgui.DragInt('##drint',bufferingCount, 0.1, 1, 30, u8('%.0f дней'))
                            imgui.PopItemWidth()
                            imgui.CenterText(errormsg)
                            if imgui.Button(u8'Отправить',btn_size) then if bufferingCount.v <= 0 or bufferingCount.v > 30 then errormsg = 'Срок наказания не\nможет превышать 30\nдней и не может\n быть менее 1 дня' else errormsg = '' imgui.CloseCurrentPopup() otherWindows['qpunish'].v = false sampSendChat('/ban '.. reconInfo['id'] .. ' '.. bufferingCount.v .. ' '.. v[1]) end end
                            if imgui.Button(u8'Назад',btn_size) then errormsg = '' imgui.CloseCurrentPopup() end
                        imgui.EndPopup()
                        end
                    end
                imgui.EndPopup()
                end
                if imgui.Button(u8'Варн', btn_size) then errormsg = '' otherWindows['qpunish'].v = true imgui.OpenPopup(fa.ICON_FA_EXCLAMATION_CIRCLE .. u8" Варн") end
                if imgui.BeginPopupModal(fa.ICON_FA_EXCLAMATION_CIRCLE .. u8" Варн", otherWindows['qpunish'],imgui.WindowFlags.AlwaysAutoResize) then
                    imgui.ShowCursor = true
                    for k,v in pairs(qpunishTable['warn']) do
                        if imgui.Button(u8(v),btn_size) then imgui.CloseCurrentPopup() otherWindows['qpunish'].v = false sampSendChat('/warn '.. reconInfo['id'] .. ' ' .. v) end
                    end
                imgui.EndPopup()
                end

                if imgui.Button(u8'Джайл', btn_size) then errormsg = '' otherWindows['qpunish'].v = true imgui.OpenPopup(fa.ICON_FA_EXCLAMATION_CIRCLE .. u8" Джайл") end
                if imgui.BeginPopupModal(fa.ICON_FA_EXCLAMATION_CIRCLE .. u8" Джайл", otherWindows['qpunish'],imgui.WindowFlags.AlwaysAutoResize) then
                    for k,v in pairs(qpunishTable['jail']) do
                        imgui.ShowCursor = true
                        if imgui.Button(u8(v[1]),btn_size) then imgui.OpenPopup(fa.ICON_FA_EXCLAMATION_CIRCLE .. u8(" " .. v[1])) bufferingCount = imgui.ImInt(v[2]) end
                        if imgui.BeginPopupModal(fa.ICON_FA_EXCLAMATION_CIRCLE .. u8(" " .. v[1]), true,imgui.WindowFlags.AlwaysAutoResize) then
                            imgui.ShowCursor = true
                            imgui.PushItemWidth(sw / 13.3)
                            imgui.DragInt('##drint',bufferingCount, 0.1, 1, 3000, u8('%.0f минут'))
                            imgui.PopItemWidth()
                            imgui.CenterText(errormsg)
                            if imgui.Button(u8'Отправить',btn_size) then if bufferingCount.v <= 0 or bufferingCount.v > 3000 then errormsg = 'Срок наказания не\nможет превышать 3000\nминут и не может\nбыть менее 1 минуты' else errormsg = '' imgui.CloseCurrentPopup() otherWindows['qpunish'].v = false sampSendChat('/jail '.. reconInfo['id'] .. ' '.. bufferingCount.v .. ' '.. v[1]) end end
                            if imgui.Button(u8'Назад',btn_size) then errormsg = '' imgui.CloseCurrentPopup() end
                        imgui.EndPopup()
                        end
                    end
                imgui.EndPopup()
                end

                if imgui.Button(u8'Мут', btn_size) then errormsg = '' otherWindows['qpunish'].v = true imgui.OpenPopup(fa.ICON_FA_EXCLAMATION_CIRCLE .. u8" Мут") end
                if imgui.BeginPopupModal(fa.ICON_FA_EXCLAMATION_CIRCLE .. u8" Мут", otherWindows['qpunish'],imgui.WindowFlags.AlwaysAutoResize) then
                    imgui.ShowCursor = true
                    for k,v in pairs(qpunishTable['mute']) do
                        if imgui.Button(u8(v[1]),btn_size) then imgui.OpenPopup(fa.ICON_FA_EXCLAMATION_CIRCLE .. u8(" " .. v[1])) bufferingCount = imgui.ImInt(v[2]) end
                        if imgui.BeginPopupModal(fa.ICON_FA_EXCLAMATION_CIRCLE .. u8(" " .. v[1]), true,imgui.WindowFlags.AlwaysAutoResize) then
                            imgui.ShowCursor = true
                            imgui.PushItemWidth(sw / 13.3)
                            imgui.DragInt('##drint',bufferingCount, 0.1, 1, 300, u8('%.0f минут'))
                            imgui.PopItemWidth()
                            imgui.CenterText(errormsg)
                            if imgui.Button(u8'Отправить',btn_size) then if bufferingCount.v <= 0 or bufferingCount.v > 300 then errormsg = 'Срок наказания не\nможет превышать 300\nминут и не может\nбыть менее 1 минуты' else errormsg = '' imgui.CloseCurrentPopup() otherWindows['qpunish'].v = false sampSendChat('/mute '.. reconInfo['id'] .. ' '.. bufferingCount.v .. ' '.. v[1]) end end
                            if imgui.Button(u8'Назад',btn_size) then errormsg = '' imgui.CloseCurrentPopup() end
                        imgui.EndPopup()
                        end
                    end
                imgui.EndPopup()
                end

                if imgui.Button(u8'Кик', btn_size) then errormsg = '' otherWindows['qpunish'].v = true imgui.OpenPopup(fa.ICON_FA_EXCLAMATION_CIRCLE .. u8" Кик") end
                if imgui.BeginPopupModal(fa.ICON_FA_EXCLAMATION_CIRCLE .. u8" Кик", otherWindows['qpunish'],imgui.WindowFlags.AlwaysAutoResize) then
                    imgui.ShowCursor = true
                    for k,v in pairs(qpunishTable['kick']) do
                        if imgui.Button(u8(v),btn_size) then imgui.CloseCurrentPopup() otherWindows['qpunish'].v = false sampSendChat('/kick '.. reconInfo['id'] .. ' ' .. v) end
                    end
                imgui.EndPopup()
                end
                imgui.End()
            end
                if reconSettings['showNavig'].v then
                    if reconSettings['typeNavig'].v == 0 then
                        imgui.SetNextWindowSize(imgui.ImVec2(sw / 3.33, sh / 10), imgui.Cond.FirstUseEver)
                        if reconSettings['xNavig'].v == -1 and reconSettings['yNavig'].v == -1 then
                            imgui.SetNextWindowPos(imgui.ImVec2((ssw / 3), ssh / 1.15),imgui.ImVec2(0.5,0.5))
                        else
                            imgui.SetNextWindowPos(imgui.ImVec2((reconSettings['xNavig'].v), reconSettings['yNavig'].v),imgui.ImVec2(0.5,0.5))
                        end
                        imgui.Begin('##recon_navigator', reconInfo['status'], imgui.WindowFlags.NoTitleBar + imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove)
                        if imgui.Button(fa.ICON_FA_CHEVRON_LEFT .. fa.ICON_FA_CHEVRON_LEFT .. fa.ICON_FA_CHEVRON_LEFT, imgui.ImVec2(50, 93)) then previousPlayer() end
                        imgui.SameLine()
                        imgui.BeginChild('##buttonsnavig', imgui.ImVec2(451, 93), true)
                            local normalCounter = 1
                            local unNormalButtons = {
                                {
                                    name = "/goto",
                                    ['do'] = gotof,
                                    isShow = reconSettings['tpToP'].v
                                },
                                {
                                    name = "/gethere",
                                    ['do'] = gethere,
                                    isShow = reconSettings['tpToM'].v
                                }
                            }
                            for k,v in pairs(unNormalButtons) do
                                if v['isShow'] then
                                    if imgui.Button(v['name'], imgui.ImVec2(83, 20)) then
                                        v['do']()
                                    end
                                    if normalCounter%5 ~= 0 then 
                                        imgui.SameLine()
                                    end
                                    normalCounter = normalCounter + 1
                                end
                            end
                            for k,v in pairs(reconButtonsTable) do
                                if v['show'] then
                                    if imgui.Button(u8(v['name']), imgui.ImVec2(83,20)) then
                                        if v['pinnedBind'] ~= -1 then 
                                            if bindsTable[v['pinnedBind']] ~= nil then
                                                worker_binder("", bindsTable[v['pinnedBind']][3], bindsTable[v['pinnedBind']][2], 0, bindsTable[v['pinnedBind']][5])
                                            else
                                                sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Кажется, что прикрепленный бинд к данной кнопке - удалён.", -1)
                                            end
                                        else
                                            worker_binder("", v['action'], "nocommand", 0, 1)
                                        end
                                        
                                    end
                                    if normalCounter%5 ~= 0 then 
                                        imgui.SameLine()
                                    end
                                    normalCounter = normalCounter + 1
                                end
                            end
                        imgui.EndChild()
                        imgui.SameLine()
                        if imgui.Button(fa.ICON_FA_CHEVRON_RIGHT .. fa.ICON_FA_CHEVRON_RIGHT .. fa.ICON_FA_CHEVRON_RIGHT, imgui.ImVec2(50, 93)) then nextPlayer() end
                        imgui.End()
                    elseif reconSettings['typeNavig'].v == 1 then
                        imgui.SetNextWindowSize(imgui.ImVec2(sw / 11.7, sh / 1.467), imgui.Cond.FirstUseEver)
                        if reconSettings['xNavig'].v == -1 and reconSettings['yNavig'].v == -1 then
                            imgui.SetNextWindowPos(imgui.ImVec2((ssw / 120), ssh / 2.5),imgui.ImVec2(0.5,0.5))
                        else
                            imgui.SetNextWindowPos(imgui.ImVec2((reconSettings['xNavig'].v), reconSettings['yNavig'].v),imgui.ImVec2(0.5,0.5))
                        end
                        imgui.Begin('##recon_navigator_vertical', reconInfo['status'], imgui.WindowFlags.NoTitleBar + imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove + imgui.WindowFlags.AlwaysAutoResize)
                        local size = imgui.GetWindowSize()

                        --164,635
                        local btns_sizeX = sw / 13.053
                        local btns_sizeY = sh / 42.519
                        if reconSettings['tpToP'].v then
                            if imgui.Button(u8'ТП к игроку',imgui.ImVec2(btns_sizeX, btns_sizeY)) then gotof() end
                        end
                        if reconSettings['tpToM'].v then
                            if imgui.Button(u8'ТП к себе',imgui.ImVec2(btns_sizeX, btns_sizeY)) then gethere() end
                        end
                        if reconSettings['spawn'].v then
                            if imgui.Button(u8'Спавн',imgui.ImVec2(btns_sizeX, btns_sizeY)) then sampSendChat('/spplayer '.. reconInfo['id']) end
                        end
                        if reconSettings['az'].v then
                            if imgui.Button(u8'/az',imgui.ImVec2(btns_sizeX, btns_sizeY)) then sampSendChat('/az '.. reconInfo['id']) end
                        end
                        if reconSettings['UP'].v then
                            if imgui.Button(u8'UP',imgui.ImVec2(btns_sizeX, btns_sizeY)) then sampSendChat('/slap '.. reconInfo['id'] .. ' 1') end
                        end
                        if reconSettings['DOWN'].v then
                            if imgui.Button(u8'DOWN',imgui.ImVec2(btns_sizeX, btns_sizeY)) then sampSendChat('/slap '.. reconInfo['id'] .. ' 2') end
                        end
                        if reconSettings['getip'].v then
                            if imgui.Button(u8'Реги',imgui.ImVec2(btns_sizeX, btns_sizeY)) then sampSendChat('/getip '..reconInfo['id']) end
                        end
                        if reconSettings['pgetip'].v then
                            if imgui.Button(u8'Песок',imgui.ImVec2(btns_sizeX, btns_sizeY)) then sampSendChat('/pgetip '..reconInfo['id']) end
                        end
                        if reconSettings['stats'].v then
                            if imgui.Button(u8'stats',imgui.ImVec2(btns_sizeX, btns_sizeY)) then sampSendChat('/check '..reconInfo['id']) end
                        end
                        if reconSettings['here'].v then
                            if imgui.Button(u8'Вы тут?',imgui.ImVec2(btns_sizeX, btns_sizeY)) then areuhere() end
                        end
                        if reconSettings['sethp'].v then
                            if imgui.Button(u8'/sethp',imgui.ImVec2(btns_sizeX, btns_sizeY)) then givehp() end
                        end
                        if reconSettings['plveh'].v then
                            if imgui.Button(u8'/plveh',imgui.ImVec2(btns_sizeX, btns_sizeY)) then if mainini['adminlvl'].v <= 1 then sampSendChat('/a /plveh '.. reconInfo['id']) else sampSendChat('/plveh '.. reconInfo['id']) end end
                        end
                        if reconSettings['freeze'].v then
                            if imgui.Button(u8'Заморозить',imgui.ImVec2(btns_sizeX, btns_sizeY)) then sampSendChat('/freeze '.. reconInfo['id']) end
                        end
                        if reconSettings['unfreeze'].v then
                            if imgui.Button(u8'Разморозить',imgui.ImVec2(btns_sizeX, btns_sizeY)) then sampSendChat('/unfreeze '.. reconInfo['id']) end
                        end
                        if reconSettings['flip'].v then
                            if imgui.Button(u8'Перевернуть/починить',imgui.ImVec2(btns_sizeX, btns_sizeY)) then sampSendChat('/flip '.. reconInfo['id']) end
                        end
                        if reconSettings['skill'].v then
                            if imgui.Button(u8'Скиллы',imgui.ImVec2(btns_sizeX, btns_sizeY)) then sampSendChat('/checkskills '.. reconInfo['id'] .. " 1") end
                        end
                        if reconSettings['obves'].v then
                            if imgui.Button(u8'Обвесы',imgui.ImVec2(btns_sizeX, btns_sizeY)) then sampSendChat('/checkskills '.. reconInfo['id'] .. " 2") end
                        end
                        if reconSettings['zatochki'].v then
                            if imgui.Button(u8'Заточки',imgui.ImVec2(btns_sizeX, btns_sizeY)) then sampSendChat('/checkskills '.. reconInfo['id'] .. " 3") end
                        end
                        if reconSettings['checkgun'].v then
                            if imgui.Button(u8'Посмотреть оружие',imgui.ImVec2(btns_sizeX, btns_sizeY)) then sampSendChat('/iwep '.. reconInfo['id']) end
                        end
                        if reconSettings['getgun'].v then
                            if imgui.Button(u8'Забрать оружие',imgui.ImVec2(btns_sizeX, btns_sizeY)) then sampSendChat('/weap '.. reconInfo['id'] .. ' нарушение правил') end
                        end
                        if reconSettings['hwarn'].v then
                            if imgui.Button(u8'История наказаний',imgui.ImVec2(btns_sizeX, btns_sizeY)) then sampSendChat('/checkpunish '.. reconInfo['id']) end
                        end
                        if reconSettings['nwarn'].v then
                            if imgui.Button(u8'Текущие наказания',imgui.ImVec2(btns_sizeX, btns_sizeY)) then sampSendChat('/getwarn '.. reconInfo['id']) end
                        end
                        if reconSettings['showKeys'].v then
                            if imgui.Button(u8'Следующий',imgui.ImVec2(btns_sizeX, btns_sizeY)) then nextPlayer() end
                            if imgui.Button(u8'Предыдущий',imgui.ImVec2(btns_sizeX, btns_sizeY)) then previousPlayer() end
                        end
                        if imgui.Button(u8'Выйти',imgui.ImVec2(btns_sizeX, btns_sizeY)) then sampSendChat('/reoff') end
                        imgui.End()
                    end
                end
                
                if reconSettings['showInfo'].v then
                    local timerecon = os.time() - reconInfo['time']
                    local secondsrecon = timerecon
                    local minutes_recon = 0
                    local isbool,char = sampGetCharHandleBySampPlayerId(reconInfo['id'])
                    if secondsrecon >= 60 then minutes_recon = math.modf(secondsrecon / 60) end
                    if minutes_recon > 0 then secondsrecon = secondsrecon - (minutes_recon * 60) end
                    if minutes_recon < 10 then minutes_recon = '0'..tostring(minutes_recon) end 
                    if secondsrecon < 10 then secondsrecon = '0'..tostring(secondsrecon) end
                    local stealed = ''
                    local hint = ''
                    local information = ""
                    if reconSettings['showInfoSuspicion'] then
                        if reconInfo['steal'] then
                            stealed = '{F6361C}'..fa.ICON_FA_EXCLAMATION_CIRCLE
                            hint = 'Подозрение на взлом! У данного игрока слишком большое расстояние между местом регистрации и последнего захода. Пожалуйста, проверьте игрока на взлом!' 
                        elseif mainini['adminlvl'].v <= 2 then 
                            stealed = '{ffff00}'..fa.ICON_FA_EXCLAMATION_CIRCLE 
                            hint = 'Ваш уровень администрирования не позволяет вам произвести автоматическую проверку игрока на взлом!' 
                        elseif not reconInfo['steal'] then 
                            stealed = '{2DF61C}'..fa.ICON_FA_EXCLAMATION_CIRCLE 
                            hint = 'Подозрений нет' 
                        end

                        if mainini['adminlvl'].v > 2 and reconSettings['showInfoSuspicionType'].v == 1 and last_steal ~= nil then
                            if false then
                                hint = hint .. '[Ник] '..nick_steal..' | R-IP ['..reg_steal..'] A-IP ['..aip_steal..'] L-IP ['..last_steal.."]\n"
                                hint = hint .. '[Страна] REG - ['.. u8:decode(lipInfo.reg.country) .. '] LAST - ['.. u8:decode(lipInfo.last.country).."]\n"
                                hint = hint .. '[Город] REG - ['.. u8:decode(lipInfo.reg.city) .. '] LAST - ['.. u8:decode(lipInfo.last.city).."]\n"
                                hint = hint .. '[Провайдер] REG - ['.. u8:decode(lipInfo.reg.provider) .. '] LAST - ['.. u8:decode(lipInfo.last.provider).."]"..'[Расстояние] Между городами: ~'..lipInfo.distance..' км'
                            else
                                hint = "Ошибочка"
                            end
                        end
                    end

                    if isbool then
                        reconInfo['skin'] = getCharModel(char)
                    end

                    if reconInfo['regen']:find('Загрузка') then prefixerplus = '' else prefixerplus = '+' end
                    if isbool and isCharInAnyCar(char) and reconSettings['showInfoCar'].v then 
                        charcar = getCarCharIsUsing(char)
                        carname = getNameOfCarModel(getCarModel(charcar))
                    end

                    if reconSettings['typeInfo'].v == 0 then
                        imgui.SetNextWindowSize(imgui.ImVec2(sw / 6.4, sh / 4.3), imgui.Cond.FirstUseEver)
                        if reconSettings['xInfo'].v == -1 and reconSettings['yInfo'].v == -1 then
                            imgui.SetNextWindowPos(imgui.ImVec2((ssw / 1.25), ssh / 1.5),imgui.ImVec2(0.5,0.5)) 
                        else
                            imgui.SetNextWindowPos(imgui.ImVec2((reconSettings['xInfo'].v), reconSettings['yInfo'].v),imgui.ImVec2(0.5,0.5)) 
                        end
                        
                        imgui.Begin('##recon_info', reconSettings['showInfo'], imgui.WindowFlags.NoTitleBar + imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove)
                            local fixCenterCopy = 0
                            if reconSettings['paintInfoNick'].v then information = information .. '{'..reconInfo['color']..'}' end
                            if reconSettings['showInfoNick'].v then fixCenterCopy = fixCenterCopy + imgui.CalcTextSize(reconInfo['nick']).x information = information .. tostring(reconInfo['nick']) end
                            if reconSettings['showInfoId'].v then fixCenterCopy = fixCenterCopy + imgui.CalcTextSize(tostring(reconInfo['id'])).x information = information .. "["..tostring(reconInfo['id'])..']' end
                            if reconSettings['showInfoTime'].v then fixCenterCopy = fixCenterCopy + imgui.CalcTextSize('{FFFFFF} | '..tostring(minutes_recon) .. ':'.. tostring(secondsrecon)).x information = information .. '{FFFFFF} | '..tostring(minutes_recon) .. ':'.. tostring(secondsrecon) end
                            if reconSettings['showInfoSuspicion'].v then imgui.TextColoredRGB(stealed) if imgui.IsItemClicked() then otherWindows['warnings'].v = true imgui.OpenPopup(fa.ICON_FA_EXCLAMATION_CIRCLE .. u8" Подозрения") end end
                            if imgui.BeginPopupModal(fa.ICON_FA_EXCLAMATION_CIRCLE .. u8" Подозрения", otherWindows['warnings'],imgui.WindowFlags.AlwaysAutoResize) then
                                imgui.ShowCursor = true
                                imgui.TextColoredRGB(u8(hint))
                            imgui.EndPopup()
                            end

                            imgui.SameLine()
                            if reconSettings['showPlatform'].v then
                                if reconInfo['game']:find(u8'Лаунчер') then
                                    imgui.TextColoredRGB('{4EFF2B}' .. fa.ICON_FA_GAMEPAD)
                                    imgui.Hint(u8"Для игры на сервере игрок использует официальный лаунчер")
                                elseif reconInfo['game']:find(u8'Клиент') then
                                    imgui.TextColoredRGB('{FF2B2B}' .. fa.ICON_FA_DESKTOP)
                                    imgui.Hint(u8"Для игры на сервере игрок использует клиент SAMP")
                                elseif reconInfo['game']:find(u8'Мобайл') then
                                    imgui.TextColoredRGB('{4EFF2B}' .. fa.ICON_FA_MOBILE_ALT)
                                    imgui.Hint(u8"Для игры на сервере игрок использует официальный мобильный лаунчер")
                                end
                            end

                            imgui.SameLine()
                            imgui.CenterText(information, false, function() if imgui.IsItemClicked() then setClipboardText(reconInfo['nick']) sampAddChatMessage('{2DF61C}[Копирование]{FFFFFF} Ник игрока, за которым вы следите - был успешно скопирован.',-1) end                        end)

                            imgui.Columns(4,'##columnsrecinfo',true)
                            imgui.Separator()
                            imgui.CenterColumnText(u8"Уровень")
                            imgui.NextColumn()
                            imgui.CenterColumnText(tostring(reconInfo['lvl']))
                            imgui.NextColumn()
                            imgui.CenterColumnText(u8"Респекты")
                            imgui.NextColumn()
                            imgui.CenterColumnText(tostring(reconInfo['exp']))
                            imgui.Separator()
                            imgui.NextColumn()
                            imgui.CenterColumnText(u8"Пинг")
                            imgui.NextColumn()
                            imgui.CenterColumnText(tostring(reconInfo['netStat']))
                            imgui.NextColumn()
                            imgui.CenterColumnText(u8"АФК")
                            imgui.NextColumn()
                            imgui.CenterColumnText(tostring(reconInfo['afkTime']))
                            imgui.Separator()
                            imgui.NextColumn()
                            imgui.CenterColumnText(u8"Здоровье")
                            imgui.NextColumn()
                            imgui.CenterColumnText(tostring(reconInfo['health']))
                            imgui.NextColumn()
                            imgui.CenterColumnText(u8"Бронь")
                            imgui.NextColumn()
                            imgui.CenterColumnText(tostring(reconInfo['armour']))
                            imgui.Separator()
                            imgui.NextColumn()
                            imgui.CenterColumnText(u8"Патроны")
                            imgui.NextColumn()
                            imgui.CenterColumnText(tostring(reconInfo['ammo']))
                            imgui.NextColumn()
                            imgui.CenterColumnText(u8"Shot общее")
                            imgui.NextColumn()
                            imgui.CenterColumnText(tostring(reconInfo['shot']))
                            imgui.Separator()
                            imgui.NextColumn()
                            imgui.CenterColumnText(u8"Варны")
                            imgui.NextColumn()
                            imgui.CenterColumnText(tostring(reconInfo['warns']))
                            imgui.NextColumn()
                            imgui.CenterColumnText(u8"Shot в /re")
                            imgui.NextColumn()
                            imgui.CenterColumnText(tostring(reconInfo['timeShot']))
                            imgui.Separator()
                            imgui.NextColumn()
                            imgui.CenterColumnText(u8"Фракция")
                            imgui.NextColumn()
                            if reconInfo['waitingForCheck'] then
                                imgui.SetCursorPosX((imgui.GetColumnOffset() + (imgui.GetColumnWidth() / 2)) - 5.8)
                                imgui.Spinner('##spinner_waiting_frac', 5.8, 1, imgui.GetColorU32(imgui.GetStyle().Colors[imgui.Col.ButtonHovered]))
                            else
                                imgui.CenterColumnText(u8(tostring(reconInfo['frac'])))
                                if reconInfo['frac'] ~= "Не имеется" then
                                    if imgui.IsItemClicked() then sampSendChat("/members") end
                                    imgui.Hint(u8"Нажмите на организацию игрока, чтобы открыть /members")
                                end
                            end
                            imgui.NextColumn()
                            imgui.CenterColumnText(u8"Ранг")
                            imgui.NextColumn()
                            if reconInfo['waitingForCheck'] then
                                imgui.SetCursorPosX((imgui.GetColumnOffset() + (imgui.GetColumnWidth() / 2)) - 5.8)
                                imgui.Spinner('##spinner_waiting_rank', 5.8, 1, imgui.GetColorU32(imgui.GetStyle().Colors[imgui.Col.ButtonHovered]))
                            else
                                imgui.CenterColumnText(u8(tostring(reconInfo['rank'])))
                            end
                            imgui.Separator()
                            imgui.NextColumn()
                            imgui.CenterColumnText(u8"Скорость")
                            imgui.NextColumn()
                            imgui.CenterColumnText(tostring(reconInfo['speed']))
                            imgui.NextColumn()
                            imgui.CenterColumnText(u8"Скин")
                            imgui.NextColumn()
                            imgui.CenterColumnText(tostring(reconInfo['skin']))
                            imgui.Separator()
                            imgui.NextColumn()
                            imgui.CenterColumnText(u8"Платформа")
                            imgui.NextColumn()
                            imgui.CenterColumnText(tostring(reconInfo['game']))
                            imgui.NextColumn()
                            imgui.CenterColumnText(u8"Защита")
                            imgui.NextColumn()
                            if reconInfo['waitingForCheck'] then
                                imgui.SetCursorPosX((imgui.GetColumnOffset() + (imgui.GetColumnWidth() / 2)) - 5.8)
                                imgui.Spinner('##spinner_waiting_def', 5.8, 1, imgui.GetColorU32(imgui.GetStyle().Colors[imgui.Col.ButtonHovered]))
                            else
                                imgui.CenterColumnText(u8(tostring(reconInfo['def'])))
                            end
                            imgui.Separator()
                            imgui.NextColumn()
                            imgui.CenterColumnText(u8"Урон")
                            imgui.NextColumn()
                            if reconInfo['waitingForCheck'] then
                                imgui.SetCursorPosX((imgui.GetColumnOffset() + (imgui.GetColumnWidth() / 2)) - 5.8)
                                imgui.Spinner('##spinner_waiting_dam', 5.8, 1, imgui.GetColorU32(imgui.GetStyle().Colors[imgui.Col.ButtonHovered]))
                            else
                                imgui.CenterColumnText(u8(tostring(reconInfo['dam'])))
                            end
                            
                            imgui.NextColumn()
                            imgui.CenterColumnText(u8"Реген")
                            imgui.NextColumn()
                            if reconInfo['waitingForCheck'] then
                                imgui.SetCursorPosX((imgui.GetColumnOffset() + (imgui.GetColumnWidth() / 2)) - 5.8)
                                imgui.Spinner('##spinner_waiting_reg', 5.8, 1, imgui.GetColorU32(imgui.GetStyle().Colors[imgui.Col.ButtonHovered]))
                            else
                                imgui.CenterColumnText(u8(prefixerplus..tostring(reconInfo['regen'])))
                            end
                            imgui.Columns(1)
                            imgui.Separator()
                            if reconSettings['showInfoCar'].v and isbool and isCharInAnyCar(char) then
                                imgui.SetWindowSize(imgui.ImVec2(sw / 6.4, sh / 3.6))
                                imgui.CenterText(u8'['..carname..']')
                                imgui.Columns(4,'##carinfo',true)
                                imgui.Separator()
                                imgui.CenterColumnText(u8'Двигатель')
                                imgui.NextColumn()
                                imgui.CenterColumnText(u8(reconInfo['engine']))
                                imgui.NextColumn()
                                imgui.CenterColumnText(u8'TwinTurbo')
                                imgui.NextColumn()
                                imgui.CenterColumnText(u8(reconInfo['TT']))
                                imgui.Separator()
                                imgui.NextColumn()
                                imgui.CenterColumnText(u8'HP т/c')
                                imgui.NextColumn()
                                imgui.CenterColumnText(tostring(reconInfo['carHP']))
                                imgui.NextColumn()
                                imgui.CenterColumnText(u8'ID т/c')
                                imgui.NextColumn()
                                imgui.CenterColumnText(tostring(select(2,sampGetVehicleIdByCarHandle(charcar))))
                                imgui.Columns(1)
                                imgui.Separator()
                            else
                                imgui.SetWindowSize(imgui.ImVec2(sw / 6.4, sh / 4.3))
                            end
                        imgui.End()
                    elseif reconSettings['typeInfo'].v == 1 then
                        imgui.SetNextWindowSize(imgui.ImVec2(sw / 10, sh / 2.2), imgui.Cond.FirstUseEver)
                        if reconSettings['xInfo'].v == -1 and reconSettings['yInfo'].v == -1 then
                            imgui.SetNextWindowPos(imgui.ImVec2((ssw / 1.14), ssh / 2.28),imgui.ImVec2(0.5,0.5))
                        else
                            imgui.SetNextWindowPos(imgui.ImVec2((reconSettings['xInfo'].v), reconSettings['yInfo'].v),imgui.ImVec2(0.5,0.5)) 
                        end
                        imgui.Begin('##recon_long_info', reconSettings['showInfo'], imgui.WindowFlags.NoTitleBar + imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove)
                        local size = imgui.GetWindowSize()
                        if reconSettings['showInfoSuspicion'].v then imgui.TextColoredRGB(stealed) if imgui.IsItemClicked() then otherWindows['warnings'].v = true imgui.OpenPopup(fa.ICON_FA_EXCLAMATION_CIRCLE .. u8" Подозрения") end end
                        if imgui.BeginPopupModal(fa.ICON_FA_EXCLAMATION_CIRCLE .. u8" Подозрения", otherWindows['warnings'],imgui.WindowFlags.AlwaysAutoResize) then
                            imgui.ShowCursor = true
                            imgui.TextColoredRGB(u8(hint))
                        imgui.EndPopup()
                        end

                        imgui.SameLine()
                        if reconSettings['showPlatform'].v then
                            if reconInfo['game']:find(u8'Лаунчер') then
                                imgui.TextColoredRGB('{4EFF2B}' .. fa.ICON_FA_GAMEPAD)
                                imgui.Hint(u8"Для игры на сервере игрок использует официальный лаунчер")
                            elseif reconInfo['game']:find(u8'Клиент') then
                                imgui.TextColoredRGB('{FF2B2B}' .. fa.ICON_FA_DESKTOP)
                                imgui.Hint(u8"Для игры на сервере игрок использует клиент SAMP")
                            elseif reconInfo['game']:find(u8'Мобайл') then
                                imgui.TextColoredRGB('{4EFF2B}' .. fa.ICON_FA_MOBILE_ALT)
                                imgui.Hint(u8"Для игры на сервере игрок использует официальный мобильный лаунчер")
                            end
                        end
                        
                        if reconSettings['showInfoTime'].v then imgui.SameLine() imgui.CenterText(tostring(minutes_recon) .. ':'.. tostring(secondsrecon)) end
                        if reconSettings['showInfoNick'].v then information = information .. u8(tostring(reconInfo['nick'])) end
                        if reconSettings['showInfoId'].v then information = information .. "["..tostring(reconInfo['id'])..']' end
                        --[ML] (script) Mint_Tools.lua: 192,491
                        imgui.Columns(2,'##recon_columns_long',true)
                        imgui.Separator()
                        imgui.SetColumnWidth(-1,sw / 28)
                        if reconSettings['showInfoNick'].v then
                            local nickInfo = ''
                            if reconSettings['paintInfoNick'].v then nickInfo = nickInfo .. '{'..reconInfo['color']..'}' end
                            imgui.CenterColumnText(u8('Ник'))
                            imgui.NextColumn()
                            imgui.CenterColumnText(u8(tostring(nickInfo .. reconInfo['nick'])))
                            imgui.Separator()
                            imgui.NextColumn()
                        end

                        if reconSettings['showInfoId'].v then
                            imgui.CenterColumnText(u8('Айди'))
                            imgui.NextColumn()
                            imgui.CenterColumnText(tostring(reconInfo['id']))
                            imgui.Separator()
                            imgui.NextColumn()
                        end

                        imgui.CenterColumnText(u8('Уровень'))
                        imgui.NextColumn()
                        imgui.CenterColumnText(tostring(reconInfo['lvl']))
                        imgui.Separator()
                        imgui.NextColumn()

                        imgui.CenterColumnText(u8('Респекты'))
                        imgui.NextColumn()
                        imgui.CenterColumnText(tostring(reconInfo['exp']))
                        imgui.Separator()
                        imgui.NextColumn()

                        imgui.CenterColumnText(u8('Пинг'))
                        imgui.NextColumn()
                        imgui.CenterColumnText(tostring(reconInfo['netStat']))
                        imgui.Separator()
                        imgui.NextColumn()

                        imgui.CenterColumnText(u8('АФК'))
                        imgui.NextColumn()
                        imgui.CenterColumnText(tostring(reconInfo['afkTime']))
                        imgui.Separator()
                        imgui.NextColumn()

                        imgui.CenterColumnText(u8('Здоровье'))
                        imgui.NextColumn()
                        imgui.CenterColumnText(tostring(reconInfo['health']))
                        imgui.Separator()
                        imgui.NextColumn()

                        imgui.CenterColumnText(u8('Бронь'))
                        imgui.NextColumn()
                        imgui.CenterColumnText(tostring(reconInfo['armour']))
                        imgui.Separator()
                        imgui.NextColumn()

                        imgui.CenterColumnText(u8('Патроны'))
                        imgui.NextColumn()
                        imgui.CenterColumnText(tostring(reconInfo['ammo']))
                        imgui.Separator()
                        imgui.NextColumn()

                        imgui.CenterColumnText(u8('Shot'))
                        imgui.NextColumn()
                        imgui.CenterColumnText(tostring(reconInfo['shot']))
                        imgui.Separator()
                        imgui.NextColumn()

                        imgui.CenterColumnText(u8('Варны'))
                        imgui.NextColumn()
                        imgui.CenterColumnText(tostring(reconInfo['warns']))
                        imgui.Separator()
                        imgui.NextColumn()
                        
                        imgui.CenterColumnText(u8('Shot в /re'))
                        imgui.NextColumn()
                        imgui.CenterColumnText(tostring(reconInfo['timeShot']))
                        imgui.Separator()
                        imgui.NextColumn()

                        imgui.CenterColumnText(u8('Фракция'))
                        imgui.NextColumn()
                        imgui.CenterColumnText(u8(tostring(reconInfo['frac'])))
                        imgui.Separator()
                        imgui.NextColumn()

                        imgui.CenterColumnText(u8('Ранг'))
                        imgui.NextColumn()
                        imgui.CenterColumnText(u8(tostring(reconInfo['rank'])))
                        imgui.Separator()
                        imgui.NextColumn()

                        imgui.CenterColumnText(u8('Скорость'))
                        imgui.NextColumn()
                        imgui.CenterColumnText(tostring(reconInfo['speed']))
                        imgui.Separator()
                        imgui.NextColumn()

                        imgui.CenterColumnText(u8('Скин'))
                        imgui.NextColumn()
                        imgui.CenterColumnText(tostring(reconInfo['skin']))
                        imgui.Separator()
                        imgui.NextColumn()

                        imgui.CenterColumnText(u8('Платформа'))
                        imgui.NextColumn()
                        imgui.CenterColumnText(tostring(reconInfo['game']))
                        imgui.Separator()
                        imgui.NextColumn()

                        imgui.CenterColumnText(u8('Защита'))
                        imgui.NextColumn()
                        imgui.CenterColumnText(u8(tostring(reconInfo['def'])))
                        imgui.Separator()
                        imgui.NextColumn()

                        imgui.CenterColumnText(u8('Урон'))
                        imgui.NextColumn()
                        imgui.CenterColumnText(u8(tostring(reconInfo['dam'])))
                        imgui.Separator()
                        imgui.NextColumn()

                        imgui.CenterColumnText(u8('Реген'))
                        imgui.NextColumn()
                        imgui.CenterColumnText(u8(tostring(reconInfo['regen'])))
                        imgui.Columns(1)
                        imgui.Separator()

                        if reconSettings['showInfoCar'].v and isbool and isCharInAnyCar(char) then
                            imgui.SetWindowSize(imgui.ImVec2(sw / 10, sh / 1.82))
                            imgui.CenterText(u8'['..carname..']')
                            imgui.Columns(2,'##carinfo',true)
                            imgui.SetColumnWidth(-1,sw / 28)
                            imgui.Separator()
                            imgui.CenterColumnText(u8'Двигатель')
                            imgui.NextColumn()
                            imgui.CenterColumnText(u8(reconInfo['engine']))
                            imgui.Separator()
                            imgui.NextColumn()
                            imgui.CenterColumnText(u8'TwinTurbo')
                            imgui.NextColumn()
                            imgui.CenterColumnText(u8(reconInfo['TT']))
                            imgui.Separator()
                            imgui.NextColumn()
                            imgui.CenterColumnText(u8'ID т/c')
                            imgui.NextColumn()
                            imgui.CenterColumnText(tostring(select(2,sampGetVehicleIdByCarHandle(charcar))))
                            imgui.Separator()
                            imgui.NextColumn()
                            imgui.CenterColumnText(u8'HP т/c')
                            imgui.NextColumn()
                            imgui.CenterColumnText(tostring(reconInfo['carHP']))

                            imgui.Columns(1)
                            imgui.Separator()
                        else
                            imgui.SetWindowSize(imgui.ImVec2(sw / 10, sh / 2.2))
                        end

                        imgui.End()
                    end
                end
        end
    end
end


function nextPlayer()
    if not sampIsDialogActive() and not isPauseMenuActive() and not isGamePaused() and not sampIsChatInputActive() then
        if reconInfo['id'] + 1 <= sampGetMaxPlayerId() then
            reconInfo['id'] = reconInfo['id'] + 1
            local bs = raknetNewBitStream()
            raknetEmulRpcReceiveBitStream(155, bs)
            raknetDeleteBitStream(bs)
            while not sampIsPlayerConnected(reconInfo['id']) or sampGetPlayerScore(reconInfo['id']) <= 0 do
                if reconInfo['id'] < sampGetMaxPlayerId() then
                    reconInfo['id'] = reconInfo['id'] + 1
                else 
                    break
                end
            end
            if reconInfo['id'] <= sampGetMaxPlayerId() then
                sampSendChat('/re '..reconInfo['id'])
            end
        end
    end
end

function previousPlayer()
    if not sampIsDialogActive() and not isPauseMenuActive() and not isGamePaused() and not sampIsChatInputActive() then
        if reconInfo['id'] - 1 >= 0 then
            reconInfo['id'] = reconInfo['id'] - 1
            local bs = raknetNewBitStream()
            raknetEmulRpcReceiveBitStream(155, bs)
            raknetDeleteBitStream(bs)
            while not sampIsPlayerConnected(reconInfo['id']) or sampGetPlayerScore(reconInfo['id']) <= 0 do
                if reconInfo['id'] > 0 then
                    reconInfo['id'] = reconInfo['id'] - 1
                else
                    break
                end
            end
            if reconInfo['id'] >= 0 then
                sampSendChat('/re '..reconInfo['id'])
            end
        end
    end
end

function givehp()
    sampSetChatInputEnabled(true) sampSetChatInputText('/sethp '..reconInfo['id'].." ")
end

function areuhere()
    sampSendChat('/pm '..reconInfo['id']..' 1 Вы тут? Если да - напишите в /b Да,я тут или же сообщите в /report')
end
function gotof()
    lua_thread.create(function() 
        sampSendChat('/reoff') 
        while reconInfo['status'].v do 
            wait(0) 
        end 
        wait(500)
        sampSendChat('/goto '.. reconInfo['id']) 
    end)
end

function gethere()
    lua_thread.create(function() 
        sampSendChat('/reoff') 
        while reconInfo['status'].v do 
            wait(0) 
        end 
        wait(500) 
        sampSendChat('/gethere '.. reconInfo['id']) 
    end)
end

function main_settings()
    if windows['settings'].v then
        local size = imgui.GetWindowSize()
        local btns_sizeX = sw / 7.27
        local btns_sizeY = sh / 54
        if imgui.ButtonClickable(true, u8'Установить настройки по умолчанию',imgui.ImVec2(btns_sizeX, btns_sizeY)) then saveJson(patches['main-reserv'], reserv_ini) sampAddChatMessage('{2DF61C}[Сохранение]{FFFFFF} Настройки были установлены по умолчанию, скрипт будет перезагружен.',-1) thisScript():reload() end
        imgui.SameLine()
        if imgui.ButtonClickable(true, u8'Создать резервную копию настроек',imgui.ImVec2(btns_sizeX, btns_sizeY)) then saveJson(patches['main-reserv'], ini) sampAddChatMessage('{2DF61C}[Сохранение]{FFFFFF} Резервная копия настроек была успешно сохранена!',-1) end
        imgui.SameLine()
        if imgui.ButtonClickable(true,u8"Загрузить резервную копию настроек",imgui.ImVec2(btns_sizeX, btns_sizeY)) then 
            ini = tableWDefine(loadJson(patches['main-reserv']), def)
            saveJson(patches['main'], ini)
            sampAddChatMessage('{2DF61C}[Сохранение]{FFFFFF} Резервная копия настроек была загружена, скрипт будет перезагружен.',-1) 
            thisScript():reload() 
        end
        if imgui.ButtonClickable(false,u8"Сохранить настройки в БД",imgui.ImVec2(sw / 4.81, btns_sizeY)) then end
        imgui.SameLine()
        if imgui.ButtonClickable(false,u8"Загрузить настройки из БД",imgui.ImVec2(sw / 4.81, btns_sizeY)) then end
        imgui.Separator()
        imgui.Text(u8'Текущий ник: ')
        imgui.SameLine()
        imgui.TextDisabled(nickplayerbyid .. "["..idplayer.."]")
        imgui.SameLine()
        imgui.SetCursorPosX(sw / 4.35)
        imgui.PushItemWidth(sw / 9.6)
        if imgui.InputText(u8'Тэг',mainini['tag']) then ini.main.tag = mainini['tag'].v save() end
        imgui.SameLine()
        imgui.Text(fa.ICON_FA_TAG)
        imgui.Hint(u8'Тэг указывается в формате - "|| Хомячок"\nПрефикс будет выглядеть так:\nАдминистратор Abobus_Abobusovich[234] посадил в деморган Jizzy_Lane[251] на 300 минут. Причина: ДМ ЗЗ '.. mainini['tag'].v)
        if imgui.InputText(u8'Пароль',mainini['password'],flagpass) then ini.main.password = '&"'.. mainini['password'].v .. '&"' save() end
        imgui.SameLine()
        if mainini['passwordauto'].v then imgui.TextColoredRGB('{2DF61C}' .. fa.ICON_FA_KEY) else imgui.TextColoredRGB('{F6361C}' .. fa.ICON_FA_KEY) end 
        if imgui.IsItemClicked() then mainini['passwordauto'].v = not mainini['passwordauto'].v ini.main.passwordauto = mainini['passwordauto'].v save() end
        imgui.Hint(u8'Нажмите на ключик,чтобы включить/выключить автологин')
        imgui.SameLine()
        if not show_pass.v then if imgui.Button(fa.ICON_FA_EYE_SLASH .. '##pass') then show_pass.v = true flagpass = nil end else if imgui.Button(fa.ICON_FA_EYE .. '##pass') then show_pass.v = false flagpass = imgui.InputTextFlags.Password end end
        imgui.SameLine()
        imgui.SetCursorPosX(sw / 4.36)
        if imgui.InputText(u8'Админ-пароль',mainini['adminpass'],flagapass) then ini.main.adminpass = '&"' ..tostring(mainini['adminpass'].v) .. '&"' save() end
        imgui.SameLine()
        if mainini['passwordautoadmin'].v then imgui.TextColoredRGB('{2DF61C}' .. fa.ICON_FA_KEY) else imgui.TextColoredRGB('{F6361C}' .. fa.ICON_FA_KEY) end 
        if imgui.IsItemClicked() then mainini['passwordautoadmin'].v = not mainini['passwordautoadmin'].v ini.main.passwordautoadmin = mainini['passwordautoadmin'].v save() end
        imgui.Hint(u8'Нажмите на ключик,чтобы включить/выключить автологин в /apanel')
        imgui.SameLine()
        if not show_apass.v then if imgui.Button(fa.ICON_FA_EYE_SLASH .. '##apass') then show_apass.v = true flagapass = nil end else if imgui.Button(fa.ICON_FA_EYE .. '##apass') then show_apass.v = false flagapass = imgui.InputTextFlags.Password end end
        if imgui.InputInt(u8'Уровень администрирования',mainini['adminlvl']) then if mainini['adminlvl'].v > 0 and mainini['adminlvl'].v <= 8 then ini.main.adminlvl = mainini['adminlvl'].v save() else mainini['adminlvl'].v = ini.main.adminlvl end end
        imgui.SameLine()
        
        imgui.SetCursorPosX(sw / 4.36)
        local serverName = "Undefined"
        local numberServer = mainini['servernumber'].v

        if servernames[mainini['servernumber'].v] ~= nil then serverName = servernames[mainini['servernumber'].v] end
        imgui.TextColoredRGB(u8"Текущий игровой сервер: " .. serverName .. "[".. mainini['servernumber'].v .. "]")
        if imgui.Combo(u8'Организация после входа',mainini['organisation'], table_organisations, 7) then ini.main.organisation = mainini['organisation'].v end
        imgui.SameLine()
        if mainini['organisationafter'].v then imgui.TextColoredRGB('{2DF61C}' .. fa.ICON_FA_BRIEFCASE) else imgui.TextColoredRGB('{F6361C}' .. fa.ICON_FA_BRIEFCASE) end 
        if imgui.IsItemClicked() then mainini['organisationafter'].v = not mainini['organisationafter'].v ini.main.organisationafter = mainini['organisationafter'].v save() end
        imgui.Hint(u8'Нажмите на кейс,чтобы включить/выключить вступление в организацию после входа')
        imgui.SameLine()
        imgui.SetCursorPosX(sw / 4.36)
        if imgui.InputInt(u8'Скин после входа',mainini['numberskin']) then if mainini['numberskin'].v > 0 and mainini['numberskin'].v <= 311 then ini.main.numberskin = mainini['numberskin'].v save() else mainini['numberskin'].v = ini.main.numberskin end end
        imgui.SameLine()
        if mainini['skinafter'].v then imgui.TextColoredRGB('{2DF61C}' .. fa.ICON_FA_MALE) else imgui.TextColoredRGB('{F6361C}' .. fa.ICON_FA_MALE) end 
        if imgui.IsItemClicked() then mainini['skinafter'].v = not mainini['skinafter'].v ini.main.skinafter = mainini['skinafter'].v save() end
        imgui.Hint(u8'Нажмите на иконку скина, чтобы включить/выключить выдачу скина после входа. Всего существует 311 скинов - соответственно выбирайте скины в диапазоне [0-311]')
        
        if imgui.InputInt(u8'Интерьер после входа',mainini['interiorafterint']) then if mainini['interiorafterint'].v > 1 and mainini['interiorafterint'].v <= 148 then ini.main.interiorafterint = mainini['interiorafterint'].v save() else mainini['interiorafterint'].v = ini.main.interiorafterint end end
        imgui.SameLine()
        if mainini['interiorafterstate'].v then imgui.TextColoredRGB('{2DF61C}' .. fa.ICON_FA_HOUSE_DAMAGE) else imgui.TextColoredRGB('{F6361C}' .. fa.ICON_FA_HOUSE_DAMAGE) end 
        if imgui.IsItemClicked() then mainini['interiorafterstate'].v = not mainini['interiorafterstate'].v ini.main.interiorafterstate = mainini['interiorafterstate'].v save() end
        imgui.Hint(u8'Нажмите на домик, чтобы включить/выключить телепорт в интерьер после входа. Всего существует 148 интерьеров - соответственно выбирайте интерьер в диапазоне [1-148]')
        imgui.SameLine()
        imgui.SetCursorPosX(sw / 4.36)
        if imgui.InputInt(u8'VR-мир после входа',mainini['iintnumber']) then ini.main.iintnumber = mainini['iintnumber'].v save() end
        imgui.SameLine()
        if mainini['iintstate'].v then imgui.TextColoredRGB('{2DF61C}' .. fa.ICON_FA_GLOBE) else imgui.TextColoredRGB('{F6361C}' .. fa.ICON_FA_GLOBE) end 
        if imgui.IsItemClicked() then mainini['iintstate'].v = not mainini['iintstate'].v ini.main.iintstate = mainini['iintstate'].v save() end
        imgui.Hint(u8'Нажмите на глобус, чтобы включить/выключить телепорт в VR-мир после входа')
        if imgui.InputText(u8'Телепорт в XYZ после входа',mainini['coordsafter']) then ini.main.coordsafter = mainini['coordsafter'].v save() end
        imgui.SameLine()
        if mainini['coordsafterstate'].v then imgui.TextColoredRGB('{2DF61C}' .. fa.ICON_FA_ARROWS_ALT) else imgui.TextColoredRGB('{F6361C}' .. fa.ICON_FA_ARROWS_ALT) end 
        if imgui.IsItemClicked() then mainini['coordsafterstate'].v = not mainini['coordsafterstate'].v ini.main.coordsafterstate = mainini['coordsafterstate'].v save() end
        imgui.Hint(u8'Нажмите на стрелочки, чтобы включить/выключить телепорт в координаты после входа. Указывайте координаты в формате [1000 50 1000]')
        imgui.SameLine()
        imgui.SetCursorPosX(sw / 4.36)
        imgui.TextColoredRGB(u8'Телепорт в /az после входа')
        imgui.SameLine()
        if mainini['azafter'].v then imgui.TextColoredRGB('{2DF61C}' .. fa.ICON_FA_CHART_AREA) else imgui.TextColoredRGB('{F6361C}' .. fa.ICON_FA_CHART_AREA) end 
        if imgui.IsItemClicked() then mainini['azafter'].v = not mainini['azafter'].v ini.main.azafter = mainini['azafter'].v save() end
        imgui.Hint(u8'Нажмите на гору, чтобы включить/выключить телепорт в /az после входа')
        if imgui.InputText(u8'Сообщение в /a после входа',mainini['msgbuffer']) then ini.main.msgbuffer = mainini['msgbuffer'].v save() end
        imgui.SameLine()
        if mainini['msgstate'].v then imgui.TextColoredRGB('{2DF61C}' .. fa.ICON_FA_SMS) else imgui.TextColoredRGB('{F6361C}' .. fa.ICON_FA_SMS) end 
        if imgui.IsItemClicked() then mainini['msgstate'].v = not mainini['msgstate'].v ini.main.msgstate = mainini['msgstate'].v save() end
        imgui.Hint(u8'Нажмите на СМС, чтобы включить/выключить отправку сообщения в /a после входа.')
        imgui.SameLine()
        imgui.SetCursorPosX(sw / 4.36)
        imgui.TextColoredRGB(u8'Скрывать клист после входа')
        imgui.SameLine()
        if mainini['autoinv'].v then imgui.TextColoredRGB('{2DF61C}' .. fa.ICON_FA_MAP_MARKER) else imgui.TextColoredRGB('{F6361C}' .. fa.ICON_FA_MAP_MARKER) end 
        if imgui.IsItemClicked() then mainini['autoinv'].v = not mainini['autoinv'].v ini.main.autoinv = mainini['autoinv'].v save() end
        imgui.Hint(u8'Нажмите на маркер, чтобы включить/выключить скрытие клиста после входа.')
        
        imgui.TextColoredRGB(u8'Принимать адм-квесты после входа')
        imgui.SameLine()
        if mainini['autoquest'].v then imgui.TextColoredRGB('{2DF61C}' .. fa.ICON_FA_MAP_SIGNS) else imgui.TextColoredRGB('{F6361C}' .. fa.ICON_FA_MAP_SIGNS) end 
        if imgui.IsItemClicked() then mainini['autoquest'].v = not mainini['autoquest'].v ini.main.autoquest = mainini['autoquest'].v save() end
        imgui.Hint(u8'Нажмите на указатели, чтобы включить/выключить принятия квестов после входа.')
        imgui.SameLine()
        imgui.SetCursorPosX(sw / 4.36)
        imgui.TextColoredRGB(u8'Скрывать действия администрации')
        imgui.SameLine()
        if mainini['hideadm'].v then imgui.TextColoredRGB('{2DF61C}' .. fa.ICON_FA_USER_TIE) else imgui.TextColoredRGB('{F6361C}' .. fa.ICON_FA_USER_TIE) end 
        if imgui.IsItemClicked() then mainini['hideadm'].v = not mainini['hideadm'].v ini.main.hideadm = mainini['hideadm'].v save() end
        imgui.Hint(u8'Нажмите на человечка, чтобы включить/выключить скрытие действий админов локально(ваших в том числе)')


        imgui.TextColoredRGB(u8'Подключаться к серверу в АФК')
        imgui.SameLine()
        if mainini['joinAFK'].v then imgui.TextColoredRGB('{2DF61C}' .. fa.ICON_FA_BED) else imgui.TextColoredRGB('{F6361C}' .. fa.ICON_FA_BED) end 
        if imgui.IsItemClicked() then mainini['joinAFK'].v = not mainini['joinAFK'].v ini.main.joinAFK = mainini['joinAFK'].v save() end
        imgui.Hint(u8'Нажмите на кровать, чтобы включить/выключить подключение к серверу в АФК')
        imgui.SameLine()
        imgui.SetCursorPosX(sw / 4.36)
        imgui.TextColoredRGB(u8'Автоматически писать в нон рп чат')
        imgui.SameLine()
        if mainini['autob'].v then imgui.TextColoredRGB('{2DF61C}' .. fa.ICON_FA_COMMENTS) else imgui.TextColoredRGB('{F6361C}' .. fa.ICON_FA_COMMENTS) end 
        if imgui.IsItemClicked() then mainini['autob'].v = not mainini['autob'].v ini.main.autob = mainini['autob'].v save() end
        imgui.Hint(u8'Нажмите на комментарии, чтобы включить/выключить автоматическое отправление сообщений в нон рп чат')


                
        imgui.TextColoredRGB(u8'Скрывать IP-адреса в чате')
        imgui.SameLine()
        if mainini['hideip'].v then imgui.TextColoredRGB('{2DF61C}' .. fa.ICON_FA_ELLIPSIS_H) else imgui.TextColoredRGB('{F6361C}' .. fa.ICON_FA_ELLIPSIS_H) end 
        if imgui.IsItemClicked() then mainini['hideip'].v = not mainini['hideip'].v ini.main.hideip = mainini['hideip'].v save() end
        imgui.Hint(u8'Нажмите на точки, чтобы включить/выключить скрытие айпи в чате')


        imgui.SameLine()
        imgui.SetCursorPosX(sw / 4.36)

        imgui.TextColoredRGB(u8'Включать рабочие чаты после входа')
        imgui.SameLine() 
        if mainini['autojobchatlog'].v then imgui.TextColoredRGB('{2DF61C}' .. fa.ICON_FA_TAXI) else imgui.TextColoredRGB('{F6361C}' .. fa.ICON_FA_TAXI) end 
        if imgui.IsItemClicked() then mainini['autojobchatlog'].v = not mainini['autojobchatlog'].v ini.main.autojobchatlog = mainini['autojobchatlog'].v save() end
        imgui.Hint(u8'Нажмите на такси, чтобы включить/выключить рабочие чаты после входа')


        if imgui.InputInt(u8'Лимит АФК',mainini['afklimit']) then ini.main.afklimit = mainini['afklimit'].v save() end
        imgui.SameLine()
        if mainini['afkstatus'].v then imgui.TextColoredRGB('{2DF61C}' .. fa.ICON_FA_BED) else imgui.TextColoredRGB('{F6361C}' .. fa.ICON_FA_BED) end 
        if imgui.IsItemClicked() then mainini['afkstatus'].v = not mainini['afkstatus'].v ini.main.afkstatus = mainini['afkstatus'].v save() end
        imgui.Hint(u8'Нажмите на кровать, чтобы включить/выключить контроль АФК')
        imgui.SameLine()
        if imgui.TextAccept('',mainini['afkquitstatus']) then ini.main.afkquitstatus = mainini['afkquitstatus'].v save() end
        imgui.Hint(u8'Нажмите на галочку, чтобы включить/выключить выход после достижения лимита АФК')

        imgui.SameLine()
        imgui.SetCursorPosX(sw / 4.36)
        if imgui.InputInt(u8'Предупреждение об АФК',mainini['dopusklimit']) then ini.main.dopusklimit = mainini['dopusklimit'].v save() end
        imgui.SameLine()
        if imgui.TextAccept('',mainini['warnafk']) then ini.main.warnafk = mainini['warnafk'].v save() end
        imgui.Hint(u8'Нажмите на галочку, чтобы включить/выключить предупреждение о достижения лимита АФК за определенное время')


        

        imgui.InputText(u8'Команда активации',command)
        imgui.SameLine()
        if imgui.Button(u8'Изменить') then if command.v ~= ini.main.command then sampUnregisterChatCommand(ini.main.command) sampAddChatMessage('{2DF61C}[Редактирование]{FFFFFF} Новая команда успешно сохранена! Было: {F6361C}/'.. u8:decode(ini.main.command) .. '{FFFFFF} | Стало: {2DF61C}/'.. u8:decode(command.v),-1) ini.main.command = u8:decode(command.v) save() sampRegisterChatCommand(u8:decode(command.v),cmd_openmenu) else sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Команда активации меню не изменилась!',-1) end end

        imgui.SameLine(sw / 4.36)
        local gpsString = "Обновить список /gps"
        if startGPS then gpsString = "GPS обновляется..." end
        if imgui.Button(u8(gpsString), imgui.ImVec2(sw / 9.6, 20)) then 
            if not startGPS then 
                startGPS = true
                sampSendChat('/gps')
                sampAddChatMessage('{2DF61C}[GPS]{FFFFFF} Вы начали обновление GPS. В среднем это занимает около двух минут.',-1)
                sampAddChatMessage('{2DF61C}[GPS]{FFFFFF} Пожалуйста, не проявляйте какую-либо активность во время процесса.',-1)
                sampAddChatMessage('{2DF61C}[GPS]{FFFFFF} В случае, если долго ничего не происходит - пропишите /gps',-1)
                temporaryGPSInfo = {}
                lua_thread.create(function()
                    while startGPS do
                        wait(0)
                        if waitingGPS then
                            if (os.time() - timeStartGPS) > 0.5 then
                                waitingGPS = false
                                sampSendChat('/gps')
                            end
                        end
                    end
                end)
            else 
                startGPS = false
                sampAddChatMessage("{F6361C}[GPS]{FFFFFF} Вы остановили обновление GPS.",-1) 
            end

            headerGPS = ""
            nowGPS = 1
            countGPSALL = 0
            vlozehniuNow = -1
            vlozehniuALL = 0
            waitingVLOZEHNIU = false
            waitingGPS = false
            timeStartGPS = 0
        end


        imgui.Separator()


        imgui.InputText(u8'Команда /rslap',mainini['rslap'])
        imgui.SameLine(sw / 5.8)
        if imgui.Button(u8'Изменить##1') then new_command(ini.main.rslap, mainini['rslap'], 'rslap', cmd_open_rslap) end
        imgui.SameLine()
        imgui.SetCursorPosX(sw / 4.36)

        imgui.InputText(u8'Команда /hlvl',mainini['hlvl'])
        imgui.SameLine(sw / 2.585)
        if imgui.Button(u8'Изменить##2') then new_command(ini.main.hlvl, mainini['hlvl'], 'hlvl', cmd_open_hlvl) end

        imgui.InputText(u8'Команда /rkick',mainini['rkick'])
        imgui.SameLine(sw / 5.8)
        if imgui.Button(u8'Изменить##3') then new_command(ini.main.rkick, mainini['rkick'], 'rkick', cmd_open_rkick) end
        imgui.SameLine()
        imgui.SetCursorPosX(sw / 4.36)

        imgui.InputText(u8'Команда /rpm',mainini['rpm'])
        imgui.SameLine(sw / 2.585)
        if imgui.Button(u8'Изменить##4') then new_command(ini.main.rpm, mainini['rpm'], 'rpm', cmd_open_rpm) end

        imgui.InputText(u8'Команда /abot',mainini['abot'])
        imgui.SameLine(sw / 5.8)
        if imgui.Button(u8'Изменить##5') then new_command(ini.main.abot, mainini['abot'], 'abot', cmd_open_abot) end
        imgui.SameLine()
        imgui.SetCursorPosX(sw / 4.36)

        imgui.InputText(u8'Команда /hgps',mainini['hgps'])
        imgui.SameLine(sw / 2.585)
        if imgui.Button(u8'Изменить##6') then new_command(ini.main.hgps, mainini['hgps'], 'hgps', cmd_open_hgps) end

        imgui.InputText(u8'Команда /hclr',mainini['hclr'])
        imgui.SameLine(sw / 5.8)
        if imgui.Button(u8'Изменить##7') then new_command(ini.main.hclr, mainini['hclr'], 'hclr', cmd_open_hclr) end
        imgui.SameLine()
        imgui.SetCursorPosX(sw / 4.36)

        imgui.InputText(u8'Команда /hcmd',mainini['hcmd'])
        imgui.SameLine(sw / 2.585)
        if imgui.Button(u8'Изменить##8') then new_command(ini.main.hcmd, mainini['hcmd'], 'hcmd', cmd_open_hcmd) end

        imgui.InputText(u8'Команда /tp',mainini['tp'])
        imgui.SameLine(sw / 5.8)
        if imgui.Button(u8'Изменить##9') then new_command(ini.main.tp, mainini['tp'], 'tp', cmd_open_tp) end
        imgui.SameLine()
        imgui.SetCursorPosX(sw / 4.36)

        imgui.InputText(u8'Команда /tpcor',mainini['tpcor'])
        imgui.SameLine(sw / 2.585)
        if imgui.Button(u8'Изменить##10') then new_command(ini.main.tpcor, mainini['tpcor'], 'tpcor', cmd_open_tpcor) end

        imgui.InputText(u8'Команда /veh',mainini['veh'])
        imgui.SameLine(sw / 5.8)
        if imgui.Button(u8'Изменить##11') then new_command(ini.main.veh, mainini['veh'], 'veh', cmd_open_veh) end
        imgui.SameLine()
        imgui.SetCursorPosX(sw / 4.36)

        imgui.InputText(u8'Команда /rveh',mainini['rveh'])
        imgui.SameLine(sw / 2.585)
        if imgui.Button(u8'Изменить##12') then new_command(ini.main.rveh, mainini['rveh'], 'rveh', cmd_open_rveh) end

        imgui.InputText(u8'Команда /gun',mainini['gun'])
        imgui.SameLine(sw / 5.8)
        if imgui.Button(u8'Изменить##13') then new_command(ini.main.gun, mainini['gun'], 'gun', cmd_open_gun) end
        imgui.SameLine()
        imgui.SetCursorPosX(sw / 4.36)

        imgui.InputText(u8'Команда /rgun',mainini['rgun'])
        imgui.SameLine(sw / 2.585)
        if imgui.Button(u8'Изменить##14') then new_command(ini.main.rgun, mainini['rgun'], 'rgun', cmd_open_rgun) end

        imgui.InputText(u8'Команда /skin',mainini['skin'])
        imgui.SameLine(sw / 5.8)
        if imgui.Button(u8'Изменить##15') then new_command(ini.main.skin, mainini['skin'], 'skin', cmd_open_skin) end
        imgui.SameLine()
        imgui.SetCursorPosX(sw / 4.36)

        imgui.InputText(u8'Команда /rskin',mainini['rskin'])
        imgui.SameLine(sw / 2.585)
        if imgui.Button(u8'Изменить##16') then new_command(ini.main.rskin, mainini['rskin'], 'rskin', cmd_open_rskin) end

        imgui.InputText(u8'Команда /amember',mainini['amember'])
        imgui.SameLine(sw / 5.8)
        if imgui.Button(u8'Изменить##17') then new_command(ini.main.amember, mainini['amember'], 'amember', amember) end
        imgui.SameLine()
        imgui.SetCursorPosX(sw / 4.36)

        imgui.InputText(u8'Команда /calc',mainini['calc'])
        imgui.SameLine(sw / 2.585)
        if imgui.Button(u8'Изменить##18') then new_command(ini.main.calc, mainini['calc'], 'calc', cmd_open_calc) end

        imgui.InputText(u8'Команда /arepcar',mainini['arepcar'])
        imgui.SameLine(sw / 5.8)
        if imgui.Button(u8'Изменить##19') then new_command(ini.main.arepcar, mainini['arepcar'], 'arepcar', cmd_open_arepcar) end

        

        
    end
end

function saveStyles()
    local styles = imgui.GetStyle().Colors
    local number = imgui.Col
    local paddings = {
        ['WP']  = imgui.ImFloat2(imgui.GetStyle().WindowPadding.x, imgui.GetStyle().WindowPadding.y),
        ['WR']  = imgui.ImFloat(imgui.GetStyle().WindowRounding),
        ['CWR'] = imgui.ImFloat(imgui.GetStyle().ChildWindowRounding),
        ['FP']  = imgui.ImFloat2(imgui.GetStyle().FramePadding.x, imgui.GetStyle().FramePadding.y),
        ['FR']  = imgui.ImFloat(imgui.GetStyle().FrameRounding),
        ['IS']  = imgui.ImFloat2(imgui.GetStyle().ItemSpacing.x, imgui.GetStyle().ItemSpacing.y),
        ['IIS'] = imgui.ImFloat2(imgui.GetStyle().ItemInnerSpacing.x, imgui.GetStyle().ItemInnerSpacing.y),
        ['SS']  = imgui.ImFloat(imgui.GetStyle().ScrollbarSize),
        ['SR']  = imgui.ImFloat(imgui.GetStyle().ScrollbarRounding),
        ['GMS'] = imgui.ImFloat(imgui.GetStyle().GrabMinSize),
        ['GR']  = imgui.ImFloat(imgui.GetStyle().GrabRounding),
        ['WTA'] = imgui.ImFloat2(imgui.GetStyle().WindowTitleAlign.x, imgui.GetStyle().WindowTitleAlign.y),
        ['BTA'] = imgui.ImFloat2(imgui.GetStyle().ButtonTextAlign.x, imgui.GetStyle().ButtonTextAlign.y)
      }
      
    for k,v in pairs(generateStyleEditor) do
        if v[1] ~= 'исключение*' then 
           ini.custom[v[2]] = styleHex(styles[number[v[2]]])
        end
    end

    for k,v in pairs(paddings) do
        if type(v.v) == 'userdata' then
            ini.custom[k] = '['.. paddings[k].v[1] ..','.. paddings[k].v[2] .. ']'
        elseif type(v.v) == 'number' then
            ini.custom[k] = '['.. paddings[k].v ..']'
        end
    end
    
    mainini['theme'].v = 8
    ini.main.theme = 8
    save()
end

function stylization_window()
    if windows['styles'].v then
        local size = imgui.GetWindowSize()

        local firststolbedit = sw / 9.365
        local secondstolb = sw / 7.024
        local secondstolbedit = sw / 3.676
        local thirdstolb = sw / 3.278
        local thirdstolbedit = sw / 2.505
        -- 820,620
        imgui.BeginChild('##interfacestyle',imgui.ImVec2(sw / 2.38 , sh / 3.6),true)
        imgui.PushItemWidth(sw / 14.2)
        imgui.TextColoredRGB(u8'Тема интерфейса:')
        imgui.SameLine()
        if imgui.Combo(u8'##styleinterfact',mainini['theme'],table_themes) then ini.main.theme = mainini['theme'].v themes_functions[mainini['theme'].v + 1]() save() end
        imgui.SameLine()
        imgui.CenterText('{00FF99}Стилизация интерфейса')
        imgui.SameLine()
        imgui.SetCursorPosX(thirdstolb)
        if imgui.ButtonActivated(wsinterface[1],u8'1',imgui.ImVec2(sw / 23.41, sh / 56.84)) then wsinterface[1].v = true wsinterface[2].v = false end
        imgui.SameLine()
        if imgui.ButtonActivated(wsinterface[2],u8'2',imgui.ImVec2(sw / 23.41, sh / 56.84)) then wsinterface[2].v = true wsinterface[1].v = false end
        imgui.Separator()
        if wsinterface[1].v then
            local i = 1
            for k,v in pairs(generateStyleEditor) do
                if v[1] ~= 'исключение*' then
                        local number = imgui.Col
                        if i == 13 or i == 25 then
                            imgui.SetCursorPosY(sw / 53)
                        end
                        if i >= 13 and i < 25 then
                            imgui.SetCursorPosX(sw / 7.03)
                        end
                        if i >= 25 then
                            imgui.SetCursorPosX(sw / 3.51)
                        end
                        
                        imgui.TextColoredRGB(u8'Цвет '..u8(v[1]))
                        imgui.SameLine()
                        local floatcolor = getNormalColors(number[v[2]])
                        if i < 13 then
                            imgui.SetCursorPosX(sw / 7.84)
                        end
                        if i >= 13 and i < 25 then
                            imgui.SetCursorPosX(sw / 3.74)
                        end
                        if i >= 25 then
                            imgui.SetCursorPosX(sw / 2.52)
                        end
                        if imgui.ColorEdit4('##'..v[2]..k,floatcolor, imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then
                            imgui.GetStyle().Colors[number[v[2]]] = imgui.ImVec4(floatcolor.v[1],floatcolor.v[2],floatcolor.v[3],floatcolor.v[4])
                            saveStyles()
                        end
                        i = i + 1
                end
            end
        end
        imgui.PopItemWidth()
        if wsinterface[2].v then
            local paddings = {
                ['WP']  = imgui.ImFloat2(imgui.GetStyle().WindowPadding.x, imgui.GetStyle().WindowPadding.y),
                ['WR']  = imgui.ImFloat(imgui.GetStyle().WindowRounding),
                ['CWR'] = imgui.ImFloat(imgui.GetStyle().ChildWindowRounding),
                ['FP']  = imgui.ImFloat2(imgui.GetStyle().FramePadding.x, imgui.GetStyle().FramePadding.y),
                ['FR']  = imgui.ImFloat(imgui.GetStyle().FrameRounding),
                ['IS']  = imgui.ImFloat2(imgui.GetStyle().ItemSpacing.x, imgui.GetStyle().ItemSpacing.y),
                ['IIS'] = imgui.ImFloat2(imgui.GetStyle().ItemInnerSpacing.x, imgui.GetStyle().ItemInnerSpacing.y),
                ['SS']  = imgui.ImFloat(imgui.GetStyle().ScrollbarSize),
                ['SR']  = imgui.ImFloat(imgui.GetStyle().ScrollbarRounding),
                ['GMS'] = imgui.ImFloat(imgui.GetStyle().GrabMinSize),
                ['GR']  = imgui.ImFloat(imgui.GetStyle().GrabRounding),
                ['WTA'] = imgui.ImFloat2(imgui.GetStyle().WindowTitleAlign.x, imgui.GetStyle().WindowTitleAlign.y),
                ['BTA'] = imgui.ImFloat2(imgui.GetStyle().ButtonTextAlign.x, imgui.GetStyle().ButtonTextAlign.y)
              }
            imgui.PushItemWidth(180)
            if imgui.SliderFloat2(u8"Размер отступов", paddings['WP'], 0.0, 20.0, "%.0f") then
                imgui.GetStyle().WindowPadding.x, imgui.GetStyle().WindowPadding.y = paddings['WP'].v[1], paddings['WP'].v[2]
                saveStyles()
            end
            if imgui.SliderFloat(u8"Округление окон", paddings['WR'], 0.0, 16.0, "%.0f") then
                imgui.GetStyle().WindowRounding = paddings['WR'].v
                saveStyles()
            end
            if imgui.SliderFloat(u8"Округление дочерних окон", paddings['CWR'], 0.0, 16.0, "%.0f") then
                imgui.GetStyle().ChildWindowRounding = paddings['CWR'].v
                saveStyles()
            end
            if imgui.SliderFloat2(u8"Размер объектов", paddings['FP'], 0.0, 20.0, "%.0f") then
                imgui.GetStyle().FramePadding.x, imgui.GetStyle().FramePadding.y = paddings['FP'].v[1], paddings['FP'].v[2]
                saveStyles()
            end
            if imgui.SliderFloat(u8"Округление объектов", paddings['FR'], 0.0, 16.0, "%.0f") then
                imgui.GetStyle().FrameRounding = paddings['FR'].v
                saveStyles()
            end
            if imgui.SliderFloat2(u8"Расстояние между объектами", paddings['IS'], 0.0, 20.0, "%.0f") then
                imgui.GetStyle().ItemSpacing.x, imgui.GetStyle().ItemSpacing.y = paddings['IS'].v[1], paddings['IS'].v[2]
                saveStyles()
            end
            if imgui.SliderFloat2(u8"Внутреннее растояние между объектами", paddings['IIS'], 0.0, 20.0, "%.0f") then
                imgui.GetStyle().ItemInnerSpacing.x, imgui.GetStyle().ItemInnerSpacing.y = paddings['IIS'].v[1], paddings['IIS'].v[2]
                saveStyles()
            end
            if imgui.SliderFloat(u8"Размер скролл-бара", paddings['SS'], 1.0, 20.0, "%.0f") then
                imgui.GetStyle().ScrollbarSize = paddings['SS'].v
                saveStyles()
            end
            if imgui.SliderFloat(u8"Округление скролл-бара", paddings['SR'], 0.0, 16.0, "%.0f") then
                imgui.GetStyle().ScrollbarRounding = paddings['SR'].v
                saveStyles()
            end
            if imgui.SliderFloat(u8"Размер ползунков", paddings['GMS'], 1.0, 20.0, "%.0f") then
                imgui.GetStyle().GrabMinSize = paddings['GMS'].v
                saveStyles()
            end
            if imgui.SliderFloat(u8"Округление ползунков", paddings['GR'], 0.0, 16.0, "%.0f") then
                imgui.GetStyle().GrabRounding = paddings['GR'].v
                saveStyles()
            end
            
            imgui.SetCursorPosY(sw / 53.85)
            imgui.SetCursorPosX(sw / 4.68)
            if imgui.SliderFloat2(u8"Выравнивание заголовков", paddings['WTA'], 0.0, 1.0, "%.2f") then
                imgui.GetStyle().WindowTitleAlign.x, imgui.GetStyle().WindowTitleAlign.y = paddings['WTA'].v[1], paddings['WTA'].v[2]
                saveStyles()
            end
            imgui.SetCursorPosX(sw / 4.68)
            if imgui.SliderFloat2(u8"Выравнивание кнопочных текст.", paddings['BTA'], 0.0, 1.0, "%.2f") then
                imgui.GetStyle().ButtonTextAlign.x, imgui.GetStyle().ButtonTextAlign.y = paddings['BTA'].v[1], paddings['BTA'].v[2]
                saveStyles()
            end

            imgui.SetCursorPosX(sw / 4.68)
            if imgui.SliderFloat(u8"Размер шрифта", mainini['fontsize'], 0.0, 2.0, "%.2f") then
                imgui.GetIO().FontGlobalScale = mainini['fontsize'].v
                ini.main.fontsize = mainini['fontsize'].v
                save()
                saveStyles()
            end



        end

        imgui.EndChild()
        imgui.BeginChild('##chatstyle',imgui.ImVec2(sw / 2.388 , sh / 3.606),true)
        imgui.CenterText('{00CCFF}Стилизация чата')
        imgui.SameLine()
        imgui.SetCursorPosX(thirdstolb)
        if imgui.ButtonActivated(wschat[1],u8'1',imgui.ImVec2(sw / 23.41, sh / 55.74)) then wschat[1].v = true wschat[2].v = false end
        imgui.SameLine()
        if imgui.ButtonActivated(wschat[2],u8'2',imgui.ImVec2(sw / 23.41, sh / 55.74)) then wschat[2].v = true wschat[1].v = false end
        imgui.Separator()
        if wschat[1].v then
            local dataColorBoard = {
                ['fcolumnedit'] = firststolbedit,
                ['scolumn'] = secondstolb,
                ['scolumnedit'] = secondstolbedit,
                ['tcolumn'] = thirdstolb,
                ['tcolumnedit'] = thirdstolbedit,
                ['basic'] = sh / 30.857,
                ['board'] = generatecolorboard,
            }
            createColorboard(dataColorBoard)
        elseif wschat[2].v then
            local dataColorBoard = {
                ['fcolumnedit'] = firststolbedit,
                ['scolumn'] = secondstolb,
                ['scolumnedit'] = secondstolbedit,
                ['tcolumn'] = thirdstolb,
                ['tcolumnedit'] = thirdstolbedit,
                ['basic'] = sh / 30.857,
                ['board'] = generatecolorboard2,
            }
            createColorboard(dataColorBoard)
        end
        imgui.EndChild()
    end
end


function cheat_window()
    if windows['cheats'].v then
        local size = imgui.GetWindowSize()
        local sizeXChild = sw / 5.853
        local sizeYChild = sh / 3.605
        local poscwh = sw / 9.038

        imgui.BeginChild('##settingswallhack',imgui.ImVec2(sizeXChild, sizeYChild),true)
        imgui.CenterText('Wallhack')
        imgui.Separator()
        if imgui.LazyButtonActivated('',cheats['wallhack'], imgui.ImVec2(sw / 6.113,20)) then ini.cheats.wallhack = cheats['wallhack'].v save() updateWallHack() end
        if imgui.TextAccept(u8'Использовать ВХ Ников',cheats['whnick'],poscwh) then ini.cheats.whnick = cheats['whnick'].v save() updateWallHack() end
        if imgui.TextAccept(u8'Использовать ВХ Костей',cheats['whskeletal'],poscwh) then ini.cheats.whskeletal = cheats['whskeletal'].v save() end
        if imgui.TextAccept(u8'Рисовать Линии',cheats['whlines'],poscwh) then ini.cheats.whlines = cheats['whlines'].v save() end
        if imgui.TextAccept(u8'Цвет линий, как у клиста',cheats['whnormalcolor'],poscwh) then ini.cheats.whnormalcolor = cheats['whnormalcolor'].v save() end
        if imgui.TextAccept(u8'Цвет костей, как у клиста',cheats['whnormalcolorbones'],poscwh) then ini.cheats.whnormalcolorbones = cheats['whnormalcolorbones'].v save() end
        imgui.PushItemWidth(sw / 6.113)
        imgui.Separator()
        if imgui.DragInt('##whdist', cheats['whdist'], 0.1, 1, 1000, u8('Дистанция прорисовки: %.0f')) then ini.cheats.whdist = cheats['whdist'].v save() updateWallHack() end
        imgui.PopItemWidth()
        imgui.Separator()
        if imgui.ColorEdit4(u8'Цвет костей',cheats['whcolor'],imgui.ColorEditFlags.AlphaBar) then ini.cheats.whcolor = float2hex(cheats['whcolor']) save() end
        if imgui.ColorEdit4(u8'Цвет линий',cheats['whlinecolor'],imgui.ColorEditFlags.AlphaBar) then ini.cheats.whlinecolor = float2hex(cheats['whlinecolor']) save() end
        imgui.EndChild()

        imgui.SameLine()
        imgui.BeginChild('##BulletTracer',imgui.ImVec2(sizeXChild, sizeYChild),true)
        imgui.CenterText('Трейсер Пуль')
        imgui.SameLine()
        imgui.SetCursorPosX(sw / 8.335)
        if imgui.ButtonActivated(wstraicers[1],u8'1',imgui.ImVec2(sw / 58.536, sh / 57.486)) then wstraicers[1].v = true wstraicers[2].v = false end
        imgui.SameLine()
        if imgui.ButtonActivated(wstraicers[2],u8'2',imgui.ImVec2(sw / 58.536, sh / 57.486)) then wstraicers[2].v = true wstraicers[1].v = false end
        imgui.Separator()
        local firstpush = sw / 12.386
        local secondpush = sw / 6.087
        local firstcursor = sw / 8.335
        local posicons = sw / 11.227
        local secondcursor = sw / 12.971
        if wstraicers[1].v then
            if imgui.LazyButtonActivated('',bSettings['btracer'], imgui.ImVec2(sw / 6.113,20)) then ini.cheats.btracer = bSettings['btracer'].v save() end
            imgui.Separator()
            if imgui.TextAccept(u8'Рисовать чужие трейсера',bSettings['otherBullets'],posicons) then ini.cheats.otherBullets = bSettings['otherBullets'].v save() end
            imgui.PushItemWidth(firstpush)
            if imgui.DragInt('##traicerstrenderother', bSettings['timeRenderOtherBullets'], 0.1, 1, 50, u8('Задержка пуль: %.0f')) then ini.cheats.timeRenderOtherBullets = bSettings['timeRenderOtherBullets'].v save() end
            imgui.SameLine()
            if imgui.DragInt('##traicersthicknessother', bSettings['sizeOtherLine'], 0.1, 1, 30, u8('Толщина линий: %.0f')) then ini.cheats.sizeOtherLine = bSettings['sizeOtherLine'].v save() end
            imgui.PopItemWidth()
            imgui.PushItemWidth(secondpush)
            if imgui.DragInt('##traicersmax', bSettings['maxLineOtherLimit'], 0.1, 1, 100, u8('Максимально количество линий: %.0f')) then
                 ini.cheats.maxLineOtherLimit = bSettings['maxLineOtherLimit'].v 
                 bulletSyncOther.maxLines = bSettings['maxLineOtherLimit'].v
                 bulletSyncOther = {lastId = 0, maxLines = bSettings['maxLineOtherLimit'].v}
                 for i = 1, bulletSyncOther.maxLines do
                     bulletSyncOther[i] = { other = {time = 0, t = {x,y,z}, o = {x,y,z}, type = 0, color = 0}}
                 end
                 save() 
            end
            imgui.PopItemWidth()
            imgui.Separator()
            if imgui.TextAccept(u8'Рисовать окончания линий',bSettings['EndOther'],posicons) then ini.cheats.EndOther = bSettings['EndOther'].v save() end
            imgui.PushItemWidth(firstpush)
            if imgui.DragInt('##traicersdegreeOtherPolygonEnd', bSettings['degreeOtherPolygonEnd'], 0.1, 0, 360, u8('Поворот окончания: %.0f')) then ini.cheats.degreeOtherPolygonEnd = bSettings['degreeOtherPolygonEnd'].v save() end
            imgui.SameLine()
            if imgui.DragInt('##traicerssizeOtherPolygonEnd', bSettings['sizeOtherPolygonEnd'], 0.1, 1, 30, u8('Размер окончания: %.0f')) then ini.cheats.sizeOtherPolygonEnd = bSettings['sizeOtherPolygonEnd'].v save() end
            imgui.PopItemWidth()
            imgui.PushItemWidth(secondpush)
            if imgui.DragInt('##traicersrotationOtherPolygonEnd', bSettings['rotationOtherPolygonEnd'], 0.1, 2, 15, u8('Количество углов на окончаниях: %.0f')) then ini.cheats.rotationOtherPolygonEnd = bSettings['rotationOtherPolygonEnd'].v save() end
            imgui.PopItemWidth()
            imgui.Separator()
            if imgui.TextAccept(u8'Рисовать ник стрелявшего',bSettings['showPlayer'],posicons) then ini.cheats.showPlayer = bSettings['showPlayer'].v save() end
            imgui.SameLine()
            if bSettings['showNick'].v then imgui.TextColoredRGB('{2DF61C}' .. fa.ICON_FA_USER) else imgui.TextColoredRGB('{F6361C}' .. fa.ICON_FA_USER) end 
            imgui.Hint(u8'Нажмите на эту иконку, чтобы включить/выключить показ ника при чужом* выстреле')
            if imgui.IsItemClicked() then bSettings['showNick'].v = not bSettings['showNick'].v ini.cheats.showNick = bSettings['showNick'].v save() end
            imgui.SameLine()
            if bSettings['showId'].v then imgui.TextColoredRGB('{2DF61C}' .. fa.ICON_FA_ID_BADGE) else imgui.TextColoredRGB('{F6361C}' .. fa.ICON_FA_ID_BADGE) end 
            imgui.Hint(u8'Нажмите на эту иконку, чтобы включить/выключить показ айди при чужом* выстреле')
            if imgui.IsItemClicked() then bSettings['showId'].v = not bSettings['showId'].v ini.cheats.showId = bSettings['showId'].v save() end
            imgui.TextColoredRGB(u8'Цвет ника')
            imgui.SameLine(secondcursor)
            if imgui.ColorEdit4('##colornick',bSettings['colorNick'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.cheats.colorNick = float2hex(bSettings['colorNick']) save() end
            imgui.SameLine(firstcursor)
            imgui.TextColoredRGB(u8'Цвет айди')
            imgui.SameLine()
            if imgui.ColorEdit4('##colorid',bSettings['colorId'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.cheats.colorId = float2hex(bSettings['colorId']) save() end
            imgui.Separator()
            imgui.TextColoredRGB(u8'Попадание в ст.объект')
            imgui.Hint(u8'Попадание чужого* выстрела в статический объект')
            imgui.SameLine()
            if imgui.ColorEdit4('##staticObjectOther',bSettings['staticObjectOther'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.cheats.staticObjectOther = float2hex(bSettings['staticObjectOther']) save() end
            imgui.SameLine()
            imgui.TextColoredRGB(u8'Попадание в игрока')
            imgui.Hint(u8'Попадание чужого* выстрела в игрока')
            imgui.SameLine()
            if imgui.ColorEdit4('##playerOther',bSettings['playerOther'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.cheats.playerOther = float2hex(bSettings['playerOther']) save() end
            
            imgui.TextColoredRGB(u8'Попадание в д.объект')
            imgui.Hint(u8'Попадание чужого* выстрела в динамический объект')
            imgui.SameLine(secondcursor)
            if imgui.ColorEdit4('##dynamicObjectOther',bSettings['dynamicObjectOther'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.cheats.dynamicObjectOther = float2hex(bSettings['dynamicObjectOther']) save() end
            imgui.SameLine()
            imgui.TextColoredRGB(u8'Попадание в авто')
            imgui.Hint(u8'Попадание чужого* выстрела в авто')
            imgui.SameLine(sw / 6.508)
            if imgui.ColorEdit4('##carOther',bSettings['carOther'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.cheats.carOther = float2hex(bSettings['carOther']) save() end



        end

        if wstraicers[2].v then
            if imgui.TextAccept(u8'Рисовать свои трейсера',bSettings['myBullets'],posicons) then ini.cheats.myBullets = bSettings['myBullets'].v save() end
            imgui.PushItemWidth(firstpush)
            if imgui.DragInt('##timeRenderMyBullets', bSettings['timeRenderMyBullets'], 0.1, 1, 50, u8('Задержка пуль: %.0f')) then ini.cheats.timeRenderMyBullets = bSettings['timeRenderMyBullets'].v save() end
            imgui.SameLine()
            if imgui.DragInt('##sizeMyLine', bSettings['sizeMyLine'], 0.1, 1, 30, u8('Толщина линий: %.0f')) then ini.cheats.sizeMyLine = bSettings['sizeMyLine'].v save() end
            imgui.PopItemWidth()
            imgui.PushItemWidth(secondpush)
            if imgui.DragInt('##maxLineMyLimit', bSettings['maxLineMyLimit'], 0.1, 1, 100, u8('Максимально количество линий: %.0f')) then 
                ini.cheats.maxLineMyLimit = bSettings['maxLineMyLimit'].v 
                bulletSyncMy.maxLines = bSettings['maxLineMyLimit'].v
                bulletSyncMy = {lastId = 0, maxLines = bSettings['maxLineMyLimit'].v}
                for i = 1, bulletSyncMy.maxLines do
                    bulletSyncMy[i] = { my = {time = 0, t = {x,y,z}, o = {x,y,z}, type = 0, color = 0}}
                end
                save() 
            end
            imgui.PopItemWidth()
            imgui.Separator()
            if imgui.TextAccept(u8'Рисовать окончания линий',bSettings['EndMy'],posicons) then ini.cheats.EndMy = bSettings['EndMy'].v save() end
            imgui.PushItemWidth(firstpush)
            if imgui.DragInt('##degreeMyPolygonEnd', bSettings['degreeMyPolygonEnd'], 0.1, 0, 360, u8('Поворот окончания: %.0f')) then ini.cheats.degreeMyPolygonEnd = bSettings['degreeMyPolygonEnd'].v save() end
            imgui.SameLine()
            if imgui.DragInt('##sizeMyPolygonEnd', bSettings['sizeMyPolygonEnd'], 0.1, 1, 30, u8('Размер окончания: %.0f')) then ini.cheats.sizeMyPolygonEnd = bSettings['sizeMyPolygonEnd'].v save() end
            imgui.PopItemWidth()
            imgui.PushItemWidth(secondpush)
            if imgui.DragInt('##rotationMyPolygonEnd', bSettings['rotationMyPolygonEnd'], 0.1, 2, 15, u8('Количество углов на окончаниях: %.0f')) then ini.cheats.rotationMyPolygonEnd = bSettings['rotationMyPolygonEnd'].v save() end
            imgui.PopItemWidth()
            imgui.Separator()
            imgui.TextColoredRGB(u8'Попадание в ст.объект')
            imgui.Hint(u8'Попадание вашего* выстрела в статический объект')
            imgui.SameLine()
            if imgui.ColorEdit4('##staticObjectMy',bSettings['staticObjectMy'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.cheats.staticObjectMy = float2hex(bSettings['staticObjectMy']) save() end
            imgui.SameLine()
            imgui.TextColoredRGB(u8'Попадание в игрока')
            imgui.Hint(u8'Попадание вашего* выстрела в игрока')
            imgui.SameLine()
            if imgui.ColorEdit4('##playerMy',bSettings['playerMy'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.cheats.playerMy = float2hex(bSettings['playerMy']) save() end
            
            imgui.TextColoredRGB(u8'Попадание в д.объект')
            imgui.Hint(u8'Попадание вашего* выстрела в динамический объект')
            imgui.SameLine(secondcursor)
            if imgui.ColorEdit4('##dynamicObjectMy',bSettings['dynamicObjectMy'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.cheats.dynamicObjectMy = float2hex(bSettings['dynamicObjectMy']) save() end
            imgui.SameLine()
            imgui.TextColoredRGB(u8'Попадание в авто')
            imgui.Hint(u8'Попадание вашего* выстрела в авто')
            imgui.SameLine(sw / 6.508)
            if imgui.ColorEdit4('##carMy',bSettings['carMy'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.cheats.carMy = float2hex(bSettings['carMy']) save() end
        end
        imgui.EndChild()






        imgui.BeginChild('##settingscwallhack',imgui.ImVec2(sizeXChild, sizeYChild),true)
        imgui.CenterText('WH-Car')
        imgui.Separator()
        local poscwhcolor = sw / 19.785
        if imgui.LazyButtonActivated('',cheats['cwallhack'], imgui.ImVec2(sw / 6.113,20)) then ini.cheats.cwallhack = cheats['cwallhack'].v save() end
        if imgui.TextAccept(u8'Показывать название авто ',cheats['cwhname'],poscwh) then ini.cheats.cwhname = cheats['cwhname'].v save() end
        if imgui.TextAccept(u8'Показывать айди авто ',cheats['cwhid'],poscwh) then ini.cheats.cwhid = cheats['cwhid'].v save() end
        if imgui.TextAccept(u8'Показывать состояние авто ',cheats['cwhhp'],poscwh) then ini.cheats.cwhhp = cheats['cwhhp'].v save() end
        if imgui.TextAccept(u8'Показывать состояние двигателя ',cheats['cwhengine'],poscwh) then ini.cheats.cwhengine = cheats['cwhengine'].v save() end
        if imgui.TextAccept(u8'Рисовать линии к авто',cheats['cwhlines'],poscwh) then ini.cheats.cwhlines = cheats['cwhlines'].v save() end
        imgui.Separator()
        imgui.PushItemWidth(sw / 9.6)
        imgui.TextColoredRGB(u8'Цвет названия')
        imgui.SameLine()
        imgui.SetCursorPosX(poscwhcolor)
        if imgui.ColorEdit4(u8'##Цвет названия',cheats['cwhnamecolor'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.cheats.cwhnamecolor = float2hex(cheats['cwhnamecolor']) save() end
        imgui.SameLine()
        if imgui.DragInt('##cwhdist', cheats['cwhdist'], 0.1, 1, 1000, u8('Дистанция прорисовки: %.0f')) then ini.cheats.cwhdist = cheats['cwhdist'].v save() end
        imgui.TextColoredRGB(u8'Цвет айди')
        imgui.SameLine()
        imgui.SetCursorPosX(poscwhcolor)
        if imgui.ColorEdit4(u8'##Цвет айди',cheats['cwhidcolor'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.cheats.cwhidcolor = float2hex(cheats['cwhidcolor']) save() end
        imgui.SameLine()
        if imgui.NewInputText(u8'##Шрифт',cheats['cwhfname'],sw / 9.6, u8'Шрифт',2) then ini.cheats.cwhfname = cheats['cwhfname'].v save() fonts['whcar'] = renderCreateFont(cheats['cwhfname'].v, cheats['cwhfsize'].v, cheats['cwhfflag'].v) end
        imgui.HintInputFont()
        imgui.TextColoredRGB(u8'Цвет хп')
        imgui.SameLine()
        imgui.SetCursorPosX(poscwhcolor)
        if imgui.ColorEdit4(u8'##Цвет хп',cheats['cwhhpcolor'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.cheats.cwhhpcolor = float2hex(cheats['cwhhpcolor']) save() end
        imgui.SameLine()
        if imgui.DragInt('##cwhfsize', cheats['cwhfsize'], 0.1, 1, 100, u8('Размер шрифта: %.0f')) then ini.cheats.cwhfsize = cheats['cwhfsize'].v save() fonts['whcar'] = renderCreateFont(cheats['cwhfname'].v, cheats['cwhfsize'].v, cheats['cwhfflag'].v)  end
        imgui.TextColoredRGB(u8'Цвет движка')
        imgui.SameLine()
        imgui.SetCursorPosX(poscwhcolor)
        if imgui.ColorEdit4(u8'##Цвет движка',cheats['cwhenginecolor'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.cheats.cwhenginecolor = float2hex(cheats['cwhenginecolor']) save() end
        imgui.SameLine()
        if imgui.DragInt('##cwhfflag', cheats['cwhfflag'], 0.1, 1, 100, u8('Флаг шрифта: %.0f')) then ini.cheats.cwhfflag = cheats['cwhfflag'].v save() fonts['whcar'] = renderCreateFont(cheats['cwhfname'].v, cheats['cwhfsize'].v, cheats['cwhfflag'].v) end
        imgui.TextColoredRGB(u8'Цвет линий')
        imgui.SameLine()
        imgui.SetCursorPosX(poscwhcolor)
        if imgui.ColorEdit4(u8'##Цвет линий',cheats['cwhlinecolor'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.cheats.cwhlinecolor = float2hex(cheats['cwhlinecolor']) save() end
        imgui.SameLine()
        if imgui.DragInt('##cwhfoffs', cheats['cwhfOffs'], 0.1, 1, 100, u8('Оффсет шрифта: %.0f')) then ini.cheats.cwhfOffs = cheats['cwhfOffs'].v save() fonts['whcar'] = renderCreateFont(cheats['cwhfname'].v, cheats['cwhfsize'].v, cheats['cwhfflag'].v) end
        imgui.PopItemWidth()
        imgui.EndChild()
        
        imgui.SameLine()

        imgui.BeginChild('##airbrake',imgui.ImVec2(sizeXChild, sizeYChild),true)
        imgui.CenterText('AirBrake')
        imgui.Separator()
        if imgui.LazyButtonActivated('',cheats['airbrake'], imgui.ImVec2(sw / 6.113,20)) then changeAirBrake() end
        imgui.Separator()
        imgui.PushItemWidth(secondpush)
        if imgui.DragFloat('##pSpeed', cheats['pSpeed'],0.01,0.01, 100, u8('Скорость: %.2f')) then ini.cheats.pSpeed = cheats['pSpeed'].v save() end
        if imgui.DragFloat('##pMultiplier', cheats['multiplierARB'],1,1, 100, u8('Множитель: %.0f')) then ini.cheats.multiplierARB = cheats['multiplierARB'].v save() end
        imgui.Hint(u8'Множитель - это уникальное значение, которое отвечает за умножение числа ускорения в n-ое количество раз, то бишь при прокруте мышки вы будете быстрее или медленнее ускорятся')
        imgui.PopItemWidth()


        if imgui.ColorEdit4(u8'Цвет текста',cheats['colorBoostTextARB'],imgui.ColorEditFlags.AlphaBar) then ini.cheats.colorBoostTextARB = float2hex(cheats['colorBoostTextARB']) save() end
        if imgui.ColorEdit4(u8'Цвет значения',cheats['colorBoostARB'],imgui.ColorEditFlags.AlphaBar) then ini.cheats.colorBoostARB = float2hex(cheats['colorBoostARB']) save() end
        imgui.PushItemWidth(secondpush)
        if imgui.NewInputText('##fnamearb',cheats['fnameARB'],secondpush,u8'Название шрифта',2) then ini.cheats.fnameARB = cheats['fnameARB'].v save() fonts['airbrake'] = renderCreateFont(cheats['fnameARB'].v, cheats['fsizeARB'].v, cheats['fflagARB'].v) end
        imgui.HintInputFont()
        if imgui.DragInt('##fsizearb',cheats['fsizeARB'], 0.1, 1, 50, u8('Размер шрифта: %.0f')) then ini.cheats.fsizeARB = cheats['fsizeARB'].v save() fonts['airbrake'] = renderCreateFont(cheats['fnameARB'].v, cheats['fsizeARB'].v, cheats['fflagARB'].v) end
        if imgui.DragInt('##fflagarb',cheats['fflagARB'], 0.1, 1, 100, u8('Флаг шрифта: %.0f')) then ini.cheats.fflagARB = cheats['fflagARB'].v save() fonts['airbrake'] = renderCreateFont(cheats['fnameARB'].v, cheats['fsizeARB'].v, cheats['fflagARB'].v) end
        if imgui.Button(fa.ICON_FA_ARROWS_ALT .. u8' Редактировать позицию на экране##arb', imgui.ImVec2(secondpush, sh / 54)) then moveInterface(cheats['xARB'],cheats['yARB'],function(x,y) ini.cheats.xARB = x ini.cheats.yARB = y save() end) end
        imgui.PopItemWidth()

        imgui.EndChild()
        

        imgui.SameLine()
        imgui.SetCursorPosY(sh / 135)
        imgui.BeginChild('##othercheats',imgui.ImVec2(sw / 13.93, sizeYChild * 2.01),true)
        imgui.CenterText('Остальное')
        imgui.Separator()
        local otherpos = sw / 16.975
        local othernewpush = sw / 15.734
        if imgui.LazyButtonActivated('GM',cheats['gm'], imgui.ImVec2(othernewpush,20)) then changeGM() end
        if imgui.LazyButtonActivated('NB',cheats['noBike'], imgui.ImVec2(othernewpush,20)) then changeNoBike() update_cheats() end
        imgui.Hint(u8("NoBike"))
        if imgui.LazyButtonActivated('IN',cheats['invisible'], imgui.ImVec2(othernewpush,20)) then 
            ini.cheats.invisible = cheats['invisible'].v 
            save()
            if not cheats['invisible'].v then
				sampSendSpawn()
            end
        end
        imgui.Hint(u8("Невидимка\nПРИ ВЫКЛЮЧЕНИИ - ВАС ЗАСПАВНИТ"))
        if imgui.LazyButtonActivated('IA',cheats['inifinityAmmo'], imgui.ImVec2(othernewpush,20)) then update_cheats() ini.cheats.inifinityAmmo = cheats['inifinityAmmo'].v end
        imgui.Hint(u8("Бесконечные патроны"))
        imgui.Separator()
        imgui.CenterText('Fast Jetpack')
        imgui.Separator()
        if imgui.LazyButtonActivated('FJ',cheats['fJetPack'], imgui.ImVec2(othernewpush,20)) then changeJetPack() end
        imgui.Hint(u8"Быстрый ДжетПак")
        imgui.PushItemWidth(sw / 15.734)
        
        if imgui.DragInt('##boost', cheats['boost'], 1, -1000, 1000, u8('Ускорение: %.0f')) then ini.cheats.boost = cheats['boost'].v save() end
        if imgui.DragInt('##multiplier', cheats['multiplier'], 1, 1, 100, u8('Множитель: %.0f')) then ini.cheats.multiplier = cheats['multiplier'].v save() end
        imgui.Hint(u8'Множитель - это уникальное значение, которое отвечает за умножение числа ускорения в n-ое количество раз, то бишь при прокруте мышки вы будете быстрее или медленнее ускорятся')
        imgui.TextColoredRGB(u8'Цвет ускорения')
        imgui.SameLine()
        if imgui.ColorEdit4('##colorText',cheats['colorBoostText'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.cheats.colorBoostText = float2hex(cheats['colorBoostText']) save() end
        imgui.TextColoredRGB(u8'Цвет значения')
        imgui.SameLine()
        imgui.SetCursorPosX(sw / 18.284)
        if imgui.ColorEdit4('##colorбуст',cheats['colorBoost'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.cheats.colorBoost = float2hex(cheats['colorBoost']) save() end
        
        if imgui.Button(fa.ICON_FA_ALIGN_CENTER .. u8' Шрифт##jetpack', imgui.ImVec2(othernewpush, 20)) then imgui.OpenPopup(fa.ICON_FA_ALIGN_CENTER .. u8' Шрифт JetPack-а') end

        if imgui.BeginPopupModal(fa.ICON_FA_ALIGN_CENTER .. u8' Шрифт JetPack-а', imgui.ImBool(true), imgui.WindowFlags.NoResize) then
            if imgui.NewInputText('##fnamejp',cheats['fnameJP'],secondpush,u8'Название шрифт',2) then ini.cheats.fnameJP = cheats['fnameJP'].v save() fonts['jetpack'] = renderCreateFont(cheats['fnameJP'].v, cheats['fsizeJP'].v, cheats['fflagJP'].v) end
            imgui.HintInputFont()
            imgui.PushItemWidth(secondpush)
                if imgui.DragInt('##fsizejp',cheats['fsizeJP'], 0.1, 1, 50, u8('Размер шрифта: %.0f')) then ini.cheats.fsizeJP = cheats['fsizeJP'].v save() fonts['jetpack'] = renderCreateFont(cheats['fnameJP'].v, cheats['fsizeJP'].v, cheats['fflagJP'].v) end
                if imgui.DragInt('##fflagjp',cheats['fflagJP'], 0.1, 1, 100, u8('Флаг шрифта: %.0f')) then ini.cheats.fflagJP = cheats['fflagJP'].v save() fonts['jetpack'] = renderCreateFont(cheats['fnameJP'].v, cheats['fsizeJP'].v, cheats['fflagJP'].v) end
            imgui.PopItemWidth()
        imgui.EndPopup()
        end

        --if imgui.NewInputText('##fnamejp',cheats['fnameJP'],othernewpush,u8'Шрифт',2) then ini.cheats.fnameJP = cheats['fnameJP'].v save() fonts['jetpack'] = renderCreateFont(cheats['fnameJP'].v, cheats['fsizeJP'].v, cheats['fflagJP'].v) end
        --imgui.HintInputFont()
        --if imgui.DragInt('##fsizejp',cheats['fsizeJP'], 0.1, 1, 50, u8('Размер: %.0f')) then ini.cheats.fsizeJP = cheats['fsizeJP'].v save() fonts['jetpack'] = renderCreateFont(cheats['fnameJP'].v, cheats['fsizeJP'].v, cheats['fflagJP'].v) end
        --if imgui.DragInt('##fflagjp',cheats['fflagJP'], 0.1, 1, 100, u8('Флаг: %.0f')) then ini.cheats.fflagJP = cheats['fflagJP'].v save() fonts['jetpack'] = renderCreateFont(cheats['fnameJP'].v, cheats['fsizeJP'].v, cheats['fflagJP'].v) end


        if imgui.Button(u8'Расположение '..fa.ICON_FA_ARROWS_ALT,imgui.ImVec2(othernewpush, sh / 52.27)) then imgui.Process = false changePositions['fJetPack'] = true sampAddChatMessage('[Mint-Tools] Чтобы текстдрав было видно - оденьте джетпак.',0xFFAFAFAF) sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Все окна скрыты, приступайте к редактированию местоположения объекта.",-1) end
        imgui.PopItemWidth()
        imgui.Separator()
        if imgui.LazyButtonActivated('CW',cheats['clickWarp'], imgui.ImVec2(othernewpush,20)) then changeClickWarp() end
        imgui.Hint(u8"ClickWarp")
        imgui.Separator()
        imgui.CenterText('Килл-лист')
        imgui.Separator()

        imgui.TextColoredRGB(u8"Время убийства")
        imgui.SameLine(108)
        if imgui.CustomButtonActivatedIcons(cheats['showKillTime'], '##unickeykilltime') then ini.cheats.showKillTime = cheats['showKillTime'].v save() end
        imgui.TextColoredRGB(u8"Ник убийцы")
        imgui.SameLine(108)
        if imgui.CustomButtonActivatedIcons(cheats['showKillerNick'], '##unickeykillnick') then ini.cheats.showKillerNick = cheats['showKillerNick'].v save() end
        imgui.TextColoredRGB(u8"ID убийцы")
        imgui.SameLine(108)
        if imgui.CustomButtonActivatedIcons(cheats['showKillerID'], '##unickeykillid') then ini.cheats.showKillerID = cheats['showKillerID'].v save() end
        imgui.TextColoredRGB(u8"Ник убитого")
        imgui.SameLine(108)
        if imgui.CustomButtonActivatedIcons(cheats['showKilledNick'], '##unickeykillednick') then ini.cheats.showKilledNick = cheats['showKilledNick'].v save() end
        imgui.TextColoredRGB(u8"ID убитого")
        imgui.SameLine(108)
        if imgui.CustomButtonActivatedIcons(cheats['showKilledID'], '##unickeykilledtime') then ini.cheats.showKilledID = cheats['showKilledID'].v save() end
        
        imgui.TextColoredRGB(u8'Цвет времени')
        imgui.SameLine(108)
        if imgui.ColorEdit4('##colorTime',cheats['colorKillTime'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.cheats.colorKillTime = float2hex(cheats['colorKillTime']) save() end
        imgui.TextColoredRGB(u8'Цвет оружия')
        imgui.SameLine(108)
        if imgui.ColorEdit4('##colorweapon',cheats['colorWeapon'],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.cheats.colorWeapon = float2hex(cheats['colorWeapon']) save() end
        imgui.PushItemWidth(othernewpush)
        if imgui.Combo('##typekilllist', cheats['withIMG'], {u8"Картинка", u8"Название"}, -1) then ini.cheats.withIMG = cheats['withIMG'].v save() end
        imgui.Hint(u8"Данный параметр подразумевает способ отображения предмета/события, которым был убит игрок.\nКартинка - отображает картинку оружия/события\nНазвание - отображает название оружия/события")
        imgui.PopItemWidth()
        if imgui.Button(fa.ICON_FA_ALIGN_CENTER .. u8' Шрифт##airb', imgui.ImVec2(othernewpush, 20)) then imgui.OpenPopup(fa.ICON_FA_ALIGN_CENTER .. u8' Шрифт Килл-листа') end

        if imgui.BeginPopupModal(fa.ICON_FA_ALIGN_CENTER .. u8' Шрифт Килл-листа', imgui.ImBool(true), imgui.WindowFlags.NoResize) then
            if imgui.NewInputText('##fnameKL',cheats['fnameKL'],secondpush,u8'Название шрифта',2) then ini.cheats.fnameKL = cheats['fnameKL'].v save() fonts['killlist'] = renderCreateFont(cheats['fnameKL'].v, cheats['fsizeKL'].v, cheats['fflagKL'].v) end
            imgui.HintInputFont()
            imgui.PushItemWidth(secondpush)
                if imgui.DragInt('##fsizeKL',cheats['fsizeKL'], 0.1, 1, 50, u8('Размер шрифта: %.0f')) then ini.cheats.fsizeKL = cheats['fsizeKL'].v save() fonts['killlist'] = renderCreateFont(cheats['fnameKL'].v, cheats['fsizeKL'].v, cheats['fflagKL'].v) end
                if imgui.DragInt('##fflagKL',cheats['fflagKL'], 0.1, 1, 100, u8('Флаг шрифта: %.0f')) then ini.cheats.fflagKL = cheats['fflagKL'].v save() fonts['killlist'] = renderCreateFont(cheats['fnameKL'].v, cheats['fsizeKL'].v, cheats['fflagKL'].v) end
                if imgui.DragInt('##fOffsKL',cheats['fOffsKL'], 0.1, 1, 100, u8('Оффсет шрифта: %.0f')) then ini.cheats.fOffsKL = cheats['fOffsKL'].v save() fonts['killlist'] = renderCreateFont(cheats['fnameKL'].v, cheats['fsizeKL'].v, cheats['fflagKL'].v) end
                if imgui.DragInt('##LinesKL',cheats['linesKL'], 1, 1, 10, u8("Последних убийств: %.0f")) then ini.cheats.linesKL = cheats['linesKL'].v save() end
                imgui.Hint(u8"Данное значение отвечает за количество линий, отображаемых в килл-листе") 
                if imgui.Button(fa.ICON_FA_ARROWS_ALT .. u8' Расположение##KL', imgui.ImVec2(secondpush, sh / 52.57)) then moveInterface(cheats['xKL'],cheats['yKL'],function(x,y) ini.cheats.xKL = x ini.cheats.yKL = y save() end) end
               -- if imgui.CustomRadioButton(fa.ICON_FA_ALIGN_LEFT, cheats['fAlignKL'], 1, imgui.ImVec2(101.5,20)) then ini.cheats.fAlignKL = cheats['fAlignKL'].v save() end
                --imgui.Hint(u8"Центрирование текста по левому краю")
                --imgui.SameLine()
                --imgui.Hint(u8"Центрирование текста по центру краю")
                --if imgui.CustomRadioButton(fa.ICON_FA_ALIGN_CENTER, cheats['fAlignKL'], 2, imgui.ImVec2(101.5,20)) then ini.cheats.fAlignKL = cheats['fAlignKL'].v save() end
                --imgui.SameLine()
                --imgui.Hint(u8"Центрирование текста по правому краю")
                --if imgui.CustomRadioButton(fa.ICON_FA_ALIGN_RIGHT, cheats['fAlignKL'], 3, imgui.ImVec2(101.5,20)) then ini.cheats.fAlignKL = cheats['fAlignKL'].v save() end

            imgui.PopItemWidth()
        imgui.EndPopup()
        end



        imgui.Separator()

        imgui.EndChild()


        
    end
end


function recon_window_settings()
    if windows['recon'].v then
        local size = imgui.GetWindowSize()
        imgui.BeginChild('##reconsettings',imgui.ImVec2(sw / 2.388 , sh / 13),true)
        imgui.CenterText('Общая конфигурация')
        imgui.SameLine(725)
        imgui.RadioButton('1##', recachecker[1], 0)
        imgui.SameLine()
        imgui.RadioButton('2##', recachecker[1], 1)
        imgui.Separator()
        if imgui.CustomButtonActivated('',reconSettings['showRecon'], imgui.ImVec2(sw / 2.435,20)) then ini.recon.showRecon = reconSettings['showRecon'].v save() end
        if imgui.LazyButtonActivated('Удаление TD',reconSettings['delTD'], imgui.ImVec2(sw / 2.435,20)) then ini.recon.delTD = reconSettings['delTD'].v save() end
        imgui.EndChild()
        if recachecker[1].v == 0 then
            imgui.BeginChild('##InfoPanel',imgui.ImVec2(sw / 4.811, sh / 3.605),true)
            imgui.CenterText('Конфигурация информационной панели')
            imgui.Separator()
            local accepter = sw / 9.436
            if imgui.TextAccept(u8'Активность',reconSettings['showInfo'], accepter) then ini.recon.showInfo = reconSettings['showInfo'].v save() end
            imgui.PushItemWidth(sw / 19.2)
            if imgui.Combo(u8'Тип инфо-панели',reconSettings['typeInfo'],{u8'Квадратный',u8'Вытянутый'}) then ini.recon.typeInfo = reconSettings['typeInfo'].v save() end
            if imgui.TextAccept(u8'Показывать ник',reconSettings['showInfoNick'], accepter) then ini.recon.showInfoNick = reconSettings['showInfoNick'].v save() end
            imgui.SameLine(235)
            if imgui.TextAccept(u8'Показывать платформу',reconSettings['showPlatform']) then ini.recon.showPlatform = reconSettings['showPlatform'].v save() end
            if imgui.TextAccept(u8'Показывать ID',reconSettings['showInfoId'], accepter) then ini.recon.showInfoId = reconSettings['showInfoId'].v save() end
            if imgui.TextAccept(u8'Красить ник в цвет организации',reconSettings['paintInfoNick'], accepter) then ini.recon.paintInfoNick = reconSettings['paintInfoNick'].v save() end
            if imgui.TextAccept(u8'Показывать время слежки',reconSettings['showInfoTime'], accepter) then ini.recon.paintInfoNick = reconSettings['showInfoTime'].v save() end
            if imgui.TextAccept(u8'Показывать подозрения',reconSettings['showInfoSuspicion'], accepter) then ini.recon.showInfoSuspicion = reconSettings['showInfoSuspicion'].v save() end
            if imgui.Combo(u8'Тип подозрений',reconSettings['showInfoSuspicionType'],{u8'Краткий',u8'Полный'}) then ini.recon.showInfoSuspicionType = reconSettings['showInfoSuspicionType'].v save() end
            imgui.PopItemWidth()
            if imgui.TextAccept(u8'Показывать инфо об автомобиле',reconSettings['showInfoCar'], accepter) then ini.recon.showInfoCar = reconSettings['showInfoCar'].v save() end
            if imgui.Button(fa.ICON_FA_ARROWS_ALT .. u8' Редактировать позицию на экране', imgui.ImVec2(sw / 5, sh / 54)) then moveInterface(reconSettings['xInfo'],reconSettings['yInfo'],function(x,y) ini.recon.xInfo = x ini.recon.yInfo = y save() end) end
            imgui.Separator()
            imgui.CenterText('Конфигурация чекера ботов')
            imgui.Separator()

            if imgui.Button(fa.ICON_FA_ARROWS_ALT .. u8' Редактировать позицию на экране##bot', imgui.ImVec2(sw / 5, sh / 54)) then moveInterface(reconSettings['xBot'],reconSettings['yBot'],function(x,y) ini.recon.xBot = x ini.recon.yBot = y save() end) end

            imgui.EndChild()
            imgui.SameLine()
            imgui.BeginChild('##NavigPanel',imgui.ImVec2(sw / 4.811, sh / 3.605),true)
            imgui.CenterText('Конфигурация навигационной панели')
            imgui.Separator()
            local accepter_navig = sw / 10.068
            if imgui.TextAccept(u8'Активность',reconSettings['showNavig'], accepter_navig) then ini.recon.showNavig = reconSettings['showNavig'].v save() end
            imgui.PushItemWidth(sw / 15.453)
            if imgui.Combo(u8'Тип панели',reconSettings['typeNavig'],{u8'Горизонтальный',u8'Вертикальный'}) then ini.recon.typeNavig = reconSettings['typeNavig'].v save() end
            if imgui.TextAccept(u8'Показывать кнопки навигации',reconSettings['showKeys'], accepter_navig) then ini.recon.showKeys = reconSettings['showKeys'].v save() end
            if imgui.TextAccept(u8'Навигация с помощью клавиш',reconSettings['useKeys'], accepter_navig) then ini.recon.useKeys = reconSettings['useKeys'].v save() end
            if imgui.TextAccept(u8'Слапать с помощью клавиш',reconSettings['useSlap'], accepter_navig) then ini.recon.useSlap = reconSettings['useSlap'].v save() end
            imgui.Separator()
            imgui.CenterText('Конфигурация кнопок')
            imgui.Separator()
            imgui.BeginChild('##listbuttonsb', imgui.ImVec2(sw / 5, 113), true)
            local unNormalButtons = {
                {
                    name = "/goto",
                    ['noChange'] = "Нельзя редактировать",
                    isShow = reconSettings['tpToP'],
                    nameSet = "tpToP",
                },
                {
                    name = "/gethere",
                    ['noChange'] = "Нельзя редактировать",
                    isShow = reconSettings['tpToM'],
                    nameSet = "tpToM",
                },
            }
            local normalCounter = 1
            for k,v in pairs(unNormalButtons) do
                if imgui.ButtonActivated(v['isShow'], u8(v['name']), imgui.ImVec2(88.3,23.5)) then
                    imgui.OpenPopup(fa.ICON_FA_USER_EDIT .. u8' Редактирование статичной кнопки##'..k)
                end
                if imgui.BeginPopupModal(fa.ICON_FA_USER_EDIT .. u8' Редактирование статичной кнопки##'..k, imgui.ImBool(true), imgui.WindowFlags.NoResize) then
                    imgui.BeginChild('##inpopupedit', imgui.ImVec2(400, 60), true)
                        imgui.Button(u8(v['name']), imgui.ImVec2(385, 20))
                        imgui.Hint(u8"Статичную кнопку нельзя переименовать, можно лишь скрыть.")
                        if imgui.CustomButtonActivated("", v['isShow'], imgui.ImVec2(385, 20)) then ini.recon[v['nameSet']] = v['isShow'].v save() end
                    imgui.EndChild()
                imgui.EndPopup()
                end
                if normalCounter%4 ~= 0 then 
                    imgui.SameLine()
                end
                normalCounter = normalCounter + 1
            end


            for k,v in pairs(reconButtonsTable) do
                if imgui.ButtonActivated(imgui.ImBool(v['show']), u8(v['name']), imgui.ImVec2(88.3,23.5)) then
                    imgui.OpenPopup(fa.ICON_FA_USER_EDIT .. u8' Редактирование динамической кнопки##'..k)
                    editorDynamic = {
                        ['name'] = imgui.ImBuffer(u8(v['name']),100),
                        ['show'] = imgui.ImBool(v['show']),
                        ['pinnedBind'] = v['pinnedBind'],
                        ['action'] = imgui.ImBuffer(u8(v['action']),5000)
                    }
                end

                if imgui.BeginPopupModal(fa.ICON_FA_USER_EDIT .. u8' Редактирование динамической кнопки##'..k, imgui.ImBool(true), imgui.WindowFlags.NoResize) then
                    imgui.BeginChild('##inpopupedit', imgui.ImVec2(400, 235), true)
                        imgui.NewInputText('##dynamicname',editorDynamic['name'], 385, u8("Название кнопки"), 2)
                        imgui.CustomButtonActivated("", editorDynamic['show'], imgui.ImVec2(385, 20))
                        if imgui.Button(fa.ICON_FA_MAP_PIN .. u8" Связать с биндом", imgui.ImVec2(385, 20)) then
                            imgui.OpenPopup(u8'Выберите бинд##'..k)
                        end

                        if imgui.BeginPopupModal(u8'Выберите бинд##'..k, imgui.ImBool(true), imgui.WindowFlags.NoResize) then
                            imgui.BeginChild('##listbinds', imgui.ImVec2(200, 200), true)
                                for ks,vs in pairs(bindsTable) do
                                    if imgui.Button(u8(vs[1]), imgui.ImVec2(185, 20)) then editorDynamic['pinnedBind'] = ks imgui.CloseCurrentPopup() end
                                    imgui.Hint(u8"Нажмите на кнопку, чтобы связать кнопку в слежке с этим биндом")
                                end
                            imgui.EndChild()
                        imgui.EndPopup()
                        end
                        if editorDynamic['pinnedBind'] == -1 then
                            imgui.InputTextMultiline("##sssssssssssss",editorDynamic['action'],imgui.ImVec2(385,100))
                        else
                            if imgui.Button(u8' Кнопка связана с биндом "' ..u8:decode(bindsTable[editorDynamic['pinnedBind']][1]) .. '"', imgui.ImVec2(385, 100)) then editorDynamic['pinnedBind'] = -1 end
                            imgui.Hint(u8"Нажмите на эту кнопку, чтобы отвязать бинд")
                        end

                        if imgui.Button(fa.ICON_FA_CHECK .. u8' Сохранить кнопку', imgui.ImVec2(385, 20)) then
                            errormsg = ""
                            local limitsTable = {
                                ['name'] = {false, "Уже существует кнопка с таким названием"},
                                ['name_long'] = {false, "Длинна названия должна быть не больше 25-ти символов и не менее 2-e"},
                            }
                            for keychik,valik in pairs(reconButtonsTable) do
                                if keychik ~= k and valik['name'] == u8:decode(editorDynamic['name'].v) then
                                    limitsTable['name'][1] = true
                                end
                            end

                            if len(u8:decode(editorDynamic['name'].v)) < 2 or len(u8:decode(editorDynamic['name'].v)) > 25 then limitsTable['name_long'][1] = true end

                            local isGood = false
                            for kea,vea in pairs(limitsTable) do
                                if vea[1] then
                                    isGood = true
                                    errormsg = errormsg .. "\n" .. vea[2]
                                end
                            end

                            if not isGood then
                                local normalSave = {
                                    ['name'] = u8:decode(editorDynamic['name'].v),
                                    ['show'] = editorDynamic['show'].v,
                                    ['pinnedBind'] = editorDynamic['pinnedBind'],
                                    ['action'] = u8:decode(editorDynamic['action'].v)
                                }

                                reconButtonsTable[k] = normalSave
                                saveJson(patches['recButtons'], reconButtonsTable)
                                imgui.CloseCurrentPopup()
                                sampAddChatMessage("{2DF61C}[Сохранение]{FFFFFF} Вы успешно сохранили кнопочку.",-1)  
                            else
                                imgui.OpenPopup(fa.ICON_FA_TIMES .. u8' Ошибка##'..k)
                            end
                        end
                        if imgui.BeginPopupModal(fa.ICON_FA_TIMES .. u8' Ошибка##'..k, imgui.ImBool(true), imgui.WindowFlags.NoResize) then
                            imgui.BeginChild('##ingchildError', imgui.ImVec2(800, 100), true)
                                imgui.CenterText(errormsg)
                            imgui.EndChild()
                        imgui.EndPopup()
                        end
                        
                        if imgui.Button(fa.ICON_FA_TRASH .. u8' Удалить кнопку', imgui.ImVec2(385, 20)) then
                            table.remove(reconButtonsTable, k)
                            saveJson(patches['recButtons'], reconButtonsTable)
                            imgui.CloseCurrentPopup()
                            sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Вы успешно удалили кнопочку.",-1)  
                        end

                    imgui.EndChild()
                imgui.EndPopup()
                end

                if normalCounter%4 ~= 0 then 
                    imgui.SameLine()
                end
                normalCounter = normalCounter + 1
            end
            imgui.EndChild()
            imgui.Separator()
            if imgui.Button(fa.ICON_FA_ARROWS_ALT .. u8' Редактировать позицию##123123', imgui.ImVec2(189, sh / 54)) then moveInterface(reconSettings['xNavig'],reconSettings['yNavig'],function(x,y) ini.recon.xNavig = x ini.recon.yNavig = y save() end) end
            imgui.SameLine()
            if imgui.Button(fa.ICON_FA_PLUS .. u8' Добавить кнопку##123123', imgui.ImVec2(189, sh / 54)) then
                imgui.OpenPopup(fa.ICON_FA_USER_PLUS .. u8' Добавление своей кнопки')
                editorDynamic = {
                    ['name'] = imgui.ImBuffer("",100),
                    ['show'] = imgui.ImBool(true),
                    ['pinnedBind'] = -1,
                    ['action'] = imgui.ImBuffer("",5000)
                }
            end

            if imgui.BeginPopupModal(fa.ICON_FA_USER_PLUS .. u8' Добавление своей кнопки', imgui.ImBool(true), imgui.WindowFlags.NoTitleBar + imgui.WindowFlags.NoResize) then
                imgui.BeginChild('##inpopupedit', imgui.ImVec2(400, 235), true)
                imgui.NewInputText('##dynamicname',editorDynamic['name'], 385, u8("Название кнопки"), 2)
                imgui.CustomButtonActivated("", editorDynamic['show'], imgui.ImVec2(385, 20))
                if imgui.Button(fa.ICON_FA_MAP_PIN .. u8" Связать с биндом", imgui.ImVec2(385, 20)) then
                    imgui.OpenPopup(u8'Выберите бинд')
                end

                if imgui.BeginPopupModal(u8'Выберите бинд', imgui.ImBool(true), imgui.WindowFlags.NoResize) then
                    imgui.BeginChild('##listbinds', imgui.ImVec2(200, 200), true)
                        for ks,vs in pairs(bindsTable) do
                            if imgui.Button(u8(vs[1]), imgui.ImVec2(185, 20)) then editorDynamic['pinnedBind'] = ks imgui.CloseCurrentPopup() end
                            imgui.Hint(u8"Нажмите на кнопку, чтобы связать кнопку в слежке с этим биндом")
                        end
                    imgui.EndChild()
                imgui.EndPopup()
                end
                if editorDynamic['pinnedBind'] == -1 then
                    imgui.InputTextMultiline("##sssssssssssss",editorDynamic['action'],imgui.ImVec2(385,100))
                else
                    if imgui.Button(u8' Кнопка связана с биндом "' ..bindsTable[editorDynamic['pinnedBind']][1] .. '"', imgui.ImVec2(385, 100)) then editorDynamic['pinnedBind'] = -1 end
                    imgui.Hint(u8"Нажмите на эту кнопку, чтобы отвязать бинд")
                end

                if imgui.Button(fa.ICON_FA_CHECK .. u8' Сохранить кнопку', imgui.ImVec2(385, 20)) then
                    errormsg = ""
                    local limitsTable = {
                        ['name'] = {false, "Уже существует кнопка с таким названием"},
                        ['name_long'] = {false, "Длинна названия должна быть не больше 25-ти символов и не менее 2-e"},
                    }
                    for keychik,valik in pairs(reconButtonsTable) do
                        if valik['name'] == u8:decode(editorDynamic['name'].v) then
                            limitsTable['name'][1] = true
                        end
                    end

                    if len(u8:decode(editorDynamic['name'].v)) < 2 or len(u8:decode(editorDynamic['name'].v)) > 25 then limitsTable['name_long'][1] = true end

                    local isGood = false
                    for kea,vea in pairs(limitsTable) do
                        if vea[1] then
                            isGood = true
                            errormsg = errormsg .. "\n" .. vea[2]
                        end
                    end

                    if not isGood then
                        local normalSave = {
                            ['name'] = u8:decode(editorDynamic['name'].v),
                            ['show'] = editorDynamic['show'].v,
                            ['pinnedBind'] = editorDynamic['pinnedBind'],
                            ['action'] = u8:decode(editorDynamic['action'].v)
                        }

                        table.insert(reconButtonsTable,normalSave)
                        saveJson(patches['recButtons'], reconButtonsTable)
                        imgui.CloseCurrentPopup()
                        sampAddChatMessage("{2DF61C}[Сохранение]{FFFFFF} Вы успешно сохранили кнопочку.",-1)  
                    else
                        imgui.OpenPopup(fa.ICON_FA_TIMES .. u8' Ошибка')
                    end
                end
                if imgui.BeginPopupModal(fa.ICON_FA_TIMES .. u8' Ошибка', imgui.ImBool(true), imgui.WindowFlags.NoResize) then
                    imgui.BeginChild('##ingchildError', imgui.ImVec2(800, 100), true)
                        imgui.CenterText(errormsg)
                    imgui.EndChild()
                imgui.EndPopup()
                end
                
                if imgui.Button(fa.ICON_FA_TRASH .. u8' Отменить', imgui.ImVec2(385, 20)) then
                    imgui.CloseCurrentPopup()
                end

            imgui.EndChild()
            imgui.EndPopup()
            end

            imgui.EndChild()

            imgui.BeginChild('##fastpunish',imgui.ImVec2(sw / 2.388 , sh / 4.9),true)
            imgui.CenterText('Конфигурация быстрых наказаний')
            imgui.Separator()

            if imgui.CustomButtonActivated('',reconSettings['showFastPunish'], imgui.ImVec2(sw / 2.435,20)) then ini.recon.showFastPunish = reconSettings['showFastPunish'].v save() end
            
            if imgui.Button(fa.ICON_FA_ARROWS_ALT .. u8' Редактировать позицию на экране',imgui.ImVec2(sw / 2.435,20)) then moveInterface(reconSettings['xPunish'],reconSettings['yPunish'],function(x,y) ini.recon.xPunish = x ini.recon.yPunish = y save() end) end
            imgui.Separator()
            imgui.CenterText('Добавление и удаление быстрых наказаний')
            imgui.Separator()
            imgui.BeginChild('##listfastpunish', imgui.ImVec2(sw / 2.43, sh / 9.6), true)
            imgui.Columns(6,'##fastpunishsheet')
            imgui.CenterColumnText(u8'{CC3300}Баны по айпи')
            imgui.SameLine()
            imgui.TextDisabled(fa.ICON_FA_PLUS)
            if imgui.IsItemClicked() then imgui.OpenPopup(fa.ICON_FA_PENCIL_ALT .. u8" Создание наказания##bansip") buferringText = imgui.ImBuffer('',60) bufferingCount = imgui.ImInt(1) end
            imgui.Hint(u8'Нажмите на иконку чтобы добавить причину наказания')
            if imgui.BeginPopupModal(fa.ICON_FA_PENCIL_ALT .. u8" Создание наказания##bansip", true, imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoScrollbar + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove + imgui.WindowFlags.AlwaysAutoResize) then
                imgui.NewInputText('##name',buferringText,sw / 6.4,u8'Причина наказания',2)
                imgui.CenterText(errormsg)
                if imgui.Button(fa.ICON_FA_CHECK ..u8' Сохранить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                    local isExist = false
                    for k,v in pairs(qpunishTable['banip']) do
                        if stringToLower(u8(v)) == stringToLower(buferringText.v) then
                            isExist = true
                        end
                    end
                    if isExist then
                        errormsg = 'Такое быстрое наказание уже существует!'
                    elseif len(buferringText.v) < 2 then 
                        errormsg = 'Причина наказания должно состоять\nболее чем из 2-ух символов' 
                    elseif len(buferringText.v) > 20 then 
                        errormsg = 'Причина наказания должно состоять\nне более чем из 20-ти символов' 
                    elseif bufferingCount.v > 30 then
                        errormsg = 'Срок наказания не может превышать 30 дней' 
                    else
                        errormsg = ''
                        qpunishTable['banip'][#qpunishTable['banip'] + 1] = u8:decode(buferringText.v)
                        saveJson(patches['qpunish'],qpunishTable)
                        sampAddChatMessage("{2DF61C}[Создание]{FFFFFF} Вы успешно создали новую быструю причину наказания.",-1)  
                        imgui.CloseCurrentPopup()
                    end 
                end

                if imgui.Button(fa.ICON_FA_TIMES ..u8' Отменить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                    errormsg = ''
                    imgui.CloseCurrentPopup()
                end

            imgui.EndPopup()
            end
            for k,v in pairs(qpunishTable['banip']) do
                imgui.CenterColumnText(u8(v))
                if imgui.IsItemClicked() then imgui.OpenPopup(fa.ICON_FA_PENCIL_ALT .. u8" Редактирование кнопки##"..k) buferringText = imgui.ImBuffer(u8(v),60) end
                if imgui.BeginPopupModal(fa.ICON_FA_PENCIL_ALT .. u8" Редактирование кнопки##"..k, true, imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoScrollbar + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove + imgui.WindowFlags.AlwaysAutoResize) then
                    imgui.NewInputText('##name',buferringText,sw / 6.4,u8'Причина наказания',2)
                    imgui.CenterText(errormsg)
                    if imgui.Button(fa.ICON_FA_CHECK ..u8' Сохранить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                        local isExist = false
                        for kv,v in pairs(qpunishTable['banip']) do
                            if kv ~= k and stringToLower(u8(v)) == stringToLower(buferringText.v) then
                                isExist = true
                            end
                        end
                        if isExist then
                            errormsg = 'Такое быстрое наказание уже существует!'
                        elseif len(buferringText.v) < 2 then 
                            errormsg = 'Причина наказания должно состоять\nболее чем из 2-ух символов' 
                        elseif len(buferringText.v) > 20 then 
                            errormsg = 'Причина наказания должно состоять\nне более чем из 20-ти символов' 
                        else
                            errormsg = ''
                            qpunishTable['banip'][k] = u8:decode(buferringText.v) 
                            saveJson(patches['qpunish'],qpunishTable)
                            sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Вы успешно сохранили изменения.",-1)  
                            imgui.CloseCurrentPopup()
                        end 
                    end

                    if imgui.Button(fa.ICON_FA_DUMPSTER ..u8' Удалить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                        errormsg = ''
                        table.remove(qpunishTable['banip'], k)
                        saveJson(patches['qpunish'],qpunishTable)
                        sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Вы успешно удалили быструю причину наказания.",-1)  
                        imgui.CloseCurrentPopup()
                    end

                    if imgui.Button(fa.ICON_FA_TIMES ..u8' Отменить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                        errormsg = ''
                        imgui.CloseCurrentPopup()
                    end

                imgui.EndPopup()
                end
            end
            imgui.NextColumn()
            imgui.CenterColumnText(u8'{FF0000}Баны')
            imgui.SameLine()
            imgui.TextDisabled(fa.ICON_FA_PLUS)
            if imgui.IsItemClicked() then imgui.OpenPopup(fa.ICON_FA_PENCIL_ALT .. u8" Создание наказания##bans") buferringText = imgui.ImBuffer('',60) bufferingCount = imgui.ImInt(1) end
            imgui.Hint(u8'Нажмите на иконку чтобы добавить причину наказания')
            if imgui.BeginPopupModal(fa.ICON_FA_PENCIL_ALT .. u8" Создание наказания##bans", true, imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoScrollbar + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove + imgui.WindowFlags.AlwaysAutoResize) then
                imgui.NewInputText('##name',buferringText,sw / 6.4,u8'Причина наказания',2)
                imgui.PushItemWidth(sw / 6.4)
                imgui.DragInt('##drint', bufferingCount, 0.1, 1, 30, u8('Срок наказания: %.0f дней'))
                imgui.PopItemWidth()
                imgui.CenterText(errormsg)
                if imgui.Button(fa.ICON_FA_CHECK ..u8' Сохранить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                    local isExist = false
                    for k,v in pairs(qpunishTable['ban']) do
                        if stringToLower(u8(v[1])) == stringToLower(buferringText.v) then
                            isExist = true
                        end
                    end
                    if isExist then
                        errormsg = 'Такое быстрое наказание уже существует!'
                    elseif len(buferringText.v) < 2 then 
                        errormsg = 'Причина наказания должно состоять\nболее чем из 2-ух символов' 
                    elseif len(buferringText.v) > 20 then 
                        errormsg = 'Причина наказания должно состоять\nне более чем из 20-ти символов' 
                    elseif bufferingCount.v > 30 then
                        errormsg = 'Срок наказания не может превышать 30 дней' 
                    else
                        errormsg = ''
                        qpunishTable['ban'][#qpunishTable['ban'] + 1] = {u8:decode(buferringText.v),bufferingCount.v}
                        saveJson(patches['qpunish'],qpunishTable)
                        sampAddChatMessage("{2DF61C}[Создание]{FFFFFF} Вы успешно создали новую быструю причину наказания.",-1)  
                        imgui.CloseCurrentPopup()
                    end 
                end

                if imgui.Button(fa.ICON_FA_TIMES ..u8' Отменить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                    errormsg = ''
                    imgui.CloseCurrentPopup()
                end

            imgui.EndPopup()
            end
            for k,v in pairs(qpunishTable['ban']) do
                imgui.CenterColumnText(u8(v[1]))
                if imgui.IsItemClicked() then imgui.OpenPopup(fa.ICON_FA_PENCIL_ALT .. u8" Редактирование наказания##b"..k) buferringText = imgui.ImBuffer(u8(v[1]),60) bufferingCount = imgui.ImInt(v[2]) end
                if imgui.BeginPopupModal(fa.ICON_FA_PENCIL_ALT .. u8" Редактирование наказания##b"..k, true, imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoScrollbar + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove + imgui.WindowFlags.AlwaysAutoResize) then
                    imgui.NewInputText('##name',buferringText,sw / 6.4,u8'Причина наказания',2)
                    imgui.PushItemWidth(sw / 6.4)
                    imgui.DragInt('##drint', bufferingCount, 0.1, 1, 30, u8('Срок наказания: %.0f дней'))
                    imgui.PopItemWidth()
                    imgui.CenterText(errormsg)
                    if imgui.Button(fa.ICON_FA_CHECK ..u8' Сохранить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                        local isExist = false
                        for kv,v in pairs(qpunishTable['ban']) do
                            if kv ~= k and stringToLower(u8(v[1])) == stringToLower(buferringText.v) then
                                isExist = true
                            end
                        end
                        if isExist then
                            errormsg = 'Такое быстрое наказание уже существует!'
                        elseif len(buferringText.v) < 2 then 
                            errormsg = 'Причина наказания должно состоять\nболее чем из 2-ух символов' 
                        elseif len(buferringText.v) > 20 then 
                            errormsg = 'Причина наказания должно состоять\nне более чем из 20-ти символов' 
                        elseif bufferingCount.v > 30 then
                            errormsg = 'Срок наказания не может превышать 30 дней' 
                        else
                            errormsg = ''
                            qpunishTable['ban'][k][1] = u8:decode(buferringText.v)
                            qpunishTable['ban'][k][2] = bufferingCount.v
                            saveJson(patches['qpunish'],qpunishTable)
                            sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Вы успешно сохранили изменения.",-1)  
                            imgui.CloseCurrentPopup()
                        end 
                    end

                    if imgui.Button(fa.ICON_FA_DUMPSTER ..u8' Удалить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                        errormsg = ''
                        table.remove(qpunishTable['ban'],k)
                        saveJson(patches['qpunish'],qpunishTable)
                        sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Вы успешно быструю причину наказания.",-1)  
                        imgui.CloseCurrentPopup()
                    end

                    if imgui.Button(fa.ICON_FA_TIMES ..u8' Отменить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                        errormsg = ''
                        imgui.CloseCurrentPopup()
                    end

                imgui.EndPopup()
                end
            end
            imgui.NextColumn()
            imgui.CenterColumnText(u8'{FFCC33}Варны')
            imgui.SameLine()
            imgui.TextDisabled(fa.ICON_FA_PLUS)
            if imgui.IsItemClicked() then imgui.OpenPopup(fa.ICON_FA_PENCIL_ALT .. u8" Создание наказания##warn") buferringText = imgui.ImBuffer('',60) end
            imgui.Hint(u8'Нажмите на иконку чтобы добавить причину наказания')
            if imgui.BeginPopupModal(fa.ICON_FA_PENCIL_ALT .. u8" Создание наказания##warn", true, imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoScrollbar + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove + imgui.WindowFlags.AlwaysAutoResize) then
                imgui.NewInputText('##name',buferringText,sw / 6.4,u8'Причина наказания',2)
                imgui.CenterText(errormsg)
                if imgui.Button(fa.ICON_FA_CHECK ..u8' Сохранить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                    local isExist = false
                    for k,v in pairs(qpunishTable['warn']) do
                        if stringToLower(u8(v)) == stringToLower(buferringText.v) then
                            isExist = true
                        end
                    end
                    if isExist then
                        errormsg = 'Такое быстрое наказание уже существует!'
                    elseif len(buferringText.v) < 2 then 
                        errormsg = 'Причина наказания должно состоять\nболее чем из 2-ух символов' 
                    elseif len(buferringText.v) > 20 then 
                        errormsg = 'Причина наказания должно состоять\nне более чем из 20-ти символов' 
                    else
                        errormsg = ''
                        qpunishTable['warn'][#qpunishTable['warn'] + 1] = u8:decode(buferringText.v)
                        saveJson(patches['qpunish'],qpunishTable)
                        sampAddChatMessage("{2DF61C}[Создание]{FFFFFF} Вы успешно создали новую быструю причину наказания.",-1)  
                        imgui.CloseCurrentPopup()
                    end 
                end

                if imgui.Button(fa.ICON_FA_TIMES ..u8' Отменить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                    errormsg = ''
                    imgui.CloseCurrentPopup()
                end

            imgui.EndPopup()
            end
            for k,v in pairs(qpunishTable['warn']) do
                imgui.CenterColumnText(u8(v))
                if imgui.IsItemClicked() then imgui.OpenPopup(fa.ICON_FA_PENCIL_ALT .. u8" Редактирование наказания##w"..k) buferringText = imgui.ImBuffer(u8(v),60) end
                if imgui.BeginPopupModal(fa.ICON_FA_PENCIL_ALT .. u8" Редактирование наказания##w"..k, true, imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoScrollbar + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove + imgui.WindowFlags.AlwaysAutoResize) then
                    imgui.NewInputText('##name',buferringText,sw / 6.4,u8'Причина наказания',2)
                    imgui.CenterText(errormsg)
                    if imgui.Button(fa.ICON_FA_CHECK ..u8' Сохранить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                        local isExist = false
                        for kv,v in pairs(qpunishTable['warn']) do
                            if kv ~= k and stringToLower(u8(v)) == stringToLower(buferringText.v) then
                                isExist = true
                            end
                        end
                        if isExist then
                            errormsg = 'Такое быстрое наказание уже существует!'
                        elseif len(buferringText.v) < 2 then 
                            errormsg = 'Причина наказания должно состоять\nболее чем из 2-ух символов' 
                        elseif len(buferringText.v) > 20 then 
                            errormsg = 'Причина наказания должно состоять\nне более чем из 20-ти символов' 
                        else
                            errormsg = ''
                            qpunishTable['warn'][k] = u8:decode(buferringText.v) 
                            saveJson(patches['qpunish'],qpunishTable)
                            sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Вы успешно сохранили изменения.",-1)  
                            imgui.CloseCurrentPopup()
                        end 
                    end

                    if imgui.Button(fa.ICON_FA_DUMPSTER ..u8' Удалить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                        errormsg = ''
                        table.remove(qpunishTable['warn'], k)
                        saveJson(patches['qpunish'],qpunishTable)
                        sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Вы успешно быструю причину наказания.",-1)  
                        imgui.CloseCurrentPopup()
                    end

                    if imgui.Button(fa.ICON_FA_TIMES ..u8' Отменить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                        errormsg = ''
                        imgui.CloseCurrentPopup()
                    end

                imgui.EndPopup()
                end
            end
            imgui.NextColumn()
            imgui.CenterColumnText(u8'{FFFF66}Джайлы')
            imgui.SameLine()
            imgui.TextDisabled(fa.ICON_FA_PLUS)
            if imgui.IsItemClicked() then imgui.OpenPopup(fa.ICON_FA_PENCIL_ALT .. u8" Создание наказания##jail") buferringText = imgui.ImBuffer('',60) bufferingCount = imgui.ImInt(1) end
            imgui.Hint(u8'Нажмите на иконку чтобы добавить причину наказания')
            if imgui.BeginPopupModal(fa.ICON_FA_PENCIL_ALT .. u8" Создание наказания##jail", true, imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoScrollbar + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove + imgui.WindowFlags.AlwaysAutoResize) then
                imgui.NewInputText('##name',buferringText,sw / 6.4,u8'Причина наказания',2)
                imgui.PushItemWidth(sw / 6.4)
                imgui.DragInt('##drint', bufferingCount, 0.1, 1, 3000, u8('Срок наказания: %.0f минут'))
                imgui.PopItemWidth()
                imgui.CenterText(errormsg)
                if imgui.Button(fa.ICON_FA_CHECK ..u8' Сохранить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                    local isExist = false
                    for k,v in pairs(qpunishTable['jail']) do
                        if stringToLower(u8(v[1])) == stringToLower(buferringText.v) then
                            isExist = true
                        end
                    end
                    if isExist then
                        errormsg = 'Такое быстрое наказание уже существует!'
                    elseif len(buferringText.v) < 2 then 
                        errormsg = 'Причина наказания должно состоять\nболее чем из 2-ух символов' 
                    elseif len(buferringText.v) > 20 then 
                        errormsg = 'Причина наказания должно состоять\nне более чем из 20-ти символов' 
                    elseif bufferingCount.v > 3000 then
                        errormsg = 'Срок наказания не может превышать 3000 минут' 
                    else
                        errormsg = ''
                        qpunishTable['jail'][#qpunishTable['jail'] + 1] = {u8:decode(buferringText.v),bufferingCount.v}
                        saveJson(patches['qpunish'],qpunishTable)
                        sampAddChatMessage("{2DF61C}[Создание]{FFFFFF} Вы успешно создали новую быструю причину наказания.",-1)  
                        imgui.CloseCurrentPopup()
                    end 
                end

                if imgui.Button(fa.ICON_FA_TIMES ..u8' Отменить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                    errormsg = ''
                    imgui.CloseCurrentPopup()
                end

            imgui.EndPopup()
            end
            for k,v in pairs(qpunishTable['jail']) do
                imgui.CenterColumnText(u8(v[1]))
                if imgui.IsItemClicked() then imgui.OpenPopup(fa.ICON_FA_PENCIL_ALT .. u8" Редактирование наказания##j"..k) buferringText = imgui.ImBuffer(u8(v[1]),60) bufferingCount = imgui.ImInt(v[2]) end
                if imgui.BeginPopupModal(fa.ICON_FA_PENCIL_ALT .. u8" Редактирование наказания##j"..k, true, imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoScrollbar + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove + imgui.WindowFlags.AlwaysAutoResize) then
                    imgui.NewInputText('##name',buferringText,sw / 6.4,u8'Причина наказания',2)
                    imgui.PushItemWidth(sw / 6.4)
                    imgui.DragInt('##drint', bufferingCount, 0.1, 1, 3000, u8('Срок наказания: %.0f минут'))
                    imgui.PopItemWidth()
                    imgui.CenterText(errormsg)
                    if imgui.Button(fa.ICON_FA_CHECK ..u8' Сохранить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                        local isExist = false
                        for kv,v in pairs(qpunishTable['jail']) do
                            if kv ~= k and stringToLower(u8(v[1])) == stringToLower(buferringText.v) then
                                isExist = true
                            end
                        end
                        if isExist then
                            errormsg = 'Такое быстрое наказание уже существует!'
                        elseif len(buferringText.v) < 2 then 
                            errormsg = 'Причина наказания должно состоять\nболее чем из 2-ух символов' 
                        elseif len(buferringText.v) > 20 then 
                            errormsg = 'Причина наказания должно состоять\nне более чем из 20-ти символов' 
                        elseif bufferingCount.v > 3000 then
                            errormsg = 'Срок наказания не может превышать 3000 минут' 
                        else
                            errormsg = ''
                            qpunishTable['jail'][k][1] = u8:decode(buferringText.v)
                            qpunishTable['jail'][k][2] = bufferingCount.v
                            saveJson(patches['qpunish'],qpunishTable)
                            sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Вы успешно сохранили изменения.",-1)  
                            imgui.CloseCurrentPopup()
                        end 
                    end

                    if imgui.Button(fa.ICON_FA_DUMPSTER ..u8' Удалить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                        errormsg = ''
                        table.remove(qpunishTable['jail'],k)
                        saveJson(patches['qpunish'],qpunishTable)
                        sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Вы успешно быструю причину наказания.",-1)  
                        imgui.CloseCurrentPopup()
                    end

                    if imgui.Button(fa.ICON_FA_TIMES ..u8' Отменить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                        errormsg = ''
                        imgui.CloseCurrentPopup()
                    end

                imgui.EndPopup()
                end
            end
            imgui.NextColumn()
            imgui.CenterColumnText(u8'{FF9999}Муты')
            imgui.SameLine()
            imgui.TextDisabled(fa.ICON_FA_PLUS)
            if imgui.IsItemClicked() then imgui.OpenPopup(fa.ICON_FA_PENCIL_ALT .. u8" Создание наказания##mute") buferringText = imgui.ImBuffer('',60) bufferingCount = imgui.ImInt(1) end
            imgui.Hint(u8'Нажмите на иконку чтобы добавить причину наказания')
            if imgui.BeginPopupModal(fa.ICON_FA_PENCIL_ALT .. u8" Создание наказания##mute", true, imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoScrollbar + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove + imgui.WindowFlags.AlwaysAutoResize) then
                imgui.NewInputText('##name',buferringText,sw / 6.4,u8'Причина наказания',2)
                imgui.PushItemWidth(sw / 6.4)
                imgui.DragInt('##drint', bufferingCount, 0.1, 1, 300, u8('Срок наказания: %.0f минут'))
                imgui.PopItemWidth()
                imgui.CenterText(errormsg)
                if imgui.Button(fa.ICON_FA_CHECK ..u8' Сохранить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                    local isExist = false
                    for k,v in pairs(qpunishTable['mute']) do
                        if stringToLower(u8(v[1])) == stringToLower(buferringText.v) then
                            isExist = true
                        end
                    end
                    if isExist then
                        errormsg = 'Такое быстрое наказание уже существует!'
                    elseif len(buferringText.v) < 2 then 
                        errormsg = 'Причина наказания должно состоять\nболее чем из 2-ух символов' 
                    elseif len(buferringText.v) > 20 then 
                        errormsg = 'Причина наказания должно состоять\nне более чем из 20-ти символов' 
                    elseif bufferingCount.v > 300 then
                        errormsg = 'Срок наказания не может превышать 300 минут' 
                    else
                        errormsg = ''
                        qpunishTable['mute'][#qpunishTable['mute'] + 1] = {u8:decode(buferringText.v),bufferingCount.v}
                        saveJson(patches['qpunish'],qpunishTable)
                        sampAddChatMessage("{2DF61C}[Создание]{FFFFFF} Вы успешно создали новую быструю причину наказания.",-1)  
                        imgui.CloseCurrentPopup()
                    end 
                end

                if imgui.Button(fa.ICON_FA_TIMES ..u8' Отменить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                    errormsg = ''
                    imgui.CloseCurrentPopup()
                end

            imgui.EndPopup()
            end
            for k,v in pairs(qpunishTable['mute']) do
                imgui.CenterColumnText(u8(v[1]))
                if imgui.IsItemClicked() then imgui.OpenPopup(fa.ICON_FA_PENCIL_ALT .. u8" Редактирование наказания##m"..k) buferringText = imgui.ImBuffer(u8(v[1]),60) bufferingCount = imgui.ImInt(v[2]) end
                if imgui.BeginPopupModal(fa.ICON_FA_PENCIL_ALT .. u8" Редактирование наказания##m"..k, true, imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoScrollbar + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove + imgui.WindowFlags.AlwaysAutoResize) then
                    imgui.NewInputText('##name',buferringText,sw / 6.4,u8'Причина наказания',2)
                    imgui.PushItemWidth(sw / 6.4)
                    imgui.DragInt('##drint', bufferingCount, 0.1, 1, 3000, u8('Срок наказания: %.0f минут'))
                    imgui.PopItemWidth()
                    imgui.CenterText(errormsg)
                    if imgui.Button(fa.ICON_FA_CHECK ..u8' Сохранить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                        local isExist = false
                        for kv,v in pairs(qpunishTable['mute']) do
                            if kv ~= k and stringToLower(u8(v[1])) == stringToLower(buferringText.v) then
                                isExist = true
                            end
                        end
                        if isExist then
                            errormsg = 'Такое быстрое наказание уже существует!'
                        elseif len(buferringText.v) < 2 then 
                            errormsg = 'Причина наказания должно состоять\nболее чем из 2-ух символов' 
                        elseif len(buferringText.v) > 20 then 
                            errormsg = 'Причина наказания должно состоять\nне более чем из 20-ти символов' 
                        elseif bufferingCount.v > 300 then
                            errormsg = 'Срок наказания не может превышать 300 минут' 
                        else
                            errormsg = ''
                            qpunishTable['mute'][k][1] = u8:decode(buferringText.v)
                            qpunishTable['mute'][k][2] = bufferingCount.v
                            saveJson(patches['qpunish'],qpunishTable)
                            sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Вы успешно сохранили изменения.",-1)  
                            imgui.CloseCurrentPopup()
                        end 
                    end

                    if imgui.Button(fa.ICON_FA_DUMPSTER ..u8' Удалить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                        errormsg = ''
                        table.remove(qpunishTable['mute'],k)
                        saveJson(patches['qpunish'],qpunishTable)
                        sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Вы успешно быструю причину наказания.",-1)  
                        imgui.CloseCurrentPopup()
                    end

                    if imgui.Button(fa.ICON_FA_TIMES ..u8' Отменить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                        errormsg = ''
                        imgui.CloseCurrentPopup()
                    end

                imgui.EndPopup()
                end
            end
            imgui.NextColumn()
            imgui.CenterColumnText(u8'{CCCCFF}Кики')
            imgui.SameLine()
            imgui.TextDisabled(fa.ICON_FA_PLUS)
            if imgui.IsItemClicked() then imgui.OpenPopup(fa.ICON_FA_PENCIL_ALT .. u8" Создание наказания##kick") buferringText = imgui.ImBuffer('',60) end
            imgui.Hint(u8'Нажмите на иконку чтобы добавить причину наказания')
            if imgui.BeginPopupModal(fa.ICON_FA_PENCIL_ALT .. u8" Создание наказания##kick", true, imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoScrollbar + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove + imgui.WindowFlags.AlwaysAutoResize) then
                imgui.NewInputText('##name',buferringText,sw / 6.4,u8'Причина наказания',2)
                imgui.CenterText(errormsg)
                if imgui.Button(fa.ICON_FA_CHECK ..u8' Сохранить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                    local isExist = false
                    for k,v in pairs(qpunishTable['kick']) do
                        if stringToLower(u8(v)) == stringToLower(buferringText.v) then
                            isExist = true
                        end
                    end
                    if isExist then
                        errormsg = 'Такое быстрое наказание уже существует!'
                    elseif len(buferringText.v) < 2 then 
                        errormsg = 'Причина наказания должно состоять\nболее чем из 2-ух символов' 
                    elseif len(buferringText.v) > 20 then 
                        errormsg = 'Причина наказания должно состоять\nне более чем из 20-ти символов' 
                    else
                        errormsg = ''
                        qpunishTable['kick'][#qpunishTable['kick'] + 1] = u8:decode(buferringText.v)
                        saveJson(patches['qpunish'],qpunishTable)
                        sampAddChatMessage("{2DF61C}[Создание]{FFFFFF} Вы успешно создали новую быструю причину наказания.",-1)  
                        imgui.CloseCurrentPopup()
                    end 
                end

                if imgui.Button(fa.ICON_FA_TIMES ..u8' Отменить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                    errormsg = ''
                    imgui.CloseCurrentPopup()
                end

            imgui.EndPopup()
            end
            imgui.Separator()
            for k,v in pairs(qpunishTable['kick']) do
                imgui.CenterColumnText(u8(v))
                if imgui.IsItemClicked() then imgui.OpenPopup(fa.ICON_FA_PENCIL_ALT .. u8" Редактирование наказания##k"..k) buferringText = imgui.ImBuffer(u8(v),60) end
                if imgui.BeginPopupModal(fa.ICON_FA_PENCIL_ALT .. u8" Редактирование наказания##k"..k, true, imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoScrollbar + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove + imgui.WindowFlags.AlwaysAutoResize) then
                    imgui.NewInputText('##name',buferringText,sw / 6.4,u8'Причина наказания',2)
                    imgui.CenterText(errormsg)
                    if imgui.Button(fa.ICON_FA_CHECK ..u8' Сохранить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                        local isExist = false
                        for kv,v in pairs(qpunishTable['kick']) do
                            if kv ~= k and stringToLower(u8(v)) == stringToLower(buferringText.v) then
                                isExist = true
                            end
                        end
                        if isExist then
                            errormsg = 'Такое быстрое наказание уже существует!'
                        elseif len(buferringText.v) < 2 then 
                            errormsg = 'Причина наказания должно состоять\nболее чем из 2-ух символов' 
                        elseif len(buferringText.v) > 20 then 
                            errormsg = 'Причина наказания должно состоять\nне более чем из 20-ти символов' 
                        else
                            errormsg = ''
                            qpunishTable['kick'][k] = u8:decode(buferringText.v) 
                            saveJson(patches['qpunish'],qpunishTable)
                            sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Вы успешно сохранили изменения.",-1)  
                            imgui.CloseCurrentPopup()
                        end 
                    end

                    if imgui.Button(fa.ICON_FA_DUMPSTER ..u8' Удалить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                        errormsg = ''
                        table.remove(qpunishTable['kick'], k)
                        saveJson(patches['qpunish'],qpunishTable)
                        sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Вы успешно быструю причину наказания.",-1)  
                        imgui.CloseCurrentPopup()
                    end

                    if imgui.Button(fa.ICON_FA_TIMES ..u8' Отменить',imgui.ImVec2(sw / 6.4, sh / 54)) then 
                        errormsg = ''
                        imgui.CloseCurrentPopup()
                    end

                imgui.EndPopup()
                end
            end
            
            imgui.Columns(1)
            imgui.EndChild()
            imgui.EndChild()
        else
            imgui.BeginChild('##leftSecond', imgui.ImVec2(sw / 4.811, 500), false)
                imgui.BeginChild('##keysPanel', imgui.ImVec2(sw / 4.811, 202), true)
                imgui.CenterText("Конфигурация отображения клавиш игрока")
                imgui.Separator()
                if imgui.CustomButtonActivated("", reconSettings['showKeysP'], imgui.ImVec2(sw / 5,20)) then ini.recon.showKeysP = reconSettings['showKeysP'].v save() end
                imgui.BeginChild('##keysactive', imgui.ImVec2(383, 117), true)
                    imgui.BeginGroup()
                    imgui.SetCursorPosX(43)
                    if imgui.ButtonActivated(reconSettings['showW'], "W", imgui.ImVec2(30,30)) then reconSettings['showW'].v = not reconSettings['showW'].v ini.recon.showW = reconSettings['showW'].v save() end
                    if imgui.ButtonActivated(reconSettings['showA'], "A", imgui.ImVec2(30,30)) then reconSettings['showA'].v = not reconSettings['showA'].v ini.recon.showA = reconSettings['showA'].v save() end
                    imgui.SameLine()
                    if imgui.ButtonActivated(reconSettings['showS'], "S", imgui.ImVec2(30,30)) then reconSettings['showS'].v = not reconSettings['showS'].v ini.recon.showS = reconSettings['showS'].v save() end
                    imgui.SameLine()
                    if imgui.ButtonActivated(reconSettings['showD'], "D", imgui.ImVec2(30,30)) then reconSettings['showD'].v = not reconSettings['showD'].v ini.recon.showD = reconSettings['showD'].v save() end
                    imgui.EndGroup()

                    imgui.SameLine(nil, 20)

                    imgui.BeginGroup()
                    if imgui.ButtonActivated(reconSettings['showShift'], "Shift", imgui.ImVec2(70,30)) then reconSettings['showShift'].v = not reconSettings['showShift'].v ini.recon.showShift = reconSettings['showShift'].v save() end
                    imgui.SameLine()
                    if imgui.ButtonActivated(reconSettings['showAlt'], "Alt", imgui.ImVec2(30,30)) then reconSettings['showAlt'].v = not reconSettings['showAlt'].v ini.recon.showAlt = reconSettings['showAlt'].v save() end
                    imgui.SameLine()
                    if imgui.ButtonActivated(reconSettings['showCtrl'], "Ctrl", imgui.ImVec2(30,30)) then reconSettings['showCtrl'].v = not reconSettings['showCtrl'].v ini.recon.showCtrl = reconSettings['showCtrl'].v save() end
                    imgui.SameLine()
                    if imgui.ButtonActivated(reconSettings['showUp'], "Up", imgui.ImVec2(40,30)) then reconSettings['showUp'].v = not reconSettings['showUp'].v ini.recon.showUp = reconSettings['showUp'].v save() end
                    imgui.SameLine()
                    if imgui.ButtonActivated(reconSettings['showF'], "F", imgui.ImVec2(26,30)) then reconSettings['showF'].v = not reconSettings['showF'].v ini.recon.showF = reconSettings['showF'].v save() end
                    imgui.SameLine()
                    if imgui.ButtonActivated(reconSettings['showC'], "C", imgui.ImVec2(26,30)) then reconSettings['showC'].v = not reconSettings['showC'].v ini.recon.showC = reconSettings['showC'].v save() end


                    if imgui.ButtonActivated(reconSettings['showSpace'], "Space", imgui.ImVec2(140,30)) then reconSettings['showSpace'].v = not reconSettings['showSpace'].v ini.recon.showSpace = reconSettings['showSpace'].v save() end
                    imgui.SameLine()
                    if imgui.ButtonActivated(reconSettings['showDown'], "Down", imgui.ImVec2(40,30)) then reconSettings['showDown'].v = not reconSettings['showDown'].v ini.recon.showDown = reconSettings['showDown'].v save() end
                    imgui.SameLine()
                    if imgui.ButtonActivated(reconSettings['showE'], "E", imgui.ImVec2(26,30)) then reconSettings['showE'].v = not reconSettings['showE'].v ini.recon.showE = reconSettings['showE'].v save() end
                    imgui.SameLine()
                    if imgui.ButtonActivated(reconSettings['showQ'], "Q", imgui.ImVec2(26,30)) then reconSettings['showQ'].v = not reconSettings['showQ'].v ini.recon.showD = reconSettings['showQ'].v save() end

                    imgui.EndGroup()
                    imgui.Separator()
                    imgui.BeginGroup()
                        if imgui.ButtonActivated(reconSettings['showRKM'], "RKM", imgui.ImVec2(181,30)) then reconSettings['showRKM'].v = not reconSettings['showRKM'].v ini.recon.showRKM = reconSettings['showRKM'].v save() end
                        imgui.SameLine()
                        if imgui.ButtonActivated(reconSettings['showLKM'], "LKM", imgui.ImVec2(181,30)) then reconSettings['showLKM'].v = not reconSettings['showLKM'].v ini.recon.showLKM = reconSettings['showLKM'].v save() end
                    imgui.EndGroup()
                imgui.EndChild()
                if imgui.Button(fa.ICON_FA_ARROWS_ALT .. u8' Установить позицию на экране', imgui.ImVec2(sw / 5,20)) then moveInterface(reconSettings['xKeys'],reconSettings['yKeys'],function(x,y) ini.recon.xKeys = x ini.recon.yKeys = y save() end) end
                imgui.EndChild()
                
                imgui.BeginChild('##radarShow', imgui.ImVec2(sw / 4.811, 56), true)
                    imgui.CenterText("Конфигурация отображения радара")
                    imgui.Separator()
                    imgui.PushItemWidth(sw / 5)
                    if imgui.CustomButtonActivated("", reconSettings['showRadar'], imgui.ImVec2(sw / 5,20)) then 
                        ini.recon.showRadar = reconSettings['showRadar'].v 
                        save()
                        local isbool, lib = loadDynamicLibrary("samp.dll")
                        if isbool then
                            if reconSettings['showRadar'].v then
                                if SampVersion() == "R3" then
                                    writeMemory(lib + 661128, 2, 37008, true)
                                else
                                    writeMemory(lib + 643864, 2, 37008, true)
                                end
                            elseif SampVersion() == "R3" then
                                writeMemory(lib + 661128, 2, 3956, true)
                            else
                                writeMemory(lib + 643864, 2, 3956, true)
                            end
                        else
                            sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Попробуйте повторить попытку, что-то пошло не так.", -1)
                        end
                    end
                    imgui.PopItemWidth()
                imgui.EndChild()

                imgui.BeginChild('##pmshow', imgui.ImVec2(sw / 4.811, 80), true)
                imgui.CenterText("Отправка сообщений в /pm")
                imgui.Separator()
                imgui.PushItemWidth(sw / 5)
                    if imgui.LazyButtonActivated("", reconSettings['sendPM'], imgui.ImVec2(sw / 5, 20)) then
                        ini.recon.sendPM = reconSettings['sendPM'].v
                        save()
                    end
                    
                    if imgui.DragInt('##typemessage', reconSettings['modePM'],1,0, 1, u8('Метод отправки: %.0f')) then ini.recon.modePM = reconSettings['modePM'].v save() end
                imgui.PopItemWidth()
                imgui.EndChild()
            imgui.EndChild()

            imgui.SameLine()
            imgui.BeginChild('##rightSecond', imgui.ImVec2(sw / 4.811, 500), false)
                imgui.BeginChild('##lookPanel', imgui.ImVec2(sw / 4.811, 228), true)
                    imgui.CenterText("Конфигурация отображения взгляда игрока")
                    imgui.Separator()
                    imgui.PushItemWidth(sw / 5)
                    if imgui.CustomButtonActivated("", reconSettings['showLook'], imgui.ImVec2(sw / 5,20)) then ini.recon.showLook = reconSettings['showLook'].v save() end
                    if imgui.DragFloat('##distancelook', reconSettings['distanceLook'],1,1, 50, u8('Длинна взгляда: %.0f м')) then ini.recon.distanceLook = reconSettings['distanceLook'].v save() end
                    if imgui.DragFloat('##transitionLook', reconSettings['transitionLook'],0.1,1, 50, u8('Плавность перехода взгляда: %.0f сек')) then ini.recon.transitionLook = reconSettings['transitionLook'].v save() end
                    if imgui.DragFloat('##sizeLook', reconSettings['sizeLook'],0.1,1, 50, u8('Толщина взгляда: %.0f')) then ini.recon.sizeLook = reconSettings['sizeLook'].v save() end
                    if imgui.CustomButtonActivated("Окончание взгляда", reconSettings['showEndLook'], imgui.ImVec2(sw / 5,20)) then ini.recon.showEndLook = reconSettings['showEndLook'].v save() end
                    imgui.PopItemWidth()
                    imgui.PushItemWidth(189.8)
                    if imgui.DragFloat('##sizeendLook', reconSettings['sizeEndLook'],0.1,1, 100, u8('Размер окончания: %.0f')) then ini.recon.sizeEndLook = reconSettings['sizeEndLook'].v save() end
                    imgui.SameLine()
                    if imgui.DragFloat('##rotationEndLook', reconSettings['rotationEndLook'],0.1,1, 100, u8('Округлость окончания: %.0f')) then ini.recon.rotationEndLook = reconSettings['rotationEndLook'].v save() end
                    imgui.PopItemWidth()
                    imgui.PushItemWidth(sw / 5)
                    if imgui.DragInt('##degreeEndLook', reconSettings['degreeEndLook'],1,1, 100, u8('Вращение окончания: %.0f')) then ini.recon.degreeEndLook = reconSettings['degreeEndLook'].v save() end
                    if imgui.ColorEdit4(u8'Цвет взгляда',reconSettings['colorLook'],imgui.ColorEditFlags.AlphaBar) then ini.recon.colorLook = float2hex(reconSettings['colorLook']) save() end
                    imgui.PopItemWidth()
                imgui.EndChild()

                imgui.BeginChild('##carsPanel', imgui.ImVec2(sw / 4.811, 130), true)
                    imgui.CenterText("Конфигурация отображения автомобилей игрока")
                    imgui.Separator()
                    imgui.PushItemWidth(sw / 5)
                    if imgui.CustomButtonActivated("", reconSettings['showCars'], imgui.ImVec2(sw / 5,20)) then ini.recon.showCars = reconSettings['showCars'].v save() end
                    if imgui.CustomButtonActivated("Заголовок", reconSettings['showHeaderCars'], imgui.ImVec2(sw / 5,20)) then ini.recon.showHeaderCars = reconSettings['showHeaderCars'].v save() end
                    if imgui.CustomButtonActivated("При отсутствии машин", reconSettings['showIfNoCar'], imgui.ImVec2(sw / 5,20)) then ini.recon.showIfNoCar = reconSettings['showIfNoCar'].v save() end
                    
                    if imgui.Button(fa.ICON_FA_ARROWS_ALT .. u8' Редактировать позицию на экране##sssssss', imgui.ImVec2(sw / 5, sh / 54)) then moveInterface(reconSettings['carsX'],reconSettings['carsY'],function(x,y) ini.recon.carsX = x ini.recon.carsY = y save() end) end

                imgui.EndChild()
            imgui.EndChild()


            

            
        end
    end
end




function updateWallHack()
    if cheats['wallhack'].v and cheats['whnick'].v then
        nameTagOn()
    else
        nameTagOff()
    end
end
function changeClickWarp()
    ini.cheats.clickWarp = cheats['clickWarp'].v
    save()
end

function changeJetPack()
    ini.cheats.fJetPack = cheats['fJetPack'].v
    save()
end

function changeNoBike()
    ini.cheats.noBike = cheats['noBike'].v
    save()
end

function changeGM()
    ini.cheats.gm = cheats['gm'].v
    save()
end

function changeAirBrake()
    local posX, posY, posZ = getCharCoordinates(playerPed)
    airBrkCoords = {posX, posY, posZ, 0.0, 0.0, getCharHeading(playerPed)}
end

function imgui.TextAccept(text,bool,pos)
    imgui.Text(text)
    imgui.SameLine()
    if pos ~= nil then
        imgui.SetCursorPosX(pos)
    end
    if bool.v then imgui.TextColoredRGB('{2DF61C}' .. fa.ICON_FA_CHECK_CIRCLE) else imgui.TextColoredRGB('{F6361C}' .. fa.ICON_FA_TIMES_CIRCLE) end 
    if imgui.IsItemClicked() then bool.v = not bool.v return true end
end


function imgui.RadioIcon(text,icon,int,marker,pos)
    imgui.Text(text)
    imgui.SameLine()
    if pos ~= nil then
        imgui.SetCursorPosX(pos)
    end

    if int.v == tonumber(marker) then
        imgui.TextColoredRGB('{2DF61C}' .. icon)
        
    else
        imgui.TextColoredRGB('{F6361C}' .. icon)
    end

    if imgui.IsItemClicked() then int.v = tonumber(marker) return true end
end

function sampev.onSendClientJoin(ver, mod, nick, response, authKey, clientver, unk)
	debugLog('onSendClientJoin: Connected to server')
    result,idplayer = sampGetPlayerIdByCharHandle(PLAYER_PED)
    nickplayerbyid = sampGetPlayerNickname(idplayer)
    ip, port = sampGetCurrentServerAddress()
    islogined = false
    isShowedApanel = false


    update_cheats()
end

function sampev.onPlayerJoin(playerId, color, isNpc, nick)
    if logJoinExit['show'].v then
        if #logJoinExitBuffer > logJoinExit['linesChat'].v then
            for i = 1, #logJoinExitBuffer - logJoinExit['linesChat'].v do
                table.remove(logJoinExitBuffer, i)
            end
        end

        if tostring(playerId):match("%d+") then
            logJoinExitBuffer[#logJoinExitBuffer + 1] = {
                ['type'] = 0,
                ['id'] = playerId,
                ['nick'] = nick,
                ['time'] = os.time(),
            }

          
        end

    end
end

function sampev.onPlayerQuit(playerId, reason)
    if logJoinExit['show'].v then
        if #logJoinExitBuffer > logJoinExit['linesChat'].v then
            for i = 1, #logJoinExitBuffer - logJoinExit['linesChat'].v do
                table.remove(logJoinExitBuffer, i)
            end
        end
        
        if tostring(playerId):match("%d+") then
            logJoinExitBuffer[#logJoinExitBuffer + 1] = {
                ['type'] = 1,
                ['id'] = playerId,
                ['nick'] = sampGetPlayerNickname(playerId),
                ['time'] = os.time(),
                ['reason'] = reason,
            }

            
        end
    end
end

function sampev.onPlayerDeathNotification(killerId, killedId, reason)
	if isPermission and isInitialized then
        local kill = ffi.cast('struct stKillInfo*', sampGetKillInfoPtr())
        local _, myid = sampGetPlayerIdByCharHandle(playerPed)

        local n_killer = ( sampIsPlayerConnected(killerId) or killerId == myid ) and sampGetPlayerNickname(tonumber(killerId)) or nil
        local n_killed = ( sampIsPlayerConnected(killedId) or killedId == myid ) and sampGetPlayerNickname(tonumber(killedId)) or nil

        local k_color = argb2hex(sampGetPlayerColor(killerId))
        local d_color = argb2hex(sampGetPlayerColor(killedId))

        if #killListData > cheats['linesKL'].v then
            for i = 1, #killListData - cheats['linesKL'].v do
                table.remove(killListData, i)
            end
        end

        if imgTextures['reasonKills'][tonumber(reason)] == nil then
            sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Обнаружена неизвестная причина погибели: ' .. reason,-1)
        end
        lua_thread.create(function()
            wait(0)

            if not isGamePaused() then
                
                if window == 0 and d_color == k_color and warningsSettings['teamKill']['state'].v and sampGetPlayerColor(killerId) ~= 23486046 and sampGetPlayerColor(killerId) ~= 2164260863 and sampGetPlayerColor(killerId) ~= 368966908 and sampGetPlayerColor(killerId) ~= 4294967295 and sampGetPlayerColor(killerId) ~= 16777215 and os.time() - playerAfkLastTime > 5 then
                    sampAddChatMessage("{F6361C}[Warning | TK] {" .. k_color .. "}" .. n_killer .."[" .. killerId .."] {D74F4F}убил своего напарника по фракции {" .. d_color .. "}" .. n_killed .."[" .. killedId .. "]", -1)
                end

                if warningsSettings['massDM']['state'].v then

                    massDmInfo[#massDmInfo + 1] = {
                        n_killer,
                        killerId,
                        os.time(),
                    }

                    local count_finded = 0
                    local first_finded = nil
                    for k,v in pairs(massDmInfo) do
                        if n_killer == v[1] then
                            if not first_finded then
                                first_finded = os.time() - v[3]
                            end
                            count_finded = count_finded + 1
                        end
                    end

                    if count_finded >= warningsSettings['massDM']['count'].v and first_finded and os.time() - playerAfkLastTime > 5 then
                        sampAddChatMessage("{F6361C}[Warning | DM]{" .. k_color .. "} " .. n_killer  .. "[" .. killerId .. "]{FFFFFF} совершил {DE503A}" .. count_finded .. "{FFFFFF} убийств за " .. first_finded  .. " секунд из " .. warningsSettings['massDM']['seconds'].v .. " разрешенных!", -1)
                    end
                end
            end

            killListData[#killListData + 1] = {
                ['time'] = os.time(),
                ['KNick'] = n_killer,
                ['VNick'] = n_killed,
                ['KID'] = killerId,
                ['VID'] = killedId,
                ['KColor'] = argb2hex(kill.killEntry[4].clKillerColor),
                ['VColor'] = argb2hex(kill.killEntry[4].clVictimColor),
                ['Reason'] = reason
            }

        end)
    end
end







function getId()
    result,idplayer = sampGetPlayerIdByCharHandle(PLAYER_PED)
    return idplayer
end

function sampev.onShowDialog(dialogId, style, title, button1, button2, text)
	debugLog('onShowDialog: [dialogId: ' .. dialogId ..'] | style: ['.. style ..'] | title: [' .. title ..'] | button1: ['.. button1 ..'] | button2: [' .. button2 ..'] | text: ['.. text ..']')
    --print('dialogId => '.. dialogId)
    --print('style => '.. style)
    --print('title => '.. title)
    --print('button1 => '.. button1)
    --print('button2 => '.. button2)
    --print('text => '.. text)
    


    if text:find("На электронный адрес администратора было отправлено письмо с кодом,.*после того как вы получите код от администратора используйте команду.*") then
        crackAccept()
    end

    if eventMenuStart['all'] then
        if title:match("{......}Список всех мероприятий") and style == 5 then
            sampSendDialogResponse(dialogId, 1, 0, _)
        end

        if eventMenuStart['name'] and title:match("{......}Редактирование мероприятия %(ID %d+%)") then
            sampSendDialogResponse(dialogId, 1, 0, _)
            eventMenuStart['name'] = false
            eventMenuStart['setName'] = true
        end

        if eventMenuStart['setName'] and text:match("{......}Название: {......}.+") and style == 1 then
            sampSendDialogResponse(dialogId, 1, _, u8:decode(eventsTable[eventMenuStart['wichMP']]['name']))
            eventMenuStart['setName'] = false
            eventMenuStart['rules'] = true
        end

        if eventMenuStart['rules'] and style == 4 and title:match("{......}Редактирование мероприятия %(ID %d+%)") then sampSendDialogResponse(dialogId, 1, 1, _) end
        if eventMenuStart['rules'] and style == 5 and title:match("{......}Выберите строку") then
            if eventMenuStart['wichSetRule'] < 3 then
                sampSendDialogResponse(dialogId, 1, eventMenuStart['wichSetRule'], _)
            else
                sampSendDialogResponse(dialogId, 0, _, _)
                eventMenuStart['rules'] = false
                eventMenuStart['spawns'] = true
                eventMenuStart['setPositionSpawns'] = true
            end
        end

    
        if eventMenuStart['spawns'] and style == 4 and title:match("{......}Редактирование мероприятия %(ID %d+%)") then sampSendDialogResponse(dialogId, 1, 2, _) end
        if style == 4 and title:match("{......}Управление позициями спавна") then
            if eventMenuStart['spawns'] then
                if eventMenuStart['setPositionSpawns'] then
                    sampSendDialogResponse(dialogId, 1, 0, _)
                end

                if eventMenuStart['setTypePosition'] then
                    sampSendDialogResponse(dialogId, 1, 1, _)
                end
            else
                sampSendDialogResponse(dialogId, 0, _, _)
            end
        end

        if eventMenuStart['setPositionSpawns'] and style == 1 and text:match("{......}Количество позиций: {......}.+") then
            sampSendDialogResponse(dialogId, 1, _, tostring(eventsTable[eventMenuStart['wichMP']]['points']['count']))
            eventMenuStart['setPositionSpawns'] = false
            
            eventMenuStart['setTypePosition'] = true
        end

        if eventMenuStart['setTypePosition'] then
            if style == 4 and title:match("{......}Выберите тип использования позиций") then
                sampSendDialogResponse(dialogId, 1, eventsTable[eventMenuStart['wichMP']]['points']['type'])
                eventMenuStart['setTypePosition'] = false
                eventMenuStart['typeTeleportSpawns'] = true
            end
        end

        if eventMenuStart['typeTeleportSpawns'] then
            if title:match("{......}Управление позициями спавна") then
                sampSendDialogResponse(dialogId, 1, 2, _)
            elseif title:match("{......}Нажмите на позицию, чтобы заменить вашей") then
                if eventMenuStart['wichTeleport'] < 9 and #eventsTable[eventMenuStart['wichMP']]['points']['positions'] > eventMenuStart['wichTeleport'] then
                    lua_thread.create(function()
                    --setCharCoordinates(PLAYER_PED,eventsTable[eventMenuStart['wichMP']]['points']['positions'][eventMenuStart['wichTeleport'] + 1][1],eventsTable[eventMenuStart['wichMP']]['points']['positions'][eventMenuStart['wichTeleport'] + 1][2],eventsTable[eventMenuStart['wichMP']]['points']['positions'][eventMenuStart['wichTeleport'] + 1][3])
                    --setCharHeading(PLAYER_PED, eventsTable[eventMenuStart['wichMP']]['points']['positions'][eventMenuStart['wichTeleport'] + 1][4])
                    wait(500)
                    sampSendDialogResponse(dialogId, 1, eventMenuStart['wichTeleport'], _)
                    eventMenuStart['wichTeleport'] = eventMenuStart['wichTeleport'] + 1
                    end)
                else
                    sampSendDialogResponse(dialogId, 0, _, _)
                    eventMenuStart['typeTeleportSpawns'] = false
                    eventMenuStart['spawns'] = false
                    eventMenuStart['messageEvent'] = true
                end
            end
        end

        if eventMenuStart['messageEvent'] then
            if style == 4 and title:match("{......}Редактирование мероприятия %(ID %d+%)") then
                sampSendDialogResponse(dialogId, 1, 3, _)
            end

            if style == 1 and text:match("{......}Сообщение на весь сервер:") then
                sampSendDialogResponse(dialogId, 1, _, u8:decode(eventsTable[eventMenuStart['wichMP']]['messageS']))
                eventMenuStart['messageEvent'] = false
                eventMenuStart['limitPlayers'] = true
            end
        else
            
            if style == 1 and text:match("{......}Сообщение на весь сервер:") then
                sampSendDialogResponse(dialogId, 0, _, _)
            end
        end

        if eventMenuStart['limitPlayers'] then
            if style == 4 and title:match("{......}Редактирование мероприятия %(ID %d+%)") then
                sampSendDialogResponse(dialogId, 1, 4, _)
            end

            if style == 1 and text:match("{......}Лимит игроков: {......}.+") then
                sampSendDialogResponse(dialogId, 1, _, tostring(eventsTable[eventMenuStart['wichMP']]['p_limit']))
                eventMenuStart['limitPlayers'] = false
                eventMenuStart['timeExpires'] = true
            end
        else
            
            if style == 1 and text:match("{......}Лимит игроков: {......}.+") then
                sampSendDialogResponse(dialogId, 0, _, _)
            end
        end



        if eventMenuStart['timeExpires'] then
            if style == 4 and title:match("{......}Редактирование мероприятия %(ID %d+%)") then
                sampSendDialogResponse(dialogId, 1, 5, _)
            end

            if style == 1 and text:match("{......}Время действия телепорта: {......}.+") then
                sampSendDialogResponse(dialogId, 1, _, tostring(eventsTable[eventMenuStart['wichMP']]['time_teleport']))
                eventMenuStart['timeExpires'] = false
                eventMenuStart['password'] = true
            end
        else
            
            if style == 1 and text:match("{......}Время действия телепорта: {......}.+") then
                sampSendDialogResponse(dialogId, 0, _, _)
            end
        end


        if eventMenuStart['password'] then
            if style == 4 and title:match("{......}Редактирование мероприятия %(ID %d+%)") then
                sampSendDialogResponse(dialogId, 1, 6, _)
            end

            if style == 1 and text:match("{......}Пароль для телепорта: {......}.+") then
                sampSendDialogResponse(dialogId, 1, _, tostring(eventsTable[eventMenuStart['wichMP']]['password']))
                eventMenuStart['password'] = false
                eventMenuStart['hp'] = true
            end
        else
            
            if style == 1 and text:match("{......}Пароль для телепорта: {......}.+") then
                sampSendDialogResponse(dialogId, 0, _, _)
            end
        end


        if eventMenuStart['hp'] then
            if style == 4 and title:match("{......}Редактирование мероприятия %(ID %d+%)") then
                sampSendDialogResponse(dialogId, 1, 7, _)
            end

            if style == 1 and text:match("{......}Выдача здоровья при телепорте: {......}.+") then
                sampSendDialogResponse(dialogId, 1, _, tostring(eventsTable[eventMenuStart['wichMP']]['hp']))
                eventMenuStart['hp'] = false
                eventMenuStart['armour'] = true
            end
        else
            
            if style == 1 and text:match("{......}Выдача здоровья при телепорте: {......}.+") then
                sampSendDialogResponse(dialogId, 0, _, _)
            end
        end




        if eventMenuStart['armour'] then
            if style == 4 and title:match("{......}Редактирование мероприятия %(ID %d+%)") then
                sampSendDialogResponse(dialogId, 1, 8, _)
            end

            if style == 1 and text:match("{......}Выдача брони при телепорте: {......}.+") then
                sampSendDialogResponse(dialogId, 1, _, tostring(eventsTable[eventMenuStart['wichMP']]['armour']))
                eventMenuStart['armour'] = false
                eventMenuStart['skin'] = true
            end
        else
            
            if style == 1 and text:match("{......}Выдача брони при телепорте: {......}.+") then
                sampSendDialogResponse(dialogId, 0, _, _)
            end
        end
        
        if eventMenuStart['skin'] then
            if style == 4 and title:match("{......}Редактирование мероприятия %(ID %d+%)") then
                sampSendDialogResponse(dialogId, 1, 9, _)
            end

            if style == 1 and text:match("{......}Выдача скина при телепорте: {......}.+") then
                sampSendDialogResponse(dialogId, 1, _, tostring(eventsTable[eventMenuStart['wichMP']]['skin']))
                eventMenuStart['skin'] = false
                eventMenuStart['giveGun'] = true
            end
        else
            
            if style == 1 and text:match("{......}Выдача скина при телепорте: {......}.+") then
                sampSendDialogResponse(dialogId, 0, _, _)
            end
        end


        if eventMenuStart['giveGun'] or eventMenuStart['givePatroons'] then
            if style == 4 and title:match("{......}Редактирование мероприятия %(ID %d+%)") then
                sampSendDialogResponse(dialogId, 1, 10, _)
            end

            if style == 2 and text:match("Shovel") then
                eventMenuStart['giveGun'] = false
                eventMenuStart['givePatroons'] = true
                sampSendDialogResponse(dialogId, 1, eventsTable[eventMenuStart['wichMP']]['gun']['id'], _)
            end

            if style == 1 and text:match("{......}Укажите новое количество оружия %(от 1 до 500%)") then
                eventMenuStart['givePatroons'] = false
                sampSendDialogResponse(dialogId, 1, _, eventsTable[eventMenuStart['wichMP']]['gun']['count'])
            end

            if style == 4 and text:match("Оружие:.+") and text:match("Количество:.+") then
                if eventMenuStart['giveGun'] then
                    sampSendDialogResponse(dialogId, 1, 0, _)
                end

                if eventMenuStart['givePatroons'] then
                    sampSendDialogResponse(dialogId, 1, 1, _)
                end
            end
        else
            if style == 4 and text:match("Оружие:.+") and text:match("Количество:.+") then
                sampSendDialogResponse(dialogId, 0, _, _)
                eventMenuStart['takeAfter'] = true
            end
        end

        if eventMenuStart['takeAfter'] then

            if style == 4 and title:match("{......}Редактирование мероприятия %(ID %d+%)") then

                for line in text:gmatch("[^\r\n]+") do
                    if line:match("{......}Не отбирать") then
                        if eventsTable[eventMenuStart['wichMP']]['take_after'] then
                            sampSendDialogResponse(dialogId, 1, 11, _)
                        end
                    elseif line:match("{......}Отобрать") then
                        if not eventsTable[eventMenuStart['wichMP']]['take_after'] then
                            sampSendDialogResponse(dialogId, 1, 11, _)
                        end
                    end
                end
                eventMenuStart['takeAfter'] = false
                eventMenuStart['repeat_tp'] = true
            end
        end

        if eventMenuStart['repeat_tp'] then

            if style == 4 and title:match("{......}Редактирование мероприятия %(ID %d+%)") then

                for line in text:gmatch("[^\r\n]+") do
                    if line:match("{......}Запрещён") then
                        if eventsTable[eventMenuStart['wichMP']]['repeat_tp'] then
                            sampSendDialogResponse(dialogId, 1, 12, _)
                        end
                    elseif line:match("{......}Разрешён") then
                        if not eventsTable[eventMenuStart['wichMP']]['repeat_tp'] then
                            sampSendDialogResponse(dialogId, 1, 12, _)
                        end
                    end
                end
                eventMenuStart['repeat_tp'] = false
                eventMenuStart['startMP'] = true
            end


        end


        if eventMenuStart['startMP'] then
            sampSendDialogResponse(dialogId, 1, 14, _)
            sampSendChat("/a [Robo-Tools] Event started")
            sampAddChatMessage("{2DF61C}[Event-Menu]{FFFFFF} Подготовка мероприятия завершена.", -1)
            sampAddChatMessage("{2DF61C}[Event-Menu]{FFFFFF} Мероприятие запущено.", -1)
            sampAddChatMessage("{2DF61C}[Event-Menu]{FFFFFF} Команды: /rmp - меню взаимодействия в радиусе | /endmp - меню завершения мероприятия", -1)
            setCharCoordinates(PLAYER_PED, eventsTable[eventMenuStart['wichMP']]['points']['positions'][1][1],  eventsTable[eventMenuStart['wichMP']]['points']['positions'][1][2],  eventsTable[eventMenuStart['wichMP']]['points']['positions'][1][3])
            eventMenuStart['startMP'] = false
            addonWindows['mp'].v = true
            eventMenuStart['all'] = false
            windows['main'].v = false
        end

     

        if eventMenuStart['rules'] and text:match("{......}Строка №%d+: {......}.+") then
            sampSendDialogResponse(dialogId, 1, _, u8:decode(eventsTable[eventMenuStart['wichMP']]['rules'][eventMenuStart['wichSetRule'] + 1]))
            eventMenuStart['wichSetRule'] = eventMenuStart['wichSetRule'] + 1
        end
    return false
    end

    if formPunishSettings['autounban'].v and formPunishSettings['isActive'] and text:match("Блокиратор.*Причина.*До разблокировки.*") then
        sampSendDialogResponse(dialogId, 1, _, _)
    end
    
    if mafiaPaintInfo['state'] and mafiaPaintInfo['waitingForCheckDialog'] and title:match("Всего бизнесов: %d+ %[%d+/%d+%]") then
        local i = 1
        local findedNext = false
        for line in text:gmatch("[^\r\n]+") do
            if i ~= 1 then
                if line:match("%[»%]%s*{......}Следующая страница") then
                    sampSendDialogResponse(dialogId, 1, i - 2, _)
                    findedNext = true
                else
                    local biz, id = line:match("{......}(.+)%[(%d+)%]")
                    if biz and id then
                        local simBasa = {
                            [1] = 'rm',
                            [2] = 'yak',
                            [3] = 'lcn',
                            [4] = 'wmc',
                        }   
                    
                        table.insert(mafiaPaintInfo['temporaryInfo'][simBasa[mafiaPaintInfo['wichChecking']]], {biz,id})
                        if mafiaPaintInfo['enabledOrDisabled'][id] == nil then mafiaPaintInfo['enabledOrDisabled'][id] = imgui.ImBool(false) end
                    end
                end
            end
            i = i + 1
        end
        if not findedNext then mafiaPaintInfo['waitingForCheckDialog'] = false end
        return false
    end

    if settingObjectsConfig['isSetting'] and title:match("{......}{......}Админ%-объекты") and style == 2 then
        lua_thread.create(function()
            sampSendDialogResponse(dialogId, 1, objectsTable[settingObjectsConfig['id']]['objects'][settingObjectsConfig['nowObject'] + 1]['idObject'], _)
            
            if(#objectsTable[settingObjectsConfig['id']]['objects'] > settingObjectsConfig['nowObject'] + 1) then 
                wait(500)
                settingObjectsConfig['nowObject'] = settingObjectsConfig['nowObject'] + 1
            else
                wait(500)
                settingObjectsConfig['isSetting'] = false
                sampAddChatMessage('{2DF61C}[Objects-Menu]{FFFFFF} Установка шаблона успешно завершена.', -1)
            end
            settingObjectsConfig['waiting'] = false
        end)
        return false
    end

    if addonWindows['putobject'].v and title:match("{......}{......}Админ%-объекты") and style == 2 then
        sampSendDialogResponse(dialogId, 1, putObjectsSet['object'], _)
        putObjectsSet['object'] = 0
        return false
    end

    if dialogId == 1334 and style == 1 and text:match('%{......%}Жалоба%/Вопрос от: .+%[%d+%].*') then
        reportSettings['autoot'].v = false
        reportInfo['coordsGPS'] = ""
        reportInfo['nameGPS'] = ""
        reportInfo['isReconIntruder'].v = false
        reportInfo['isReconMe'].v = false
        reportInfo['start_time'] = os.time()
        text = text:gsub("\n", "")
        reportInfo['lastNick'].v, reportInfo['lastID'].v, reportInfo['lastText'].v = text:match('{FFFFFF}Жалоба/Вопрос от: (.+)%[(%d+)%]{BFE54C}(.+)')
        change['author_nick'] = reportInfo['lastNick'].v
        change['author_id'] = reportInfo['lastID'].v
        check_game_report = true
        sampSendChat('/cl ' .. reportInfo['lastID'].v)
        change['intruder_id'] = -1
        change['intruder_nick'] = 'Nick_Name'
        simInfo = {}
        reportInfo['savetype'].v = 1
        reportInfo['lastAnswer'].v = ""
        if reportInfo['lastText'].v:match('%d+') then
            reportInfo['isOnline'].v = false
            change['intruders_ids'] = {}
            change['intruders_nicks'] = {}
            for w in reportInfo['lastText'].v:gmatch('%d+') do
                if tonumber(w) >= 0 and tonumber(w) <= 999 and sampIsPlayerConnected(tonumber(w)) then
                    if not table_contains(change['intruders_ids'], w) then
                        change['intruders_ids'][#change['intruders_ids'] + 1] = w
                        change['intruders_nicks'][#change['intruders_nicks'] + 1] = sampGetPlayerNickname(w)
                    end
                end
            end
            if change['intruders_ids'][1] == nil then
                change['intruder_id'] = -1
                change['intruder_nick'] = 'Nick_Name'
                reportInfo['isReconIntruder'].v = true
            else
                reportInfo['isOnline'].v = true
                change['intruder_id'] = change['intruders_ids'][1]
                change['intruder_nick'] = change['intruders_nicks'][1]
                reportInfo['isReconIntruder'].v = true
            end

        end

        for k,v in pairs(reportReconMeWords) do
            if stringToLower(reportInfo['lastText'].v):find(v) then
                reportInfo['isReconMe'].v = true
            end
        end

        reportInfo['state'].v = true
        return false
    end

    if reportInfo['state'].v and sampIsDialogActive() then
        sampAddChatMessage('{F6361C}[Репорт]{FFFFFF} Репорт был сбит диалогом с ID - '.. dialogId,-1)
        sampAddChatMessage('{F6361C}[Репорт]{FFFFFF} Пожалуйста, ответьте игроку в /pm',-1)
    end

    if dialogId == 8875 and style == 2 and title:match('Быстрый ответ') then
        if reportInfo['savetype'].v == 1 then
            sampSendDialogResponse(dialogId,0,0,-1)
        elseif reportInfo['savetype'].v == 2 then
            sampSendDialogResponse(dialogId,0,0,-1)
        elseif reportInfo['savetype'].v == 3 then
            sampSendDialogResponse(dialogId,0,1,-1)
        end
        return false
    end

    if dialogId == 2 and style == 3 and title:match('%{......%}Авторизация') and text:match('%{......%}Добро пожаловать на %{......%}Arizona Role Play%{......%}') and not text:match('Попыток для ввода пароля: %{......%}2') then
        onLoginAccept()
        if mainini['passwordauto'].v and #mainini['password'].v > 0 then
            sampSendDialogResponse(dialogId,1,-1,u8:decode(mainini['password'].v))
            islogined = true
            return false
        else
            if window == 0 then
                msgbox("Вы подключились к серверу, разверните игру чтобы авторизоваться!", "Подключение к серверу", 49)
            end
        end
    end

    if dialogId == 8928 and style == 1 and title:match('%{......%}') and text:match('На ваш %{......%}E%-MAIL%{......%} было отправлено') then
        if window == 0 then
            msgbox("Вы подключились к серверу, разверните игру чтобы ввести код подтверждение!", "Подключение к серверу", 49)
        end
    end

    if dialogId == 211 and style == 3 and title:match('%{......%}Админ%-панель') and text:match('%{......%}Введите админ%-пароль') then
        if mainini['passwordautoadmin'].v and #mainini['adminpass'].v > 0 then
            isShowedApanel = true
            sampSendDialogResponse(211,1,-1,tostring(mainini['adminpass'].v))
            return false
        end
    end

    --print('['..dialogId..'] ' .. style .. ' | ' .. title .. ' | ' .. text)

    if waiting_spcarall then
        if dialogId == 265 and style == 2 and title:match('%{......%}') and text:match('%{......%}%[%d+%] .*') then
            sampSendDialogResponse(dialogId,1,5,-1)
            return false
        end

        if text:match('Весь транспорт') then
            sampSendDialogResponse(dialogId, 1, 0, -1)
            waiting_spcarall = false
            sampSendChat("/ao [Спавн Транспорта] Весь транспорт успешно был заспавнен!")
        end
    end

    if status_clear then
        lua_thread.create(function ()
            sampSendDialogResponse(dialogId, 1, 1, _)
            wait(1)

            status_clear = false
        end)

        return false
    end


    if startGPS then
        if style == 2 and title:match("{......}GPS Навигатор") then
            if countGPSALL == 0 then
                nowGPS = 1
                countGPSALL = 0
                for line in text:gmatch("[^\r\n]+") do
                    if not line:match('{......}%[Реклама%]') then
                        local inHeader = line:gsub("{......}%- {......}", "")
                        inHeader = inHeader:gsub("{......}", "")
                        table.insert(temporaryGPSInfo, {header = inHeader, coords = "", category = {}})
                        countGPSALL = countGPSALL + 1
                    end
                end
                sampSendDialogResponse(dialogId, 1, nowGPS, _)
                headerGPS = temporaryGPSInfo[nowGPS]['header']
                timeStartGPS = os.time()
                waitingGPS = true
                vlozehniuNow = -1
                vlozehniuALL = 0
            else
                if countGPSALL > nowGPS then
                    
                    if not waitingVLOZEHNIU then 
                        vlozehniuNow = -1
                        vlozehniuALL = 0
                        nowGPS = nowGPS + 1
                        timeStartGPS = os.time()
                        waitingGPS = true
                    end
                    sampSendDialogResponse(dialogId, 1, nowGPS, _)
                    headerGPS = temporaryGPSInfo[nowGPS]['header']
                else
                    startGPS = false
                    waitingGPS = false
                    waitingVLOZEHNIU = false
                    gpsInfo = clone(temporaryGPSInfo)
                    saveJson(patches['gps'], gpsInfo)
                    sampAddChatMessage('{2DF61C}[GPS]{FFFFFF} Обновление GPS успешно завершено.',-1)
                end
            end
            return false
        end

        if style == 5 and (title:match(headerGPS) or title:match("{BFBBBA}")) then
            waitingGPS = false
            if vlozehniuALL == 0 then
                local i = 0
                for line in text:gmatch("[^\r\n]+") do   
                    if i ~= 0 then
                        local inVlozheniuHeader = line:gsub("{......}", "")
                        inVlozheniuHeader = inVlozheniuHeader:gsub("%[ %d+.*%d* м%. %]", "")
                        inVlozheniuHeader = inVlozheniuHeader:gsub("\t", " ")
                        table.insert(temporaryGPSInfo[nowGPS]['category'], {name = inVlozheniuHeader, coords = ""})
                        vlozehniuALL = vlozehniuALL + 1
                    end
                    i = i + 1
                end
                sampSendDialogResponse(dialogId,1,vlozehniuNow,_)
                vlozehniuNow = vlozehniuNow + 1
                waitingVLOZEHNIU = true
            else
                if vlozehniuALL > vlozehniuNow then
                    sampSendDialogResponse(dialogId,1,vlozehniuNow,_)
                    vlozehniuNow = vlozehniuNow + 1
                else
                    waitingVLOZEHNIU = false
                    vlozehniuALL = 0
                    sampSendChat('/gps')
                end
            end
            return false
        end
    end

    if startquest then
        if dialogId == 265 and style == 2 and title:match('%{......%}') and text:match('%{......%}%[%d+%] .*') then
            counter_line = 0
            for line in text:gmatch("[^\n]+") do
                if line:match('{F2C934}%[1%]{FFFFFF} Ежедневные админские квесты') then
                    sampSendDialogResponse(dialogId,1,counter_line,-1)
                    return false
                end
                counter_line = counter_line + 1
            end
        end


        if dialogId == 7971 and style == 2 and title:match('%{.+}%Квесты') then
            local counter_quest = 0
            local is_at_least = false
            for line in text:gmatch("[^\n]+") do
                if line:match('.+ %{......%}%[Доступен%]') then
                    sampSendDialogResponse(dialogId,1,counter_quest,-1)
                    is_at_least = true
                    return false
                end
                counter_quest = counter_quest + 1
            end

            if not is_at_least then
                sampSendDialogResponse(dialogId,1,_,_)
                startquest = false
            end

            return false
        end


        if dialogId == 7972 and style == 0 and title:match('%{......%}') then
            lua_thread.create(function()
            sampSendDialogResponse(dialogId,1,-1,-1)
            wait(300)
            sampSendChat('/apanel')
            end)
            return false
        end
    end

    if checkorginfo and dialogId == 235 then
            
        for line in text:gmatch("[^\n]+") do 
            if line:find('%{......%}Организация%: %{......%}%[.+%]') then 
                reconInfo['frac'] = shotterOrganisation(line:match('%{......%}Организация%: %{......%}%[(.+)%]'))
                if reconInfo['frac'] == 'Не имеется' then reconInfo['rank'] = 0 end
            end
            if line:find('%{......%}Должность%: %{......%}.+%((%d+)%)') then
                reconInfo['rank'] = line:match('%{......%}Должность%: %{......%}.+%((%d+)%)')
            end
            if line:find('Защита%: %{......%}%[.+ урона%]') then
                reconInfo['def'] = line:match('Защита%: %{......%}%[(.+) урона%]')
            end

            if line:find('Регенерация%: %{......%}%[%d+ HP в мин%.%]') then
                reconInfo['regen'] = line:match('Регенерация%: %{......%}%[(%d+) HP в мин%.%]')
            end

            if line:find('Урон%: %{......%}%[.+ урона]') then
                reconInfo['dam'] = line:match('Урон%: %{......%}%[(.+) урона]')
            end
            
            if line:find('{AFAFAF}.+%(%d+%)') then
                table.insert(reconInfo['cars'], {line:match('{AFAFAF}(.+)%((%d+)%)')})
            end
         end
         checkorginfo = false
         reconInfo['waitingForCheck'] = false
        return false


    end

end


function imgui.AnimatedButton(label, size, speed, rounded)
    local bool = false
    speed = speed and speed or 0.4
    if not AnimatedButtons then AnimatedButtons = {} end
    if not AnimatedButtons[label] then
        local color = imgui.GetStyle().Colors[imgui.Col.ButtonHovered]
        AnimatedButtons[label] = {circles = {}, hovered = false, state = false, time = os.clock(), color = imgui.ImVec4(color.x, color.y, color.z, 0.2)}
    end
    local button = AnimatedButtons[label]
    local dl = imgui.GetWindowDrawList()
    local p = imgui.GetCursorScreenPos()
    local c = imgui.GetCursorPos()
    local ImSaturate = function(f) return f < 0.0 and 0.0 or (f > 1.0 and 1.0 or f) end
    if #button.circles > 0 then
        local PathInvertedRect = function(a, b, col)
            local rounding = rounded and imgui.GetStyle().FrameRounding or 0
            if rounding <= 0 or not rounded then return end
            local dl = imgui.GetWindowDrawList()
            dl:PathLineTo(a)
            dl:PathArcTo(imgui.ImVec2(a.x + rounding, a.y + rounding), rounding, -3.0, -1.5)
            dl:PathFillConvex(col)

            dl:PathLineTo(imgui.ImVec2(b.x, a.y))
            dl:PathArcTo(imgui.ImVec2(b.x - rounding, a.y + rounding), rounding, -1.5, -0.205)
            dl:PathFillConvex(col)

            dl:PathLineTo(imgui.ImVec2(b.x, b.y))
            dl:PathArcTo(imgui.ImVec2(b.x - rounding, b.y - rounding), rounding, 1.5, 0.205)
            dl:PathFillConvex(col)

            dl:PathLineTo(imgui.ImVec2(a.x, b.y))
            dl:PathArcTo(imgui.ImVec2(a.x + rounding, b.y - rounding), rounding, 3.0, 1.5)
            dl:PathFillConvex(col)
        end
        for i, circle in ipairs(button.circles) do
            local time = os.clock() - circle.time
            local t = ImSaturate(time / speed)
            local color = imgui.GetStyle().Colors[imgui.Col.ButtonActive]
            local color = imgui.GetColorU32(imgui.ImVec4(color.x, color.y, color.z, (circle.reverse and (255-255*t) or (255*t))/255))
            local radius = size.x * (circle.reverse and 1 or t)
            imgui.PushClipRect(p, imgui.ImVec2(p.x+size.x, p.y+size.y))
            dl:AddCircleFilled(circle.clickpos, radius, color, radius/2)
            PathInvertedRect(p, imgui.ImVec2(p.x+size.x, p.y+size.y), imgui.GetColorU32(imgui.GetStyle().Colors[imgui.Col.WindowBg]))
            imgui.PopClipRect()
            if t == 1 then
                if not circle.reverse then
                    circle.reverse = true
                    circle.time = os.clock()
                else
                    table.remove(button.circles, i)
                end
            end
        end
    end
    local t = ImSaturate((os.clock()-button.time) / speed)
    button.color.w = button.color.w + (button.hovered and 0.8 or -0.8)*t
    button.color.w = button.color.w < 0.2 and 0.2 or (button.color.w > 1 and 1 or button.color.w)
    color = imgui.GetStyle().Colors[imgui.Col.Button]
    color = imgui.GetColorU32(imgui.ImVec4(color.x, color.y, color.z, 0.2))
    dl:AddRectFilled(p, imgui.ImVec2(p.x+size.x, p.y+size.y), color, rounded and imgui.GetStyle().FrameRounding or 0)
    dl:AddRect(p, imgui.ImVec2(p.x+size.x, p.y+size.y), imgui.GetColorU32(button.color), rounded and imgui.GetStyle().FrameRounding or 0)
    local ts = imgui.CalcTextSize(label:gsub('##.+$', ''))
    local align = imgui.GetStyle().ButtonTextAlign
    imgui.SetCursorPos(imgui.ImVec2(c.x+(size.x-ts.x)*align.x, c.y+(size.y-ts.y)*align.y))
    imgui.Text(label:gsub('##.+$', ''))
    imgui.SetCursorPos(c)
    if imgui.InvisibleButton(label, size) then
        bool = true
        table.insert(button.circles, {animate = true, reverse = false, time = os.clock(), clickpos = imgui.ImVec2(getCursorPos())})
    end
    button.hovered = imgui.IsItemHovered()
    if button.hovered ~= button.state then
        button.state = button.hovered
        button.time = os.clock()
    end
    return bool
end

function sampev.onSendCommand(text)
	debugLog('onSendCommand: text: ['.. text ..']')
	text = replacePinId(text)
    if text:match('^/reoff$') then reconInfo['adminSpecNick'] = "" reportInfo['showRe'].v = false reconInfo['status'].v = false addonWindows['abot'].v = false end
    local id = text:match('^/re (%d+)')
    if id and id ~= reconInfo['adminSpecNick'] and id ~= reconInfo['adminSpecId'] then reconInfo['adminSpecNick'] = "" end

    for k,v in pairs(accessesForms) do
        if v['typeCheck'] == 'player_id' and text:match("^/"..k.."%s+%([%d+%s*]+%)") and (v['access'] <= mainini['adminlvl'].v) then
            local numbers, context = text:match("^/"..k.."%s+%(([%d+%s*]+)%)%s+(.+)")
            for w in numbers:gmatch("%d+") do
                sampSendChat("/"..k.." "..w .. " " ..context)
            end
            return false
        end
        if text:match('^/'..k) and (v['access'] > mainini['adminlvl'].v or (not formsInfo['isAccept'] and v['requiredAccept'])) then
            local rtag = ''
            if v['requiredTag'] then
                rtag = u8:decode(mainini['tag'].v)
            end
            return {'/a ' .. text .. ' ' .. rtag}
        end
    end


    if text:match('^/ot$') and reportSettings['typeReport'].v == 1 then
        if #listReport > 0 then
            reportInfo['isReconIntruder'].v = false
            reportInfo['isReconMe'].v = false
            reportInfo['start_time'] = os.time()
            reportInfo['lastNick'].v = listReport[#listReport]['nick']
            reportInfo['lastID'].v = listReport[#listReport]['id']
            reportInfo['lastText'].v = listReport[#listReport]['context']
            check_game_report = true
            sampSendChat('/cl ' .. listReport[#listReport]['id'])
            change['author_nick'] = reportInfo['lastNick'].v
            change['author_id'] = reportInfo['lastID'].v
            change['intruder_id'] = -1
            change['intruder_nick'] = 'Nick_Name'
            simInfo = {}
            reportInfo['savetype'].v = 1
            reportInfo['lastAnswer'].v = ""
            if reportInfo['lastText'].v:match('%d+') then
                reportInfo['isOnline'].v = false
                change['intruders_ids'] = {}
                change['intruders_nicks'] = {}
                for w in reportInfo['lastText'].v:gmatch('%d+') do
                    if tonumber(w) >= 0 and tonumber(w) <= 999 and sampIsPlayerConnected(tonumber(w)) then
                        if not table_contains(change['intruders_ids'], w) then
                            change['intruders_ids'][#change['intruders_ids'] + 1] = w
                            change['intruders_nicks'][#change['intruders_nicks'] + 1] = sampGetPlayerNickname(w)
                        end
                    end
                end
                if change['intruders_ids'][1] == nil then
                    change['intruder_id'] = -1
                    change['intruder_nick'] = 'Nick_Name'
                    reportInfo['isReconIntruder'].v = true
                else
                    reportInfo['isOnline'].v = true
                    change['intruder_id'] = change['intruders_ids'][1]
                    change['intruder_nick'] = change['intruders_nicks'][1]
                    reportInfo['isReconIntruder'].v = true
                end

            end

            for k,v in pairs(reportReconMeWords) do
                if stringToLower(reportInfo['lastText'].v):find(v) then
                    reportInfo['isReconMe'].v = true
                end
            end

            reportInfo['state'].v = true
        end
        return false
    end

	return {text}
end

function sampev.onSendChat(text)
	debugLog('onSendChat: text: ['.. text ..']')

	text = replacePinId(text)
	if reconInfo['status'].v and reconSettings['sendPM'].v and reconInfo['id'] ~= -1 then
        local realType = 0
        if reconSettings['modePM'].v == 0 or reconSettings['modePM'].v == 1 then
            realType = reconSettings['modePM'].v
        end
        sampSendChat("/pm " .. reconInfo['id'] .. " " .. realType .. " " .. text)
        return false
    end
	if mainini['autob'].v then if text ~= 'q' then sampSendChat('/b ' .. text) return false end end
	return {text}
end


function replacePinId(text)
	if text:match('%@%d+') then
        local _, myid = sampGetPlayerIdByCharHandle(PLAYER_PED)
		for w in text:gmatch('%@(%d+)') do

            if myid == tonumber(w) then
                text = text:gsub('%@'..w,sampGetPlayerNickname(myid) .. '['..w..']')
            end

			if sampIsPlayerConnected(w) then
				text = text:gsub('%@'..w,sampGetPlayerNickname(tonumber(w)) .. '['..w..']')
			else
				text = text:gsub('%@'..w,'Игрок Оффлайн'.. '['..w..']')
			end
		end
	end
	return text
end

function sampev.onDisplayGameText(style, time, text)
	debugLog('onDisplayGameText: style: ['.. style ..'] | time: [' .. time .. '] | text: ['.. text .. ']')
    if text == '~r~~n~PLAYER DISCONNECT' then reportInfo['showRe'].v = false reconInfo['status'].v = false end
    if text:find('Report') then return false end
end

function sampev.onSendDialogResponse(dialogId, button, list, input)
    if formPunishSettings['isActive'] and dialogId == 91 then
        if button == 1 then
            formPunishSettings['lastFormWait'] = os.time()
        else
            formPunishSettings['errors'][#formPunishSettings['errors']]['error'] = "Отклонено"
        end
        formPunishSettings['formAwait'] = false
    end
end

function sampev.onSendMapMarker(position)
	debugLog('onSendMapMarker: position: ['.. 'nav' .. ']')
    lua_thread.create(function()
        local x, y, z = getCharCoordinates(PLAYER_PED)
        if reconInfo['status'].v then
            ignorePlPos = true
            sampSendChat('/plpos ' .. reconInfo['id'] .. ' ' .. position.x .. " " .. position.y .. " " .. position.z)
        else
            sendClickMap(position.x, position.y, position.z)
        end
        
        while getDistanceBetweenCoords3d(x, y, z, position.x, position.y, position.z) > 5 and os.time() - os.time() < 2 do
            wait(0)
            x, y, z = getCharCoordinates(PLAYER_PED)
        end
        x, y, z = getCharCoordinates(PLAYER_PED)
        if reconInfo['status'].v then
            ignorePlPos = true
            sampSendChat('/plpos ' .. reconInfo['id'] .. ' ' .. x .. " " .. y .. " " .. getGroundZFor3dCoord(x, y, 999))
        else
            sendClickMap(x, y, getGroundZFor3dCoord(x, y, 999))
        end
        
    end)
end

function onReceiveRpc(id,bs)
    lua_thread.create(function ()
		if id == 12 then
			timer_freeze = os.clock()
			waiting_freeze = true

			while os.clock() - timer_freeze < 2 do
				wait(0)
			end

			waiting_freeze = false
		end
	end)

	if id == 15 and waiting_freeze then
		waiting_freeze = false

		return false
	end
end


local table_exceptions_bubbleChat = {
    "%-%s*%d+%.%d+ хп", "Отошел", "Заглянул%(а%) в карман", "Поймал%(а%) рыбу", "Сильно держит удочку", "закидывает крючок и ловит рыбу", "Тянет рыбу!", "Кушает %{69B1E4%}%( 5:00%+ %)", 
    "Сообщение по домашней рации", "Смотрит на %{FFFFFF%}.*", "^Выпало: %d+$", ".+ передаёт конверт с деньгами .+", ".+ взглянул%(a%) на часы$", "^Переоделся%(ась%)$", "^подкинул%(а%) .+%[.+%]$", 
    "^походил%(а%) .+%[.+%]$", "^отбился%(а%) .+%[.+%]$", "^бито$", "^затянул%(а%)$", "^отбился%(ась%) .+%[.+%]$", "^Просит деньги$", "^%* Закрывает рабочий транспорт$", "^%* Открывает рабочий транспорт$", 
    "^Открыл%(а%) шлагбаум$", "^Достал%(а%) из багажника ящик с пиццой%.$", "^Смотрит телефонную книгу$", "^Сообщение по рации$", "^открывает личный транспорт$", "^Собирает сено$", "^.+ показывает свой паспорт .+$",
    "^показывает своё удостоверение$", "^.+ пытается завести двигатель$", "^Пытается что%-то сказать%.$", "^Двигатель успешно завелся %| %-  .+ %.$", "^Получил%(а%) сообщение$", "^закрывает личный транспорт$", "^восстанавливает состояние %d+/%d+$", 
    "^закончил%(а%) работу$", "^Собрал%(а%) сено$", "^Выкинул%(а%) мусор$", "^Собрал%(а%) мусор$", "^Взял%(а%) ящик$", "^Положил%(а%) ящик$", "^Украл%(а%) ингредиенты$", "^Открыл%(а%) дверь$", "^Звонит телефон$", "^.+ достал%(а%) .+ из кармана$", 
    "^Поцеловал%(a%) .+$", "Положил%(а%) ящик с пиццой в багажник мопеда", "^%* Открывает организационный транспорт$", "^%* Закрывает организационный транспорт$", "^Взял%(а%) дубинку$", "^Включил%(а%) левый поворотник$", 
    "^Включил%(а%) правый поворотник$", "^Включил%(а%) печку$", "^Подобрал%(а%) что%-то с земли$", "^Достал%(а%) оружие из кармана$", "^Подобрал%(а%) оружие с земли", "^.+ сделал%(а%) себе оружие.$", 
    "^Выключил%(а%) печку$", "^Сильно кашляет$", "^Взял%(а%) бочку!$", "^Заполняет документы$", "^Продал%(а%) бочку!$", "^Позвонил%(а%) в службу точного времени$", "^%{65C18C%}AFK.+",
    "^Предложил .+%[%d+%] совершить торговлю$"
}

function sampev.onPlayerChatBubble(playerId, color, distance, duration, message)
    if isPermission and isInitialized then
        if not sampIsPlayerPaused(playerId) then
            local isMatchedException = false
            for k,v in pairs(table_exceptions_bubbleChat) do
                if message:match(v) then
                    isMatchedException = true
                end
            end
            if not isMatchedException then
                if #longChatBuffer > longChatSettings['linesChat'].v then
                    for i = 1, #longChatBuffer - longChatSettings['linesChat'].v do
                        table.remove(longChatBuffer, i)
                    end
                end

                longChatBuffer[#longChatBuffer + 1] = {
                    ['time'] = os.time(),
                    ['nick'] = sampGetPlayerNickname(playerId),
                    ['id'] = playerId, 
                    ['distance'] = distance, 
                    ['duration'] = duration, 
                    ['message'] = message
                }
            end
        end
    end
end


function sampev.onServerMessage(color, text)
    if isPermission and isInitialized then
        debugLog('onServerMessage: color: [' .. color .. '] | text: [' .. text .. ']')
        if nickplayerbyid then
            local count_table = {
                ['^%s*Администратор '..nickplayerbyid..'%[%d+%] посадил игрока .+%[%d+%] в деморган на %d+ минут%. Причина%: .+'] = {'jails'},
                ['^%s*Администратор '..nickplayerbyid..'%[%d+%] заглушил игрока .+%[%d+%] на %d+ минут%. Причина%: .+'] = {'mutes'},
                ['^%s*Администратор '..nickplayerbyid..'%[%d+%] кикнул игрока .+%[%d+]%. Причина%: .+'] = {'kicks'},
                ['^%s*Администратор '..nickplayerbyid..'%[%d+%] выдал предупреждение игроку .+'] = {'warns'},
                ['^%s*Администратор '..nickplayerbyid..'%[%d+%] забанил игрока .+%[%d+%] на .+ дней%. Причина%: .+'] = {'bans'},
                ['^%s*Администратор '..nickplayerbyid..'%[%d+%] забанил игрока .+%[%d+%]%. Причина%: .+'] = {'bans'},
                ['^%s*Администратор '..nickplayerbyid..' установил в оффлайне %d+ минут деморгана игроку .+%. Причина: .+'] = {'jails'},
                
                ['^%s*Вы в оффлайне выдали игроку .+ талоны антидеморгана, количество: .*'] = {'none'},
                ['^%s*Администратор (.+) снял заглушку с игрока (.+),'] = {'none'},
                ['^%s*Администратор (.+) выпустил игрока (.+),'] = {'none'},
                ['^%s*Вы выдали игроку.+уровень администратирования'] = {'none'},
                ['^%s*Администратор (.+)%[%d+%] вытащил (.+)%[%d+%] из тюрьмы строгого режима. Причина:.*'] = {'none'},
                ['^%s*Администратор (.+) забанил в оффлайне игрока (.+). Причина: .*'] = {'bans'},
                ['^%s*Администратор (.+) установил в оффлайне %d+ минут молчанки (.+). Причина:.*'] = {'mutes'},
                ['^%s*Администратор (.+) в оффлайне снял варн с (.+) %(осталось: %d+%)%,'] = {'none'},
                ['^%s*Администратор (.+) в оффлайне выдал варн игроку (.+) %(%d+/%d+%), причина: .+'] = {'warns'},
                ['^%s*Администратор (.+) выпустил в оффлайне с ТСР (.+),'] = {'none'},
                ['^%s*Администратор (.+) снял %d+ варн у игрока .+, причина: .+'] = {'none'},
                ['^%s*Администратор (.+) выпустил в оффлайне с деморгана (.+),'] = {'none'},
                ['^%s*Администратор (.+) снял заглушку в оффлайне с игрока (.+),'] = {'none'},
                ['^%s*Администратор (.*) забанил ip .*. Причина: .*'] = {'none'},
                ['^%s*Администратор (.+) разбанил игрока (.+),'] = {'none'},
            }
    
            for k,v in pairs(count_table) do
                if text:match(k) and v[1] ~= 'none' then
                    count_daily[v[1]].v = count_daily[v[1]].v + 1
                    count_daily['punishments'].v = count_daily['punishments'].v + 1
                    count_weekly[v[1]].v = count_weekly[v[1]].v + 1
                    count_weekly['punishments'].v = count_weekly['punishments'].v + 1
                    count_all[v[1]].v = count_all[v[1]].v + 1
                    count_all['punishments'].v = count_daily['punishments'].v + 1
                    statsTable.countdaily[v[1]] = count_daily[v[1]].v
                    statsTable.countweekly[v[1]] = count_weekly[v[1]].v
                    statsTable.countall[v[1]] = count_all[v[1]].v
                    statsTable.countweekly['punishments'] = count_weekly['punishments'].v
                    statsTable.countdaily['punishments'] = count_daily['punishments'].v
                    statsTable.countall['punishments'] = count_all['punishments'].v
                    save()
                    f = io.open(workdir .. '/resource/RoboScripts/RoboTools/punishments_log.txt',"a")
                    f:write('['..os.date("%d-%m-%Y %X",os.time())..'] Наказание:'.. text .."\n")
                    f:flush()
                    f:close()
                end
            end
        end
        
        if text:match("%[Ошибка%] {FFFFFF}Вы не состоите в мафии") and startGPS then
            sampSendChat('/gps')
        end

        if mafiaPaintInfo['state'] and mafiaPaintInfo['waitingForAmember'] and text:match("Админ ".. nickplayerbyid .."%(%d+%) вступил в организацию ".. checkersSettings['leaders']['in_settings_titles'][tMafiaNames[mafiaPaintInfo['wichChecking']][2]][1] .." на 9 ранг") then
            mafiaPaintInfo['waitingForAmember'] = false
        end

        if nickplayerbyid and ((formPunishSettings['isActive'] and formPunishSettings['formAwait']) or (formsInfo['isActive'])) then 
            formPunishStrings = {
                {"Вы в оффлайне выдали игроку .+ талоны антидеморгана, количество: .*", 'success'},
                {"Игрок не в тюрьме строгого режима!", 'error'},
                {"У игрока нет мута!", 'error'},
                {"уровня админки возникла ошибка", 'error'},
                {"У игрока .* уже установлен %d+ уровень администратора", 'error'},
                {"Вы не можете менять уровень админу с таким уровнем как у вас или выше.", 'error'},
                {"Назначен уровень админки", 'success'},
                {"Вы выдали игроку.+ уровень администратирования", 'success'},
                {"%[Ошибка%] {ffffff}Игрок с ником .+ не найден базе данных.", 'error'},
                {"У игрока нет варнов.", 'error'},
                {"Можно использовать раз в 10 секунд.", 'error_wait'},
                {"%[Ошибка%] {FFFFFF}Нельзя больше 300 и меньше 1 минуты!", 'error'},
                {"%[Ошибка%] {FFFFFF}Нельзя больше 3000 и меньше 5 минут!", 'error'},
                {"Администратор ".. nickplayerbyid .." снял заглушку с игрока (.+),", 'success'},
                {"Администратор ".. nickplayerbyid .." выпустил игрока (.+),", 'success'},
                {"Администратор ".. nickplayerbyid .."%[%d+%] вытащил (.+)%[%d+%] из тюрьмы строгого режима. Причина:.*", 'success'},
                {"Администратор ".. nickplayerbyid .." забанил в оффлайне игрока (.+). Причина: .*", 'success'},
                {"Администратор ".. nickplayerbyid .." установил в оффлайне .+ минут деморгана (.+). Причина:.*", 'success'},
                {"Администратор ".. nickplayerbyid .."%[%d+%] посадил игрока (.+)%[%d+%] в деморган на .+ минут. Причина:.*", 'success'},
                {"Администратор ".. nickplayerbyid .." установил в оффлайне .+ минут молчанки (.+). Причина:.*", 'success'},
                {"Администратор ".. nickplayerbyid .."%[%d+%] заглушил игрока (.+)%[%d+%] на .+ минут. Причина:.*", 'success'},
                {"Администратор ".. nickplayerbyid .." в оффлайне снял варн с (.+) %(осталось: %d+%)%,", 'success'},
                {"Администратор ".. nickplayerbyid .."%[%d+%] выдал предупреждение игроку (.+)%[%d+%] %[%d+/%d+%] Причина: .+", 'success'},
                {"Администратор ".. nickplayerbyid .." в оффлайне выдал варн игроку (.+) %(%d+/%d+%), причина: .+", 'success'},
                {"Администратор ".. nickplayerbyid .." выпустил в оффлайне с ТСР (.+),", 'success'},
                {"Администратор ".. nickplayerbyid .." снял %d+ варн у игрока .+, причина: .+", 'success'},
                {"Администратор ".. nickplayerbyid .." выпустил в оффлайне с деморгана (.+),", 'success'},
                {"Администратор ".. nickplayerbyid .." снял заглушку в оффлайне с игрока (.+),", 'success'},
                {"Можно раз в %d секунд!", 'error_wait'},
                {"Администратор ".. nickplayerbyid .." забанил ip .*. Причина: .*", 'success'},
                {"Игрок .* не забанен", 'error'},
                {"У игрока уже 2 варна, дальше только бан", 'error'},
                {"Администратор ".. nickplayerbyid .." разбанил игрока (.+),", 'success'},
            }
        end

        if nickplayerbyid and formPunishSettings['isActive'] and formPunishSettings['formAwait'] then

            for k,v in pairs(formPunishStrings) do
                if text:match(v[1]) then
                    if v[2] == 'success' then
                        formPunishSettings['formAwait'] = false
                    else
                        formPunishSettings['formAwait'] = false
                        formPunishSettings['errors'][#formPunishSettings['errors']]['error'] = text
                        return false
                    end
                    
                end
            end

            for k,v in pairs(formErrors) do
                if text:match(v[1]) then
                    formPunishSettings['formAwait'] = false
                    formPunishSettings['errors'][#formPunishSettings['errors']]['error'] = text
                    return false
                end
            end
            
        end
    
        for k,v in pairs(pChatsTableImgui) do
            for key,val in pairs(v['regex']) do
                if not val['regular'].v:match("%%$") and #val['regular'].v > 0 and #v['name'].v > 0 and buffersPChats ~= nil and buffersPChats[v['name'].v] ~= nil then
                    if text:match(u8:decode(val['regular'].v)) then
                        table.insert(buffersPChats[v['name'].v], {key, text, ['time'] = os.time()})
                        return false
                    end
                end
            end
        end
        if text:match('%[Жалоба%] от (.+)%[%d+%]:%{......%} .+') and reportSettings['typeReport'].v == 1 then
    
        end
    
        if text:match("Забанен: .*%. IP: .*%. REGIP: .*") or text:match("Игрок/админ (.*)%[(.*)%] зашел %[reg ip:(.*)%] %-%- %[norm ip:.*%]") or text:match("Админ/лидер (.*)%[(.*)%] зашел %[reg ip:(.*)%] %-%- %[norm ip:.*%]") or text:match("^Приветствуем нового игрока нашего сервера: {FF9900}(.*) {FFFFFF}%(ID: (%d+)%)  {cccccc}IP: (.*)") or text:match("Игрок .+%[%d+%] %[IP: .+] перевел игроку .+%[%d+%] %[IP: .+] на счет %$%d+ %[%$%d+%]") then
            return {color, hideIP(text)}
        end
    
        
    
        if text:find("%(%( %S+%[%d+%]: {B7AFAF}.-{FFFFFF} %)%)") then
            local id, t = text:match("%(%( %S+%[(%d+)%]: {B7AFAF}(.-){FFFFFF} %)%)")
            local _, char = sampGetCharHandleBySampPlayerId(id)
            if _ then
                t = "(( {B7AFAF}"..t.." {FFFFFF}))"
                local bs = raknetNewBitStream()
                raknetBitStreamWriteInt16(bs,id)
                raknetBitStreamWriteInt32(bs,-1)
                raknetBitStreamWriteFloat(bs,15)
                raknetBitStreamWriteInt32(bs,6000)
                raknetBitStreamWriteInt8(bs,#t)
                raknetBitStreamWriteString(bs,t)
                raknetEmulRpcReceiveBitStream(59,bs)
                raknetDeleteBitStream(bs)
            end
        end

        if warningsSettings['pesok']['state'].v then
            local pesok_check, second_check_pesok = text:match('Игрок .*%[%d+%] %[IP: (.*)%] перевел игроку .*%[%d+%] %[IP: (.*)%] на счет $%d+ %[$.*%]')
            if pesok_check and second_check_pesok then
                if pesok_check == second_check_pesok then
                    sampAddChatMessage("[ВНИМАНИЕ] Подозрение на использование запрещенной программы ПЕСОК. Проверьте перевод ниже.", 16164106)
                end
            end
        end
    
        local mint_check = text:match('^%[A%] .+%[%d+%]%: %[Robo%-Check%] (%d+)')
        if mint_check and tonumber(mint_check) == tonumber(idplayer) then
            sampSendChat('/a [Robo-Response] +')
        end
    

        if objectsCreator['isWorking'] or editorShablon['isWorking'] then
            local object = text:match("^%[Информация%] {......}Вы успешно установили объект {......}(.+){......}%.")
            if object then
                local idObject = -1
                for k,v in pairs(tObjectsName) do
                    if v == object then
                        idObject = k - 1
                    end
                end

                if objectsCreator['isWorking'] then
                    if idObject == -1 then
                        sampAddChatMessage("{F6361C}[Ошибка] Такого объекта не найдено в возможных для установки, объект не будет сохранен.", -1)
                    else
                        local posX, posY, posZ = getCharCoordinates(PLAYER_PED)
                        local angle = getCharHeading(PLAYER_PED)
                        if #objectsCreator['objects'] == 0 then objectsCreator['startPosCoordinates'] = {posX, posY, posZ, angle} end
                        table.insert(objectsCreator['objects'], {
                            ['position'] = {posX, posY, posZ, angle}, 
                            ['positionUnPinned'] = {(posX - objectsCreator['startPosCoordinates'][1]), (posY - objectsCreator['startPosCoordinates'][2]), (posZ - objectsCreator['startPosCoordinates'][3]), angle},
                            ['idObject'] = idObject
                        })
                    end
                end

                if editorShablon['isWorking'] then
                    if idObject == -1 then
                        sampAddChatMessage("{F6361C}[Ошибка] Такого объекта не найдено в возможных для установки, объект не будет сохранен.", -1)
                    else
                        local posX, posY, posZ = getCharCoordinates(PLAYER_PED)
                        local angle = getCharHeading(PLAYER_PED)
                        if #editorShablon['objects'] == 0 then editorShablon['startPosCoordinates'] = {posX, posY, posZ, angle} end
                        table.insert(editorShablon['objects'], {
                            ['position'] = {posX, posY, posZ, angle}, 
                            ['positionUnPinned'] = {
                                (posX - editorShablon['startPosCoordinates'][1]), 
                                (posY - editorShablon['startPosCoordinates'][2]), 
                                (posZ - editorShablon['startPosCoordinates'][3]), angle},
                            ['idObject'] = idObject
                        })
                    end
                end
            end
        end
    
        if familyGzInfo['state'] then
            local number_family = text:match('^Информация о семейной территории №(%d+)')
            if number_family then
                familyGzInfo['current_value'] = number_family
                familyGzInfo['temporaryList'] = {
                    owner = "Неизвестно",
                    coins = 0,
                    money = 0,
                    lastWar = "Неизвестно",
                    plan = "Неизвестно",
                    datePlan = "",
                    isWar = false
                }
                return false
            end
    
            local family_owner = text:match('^Сейчас пренадлежит семье: (.+)')
    
            if family_owner then
                familyGzInfo['temporaryList']['owner'] = family_owner
                return false
            end
    
            if text:match('^Сейчас территория никому не пренадлежит.') then
                familyGzInfo['temporaryList']['owner'] = "Без хозяина"
                return false
            end
    
            local now_coins, now_money = text:match("^На территории семейных монет: (%d+)шт, денег: %$(%d+)")
    
            if now_coins and now_money then
                familyGzInfo['temporaryList']['coins'] = now_coins
                familyGzInfo['temporaryList']['money'] = now_money
                return false
            end
    
            local last_war = text:match("^Последний захват был: (.+)")
    
            if last_war then
                familyGzInfo['temporaryList']['lastWar'] = last_war
                return false
            end
            
            local not_planned = text:match("^Встреч не запланировано")
            local planned_first = text:match("^Запланирована встреча с семьей (.+)")
            local planned_or_not = text:match("^На дату: (.+)")
            
            if not_planned then
                familyGzInfo['temporaryList']['plan'] = "Не запланировано"
                familyGzInfo['fullListReserv'][#familyGzInfo['fullListReserv'] + 1] = familyGzInfo['temporaryList']
                return false
            end
            if planned_first then
                familyGzInfo['temporaryList']['plan'] = planned_first
                familyGzInfo['fullListReserv'][#familyGzInfo['fullListReserv'] + 1] = familyGzInfo['temporaryList']
                return false
            end
    
            if planned_or_not then
                familyGzInfo['temporaryList']['datePlan'] = planned_or_not
                return false
            end
    
            local isWarGoing = text:match("^Встреча сейчас не идёт")
    
            if isWarGoing then 
                familyGzInfo['temporaryList']['isWar'] = false
                return false
            end
    
        end
    
        local isFloodChecked = false
    
        local tag, nameAd, idAd, contextAd = text:match("^%{......%}%[(.+)%]%{......%} (.+)%[(%d+)%]: (.+)")
        if tag and tag ~= "ADMIN" and nameAd and idAd and contextAd then
            local contextLowerAd = stringToLower(contextAd)
            if warningsSettings['ad']['state'].v and (contextLowerAd:match('скупаю') or contextLowerAd:match('продам') or contextLowerAd:match('купля') or contextLowerAd:match('продажа') or contextLowerAd:match('куплю') or contextLowerAd:match('sell') or contextLowerAd:match('buy')) then
                adInfo[#adInfo + 1] = {
                    nameAd,
                    idAd,
                    contextAd,
                    os.time(),
                }
                local count_finded = 0
                local first_finded = nil
                for key,val in pairs(adInfo) do
                    if nameAd == val[1] and stringToLower(contextAd) == stringToLower(val[3]) then
                        if not first_finded then
                            first_finded = os.time() - val[4]
                        end
                        count_finded = count_finded + 1
                    end
                end
    
                if count_finded >= warningsSettings['ad']['count'].v and first_finded and os.time() - playerAfkLastTime > 5 then
                    sampAddChatMessage("{F6361C}[Warning | Ad]{36f58f} " .. nameAd  .. "[" .. idAd .. "]{FFFFFF} отправил {DE503A}" .. count_finded .. "{FFFFFF} реклам за " .. first_finded  .. " секунд из " .. warningsSettings['ad']['seconds'].v .. " разрешенных!", -1)
                    sampAddChatMessage("{F6361C}[Warning | Ad] Сообщение: {FFFFFF}" .. contextAd, -1)
                    isFloodChecked = true
                    if warningsSettings['ad']['showForm'].v then
                        if formsIniSettings['show_chat'].v then
                            local keys_accept = keyname(formsHotKey['acceptW'].v)
                            local keys_disband = keyname(formsHotKey['disbandW'].v)
                            sampAddChatMessage('{'.. hex8tohex6(ini.forms.tag_color) ..'}[Warning Form]{'.. hex8tohex6(ini.forms.default_color) ..'} Нажмите клавишу >> {'.. hex8tohex6(ini.forms.color_accept) .. '}' .. tostring(keys_accept) .. '{'.. hex8tohex6(ini.forms.default_color) ..'} << чтобы наказать игрока.',-1)
                            sampAddChatMessage('{'.. hex8tohex6(ini.forms.tag_color) ..'}[Warning Form]{'.. hex8tohex6(ini.forms.default_color) ..'} Чтобы пропустить - нажмите клавишу >> {'.. hex8tohex6(ini.forms.color_disband) .. '}' .. tostring(keys_disband),-1)
                        end
    
                        formsInfoWarnings['isActive'] = true
                        startFormMute("/mute " .. idAd .. ' ' .. warningsSettings['ad']['minutes'].v .. ' ' .. ' ' .. u8:decode(warningsSettings['ad']['muteReason'].v) .. "[" .. count_finded .. " сообщ. за " .. first_finded .. " сек]", idAd, contextAd)
                    end
                end
            end
        end
    
       for k,v in pairs(floodRegExpansion) do
    
            if text:match(v) and not isFloodChecked and os.time() - playerAfkLastTime > 5 then
    
                local nameFlood, idFlood, messageFlood = text:match(v)
                local lowerMessageFlood = stringToLower(messageFlood)
                if messageFlood and warningsSettings['caps']['state'].v then
                    local mod_text = messageFlood
                    orig_mod_text = mod_text
                    mod_text = mod_text:gsub("%s*","")
                    if mod_text:match('[A-Z]+') or mod_text:match('[А-Я]+') then
                        local caps_words_count = 0
                        for w in mod_text:gmatch('([A-Z]+)') do
                            caps_words_count = caps_words_count + len(w)
                        end
                
                        for w in mod_text:gmatch('([А-Я]+)') do
                            caps_words_count = caps_words_count + len(w)
                        end
    
                        local percent_caps = (caps_words_count / len(mod_text)) * 100
                        if percent_caps >= warningsSettings['caps']['percent'].v and caps_words_count > 2 and os.time() - playerAfkLastTime > 5 then
                            sampAddChatMessage("{F6361C}[Warning | Caps]{36f58f} " .. nameFlood  .. "[" .. idFlood .. "]{FFFFFF} составил сообщение состоящее на {DE503A}" .. math.floor((percent_caps * 10) / 10) .. " процентов {FFFFFF}из верхнего регистра", -1)
                            sampAddChatMessage("{F6361C}[Warning | Caps] Сообщение: {FFFFFF}" .. messageFlood, -1)
                            
                            if warningsSettings['caps']['showForm'].v then
                                formsInfoWarnings['isActive'] = true
                                if formsIniSettings['show_chat'].v then
                                    local keys_accept = keyname(formsHotKey['acceptW'].v)
                                    local keys_disband = keyname(formsHotKey['disbandW'].v)
                                    sampAddChatMessage('{'.. hex8tohex6(ini.forms.tag_color) ..'}[Warning Form]{'.. hex8tohex6(ini.forms.default_color) ..'} Нажмите клавишу >> {'.. hex8tohex6(ini.forms.color_accept) .. '}' .. tostring(keys_accept) .. '{'.. hex8tohex6(ini.forms.default_color) ..'} << чтобы наказать игрока.',-1)
                                    sampAddChatMessage('{'.. hex8tohex6(ini.forms.tag_color) ..'}[Warning Form]{'.. hex8tohex6(ini.forms.default_color) ..'} Чтобы пропустить - нажмите клавишу >> {'.. hex8tohex6(ini.forms.color_disband) .. '}' .. tostring(keys_disband),-1)
                                end
                                startFormMute("/mute " .. idFlood .. ' ' .. warningsSettings['caps']['minutes'].v .. ' ' .. ' ' .. u8:decode(warningsSettings['caps']['muteReason'].v), idFlood, nameFlood)
                            end
                        end
                    end
                end
    
                if warningsSettings['flood']['state'].v then
                    floodInfo[#floodInfo + 1] = {
                        nameFlood,
                        idFlood,
                        messageFlood,
                        os.time(),
                    }
                    local count_finded = 0
                    local first_finded = nil
                    for key,val in pairs(floodInfo) do
                        if nameFlood == val[1] and stringToLower(messageFlood) == stringToLower(val[3]) then
                            if not first_finded then
                                first_finded = os.time() - val[4]
                            end
                            count_finded = count_finded + 1
                        end
                    end
    
                    if count_finded >= warningsSettings['flood']['count'].v and first_finded and os.time() - playerAfkLastTime > 5 then
                        sampAddChatMessage("{F6361C}[Warning | Flood]{36f58f} " .. nameFlood  .. "[" .. idFlood .. "]{FFFFFF} отправил {DE503A}" .. count_finded .. "{FFFFFF} одинаковых сообщения за " .. first_finded  .. " секунд из " .. warningsSettings['flood']['seconds'].v .. " разрешенных!", -1)
                        sampAddChatMessage("{F6361C}[Warning | Flood] Сообщение: {FFFFFF}" .. messageFlood, -1)
                        if warningsSettings['flood']['showForm'].v then
                            if formsIniSettings['show_chat'].v then
                                local keys_accept = keyname(formsHotKey['acceptW'].v)
                                local keys_disband = keyname(formsHotKey['disbandW'].v)
                                sampAddChatMessage('{'.. hex8tohex6(ini.forms.tag_color) ..'}[Warning Form]{'.. hex8tohex6(ini.forms.default_color) ..'} Нажмите клавишу >> {'.. hex8tohex6(ini.forms.color_accept) .. '}' .. tostring(keys_accept) .. '{'.. hex8tohex6(ini.forms.default_color) ..'} << чтобы наказать игрока.',-1)
                                sampAddChatMessage('{'.. hex8tohex6(ini.forms.tag_color) ..'}[Warning Form]{'.. hex8tohex6(ini.forms.default_color) ..'} Чтобы пропустить - нажмите клавишу >> {'.. hex8tohex6(ini.forms.color_disband) .. '}' .. tostring(keys_disband),-1)
                            end
    
                            formsInfoWarnings['isActive'] = true
                            startFormMute("/mute " .. idFlood .. ' ' .. warningsSettings['flood']['minutes'].v .. ' ' .. ' ' .. u8:decode(warningsSettings['flood']['muteReason'].v) .. "[" .. count_finded .. " сообщ. за " .. first_finded .. " сек]", idFlood, nameFlood)
                        end
                    end
                end
                
                break
            end
        end
    
    
    
        if text:match("%{FFFFFF%}Сейчас нет вопросов в репорт!") or text:match("%[Ошибка%] {......}Не флуди!") then
            
            if startGPS then
                sampSendChat('/gps')
            end
            
            if reportSettings['hideflood'].v then
                return false
            end
        end


    
        if text:match('Вы телепортировали игрока .+%[ID: %d+%] на координаты: .+,.+,.+') and ignorePlPos then
            ignorePlPos = false
            return false
        end
    
        if text:match('%[Ошибка%] %{......%}Игрок не в сети!') and pesok_info['state'] then
            return false
        end
    
        if formsInfo['isActive'] then
            for k,v in pairs(formErrors) do
                local res_match = text:match(v[1])
                if res_match then
                    local res_warning = ''
                    if v[3] then res_warning = v[2] .. res_match else res_warning = v[2] end
                    sampSendChat('/a ' .. formsInfo['lastNick'] .. '[' .. formsInfo['lastId'] .. '] '.. res_warning) 
                    formsInfo['isActive'] = false
                    formsInfo['isCheckPIp'] = false
                    formsInfo['isCheckIp'] = false
                end
            end

            for k,v in pairs(formPunishStrings) do
                if text:match(v[1]) and v[2] == 'success' then
                    formsInfo['isActive'] = false
                    formsInfo['isCheckPIp'] = false
                    formsInfo['isCheckIp'] = false
                end
            end
        end
    
        if text:match('Администратор .+%[%d+%] ответил игроку .+%[%d+%]:%{......%} .+') then
            local nick,reportnick = text:match('Администратор (.+)%[%d+%] ответил игроку (.+)%[%d+%]:%{......%} .+')
            if count_session['report_now'] > 0 then
                count_session['report_now'] = count_session['report_now'] - 1
            end
    
            if reportSettings['typeReport'].v == 1 then
                for k,v in pairs(listReport) do
                    if v['nick'] == reportnick then
                        table.remove(listReport,k)
                        break
                    end
                end
            end
    
            checkersInfo['admins_active'][nick] = os.time()
        end
        
        -- print('color => '..color .. ' | '.. bit.tohex(color) .. ' | text =>' .. text)
    
        local lvl, myName = text:match("^%[MakeAdmin%] .*%[%d+%] установил (%d+) %[.*%] уровень администратора игроку (.*)")
        if lvl and myName and myName == nickplayerbyid then
            mainini['adminlvl'].v = lvl
            ini.main.adminlvl = mainini['adminlvl'].v
            save()
        end
    
        local namelvladmin = text:match('^%[.+%] Вы успешно авторизовались как %{......%}(.*)')
        if namelvladmin then
            
                updateWallHack()
                crackAccept()
                mainini['adminlvl'].v = adminNamesTable[namelvladmin]
                ini.main.adminlvl = mainini['adminlvl'].v
                save()
                result,idplayer = sampGetPlayerIdByCharHandle(PLAYER_PED)
            lua_thread.create(function()
                if mainini['azafter'].v then
                    sampSendChat('/az')
                end
                wait(300)
                if mainini['autojobchatlog'].v then
                    sampSendChat('/jobchatlog')
                end
                wait(300)
                if mainini['interiorafterstate'].v then
                    sampSendChat('/gotoint '.. mainini['interiorafterint'].v) 
                end
        
                wait(300)
                sampSendChat('/wallhack')
        
                if mainini['coordsafterstate'].v then
                    if mainini['coordsafter'].v:match('(.+) (.+) (.+)') then 
                        arg1,arg2,arg3 = mainini['coordsafter'].v:match('(.+) (.+) (.+)')
                        setCharCoordinates(PLAYER_PED,arg1,arg2,arg3)
                        sampAddChatMessage('{2DF61C}[Телепорт]{FFFFFF} Вы успешно телепортировались в координаты по X: ' .. arg1 .. ' Y: '.. arg2 .. ' Z: ' ..arg3,-1)
                    else 
                        sampAddChatMessage('{F6361C}[Ошибка] Координаты для телепорта после входа указаны неверно!')
                    end
                end
                wait(300)
                if mainini['iintstate'].v then
                    sampSendChat('/iint ' .. mainini['iintnumber'].v)
                end
                wait(300)
                if mainini['organisationafter'].v and mainini['organisation'].v > 0 then
                    sampSendChat('/amember '.. mainini['organisation'].v ..' 9')
                end
                wait(300)
                if mainini['skinafter'].v then
                    sampSendChat('/setskin ' .. idplayer .. ' ' .. mainini['numberskin'].v .. ' 0')
                end
                wait(300)
                if mainini['autoinv'].v then
                    sampSendChat('/inv')
                end


                
                wait(300)
                if mainini['msgstate'].v and #mainini['msgbuffer'].v > 0 then
                    sampSendChat(u8:decode('/a '.. mainini['msgbuffer'].v))
                end
        
                wait(300)
                if mainini['autoquest'].v then
                    startquest = true
                    sampSendChat('/apanel')
                end
        
                if window == 0 then
                    --ShowMessage("Вы успешно авторизовались в системе администрирования!", "Подключение к серверу", 49)
                end
        
            end)
        end 
    
    
        if mainini['hideadm'].v then
            if text:match('.+%[%d+%] Заспавнил игрока .+%[%d+%]%!') or text:match('%[A%] Администратор .*%[%d+%] дал поджопник .*%[%d+%]') or text:match("%[A%] .*%[%d+%] флип%'нул игрока .* %[ID%:%d+%]") or text:match('%[A%] Администратор .*%[%d+%] выдал временную машину игроку .*%[%d+%] %[%d+%]') or text:match('%[.*%] Телепортировал к себе авто%, index%: %d+') or text:match('%[A%] .*%[%d+] зареспавнил авто под id%: %d+') or text:match('.*%[%d+%] начал следить за .*%[%d+%]') or text:match('%[.+%] Телепортировал к себе игрока .+%[%d+%]') then
                return false
            end            
        end
    
        if not formsInfo['isAccept'] then
            startquest = false
        end
    
    
        ----------------------------------chatscolors-----------------
    
        local onlycolor = {
            ['.+%[%d+%] начал следить за .+%[%d+%]'] = ini.colorchats.recon,
            ['Администратор .+%[%d+%] ответил игроку .+%[%d+%]%:%{......%} .+'] = ini.colorchats.reportanswer,
            ['%[A%] Администратор .+%[%d+%] выдал временную машину игроку .+%[%d+%] %[%d+%]'] = ini.colorchats.plveh,
            ['.+%[%d+%] Заспавнил игрока .+%[%d+%]%!'] = ini.colorchats.spawn,
            ['%[A%] .+%[%d+%] зареспавнил авто под id%: %d+'] = ini.colorchats.spcar,
            ["%[A%] .+%[%d+%] флип%'нул игрока .+ %[ID%:%d+%]"] = ini.colorchats.flips,
            ['%[.+%] Телепортировал к себе авто%, index%: %d+'] = ini.colorchats.getherecar,
            ['%[A%] Администратор .+%[%d+%] дал поджопник .+%[%d+]'] = ini.colorchats.slap,
            ['%[A%] .+%[%d+%] написал игроку .+%[%d+%]%:%{......%} .+'] = ini.colorchats.pm,
            ['%[A%] .+ %[ID%: %d+%] выдал .+ игроку .+%[%d+%] %!'] = ini.colorchats.givegun,
            ['Администратор .+%[%d+%] посадил игрока .+%[%d+%] в деморган на %d+ минут%. Причина%: .+'] = ini.colorchats.jail,
            ['%[AdmWarn%] Игрок .+%[%d+%] нашёл отмычку в тюрьме %(найдено за игру%:  %d+шт%. %| последний раз находил%: .+ назад%)'] = ini.colorchats.key,
            ['Администратор .+ выпустил игрока .+%, причина%: .+'] = ini.colorchats.unjail,
            ['Администратор .+%[%d+%] заглушил игрока .+%[%d+%] на %d+ минут%. Причина%: .+'] = ini.colorchats.mute,
            ['Администратор .+ снял заглушку с игрока .+%, причина%: .+'] = ini.colorchats.unmute,
            ['Администратор .+%[%d+%] кикнул игрока .+%[%d+]%. Причина%: .+'] = ini.colorchats.kick,
            ['Администратор .+%[%d+%] выдал предупреждение игроку .+'] = ini.colorchats.warn,
            ['Администратор .+%[%d+%] забанил игрока .+%[%d+%] на .+ дней%. Причина%: .+'] = ini.colorchats.ban,
            ['Администратор .+ забанил в оффлайне игрока .+%. Причина%: .+'] = ini.colorchats.banoff,
            ['%[Подозрение на рекламу%] .+%[%d+%]%: %[.+%]'] = ini.colorchats.warnreklam,
            ['Игрок%/админ .+%[%d+%] зашел %[reg ip%:.+%] %-%- %[norm ip%: .+%]'] = ini.colorchats.reg,
            ['Администратор .+ заморозил игрока .+'] = ini.colorchats.freeze,
            ['Администратор .+ разморозил игрока .+'] = ini.colorchats.unfreeze,
            ['%[.+%] Телепортировал к себе игрока .+%[%d+%]'] = ini.colorchats.gethere,
            ['%<Warning%> .+%[%d+%] открыл%(.+%) .+ клад %(в игре%: .+%)%, приз%: .+ %| .+'] = ini.colorchats.warnklad,
            ['Предыдущий клад был открыт .+ назад%, расстояние до него%: .+'] = ini.colorchats.warnklad,
            ['%[A%] .+%[%d+%] купил транспорт по госу %(.+%)%, цена%: .+%, салон%: .+'] = ini.colorchats.buycar,
            ['.+ %[%d+%] купил дом ID%: %d+ по гос%. цене за .+ ms%! Капча%: %(%d+ %| %d+%)'] = ini.colorchats.buyhouse,
            ['Администратор .+%[%d+%] забанил игрока .+%[%d+%]%. Причина%: .+'] = ini.colorchats.banip,
            ['Игрок .+%[%d+%] %[IP%: .+%] перевел игроку .+%[%d+%] %[IP%: .+] на счет .+ %[.+%]'] = ini.colorchats.transfer,
            ['Администратор .+ установил в оффлайне %d+ минут деморгана игроку .+%. Причина%: .+'] = ini.colorchats.jailoff,
            ['Администратор .+ в оффлайне выдал варн игроку .+ %(%d+%/%d+%)%, причина%: .+'] = ini.colorchats.warnoff,
            ['%[A%] .+ выдал оружие .+ %d+ игрокам%!'] = ini.colorchats.gunall,
            ['%[A%] .+ выдал здоровье .+ игрокам%!'] = ini.colorchats.hpall,
            ['%[A%] .+ заспавнил %d+ игроков%!'] = ini.colorchats.spplayers,
            ['%[A%] .+%[%d+%] установил скин %[ID%: %d+%] игроку .+%[%d+%]'] = ini.colorchats.giveskin,
            ['%[A%] .+ выдал голод %d+ игрокам%!'] = ini.colorchats.eatall,
            ['Администратор .+ заморозил игроков в своём радиусе'] = ini.colorchats.freezeall,
            ['Администратор .+ разморозил игроков в своём радиусе'] = ini.colorchats.unfreezeall,
            ['%[A%] .+ выдал броню %d+ игрокам%!'] = ini.colorchats.armourall,
            ['%[A%] .+ забрал броню у %d+ игроков%!'] = ini.colorchats.unarmourall,
            ['%[A%] .+ выдал игнор звезд %d+ игрокам%!'] = ini.colorchats.azakon,
            ['Администратор .+ разбанил игрока .+%, причина%: .+'] = ini.colorchats.unban,
        }
    
        
        if text:match('%[A%] .+%[%d+%]%: %[Forma%] +') then
            if formsInfo['isActive'] and not formsInfo['isAccepted'] then
                sampAddChatMessage("[A-Form] Форма уже была принята.",0xA9A9A9)
                formsInfo['isAccepted'] = true
            end
            return false
        end
        
        if text:match('%[A%] [%[%d+%]]*[A-Za-z_]+%[%d+%]%: .*') then
    
            if not isGamePaused() and not isPauseMenuActive() then
                for k,v in pairs(accessesForms) do
                    if k == text:match('^%[A%] [%[%d+%]]*[A-Za-z_]+%[%d+%]%: /(%w+)') and formsInfo['isAccept'] then
                        local user,userid,context = text:match('%[A%] [%[%d+%]]*([A-Za-z_]+)%[(%d+)%]%: /(.*)')
                        
                        if formsIniSettings['colored_form'].v then
                            local main, context_nor = text:match('(%[A%] [%[%d+%]]*[A-Za-z_]+%[%d+%]%: )(.*)')
                            text = main .. '{'..hex8tohex6(ini.forms.colored_form_color)..'}' .. context_nor
                        end
        
                        
    
                        formsInfo['isAccepted'] = false
                        formsInfo['isKeyAccept'] = false
                        formsInfo['isKeyDisband'] = false
                        if formsSettings[k]['accept'] and not formsSettings[k]['auto_accept'] then
                            if formsSettings[k]['sound'] then
                                if doesFileExist(workdir .. "\\resource\\RoboScripts\\RoboTools\\sounds\\" .. formsIniSettings['sound_url'].v) and loadAudioStream(workdir .. "\\resource\\RoboScripts\\RoboTools\\sounds\\" .. formsIniSettings['sound_url'].v) then
                                    local sound = loadAudioStream(workdir .. "\\resource\\RoboScripts\\RoboTools\\sounds\\" .. formsIniSettings['sound_url'].v)
                                    setAudioStreamState(sound,as_action.PLAY)
                                    setAudioStreamVolume(sound,formsIniSettings['volume'].v * 0.1)
                                end
                            end
    
                            formsInfo['isActive'] = true
                            startForm(user,userid,context)
                            local keys_accept = keyname(formsHotKey['accept'].v)
                            local keys_disband = keyname(formsHotKey['disband'].v)
                            if formsIniSettings['show_chat'].v then
                                sampAddChatMessage('{'.. hex8tohex6(ini.forms.tag_color) ..'}[A-Form]{'.. hex8tohex6(ini.forms.default_color) ..'} Пришла форма >> {'..hex8tohex6(ini.forms.colored_form_color)..'}/'.. context .. ' {'.. hex8tohex6(ini.forms.default_color) ..'}<< Отправитель: {' .. hex8tohex6(ini.forms.color_author) .. '}' .. user .. '['..userid..']',-1)
                                sampAddChatMessage('{'.. hex8tohex6(ini.forms.tag_color) ..'}[A-Form]{'.. hex8tohex6(ini.forms.default_color) ..'} Нажмите клавишу >> {'.. hex8tohex6(ini.forms.color_accept) .. '}' .. tostring(keys_accept) .. '{'.. hex8tohex6(ini.forms.default_color) ..'} << чтобы принять форму.',-1)
                                sampAddChatMessage('{'.. hex8tohex6(ini.forms.tag_color) ..'}[A-Form]{'.. hex8tohex6(ini.forms.default_color) ..'} Чтобы отклонить форму - нажмите клавишу >> {'.. hex8tohex6(ini.forms.color_disband) .. '}' .. tostring(keys_disband),-1)
                            end
                        end
                    
    
                        if formsSettings[k]['auto_accept'] then
                            formsInfo['isActive'] = true
    
                            sampAddChatMessage('{'.. hex8tohex6(ini.forms.tag_color) ..'}[A-Form]{'.. hex8tohex6(ini.forms.default_color) ..'} Форма >> {'..hex8tohex6(ini.forms.colored_form_color)..'}/'.. context .. ' {'.. hex8tohex6(ini.forms.default_color) ..'}<< Отправитель: {' .. hex8tohex6(ini.forms.color_author) .. '}' .. user .. '['..userid..']{'.. hex8tohex6(ini.forms.default_color) ..'} была принята автоматически!',-1)
                            workerForm(context,user,userid)
                        end
    
                    end
                end
            end
    
    
            local user,userid,context = text:match('%[A%] [%[%d+%]]*([A-Za-z_]+)%[(%d+)%]%: (.*)')
    
            local merged = table_merge(checkersInfo['admins']['eight'],checkersInfo['admins']['seven'],checkersInfo['admins']['six'],checkersInfo['admins']['five'],checkersInfo['admins']['four'],checkersInfo['admins']['three'],checkersInfo['admins']['two'],checkersInfo['admins']['one'])
            
            local colorsAdm = {
                ini.adminsChecker.one,
                ini.adminsChecker.two,
                ini.adminsChecker.three,
                ini.adminsChecker.four,
                ini.adminsChecker.five,
                ini.adminsChecker.six,
                ini.adminsChecker.seven,
                ini.adminsChecker.eight,
            }
            local res_color = ''
            local is_finded_default = false
            for k,v in pairs(merged) do
                if v['nick'] == user then
                    is_finded_default = true
                    res_color = '{' .. hex8tohex6(colorsAdm[tonumber(v['lvl'])]) .. '}'
                end
            end
    
            if not is_finded_default then
                for k,v in pairs(specialsTable) do
                    if v[1] == user then
                        res_color = '{' .. hex8tohex6(colorsAdm[tonumber(9 - tonumber(v[2]))]) .. '}'
                    end
                end
            end
    
            text = '[A] ' ..res_color.. '' ..user..'['..userid..']:{'..hex8tohex6(ini.colorchats.admin)..'} '.. hideIP(context)
    
    
            if user == nickplayerbyid then
                text = '[A] {'..hex8tohex6(ini.colorchats.nick)..'}'..user..'['..userid..']:{'..hex8tohex6(ini.colorchats.admin)..'} '.. hideIP(context)
            end
    
    
    
            
            return {'0x' .. ini.colorchats.admin,text}
        end
    
        if text:match('%[Жалоба%] от .+%[%d+%]%:%{......%} .+') then
    
            if text:match('%[Жалоба%] от .+%[%d+%]%:%{......%} .+%. Уже %d+ жалоб%!%!%!') then
                local user,userid,context,count = text:match('%[Жалоба%] от (.+)%[(%d+)%]%:%{......%} (.+)%. Уже (%d+) жалоб%!%!%!')
                count_session['report_now'] = tonumber(count)
                local begining = '[Жалоба] от '..user..'['..userid..']:{FFFFFF} '
                local con_result = begining .. context ..'. Уже {'..hex8tohex6(ini.colorchats.reportcount)..'}'.. count ..'{FFFFFF} жалоб!!!'
                sampAddChatMessage(con_result,'0x'.. hex8tohex6(ini.colorchats.report))
    
            else
    
                local user,userid,context = text:match('%[Жалоба%] от (.+)%[(%d+)%]%:%{......%} (.+)')
                local begining = '[Жалоба] от '..user..'['..userid..']:{FFFFFF} '
                local con_result = begining .. context
    
                if reportSettings['typeReport'].v == 1 then
                    listReport[#listReport + 1] = {['nick'] = user, ['id'] = userid,['context'] = context}
                    count_session['report_now'] = tonumber(#listReport)
                    con_result = con_result .. '. Уже {'..hex8tohex6(ini.colorchats.reportcount)..'}'.. #listReport ..'{FFFFFF} жалоб!!!'
                end
    
                sampAddChatMessage(begining .. context,'0x'.. hex8tohex6(ini.colorchats.report))
                
            end
    
            if formsInfo['isAccept'] and reportSettings['autoot'].v and reportSettings['typeot'].v == 1 and sampGetGamestate() == 3 and not isGamePaused() and not isPauseMenuActive() then
                sampSendChat('/ot')
            end
            return false
        end
    
    
        for k,v in pairs(onlycolor) do
            if text:match(k) then
                return {'0x'..v,text}
            end
        end
    
    
        if check_game or check_game_report then
            if text:match("Игрок .+%[%d+%] подключен с %{......%}PC Launcher'a и у него есть voice!") then 
                if check_game then
                    reconInfo['game'] = u8'{4EFF2B}Лаунчер' 
                    check_game = false 
                end
    
                if check_game_report then
                    reportInfo['game'] = u8'{4EFF2B}Лаунчер' 
                    check_game_report = false 
                end
    
                return false
            end
            if text:match('Игрок .+%[%d+%] подключен с %{......%}неофициального клиента %- нет voice!') then 
                if check_game then
                    reconInfo['game'] = u8'{FF2B2B}Клиент' 
                    check_game = false 
                end
    
                if check_game_report then
                    reportInfo['game'] = u8'{FF2B2B}Клиент' 
                    check_game_report = false 
                end
    
                return false 
            end
            if text:match("Игрок .+%[%d+%] подключен с %{......%}Mobile Launcher'a и у него есть voice!") then 
                if check_game then
                    reconInfo['game'] = u8'{4EFF2B}Мобайл' 
                    check_game = false 
                end
    
                if check_game_report then
                    reportInfo['game'] = u8'{4EFF2B}Мобайл' 
                    check_game = false 
                end
    
                return false 
            end
        end
    
        if (text:match("^%[CheckHouse ID: %d+%] Name: .+ | Владелец: .+ | Деньги: %d+%$") or text:match("^Подселен: .+ | Стоимость за PayDay: %$%d+")) and formsInfo['isCheckHouse'] then
            if text:match("^%[CheckHouse ID: %d+%] Name: .+ | Владелец: .+ | Деньги: %d+%$") then
                lua_thread.create(function() 
                    wait(100)
                    formsInfo['isCheckHouse'] = false
                    formsInfo['isActive'] = false
                end)
            end
            sampSendChat("/a " .. text)
            return false
        end
    
        if ((text:match('^%- %- %- %- Совпадение с: .+%. %- %- %- %-') and color == -1714683649) or (text:match('^ ') and color == -1714683649) or (text:match('^%- (.*)%[(%d+)%]') and color == -89368321 )) then
            local simIp = text:match('^%- %- %- %- Совпадение с: (.+)%. %- %- %- %-')
            if simIp and formsInfo['isCheckPIp'] and not pesok_info['state'] and not pesok_info['stopping'] then
                infoPGetIP = {}
                lua_thread.create(function() 
                    wait(10)
                    sampSendChat("/a [PGETIP] На IP: " .. hideIP(simIp) .. " найдено " .. #infoPGetIP .. " аккаунтов.")
                    
                    for k,v in pairs(infoPGetIP) do
                        wait(200)
                        sampSendChat("/a [" .. k .. "] " .. v[1] .. '[' .. v[2] ..']')
                    end
    
                    formsInfo['isCheckPIp'] = false
    
                end)
            end
    
            if simIp and not formsInfo['isCheckPIp'] and not pesok_info['state'] and not pesok_info['stopping'] then
                infoPGetIP = {}
                lua_thread.create(function()
                    wait(10)
    
                    sampAddChatMessage("[PGETIP] На IP: " .. hideIP(simIp) .. " найдено " .. #infoPGetIP .. " аккаунтов.",-1)
                    for k,v in pairs(infoPGetIP) do
                        sampAddChatMessage("[" .. k .. "] " .. v[1] .. '[' .. v[2] ..']',-1)
                    end
                end)
            end
    
            if simIp and pesok_info['state'] and not formsInfo['isCheckPIp'] and not pesok_info['stopping'] then
                if #pesok_info['temporary_suspicions'] > 1 then
                    pesok_info['suspicions'][#pesok_info['suspicions'] + 1] = {simIp, pesok_info['temporary_suspicions']}
                end
                pesok_info['temporary_suspicions'] = {}
            end
    
            local toTableNick,toTableID = text:match('^%- (.*)%[(%d+)%]')
            if toTableNick and toTableID and not pesok_info['stopping'] then
                
    
                if pesok_info['state'] then
                    local is_exist = false
                    for k,v in pairs(pesok_info['suspicions']) do
                        for key,val in pairs(v[2]) do
                            if val[1] == toTableNick then
                                is_exist = true
                            end
                        end
                    end
                    if not is_exist then
                        pesok_info['temporary_suspicions'][#pesok_info['temporary_suspicions'] + 1] = {toTableNick, toTableID} 
                    end
                else
                    infoPGetIP[#infoPGetIP + 1] = {toTableNick, toTableID}
                end
            end
    
            return false
        end
    
    
        if text:match('Nick %[.+%]  R%-IP %[.+%]  IP %| A%-IP %[%{......%}.+ %| .+%{......%}%]') then 
            nick_steal,reg_steal,last_steal,aip_steal = text:match('Nick %[(.+)%]  R%-IP %[(.+)%]  IP %| A%-IP %[%{......%}(.+) %| (.+)%{......%}%]') 
            if not prov_info['state'] then     
                ipData['nick_steal'] = nick_steal
                ipData['reg_steal'] = reg_steal
                ipData['last_steal'] = last_steal
                ipData['aip_steal'] = aip_steal
                checkip(reg_steal,last_steal,function(lipinf)
                    if lipinf[1] then
                        if not checkiprec and not formsInfo.isCheckIp then
                            local regVPN = "Не используется"
                            if lipinf[2].reg.proxy then regVPN = "Используется" end
                            local lastVPN = "Не используется"
                            if lipinf[2].last.proxy then lastVPN = "Используется" end

                            local regHosting = "Не используется"
                            if lipinf[2].reg.hosting then regHosting = "Используется" end
                            local lastHosting = "Не используется"
                            if lipinf[2].last.hosting then lastHosting = "Используется" end
                            sampAddChatMessage('[Ник] {' .. hex8tohex6(ini.colorchats.colorValuesGetip) .. "}"..nick_steal..'{' .. hex8tohex6(ini.colorchats.colorTextGetip) ..'} | R-IP {'.. hex8tohex6(ini.colorchats.colorTagsGetip) ..'}['..hideIP(reg_steal)..'] {'.. hex8tohex6(ini.colorchats.colorTextGetip) ..'}A-IP {'.. hex8tohex6(ini.colorchats.colorTagsGetip) ..'}['..hideIP(aip_steal)..'] {'.. hex8tohex6(ini.colorchats.colorTextGetip) ..'}L-IP {'.. hex8tohex6(ini.colorchats.colorTagsGetip) ..'}['..hideIP(last_steal)..']','0x'..hexrgba2hexargb(ini.colorchats.colorTagsGetip))
                            sampAddChatMessage('[Страна] {' .. hex8tohex6(ini.colorchats.colorTextGetip) ..'}REG {' .. hex8tohex6(ini.colorchats.colorTireGetip) ..'}- {' .. hex8tohex6(ini.colorchats.colorTagsGetip) ..'}['.. u8:decode(lipinf[2].reg.country) .. '] {' .. hex8tohex6(ini.colorchats.colorTextGetip) ..'}LAST {' .. hex8tohex6(ini.colorchats.colorTireGetip) ..'}- {' .. hex8tohex6(ini.colorchats.colorTagsGetip) ..'}['.. u8:decode(lipinf[2].last.country)..']','0x'..hexrgba2hexargb(ini.colorchats.colorTagsGetip))
                            sampAddChatMessage('[Город] {' .. hex8tohex6(ini.colorchats.colorTextGetip) ..'}REG {' .. hex8tohex6(ini.colorchats.colorTireGetip) ..'}- {' .. hex8tohex6(ini.colorchats.colorTagsGetip) ..'}['.. u8:decode(lipinf[2].reg.city) .. '] {' .. hex8tohex6(ini.colorchats.colorTextGetip) ..'}LAST {' .. hex8tohex6(ini.colorchats.colorTireGetip) ..'}- {' .. hex8tohex6(ini.colorchats.colorTagsGetip) ..'}['.. u8:decode(lipinf[2].last.city)..']','0x'..hexrgba2hexargb(ini.colorchats.colorTagsGetip))
                            sampAddChatMessage('[Провайдер] {' .. hex8tohex6(ini.colorchats.colorTextGetip) ..'}REG {' .. hex8tohex6(ini.colorchats.colorTireGetip) ..'}- {' .. hex8tohex6(ini.colorchats.colorTagsGetip) ..'}['.. u8:decode(lipinf[2].reg.provider) .. '] {' .. hex8tohex6(ini.colorchats.colorTextGetip) ..'}LAST {' .. hex8tohex6(ini.colorchats.colorTireGetip) ..'}- {' .. hex8tohex6(ini.colorchats.colorTagsGetip) ..'}['.. u8:decode(lipinf[2].last.provider)..']','0x'..hexrgba2hexargb(ini.colorchats.colorTagsGetip))
                            sampAddChatMessage('[Прокси] {' .. hex8tohex6(ini.colorchats.colorTextGetip) ..'}REG {' .. hex8tohex6(ini.colorchats.colorTireGetip) ..'}- {' .. hex8tohex6(ini.colorchats.colorTagsGetip) ..'}['..regVPN.. '] {' .. hex8tohex6(ini.colorchats.colorTextGetip) ..'}LAST {' .. hex8tohex6(ini.colorchats.colorTireGetip) ..'}- {' .. hex8tohex6(ini.colorchats.colorTagsGetip) ..'}['.. lastVPN ..']','0x'..hexrgba2hexargb(ini.colorchats.colorTagsGetip))
                            sampAddChatMessage('[Хостинг] {' .. hex8tohex6(ini.colorchats.colorTextGetip) ..'}REG {' .. hex8tohex6(ini.colorchats.colorTireGetip) ..'}- {' .. hex8tohex6(ini.colorchats.colorTagsGetip) ..'}['..regHosting.. '] {' .. hex8tohex6(ini.colorchats.colorTextGetip) ..'}LAST {' .. hex8tohex6(ini.colorchats.colorTireGetip) ..'}- {' .. hex8tohex6(ini.colorchats.colorTagsGetip) ..'}['.. lastHosting ..']','0x'..hexrgba2hexargb(ini.colorchats.colorTagsGetip))
                            sampAddChatMessage('[Расстояние] {' .. hex8tohex6(ini.colorchats.colorTextGetip) ..'}Между городами: {' .. hex8tohex6(ini.colorchats.colorValuesGetip) ..'}~'..lipinf[2].distance..'{' .. hex8tohex6(ini.colorchats.colorTextGetip) ..'} км','0x'..hexrgba2hexargb(ini.colorchats.colorTagsGetip))
                            local keys_open = "Не указана"
                            if hotkeysTable['main'][20] ~= nil and hotkeysTable['main'][20].v ~= nil then
                                keys_open = keyname(hotkeysTable['main'][20].v)
                            end
                            sampAddChatMessage('[GET-IP]{'.. hex8tohex6(ini.colorchats.colorTextGetip) ..'} Нажмите клавишу >> {'.. hex8tohex6(ini.forms.color_accept) .. '}' .. tostring(keys_open) .. '{'.. hex8tohex6(ini.colorchats.colorTextGetip) ..'} << чтобы вывести информацию в диалог.','0x'..hexrgba2hexargb(ini.colorchats.colorTagsGetip))
                        elseif checkiprec then
                            if tonumber(lipinf[2].distance) > 300 and lipinf[2].reg.provider ~= lipinf[2].last.provider and lipinf[2].reg.country ~= lipinf[2].last.country then
                                reconInfo['steal'] = true
                            else
                                reconInfo['steal'] = false
                            end
                            checkiprec = false
                        end
            
                        if not checkiprec and formsInfo.isCheckIp then
                            local regVPN = "Не используется"
                            if lipinf[2].reg.proxy then regVPN = "Используется" end
                            local lastVPN = "Не используется"
                            if lipinf[2].last.proxy then lastVPN = "Используется" end

                            local regHosting = "Не используется"
                            if lipinf[2].reg.hosting then regHosting = "Используется" end
                            local lastHosting = "Не используется"
                            if lipinf[2].last.hosting then lastHosting = "Используется" end

                            sampSendChat('/a [Ник] '..nick_steal..' | R-IP ['..reg_steal..'] A-IP ['..aip_steal..'] L-IP ['..last_steal..']',-1)
                            wait(200)
                            sampSendChat('/a [Страна] REG - ['.. u8:decode(lipinf[2].reg.country) .. '] LAST - ['.. u8:decode(lipinf[2].last.country)..']',-1)
                            wait(200)
                            sampSendChat('/a [Город] REG - ['.. u8:decode(lipinf[2].reg.city) .. '] LAST - ['.. u8:decode(lipinf[2].last.city)..']',-1)
                            wait(200)
                            sampSendChat('/a [Провайдер] REG - ['.. u8:decode(lipinf[2].reg.provider) .. '] LAST - ['.. u8:decode(lipinf[2].last.provider)..']',-1)
                            wait(200)
                            sampSendChat('/a [Прокси] REG - ['.. regVPN .. '] LAST - ['.. lastVPN ..']',-1)
                            wait(200)
                            sampSendChat('/a [Хостинг] REG - ['.. regHosting .. '] LAST - ['.. lastHosting ..']',-1)
                            wait(200)
                            sampSendChat('/a [Расстояние] Между городами: ~'..lipinf[2].distance..' км',-1)
                            formsInfo['isCheckIp'] = false
                        end
                    else
                        checkiprec = false
                        formsInfo['isCheckIp'] = false
                    end
                end)
            else

            end
            return false
        end
        
    
        if text:match('%[Ошибка%] %{......%}Наблюдается попытка взлома!') then
            formsInfo['isAccept'] = false
            return {-1,'{F6361C}[ACCEPT]{FFFFFF} У вас отсутствует подтверждение прав администратора. Введите /qaccadmin для подтверждения прав.'}
        end
        
        if text:match('^Вам подтвердили права на админа.') or text:match('^Вы подтвердили права на админа.') then
            formsInfo['isAccept'] = true
            return {-1,'{2DF61C}[ACCEPT]{FFFFFF} Права администратора успешно подтверждены. Приятного администрирования!'}
        end
    
            if text:match('%{......%}Администрация онлайн: %(в сети: %d+, из них в АФК: %d+%)') then
                local online,afk = text:match('%{......%}Администрация онлайн: %(в сети: (%d+), из них в АФК: (%d+)%)')
                checkersInfo['admins_reserve'] = clone(checkersInfo['admins'])
                checkersInfo['admins'] = {
                    ['online'] = online,
                    ['afk'] = afk,
                    ['eight'] = {},
                    ['seven'] = {},
                    ['six'] = {},
                    ['five'] = {},
                    ['four'] = {},
                    ['three'] = {},
                    ['two'] = {},
                    ['one'] = {},
                }
    
    
                if checkersSettings['admins']['state'].v then
                    return false
                end
    
    
    
            end
    
            if text:match('%{......%}.*%[%d+%] %- %[%d+ lvl]  %{......%} %- %{......%}%/re (%d+)%- %[AFK: %d+%]%{......%} %- Репутация%: (.+)') then
                local nick,id,lvl,reconer,afk,reputation = text:match('%{......%}(.*)%[(%d+)%] %- %[(%d+) lvl]  %{......%} %- %{......%}%/re (%d+)%- %[AFK: (%d+)%]%{......%} %- Репутация%: (.+)')
                local result_table = {
                    ['nick'] = nick,
                    ['id'] = id,
                    ['lvl'] = lvl,
                    ['reconer'] = reconer,
                    ['afk'] = afk,
                    ['reputation'] = tonumber(reputation),
                }
                if reconInfo['status'].v and (reconInfo['nick'] == nick or reconInfo['adminSpecNick'] == id) then 
                    reconInfo['adminSpecNick'] = id
                    if reconInfo['adminSpecId'] ~= reconer then
                        
                        reconInfo['adminSpecId'] = reconer
                    
                        sampSendChat("/re " .. reconer) 
                    end
                end
                count_active(nick)
                if similar_reputation ~= nil then
                    similar_reputation(id,tonumber(reputation))
                end
                if tonumber(lvl) == 1 then
                    checkersInfo['admins']['one'][#checkersInfo['admins']['one'] + 1] = result_table
                elseif tonumber(lvl) == 2 then
                    checkersInfo['admins']['two'][#checkersInfo['admins']['two'] + 1] = result_table
                elseif tonumber(lvl) == 3 then
                    checkersInfo['admins']['three'][#checkersInfo['admins']['three'] + 1] = result_table
                elseif tonumber(lvl) == 4 then
                    checkersInfo['admins']['four'][#checkersInfo['admins']['four'] + 1] = result_table
                elseif tonumber(lvl) == 5 then
                    checkersInfo['admins']['five'][#checkersInfo['admins']['five'] + 1] = result_table
                elseif tonumber(lvl) == 6 then
                    checkersInfo['admins']['six'][#checkersInfo['admins']['six'] + 1] = result_table
                elseif tonumber(lvl) == 7 then
                    checkersInfo['admins']['seven'][#checkersInfo['admins']['seven'] + 1] = result_table
                elseif tonumber(lvl) == 8 then
                    checkersInfo['admins']['eight'][#checkersInfo['admins']['eight'] + 1] = result_table
                end
    
    
                if checkersSettings['admins']['state'].v then
                    return false
                end
    
            end
    
            if text:match('%{......%}.*%[%d+%] %- %[%d+ lvl%] %-%{......%} %[AFK%: %d+]%{......%} %- Репутация: (.+)') then
                local nick,id,lvl,afk,reputation = text:match('%{......%}(.*)%[(%d+)%] %- %[(%d+) lvl%] %-%{......%} %[AFK%: (%d+)]%{......%} %- Репутация: (.+)')
                local result_table = {
                    ['nick'] = nick, 
                    ['id'] = id,
                    ['lvl'] = lvl,
                    ['reconer'] = nil,
                    ['afk'] = afk,
                    ['reputation'] = tonumber(reputation),
                }

                if reconInfo['status'].v and reconInfo['adminSpecNick'] == id then 
                    reconInfo['adminSpecNick'] = ""
                    reconInfo['adminSpecId'] = -1
                    sampSendChat("/re " .. id) 
                end
                count_active(nick)
                if similar_reputation ~= nil then
                    similar_reputation(id,tonumber(reputation))
                end
                if tonumber(lvl) == 1 then
                    checkersInfo['admins']['one'][#checkersInfo['admins']['one'] + 1] = result_table
                elseif tonumber(lvl) == 2 then
                    checkersInfo['admins']['two'][#checkersInfo['admins']['two'] + 1] = result_table
                elseif tonumber(lvl) == 3 then
                    checkersInfo['admins']['three'][#checkersInfo['admins']['three'] + 1] = result_table
                elseif tonumber(lvl) == 4 then
                    checkersInfo['admins']['four'][#checkersInfo['admins']['four'] + 1] = result_table
                elseif tonumber(lvl) == 5 then
                    checkersInfo['admins']['five'][#checkersInfo['admins']['five'] + 1] = result_table
                elseif tonumber(lvl) == 6 then
                    checkersInfo['admins']['six'][#checkersInfo['admins']['six'] + 1] = result_table
                elseif tonumber(lvl) == 7 then
                    checkersInfo['admins']['seven'][#checkersInfo['admins']['seven'] + 1] = result_table
                elseif tonumber(lvl) == 8 then
                    checkersInfo['admins']['eight'][#checkersInfo['admins']['eight'] + 1] = result_table
                end
    
                if checkersSettings['admins']['state'].v then
                    return false
                end
    
            end
    
        
        if text:match('%[.+%] Лидер .*%[id: (%d+)%], Замы: %d+ чел, Состав: %d+ чел %(из них афк: %d+%)') then
            local org,nick,online,deputies,members,membersafk = text:match('%[(.+)%] Лидер (.*)%[id: (%d+)%], Замы: (%d+) чел, Состав: (%d+) чел %(из них афк: (%d+)%)')
            if tonumber(online) == 65535 then
                online = 'OFF'
            end
    
            checkersInfo['leaders'][org]['nick'] = nick
            checkersInfo['leaders'][org]['id'] = online
            checkersInfo['leaders'][org]['deputies'] = deputies
            checkersInfo['leaders'][org]['members'] = members
            checkersInfo['leaders'][org]['membersafk'] = membersafk
    
            for k,v in pairs(checkersSettings['leaders']['shows']) do
                if v[1] == org and not v[2] then
                    checkersSettings['leaders']['shows'][k][2] = true
                    return false
                end
            end
            return false
        end

        if checkersSettings['leaders']['state'].v and checkersSettings['leaders']['activeState'].v then
            if text:match("^Лидеры онлайн:") and color == -1104335361  then
                return false
            end
    
            if text:match("^{FFFFFF}.+%[%d+%] %- {......}(.+){......} %| Номер: %d+{......} %| AFK: %d+ секунд") and color == -1714618369 then
                local org, afk = text:match("^{FFFFFF}.+%[%d+%] %- {......}(.+){......} %| Номер: %d+{......} %| AFK: (%d+) секунд")
                checkersInfo['leaders'][org]['afk'] = afk
                return false
            end

            if text:match("^{......}.+%[%d+%] %- {......}.+{......} | Номер: %d+") then
                local org = text:match("^{......}.+%[%d+%] %- {......}(.+){......} %| Номер: %d+")
                checkersInfo['leaders'][org]['afk'] = 0
                return false
            end

            if text:match("%[Подсказка%]{FFFFFF} Используйте /phone %- menu, чтобы найти членов организаций%.") then return false end
        end

        

    end
    
    function similar_reputation(id,reputation)
        if tonumber(id) == idplayer then
            if checkersInfo['u_reputation'] ~= nil and tonumber(reputation) ~= tonumber(checkersInfo['u_reputation']) then
                local difference = tonumber(reputation) - checkersInfo['u_reputation']
                if difference >= -10 and difference <= 10 then
                    if reportSettings['showDifferenceReputation'].v then
                        sampAddChatMessage("{".. hex8tohex6(ini.report.headerColor) .."}[Репорт]{".. hex8tohex6(ini.report.basedColor) .."} Вам было добавлено{".. hex8tohex6(ini.report.amountColor) .."} ".. difference .. " {".. hex8tohex6(ini.report.basedColor) .."}поинтов репутации.",-1)
                    end
                    count_daily['reputation'].v = count_daily['reputation'].v + difference
                    count_weekly['reputation'].v = count_weekly['reputation'].v + difference
                    count_all['reputation'].v = count_all['reputation'].v + difference
                    statsTable.countdaily.reputation = count_daily['reputation'].v
                    statsTable.countweekly.reputation = count_weekly['reputation'].v
                    statsTable.countall.reputation = count_all['reputation'].v
                    save()
                end
            end
            checkersInfo['u_reputation'] = tonumber(reputation)
        end
    end
end




function login_acc()
    local args = {}
    args['headers'] = {['Content-Type'] = 'application/json'}
    args['data'] = cjson.encode({login = auth['login'].v, serial = serial, password = auth['password'].v})
    pcall(asyncHttpRequest, 'POST', 'https://api.robo-tools.online/tokenT.php', args,
    function(response)
        if response.status_code == 200 then
            local response = cjson.decode(response.text)
            if tostring(response.error) == '0' then
                auth['token'].v = response.token
                ini.auth.token = response.token
                save()
                goAuth = true
            elseif tostring(response.error) == '5' then
                errormsg = [[Введенный пароль неправильный]]
                firstauth = false
                window_auth.v = true
            elseif tostring(response.error) == '6' then
                errormsg = [[Такого логина не существует]]
                firstauth = false
                window_auth.v = true
            elseif tostring(response.error) == '29' then
                errormsg = [[]]
                firstauth = false
                window_auth.v = true
                wich_window.v = 1
            end
        else
            sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Произошла ошибка во время выполнения Token-T запроса: ".. response.status_code .. ".",-1)
        end
    end,
    function(err)
       print(err)
    end)
end

function send_email()
    local args = {}
    args['headers'] = {['Content-Type'] = 'application/json'}
    args['data'] = cjson.encode({login = auth['login'].v, secret = auth['email_code'].v})
    pcall(asyncHttpRequest, 'POST', 'https://api.robo-tools.online/tokenMail.php', args,
    function(response)
        local response = cjson.decode(response.text)
        if tostring(response.error) == '29' then
            errormsg = [[]]
            firstauth = false
            window_auth.v = true
            wich_window.v = 2
            auth['email_code'].v = ''
        elseif tostring(response.error) == '19' then
            errormsg = [[Введенный код неправильный]]
            firstauth = false
            window_auth.v = true
        elseif tostring(response.error) == '20' then
            errormsg = [[Срок действия кода истёк]]
            firstauth = false
            window_auth.v = true
        end
    end,
    function(err)
       print(err)
    end)
end

function send_vk()
    local args = {}
    args['headers'] = {['Content-Type'] = 'application/json'}
    args['data'] = cjson.encode({login = auth['login'].v, secret = auth['vk_code'].v})
    pcall(asyncHttpRequest, 'POST', 'https://api.robo-tools.online/tokenVK.php', args,
    function(response)
        if response.status_code == 200 then
            local response = cjson.decode(response.text)
            if tostring(response.error) == '0' then
                auth['token'].v = response.token
                ini.auth.token = response.token
                save()
                wich_window.v = 0
                goAuth = true
                auth['vk_code'].v = ''
            elseif tostring(response.error) == '19' then
                errormsg = [[Введенный код неправильный]]
                firstauth = false
                window_auth.v = true
            end
        else
            sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Произошла ошибка во время выполнения Token-VK запроса: ".. response.status_code .. ".",-1)
        end

    end,
    function(err)
       print(err)
    end)
end

function new_command(preview,new,index,worker)
    if new.v ~= preview then 
        sampUnregisterChatCommand(preview) 
        sampAddChatMessage('{2DF61C}[Редактирование]{FFFFFF} Новая команда успешно сохранена! Было: {F6361C}/'.. u8:decode(preview) .. '{FFFFFF} | Стало: {2DF61C}/'.. u8:decode(new.v),-1) 
        ini.main[index] = u8:decode(new.v) 
        save() 
        sampRegisterChatCommand(u8:decode(new.v),worker) 
    else 
        sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Команда активации /' .. index .. ' не изменилась!',-1) 
    end
end
function count_active(nick)
    if not checkersInfo['admins_active'][nick] then
        checkersInfo['admins_active'][nick] = os.time()
    end
end

function sampev.onSpectatePlayer(playerid,camtype)
	debugLog('onSpectatePlayer: playerid: [' .. playerid .. '] | camtype: [' .. camtype .. ']')
    reconInfo['status'].v = true
end

function sampev.onSendClickTextDraw(id)
	debugLog('onSendClickTextDraw: id: [' .. id .. ']')

    if reconInfo['status'].v and id ~= deleteWriter[2077][5] then
        return false
    end
end

function sampev.onTextDrawSetString(id,text)
    if isPermission then
        debugLog('onTextDrawSetString: id: [' .. id .. '] | text: [' .. text ..']')
        --print('UPDATE || ID: ' ..id .. ' | TEXT: ' .. text)

        if id == deleteWriter[2111][5] and text:match(deleteWriter[2111][1]) then
            for k,v in pairs(deleteWriter) do
                if id == v[5] and text:match(v[1]) then
                    if reconSettings['delTD'].v then
                        sampTextdrawDelete(id)
                    end
                end
            end

            reconInfo['status'].v = true
            
            if reconInfo['id'] == -1 then reconInfo['id'] = ini.recon.lastRecon sampSendChat('/reoff') sampSendChat('/re '.. ini.recon.lastRecon) end
        end


        for k,v in pairs(deleteWriter) do
            if reconWriter[k] then
                if id == v[5] and text:match(v[1]) then
                    reconInfo[reconWriter[k]] = text
                end
            end
        end

        
        if id == deleteWriter[2111][5] and text:match(deleteWriter[2111][1]) then
            reconInfo['lvl'],reconInfo['exp'] = text:match('(%d+)%:(.+)')
        end

        if id == deleteWriter[2122][5] and text:match(deleteWriter[2122][1]) then
            local engine,tt = text:match('(.*)%((.*)%)')
            if engine == 'On' then reconInfo['engine'] = '{4EFF2B}Включен' elseif engine == 'Off' then reconInfo['engine'] = '{FF2B2B}Заглушен' end
            if tt == 'TT' then reconInfo['TT'] = '{4EFF2B}Да' elseif tt == 'NO TT' then reconInfo['TT'] = '{FF2B2B}Нет' end
        end

        if id == deleteWriter[2123][5] and text:match(deleteWriter[2123][1]) then
            reconerupdate()
        end

        if reconInfo['status'].v and reconSettings['delTD'].v then
            for k,v in pairs(deleteWriter) do
                if id == v[5] and text:match(v[1]) then
                    return false
                end
            end
        end
    end
end

function sampev.onShowTextDraw(id,data)
    if isPermission then
        debugLog('onShowTextDraw: id: [' .. id .. '] | data: [' .. 'data' ..']')
        --print('ID: ' ..id .. ' | TEXT: ' .. data.text .. ' | FLAGS: '.. data.flags .. ' | POSITION: x - ' .. data.position.x .. ' & y - ' .. data.position.y)
        
            --print(tostring(data.position.x) == tostring(deleteWriter[id][3]))
            
            for k,v in pairs(deleteWriter) do
                if data.text:match(v[1]) and tonumber(data.flags) == tonumber(v[2]) and tostring(data.position.x) == tostring(v[3]) and tostring(data.position.y) == tostring(v[4]) then
                    if reconSettings['delTD'].v then
                        deleteWriter[k][5] = id
                    end
                    reconInfo['status'].v = true
                end
            end
    
        
            
            if tonumber(data.flags) == 18 then
    
                if id == deleteWriter[2111][5] and data.text:match(deleteWriter[2111][1]) and tostring(deleteWriter[2111][3]) == tostring(data.position.x) and tostring(deleteWriter[2111][4] == data.position.y) then
                    sampAddChatMessage("[Примечание] Для вызова курсора/обновления информации рекона используйте клавиши БЕГА/ENTER/ЛКМ/ПКМ", 13449758)
                    reconInfo['lvl'],reconInfo['exp'] = data.text:match('(%d+)%:(.+)')
                end
    
                if data.text:match(deleteWriter[2122][1]) and tostring(deleteWriter[2122][3]) == tostring(data.position.x) and tostring(deleteWriter[2122][4]) == tostring(data.position.y) then
                    local engine,tt = data.text:match('(.*)%((.*)%)')
                    if engine == 'On' then reconInfo['engine'] = '{4EFF2B}Включен' elseif engine == 'Off' then reconInfo['engine'] = '{FF2B2B}Заглушен' end
                    if tt == 'TT' then reconInfo['TT'] = '{4EFF2B}Присутствует' elseif tt == 'NO TT' then reconInfo['TT'] = '{FF2B2B}Отсутствует' end
                end
    
                for k,v in pairs(deleteWriter) do
                    if data.text:match(v[1]) and tostring(v[3]) == tostring(data.position.x) and tostring(v[4]) == tostring(data.position.y) then
                        if reconWriter[k] then
                            reconInfo[reconWriter[k]] = data.text
                        end
                    end
                end
    
                if data.text:match(deleteWriter[2123][1]) and tostring(deleteWriter[2123][3]) == tostring(data.position.x) and tostring(deleteWriter[2123][4]) == tostring(data.position.y) then
                    reconerupdate()
                end
            end
    
            if reconInfo['status'].v and reconSettings['delTD'].v then
                for k,v in pairs(deleteWriter) do
                    if data.text:match(v[1]) and tonumber(data.flags) == tonumber(v[2]) and tostring(data.position.x) == tostring(v[3]) and tostring(data.position.y) == tostring(v[4]) then
                        deleteWriter[k][5] = id
                        return false
                    end
                end
            end
    end
end

function sampev.onTextDrawHide(id) 
	debugLog('onTextDrawHide: id: [' .. id .. ']')
    if id == 2103 and reconInfo['status'].v then 
        reconInfo['status'].v = false
        reportInfo['showRe'].v = false
    end
end

function len(text)
    return #tostring(text):gsub('[\128-\191]', '')
end

function stringToLower(s)
    for i = 192, 223 do
      s = s:gsub(_G.string.char(i), _G.string.char(i + 32))
    end
    s = s:gsub(_G.string.char(168), _G.string.char(184))
    return s:lower()
end


function stringToUpper(s)
    for i = 224, 255 do
      s = s:gsub(_G.string.char(i), _G.string.char(i - 32))
    end
    s = s:gsub(_G.string.char(184), _G.string.char(168))
    return s:upper()
end

function RusToEng(text)
    lang = {['`'] = 'ё', ['~'] = 'ё', ['q'] = 'й', ['w'] = 'ц', ['e'] = 'у', ['r'] = 'к', ['t'] = 'е', ['y'] = 'н', ['u'] = 'г', ['i'] = 'ш', ['o'] = 'щ', ['p'] = 'з', ['['] = 'х', ['{'] = 'х', [']'] = 'ъ', ['}'] = 'ъ', ['a'] = 'ф', ['s'] = 'ы', ['d'] = 'в', ['f'] = 'а', ['g'] = 'п', ['h'] = 'р', ['j'] = 'о', ['k'] = 'л', ['l'] = 'д', [';'] = 'ж', ["'"] = 'э', ['"'] = 'э', ['z'] = 'я', ['x'] = 'ч', ['c'] = 'с', ['v'] = 'м', ['b'] = 'и', ['n'] = 'т', ['m'] = 'ь', ['<'] = 'б', [','] = 'б', ['>'] = 'ю', ['.'] = 'ю'}
    result = text == '' and nil or ''
    if result then
        for i = 0, #text do
            letter = string.sub(text, i, i)
            if letter then
                result = (letter:find('[A-Z/{/}/</>]') and string.rupper(lang[string.lower(letter)]) or letter:find('[a-z/,]') and lang[letter] or letter)..result
            end
        end
    end
    return result and result:reverse() or result
end

function string.rupper(s) -- function by qrlk (https://blast.hk/threads/13380/#post-170330)
    local russian_characters = { [168] = 'Ё', [184] = 'ё', [192] = 'А', [193] = 'Б', [194] = 'В', [195] = 'Г', [196] = 'Д', [197] = 'Е', [198] = 'Ж', [199] = 'З', [200] = 'И', [201] = 'Й', [202] = 'К', [203] = 'Л', [204] = 'М', [205] = 'Н', [206] = 'О', [207] = 'П', [208] = 'Р', [209] = 'С', [210] = 'Т', [211] = 'У', [212] = 'Ф', [213] = 'Х', [214] = 'Ц', [215] = 'Ч', [216] = 'Ш', [217] = 'Щ', [218] = 'Ъ', [219] = 'Ы', [220] = 'Ь', [221] = 'Э', [222] = 'Ю', [223] = 'Я', [224] = 'а', [225] = 'б', [226] = 'в', [227] = 'г', [228] = 'д', [229] = 'е', [230] = 'ж', [231] = 'з', [232] = 'и', [233] = 'й', [234] = 'к', [235] = 'л', [236] = 'м', [237] = 'н', [238] = 'о', [239] = 'п', [240] = 'р', [241] = 'с', [242] = 'т', [243] = 'у', [244] = 'ф', [245] = 'х', [246] = 'ц', [247] = 'ч', [248] = 'ш', [249] = 'щ', [250] = 'ъ', [251] = 'ы', [252] = 'ь', [253] = 'э', [254] = 'ю', [255] = 'я', }
    s = s:upper()
    local strlen = s:len()
    if strlen == 0 then return s end
    s = s:upper()
    local output = ''
    for i = 1, strlen do
        local ch = s:byte(i)
        if ch >= 224 and ch <= 255 then -- lower russian characters
            output = output .. russian_characters[ch - 32]
        elseif ch == 184 then -- ё
            output = output .. russian_characters[168]
        else
            output = output .. string.char(ch)
        end
    end
    return output
end

function split(text,limit,massive)
    if #text > limit then
        local w = text:sub(1,limit)
        massive[#massive + 1] = w
        if(text:match(w) and #text:gsub(w,'') > limit) then
            split(text:gsub(w,''),limit,massive)
        elseif text:match(w) then
            massive[#massive + 1] = text:gsub(w,'')
        end
        return massive
    else
        return {text}
    end
end


function acceptFormW()
    if hotKeyChecks() and formsInfoWarnings['isActive'] and not reportInfo['state'].v and not formsInfoWarnings['isKeyDisband'] then
        formsInfoWarnings['isKeyAccept'] = true
    end
end

function disbandFormW()
    if hotKeyChecks() and formsInfoWarnings['isActive'] and not reportInfo['state'].v and not formsInfoWarnings['isKeyAccept'] then
        formsInfoWarnings['isKeyDisband'] = true
    end
end




function acceptForm()
    if not addonWindows['form_accept'].v then
        if hotKeyChecks() and formsInfo['isActive'] and not reportInfo['state'].v and not formsInfo['isKeyDisband'] then
            formsInfo['isKeyAccept'] = true
        end
    else
        if hotKeyChecks() then
            workerForm(formsInfoCheck['context'],formsInfoCheck['nick'],formsInfoCheck['id'])
            addonWindows['form_accept'].v = false
            sampSendChat('/reoff')
            printStyledString("FORM ACCEPTED", 1000, 4)
        end
    end
end

function proofsForm()
    if hotKeyChecks() and not reportInfo['state'].v and addonWindows['form_accept'].v then
        sampSendChat('/a ' .. formsInfoCheck['nick'] .. '['..formsInfoCheck['id']..'] У вас есть доказательства на выдачу наказания?')
    end
end

function disbandForm()
    if not addonWindows['form_accept'].v then
        if hotKeyChecks() and not reportInfo['state'].v and not formsInfo['isKeyAccept'] and addonWindows['form_accept'].v then
            formsInfo['isKeyDisband'] = true
        end
    else
        if hotKeyChecks() and not reportInfo['state'].v and not formsInfo['isKeyAccept'] then
            addonWindows['form_accept'].v = false
            sampSendChat('/reoff')
            printStyledString("FORM REJECTED", 1000, 4)
        end
    end
end

function control_afk()
    while true do
        wait(0)
        if isGamePaused() and mainini['afkstatus'].v and afkValues['isAFK'] then  
            afkValues['startTime'] = os.time()
            afkValues['isAFK'] = false
        elseif not isGamePaused()  then  
            afkValues['isAFK'] = true 
            afkValues['startTime'] = 0
            afkValues['isShowed'] = false
            afkValues['isShowedKick'] = false
        end 

        if mainini['afkstatus'].v and isGamePaused() then 
        
            if mainini['warnafk'].v and (os.time() - afkValues['startTime']) == (mainini['afklimit'].v - mainini['dopusklimit'].v) and not afkValues['isShowed'] then  
                afkValues['isShowed'] = true
                msgbox('Значение АФК уже достигло '.. mainini['afklimit'].v - mainini['dopusklimit'].v ..' секунд.\nЧерез '.. mainini['dopusklimit'].v ..' секунд лимит АФК будет достигнут.', 'Control AFK', 0x30)
            end 
        end

        if mainini['afkstatus'].v and isGamePaused() then  

            if os.time() - afkValues['startTime'] == mainini['afklimit'].v and not afkValues['isShowedKick'] then  
                local msgiskick = 'Значение АФК уже достигло '.. mainini['afklimit'].v ..' секунд.'
                if mainini['afkquitstatus'] then
                    msgiskick = msgiskick .."\nИгра будет закрыта через 3 секунды."
                end
                msgbox(msgiskick, 'Control AFK', 0x30)
                afkValues['isShowedKick'] = true
                if mainini['afkquitstatus'].v then
                    wait(3000)
                    callFunction(8535003, 3, 3, 0, 0, 0)
                end
      
            end 
      
        end
    end
end

function auto_lovlia()
    while true do
        wait(0)
        if isPermission and formsInfo['isAccept'] and reportSettings['autoot'].v and reportSettings['typeot'].v == 0 and not reconInfo['status'].v and sampGetGamestate() == 3 and not isGamePaused() and not isPauseMenuActive() then
            while not reportInfo['state'].v and not reconInfo['status'].v and reportSettings['autoot'].v do
                wait(0)
                for i = 0, reportSettings['count'].v do
                    sampSendChat('/ot')
                end
                wait(reportSettings['waitot'].v)
            end
        end 
    end
end

function logForm(form, nick, id)
    f = io.open(workdir .. '/resource/RoboScripts/RoboTools/forms_log.txt',"a")
    f:write('['..os.date("%d-%m-%Y %X",os.time())..'] Форма: /' .. form .. " | Отправитель: " .. nick .. "[" .. id .."]\n")
    f:flush()
    f:close()
end

function hideIP(text)
	if text and mainini['hideip'].v then
		while text:find("%d+%.%d+%.%d+%.%d+") do
			text = text:gsub(text:match("(%d+%.%d+%.%d+%.%d+)"), text:match("(%d+%.%d+)%.%d+%.%d+") .. ".**.**")
		end

		return text
	else
		return text
	end
end

function workerForm(form,nick,id)
    local command,context = form:match('^([A-Za-z]+)%s*(.*)')
    formsInfo['lastNick'] = nick
    formsInfo['lastId'] = id

    count_daily['forms'].v = count_daily['forms'].v + 1
    count_weekly['forms'].v = count_weekly['forms'].v + 1
    count_all['forms'].v = count_all['forms'].v + 1
	formsInfo['isAccepted'] = true

    logForm(form, nick, id)

    if accessesForms[command]['typeCheck'] == 'player_id' then
        if idplayer ~= id then
            local isOnline = function(uid)
                if tonumber(uid) ~= tonumber(idplayer) then
                    if sampIsPlayerConnected(uid) then
                        if accessesForms[command]['isPunish'] then
                            if table_contains_i_v(table_merge(checkersInfo['admins']['eight'],checkersInfo['admins']['seven'],checkersInfo['admins']['six'],checkersInfo['admins']['five'],checkersInfo['admins']['four'],checkersInfo['admins']['three'],checkersInfo['admins']['two'],checkersInfo['admins']['one']), sampGetPlayerNickname(uid), 'nick') then
                                sampSendChat('/a ' .. nick .. '[' .. id .. '] Вы пытаетесь наказать администратора!')
                                formsInfo['isActive'] = false
                            else
                                sampSendChat('/a [Forma] +')
                                sampSendChat('/' .. form)
                            end
                        else
                            if command == 'getip' then
                                formsInfo['isCheckIp'] = true
                            elseif command == 'pgetip' or command == 'pgetips' then
                                formsInfo['isCheckPIp'] = true
                            end
                            sampSendChat('/' .. form)
                            sampSendChat('/a [Forma] +')
                        end
                    else
                        formsInfo['isActive'] = false
                        sampSendChat('/a ' .. nick .. '[' .. id .. '] Игрок, которого вы пытались наказать - оффлайн!')
                    end
                else
                    if accessesForms[command]['isPunish'] then
                        formsInfo['isActive'] = false
                        sampSendChat('/a ' .. nick .. '[' .. id .. '] Вы пытаетесь наказать администратора!')
                    else
                        if command == 'getip' then
                            formsInfo['isCheckIp'] = true
                        elseif command == 'pgetip' or command == 'pgetips' then
                            formsInfo['isCheckPIp'] = true
                        end
                        sampSendChat('/' .. form)
                        sampSendChat('/a [Forma] +')
                    end
                end
            end
            if context:match('^%d+') then
                isOnline(context:match('^(%d+)'))
            elseif context:match('^[A-Za-z]+') then
                isOnline(sampGetPlayerIdByNickname(context:match('^([A-Za-z]+)')))
            else
                sampSendChat('/' .. form)
                sampSendChat('/a [Forma] +')
            end
        end
    elseif accessesForms[command]['typeCheck'] == 'car_id' then
        sampSendChat('/' .. form)
        sampSendChat('/a [Forma] +')
    elseif accessesForms[command]['typeCheck'] == 'tr_id' then
        sampSendChat('/' .. form)
        sampSendChat('/a [Forma] +')
    elseif accessesForms[command]['typeCheck'] == 'ad_id' then
        sampSendChat('/' .. form)
        sampSendChat('/a [Forma] +')
    elseif accessesForms[command]['typeCheck'] == 'off' then
        sampSendChat('/' .. form)
        sampSendChat('/a [Forma] +')
    elseif accessesForms[command]['typeCheck'] == 'house_id' then
        
        if command == 'checkhouse' then
            formsInfo['isCheckHouse'] = true
        end

        sampSendChat('/' .. form)
        sampSendChat('/a [Forma] +')
    elseif accessesForms[command]['typeCheck'] == 'biz_id' then
        sampSendChat('/' .. form)
        sampSendChat('/a [Forma] +')
    elseif accessesForms[command]['typeCheck'] == 'none' then
        if command == 'getip' then
            formsInfo['isCheckIp'] = true
        elseif command == 'pgetip' or command == 'pgetips' then
            formsInfo['isCheckPIp'] = true

        end
        sampSendChat('/' .. form)
        sampSendChat('/a [Forma] +')

    end
    addonWindows['form_accept'].v = false
end


function countOnline()
    count_session['start_time'] = os.time()                                             

    while true do
        wait(1000)
        nowTime = os.date("%H:%M:%S", os.time())
        if statsSettings ~= nil and isPermission and sampGetGamestate() == 3  then	
            local afk = {getafk()}
            count_session['afk'] = os.clock() - gameClock()
	        count_session['online_time'].v = count_session['online_time'].v + 1
	        count_session['afk_time'].v = afk[1]

            count_daily['online_time'].v = count_daily['online_time'].v + 1
            count_daily['afk_time'].v = count_daily['afk_time'].v + count_session['afk_time'].v
            count_daysweek[get_weekday(statsSettings['update_early'].v * 3600)] = count_daily['online_time'].v

            count_weekly['online_time'].v = count_weekly['online_time'].v + 1
            count_weekly['afk_time'].v = count_weekly['afk_time'].v + count_session['afk_time'].v

            count_all['online_time'].v = count_all['online_time'].v + 1
            count_all['afk_time'].v = count_all['afk_time'].v + count_session['afk_time'].v

            statsTable.countdaily.online_time = count_daily['online_time'].v
            statsTable.countweekly.online_time = count_weekly['online_time'].v
            statsTable.countdaysweek[get_weekday(statsSettings['update_early'].v * 3600)] = count_daysweek[get_weekday(statsSettings['update_early'].v * 3600)]
            statsTable.countall.online_time = count_all['online_time'].v
            
            statsTable.countdaily.afk_time = count_daily['afk_time'].v
            statsTable.countweekly.afk_time = count_weekly['afk_time'].v
            statsTable.countall.afk_time = count_all['afk_time'].v
	    else
	    	count_session['start_time'] = count_session['start_time'] + 1								
	    end
    end
end

function get_clock(time)
    if time <= 0 then
        return "00:00:00";
    else
        hours = string.format("%02.f", math.floor(time/3600));
        mins = string.format("%02.f", math.floor(time/60 - (hours*60)));
        secs = string.format("%02.f", math.floor(time - hours*3600 - mins *60));
        
        return hours..":"..mins..":"..secs
    end
end


function get_min_clock(time)
    local timezone_offset = 86400 - os.date('%H', 0) * 3600
    if tonumber(time) >= 86400 then onDay = true else onDay = false end
    return os.date((onDay and math.floor(time / 86400)..'д ' or '')..'%M:%S', time + timezone_offset)
end



function getafk()
    return math.modf((os.clock() - count_session['afk']) - gameClock())
end


function startForm(nick,id,context)
    if formsInfo['isActive'] and not formPunishSettings['isActive'] then
        lua_thread.create(function()
            local start_time = os.time()
            local count_time = 0
            while count_time < formsIniSettings['time'].v / 1000 and formsInfo['isActive'] do
                wait(0)
                count_time = os.time() - start_time

                if not formsInfo['isActive'] then
                    break
                end

                if formsInfo['isKeyAccept'] then
                    if formsIniSettings['is_re_punish'].v  then
                        local command,contextaddon = context:match('^([A-Za-z]+)%s*(.*)')
                        if accessesForms[command]['requiredRe'] then
                            if not addonWindows['form_accept'].v then
                                formsInfo['lastNick'] = nick
                                formsInfo['lastId'] = id                
                                formsInfoCheck['context'] = context
                                formsInfoCheck['nick'] = nick
                                formsInfoCheck['id'] = id
                                if contextaddon:match('(%d+)') then
                                    formsInfo['isActive'] = false
                                    sampSendChat('/re ' .. contextaddon:match('(%d+)'))
                                    addonWindows['form_accept'].v = true
                                else
                                    sampSendChat("/".. context)
                                end
                                
                            end
                        else
                            workerForm(context,nick,id)
                        end
                    else
                        if not addonWindows['form_accept'].v then
                            workerForm(context,nick,id)
                            -- formsInfo['isSendAccepted'] = true
                        end
                    end
                    formsInfo['isKeyAccept'] = false
                    break
                end

                if formsInfo['isKeyDisband'] then
                    formsInfo['isKeyDisband'] = false
                    formsInfo['isActive'] = false
                    printStyledString("FORM REJECTED", 1000, 4)
                    break
                end
                
                if count_time >= formsIniSettings['time'].v / 1000 then
                    printStyledString("FORM LIFE EXPIRED", 1000, 4)
                    formsInfo['isActive'] = false
                    break
                end

                if formsInfo['isAccepted'] then
                    formsInfo['isActive'] = false
                    formsInfo['isAccepted'] = false
                    printStyledString("FORM ALREADY ACCEPTED", 1000, 4)
                    break
                end

                if formsIniSettings['show_flash'].v then
                    if formsIniSettings['show_time'].v and formsIniSettings['show_nick'].v then
                        printStyledString("ADMIN FORM " .. (formsIniSettings['time'].v / 1000) - count_time .. " WAIT~n~~r~by " .. nick, 1000, 4)
                    elseif formsIniSettings['show_time'].v and not formsIniSettings['show_nick'].v then
                        printStyledString("ADMIN FORM " .. (formsIniSettings['time'].v / 1000) - count_time .. " WAIT", 1000, 4)
                    elseif formsIniSettings['show_nick'].v and not formsIniSettings['show_time'].v then
                        printStyledString("ADMIN FORM~n~~r~by " .. nick, 1000, 4)
                    else
                        printStyledString("ADMIN FORM", 1000, 4)
                    end
                end
            end
        end)
    end
end


function startFormMute(context, id, nick)
    if formsInfoWarnings['isActive'] then
        lua_thread.create(function()
            local start_time = os.time()
            local count_time = 0
            while count_time < formsIniSettings['time'].v / 1000 and formsInfoWarnings['isActive'] do
                wait(0)
                count_time = os.time() - start_time

                if not formsInfoWarnings['isActive'] then
                    break
                end

                if formsInfoWarnings['isKeyAccept'] then
                    formsInfoWarnings['isKeyAccept'] = false
                    sampSendChat(context)
                    break
                end

                if formsInfoWarnings['isKeyDisband'] then
                    formsInfoWarnings['isKeyDisband'] = false
                    formsInfoWarnings['isActive'] = false
                    printStyledString("WARNING FORM REJECTED", 1000, 4)
                    break
                end
                
                if count_time >= formsIniSettings['time'].v / 1000 then
                    printStyledString("WARNING FORM LIFE EXPIRED", 1000, 4)
                    formsInfoWarnings['isActive'] = false
                    break
                end


                if formsIniSettings['show_flash'].v then
                    if formsIniSettings['show_time'].v and formsIniSettings['show_nick'].v then
                        printStyledString("WARNING FORM " .. (formsIniSettings['time'].v / 1000) - count_time .. " WAIT~n~~r~MUTE " .. nick, 1000, 4)
                    elseif formsIniSettings['show_time'].v and not formsIniSettings['show_nick'].v then
                        printStyledString("WARNING FORM " .. (formsIniSettings['time'].v / 1000) - count_time .. " WAIT", 1000, 4)
                    elseif formsIniSettings['show_nick'].v and not formsIniSettings['show_time'].v then
                        printStyledString("WARNING FORM~n~~r~MUTE " .. nick, 1000, 4)
                    else
                        printStyledString("WARNING FORM", 1000, 4)
                    end
                end
            end
        end)
    end
end

function reconerupdate()
    if cheats['invisible'].v then
        lua_thread.create(function()
            cheats['invisible'].v = false
            ini.cheats.invisible = false
            save()
            sampSendChat("/reoff")
            sampSendSpawn()
            wait(1000)
            sampSendChat("/re ".. reconInfo['id'])
            sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Инвиз выключен, т.к с включеным инвизом невозможно заходить в слежку.', -1)
        end)
    end
    ini.recon.lastRecon = reconInfo['id']

    change['re_id'] = reconInfo['id']
    change['re_nick'] = reconInfo['nick']

    save()
    reconInfo['time'] = os.time()
    check_game = true
    checkorginfo = true
    if mainini['adminlvl'].v >= 3 and reconSettings['showInfoSuspicion'].v then
        checkiprec = true
        sampSendChat('/getip '.. reconInfo['id'])
    end
    sampSendChat('/cl '.. reconInfo['id'])
    lua_thread.create(function()
        while sampIsDialogActive() or reportInfo['state'].v do
            wait(0)
            reconInfo['waitingForCheck'] = true
        end
        reconInfo['cars'] = {}
        sampSendChat('/check '.. reconInfo['id'])
    end)
    reconInfo['color'] = string.format('%06X', bit.band(sampGetPlayerColor(reconInfo['id']),  0xFFFFFF))
end


function hotKeyChecks()
    if not windows['main'].v and not reportInfo['state'].v and not sampIsChatInputActive() and not isPauseMenuActive() and not isGamePaused() and not sampIsDialogActive() then
        return true
    end
    return false
end


function autherGO()
    while true do
        wait(1000)
        if goAuth then
            authacc(auth['token'].v)
            goAuth = false
        end
    end
end

function requestStatistic()
    while true do
        wait(300000)
        local args = {}
        args['headers'] = {['Content-Type'] = 'application/json', ['Authorization'] = auth['token'].v}
        local needleData = {
            online_time = count_daily['online_time'].v,
            afk_time = count_daily['afk_time'].v,
            reports = count_daily['reports'].v,
            punishments = count_daily['punishments'].v,
            bans = count_daily['bans'].v,
            warns = count_daily['warns'].v,
            mutes = count_daily['mutes'].v,
            kicks = count_daily['kicks'].v,
            jails = count_daily['jails'].v,
            reputation = count_daily['reputation'].v,
            forms = count_daily['forms'].v,
        }
        local stringHexData = ""
        for k,v in pairs(needleData) do stringHexData = stringHexData .. tostring(v) .. auth['token'].v end
        needleData['token'] = md5.sumhexa(stringHexData)
        args['data'] = cjson.encode(needleData)
        pcall(asyncHttpRequest, 'POST', 'https://api.robo-tools.online/updateStats.php', args,nil,
        function(err)
            sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Произошла ошибка при запросе обновления статистики.",-1)
        end
        )
    end
end

function auther()
    while true do
        wait(30000)
        onLoginAccept()
        if not addonWindows['preupdate'].v then
            autoupdate("https://api.robo-tools.online/update.json", '['..thisScript().name..']: ', "https://robo-tools.online/", false, true)
        end
        if firstauth then
            if not isPauseMenuActive() and not isGamePaused() then
                authacc(auth['token'].v)
            end
        end
    end
end

function aonlinerequest()
    while true do
        wait(60000)
        local bufferTable = table_merge(checkersInfo['admins']['eight'],checkersInfo['admins']['seven'],checkersInfo['admins']['six'],checkersInfo['admins']['five'],checkersInfo['admins']['four'],checkersInfo['admins']['three'],checkersInfo['admins']['two'],checkersInfo['admins']['one']);

        if #bufferTable > 0 then
            local args = {}
            args['headers'] = {['Content-Type'] = 'application/json', ['Authorization'] = auth['token'].v}
            args['data'] = cjson.encode({report = count_session['report_now'], admins = bufferTable, ip = ip, port = port})
            pcall(asyncHttpRequest, 'POST', 'https://api.robo-tools.online/admins.php', args, nil, nil)
        end
    end
end

function antipause(bool)
    if bool then
        memory.setuint8(7634870, 1, false)
        memory.setuint8(7635034, 1, false)
        -- memory.fill(int address,int value,uint size,[bool unprotect=false])
        memory.fill(7623723, 144, 8, false)
        memory.fill(5499528, 144, 6, false)
    else
        memory.setuint8(7634870, 0, false)
        memory.setuint8(7635034, 0, false)
        memory.hex2bin('0F 84 7B 01 00 00', 7623723, 8)
        memory.hex2bin('50 51 FF 15 00 83 85 00', 5499528, 6)
    end
end


function msgbox(header, text, type)
	local afk_msgbox = effil.thread(function (header, text, type)
		local ffi = require("ffi")

		ffi.cdef(" int MessageBoxA( void* hWnd, const char* lpText,const char* lpCaption, unsigned int uType); ")
		ffi.C.MessageBoxA(nil, header, text, type and type + 327680 or 327680)
	end)(header, text, type)
end


function login()
    while true do
        wait(0)
        if not sampIsPlayerConnected(idplayer) then
            antipause(true)
        end
    end
end



function changewexcept(except)

    for k,v in pairs(windows) do 
        if k ~= except and k ~= 'main' then
            windows[k].v = false
        else 
            windows[k].v = true
        end
    end

end

function gps_list(type)
    local btn_size = imgui.ImVec2(sw / 3.88, sh / 40.2)
    if #gpsInfo > 0 then
        imgui.NewInputText('##search',searcherReport,sw / 3.88,fa.ICON_FA_SEARCH .. u8' Введите поисковый запрос',2)
        for k,v in pairs(gpsInfo) do
            if stringToLower(v['header']):find(stringToLower(u8:decode(searcherReport.v))) then
                if imgui.Button(u8("/gps > " .. v['header']),btn_size) then
                    if type == 0 then
                        if #reportInfo['lastAnswer'].v > 0 then
                            reportInfo['lastAnswer'].v = reportInfo['lastAnswer'].v .. ' ' .. u8("/gps > " .. v['header'])
                        else
                            reportInfo['lastAnswer'].v = u8("/gps > " .. v['header'])
                        end
                        if #v['coords'] > 0 then reportInfo['coordsGPS'] = v['coords'] reportInfo['nameGPS'] = v['header'] end
                        otherWindows['report'].v = false
                    elseif type == 1 then 
                        local bool = setClipboardText("/gps > " .. v['header']) 
                        if bool then 
                            sampAddChatMessage("{2DF61C}[Копирование]{FFFFFF} Точка GPS была успешно скопирована в буфер обмена.",-1) 
                            sampAddChatMessage("{2DF61C}[Копирование]{FFFFFF} Чтобы вставить скопированный текст в чат - обязательно переключитесь на русскую раскладку.",-1) 
                        else 
                            sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Не получилось скопировать выбранный текст в буфер обмена.",-1) 
                        end 
                        addonWindows['hgps'].v = false 
                    end  
                end
                if #v['coords'] > 0 then imgui.Hint(u8"На карте игрока будет поставлена метка этого GPS, после ответа на репорт.") end
            end
    
            for key,val in pairs(v['category']) do
                if stringToLower("/gps > " ..v['header'] .. ' > ' .. val['name']):find(stringToLower(u8:decode(searcherReport.v))) then
                    if imgui.Button(u8("/gps > " ..v['header'] .. ' > ' .. val['name']),btn_size) then
                        if type == 0 then
                            if #reportInfo['lastAnswer'].v > 0 then
                                reportInfo['lastAnswer'].v = reportInfo['lastAnswer'].v .. ' ' .. u8("/gps > " ..v['header'] .. ' > ' .. val['name'])
                            else
                                reportInfo['lastAnswer'].v = u8("/gps > " ..v['header'] .. ' > ' .. val['name'])
                            end
                            if #val['coords'] > 0 then reportInfo['coordsGPS'] = val['coords'] reportInfo['nameGPS'] = val['name'] end
                            otherWindows['report'].v = false
                        elseif type == 1 then 
                            local bool = setClipboardText("/gps > " ..v['header'] .. ' > ' .. val['name'])
                            if bool then 
                                sampAddChatMessage("{2DF61C}[Копирование]{FFFFFF} Точка GPS была успешно скопирована в буфер обмена.",-1) 
                                sampAddChatMessage("{2DF61C}[Копирование]{FFFFFF} Чтобы вставить скопированный текст в чат - обязательно переключитесь на русскую раскладку.",-1) 
                            else 
                                sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Не получилось скопировать выбранный текст в буфер обмена.",-1) 
                            end 
                            addonWindows['hgps'].v = false 
                        end  
                    end
                    if #val['coords'] > 0 then imgui.Hint(u8"На карте игрока будет поставлена метка этого GPS, после ответа на репорт.") end
                    
                end
            end
        end
    else
        imgui.CenterText("Кажется у вас не обновлен список /gps.")
        imgui.CenterText("Для того, чтобы тут что-то появилось -")
        imgui.CenterText("зайдите в /amenu > Основное > Правый столбик > Обновить список /gps")
        if imgui.Button(fa.ICON_FA_COGS .. u8" Открыть настройки", imgui.ImVec2(495, 20)) then
            changewexcept('settings')
            windows['main'].v = true
        end
    end

end


function lvl_list(type)
    local btn_size = imgui.ImVec2(sw / 3.88, sh / 40.2)
    imgui.NewInputText('##searchlvl',searcherReport,sw / 3.88,fa.ICON_FA_SEARCH .. u8' Введите поисковый запрос',2)
    for k,v in pairs(lvlInfo) do
        if stringToLower(u8:decode(v['work'])):find(stringToLower(u8:decode(searcherReport.v))) then
            if imgui.Button(v['work'] .. ' | LVL: ' .. v['lvl'],btn_size) then
                if type == 0 then
                    if #reportInfo['lastAnswer'].v > 0 then
                        reportInfo['lastAnswer'].v = reportInfo['lastAnswer'].v .. ' ' .. v['work'] .. ' | LVL: ' .. v['lvl']
                    else
                        reportInfo['lastAnswer'].v = v['work'] .. ' | LVL: ' .. v['lvl']
                    end
                    otherWindows['report'].v = false
                else
                    local bool = setClipboardText(u8:decode(v['work'] .. ' | LVL: ' .. v['lvl'])) 
                    if bool then 
                        sampAddChatMessage("{2DF61C}[Копирование]{FFFFFF} Информация о работе была успешно скопирована в буфер обмена.",-1) 
                        sampAddChatMessage("{2DF61C}[Копирование]{FFFFFF} Чтобы вставить скопированный текст в чат - обязательно переключитесь на русскую раскладку.",-1) 
                    else 
                        sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Не получилось скопировать выбранный текст в буфер обмена.",-1) 
                    end 
                    addonWindows['hlvl'].v = false 
                end
            end
        end
    end
end

function similar_reports()
    imgui.CenterText(errormsg)
    if #simInfo > 0 then
        imgui.NewInputText('##search',searcherReport,613,fa.ICON_FA_SEARCH .. u8' Введите поисковый запрос',2)
        imgui.Columns(5,'##answer',true)
        imgui.Separator()
        imgui.CenterColumnText(u8'Вопрос')
        imgui.NextColumn()
        imgui.CenterColumnText(u8'Схожесть')
        imgui.NextColumn()
        imgui.CenterColumnText(u8'Ответ')
        imgui.NextColumn()
        imgui.CenterColumnText(u8'Сервер')
        imgui.NextColumn()
        imgui.CenterColumnText(u8'Применение')
        imgui.Separator()
        imgui.NextColumn()
        for k,v in pairs(simInfo) do
            if stringToLower(u8:decode(v.question)):find(stringToLower(u8:decode(searcherReport.v))) then
                imgui.TextWrapped(v.question)
                imgui.NextColumn()
                imgui.CenterColumnText(u8(tostring(v.percent)..'%'))
                imgui.NextColumn()
                imgui.TextWrapped(v.answer)
                imgui.NextColumn()
                imgui.CenterColumnText(u8(tostring(servernames[tonumber(v.server)])))
                imgui.NextColumn()
                if imgui.Button(u8'Использовать##'..k, imgui.ImVec2(sw / 16.5, sh / 54)) then reportInfo['lastAnswer'].v = v.answer imgui.CloseCurrentPopup() end
                imgui.NextColumn()
            end
        end
        imgui.Columns(1)
        imgui.Separator()

    elseif #errormsg <= 0 then
        imgui.SetCursorPos(imgui.ImVec2((imgui.GetWindowWidth() / 2) - 60, (imgui.GetWindowHeight() / 2) - 60))
        imgui.Spinner('##spinner_waiting', 60, 6, imgui.GetColorU32(imgui.GetStyle().Colors[imgui.Col.ButtonHovered]))
    end
end

function cmd_list(type)
    local btn_size = imgui.ImVec2(sw / 3.88, sh / 40.2)
    imgui.NewInputText('##search',searcherReport,sw / 3.88,fa.ICON_FA_SEARCH .. u8' Введите поисковый запрос',2)
    for k,v in pairs(cmdInfo) do
        if stringToLower(u8:decode(v.buttonname)):find(stringToLower(u8:decode(searcherReport.v))) then
            if imgui.Button(v.buttonname,btn_size) then if type == 0 then
                if #reportInfo['lastAnswer'].v > 0 then
                    reportInfo['lastAnswer'].v = reportInfo['lastAnswer'].v .. ' ' .. v.answer 
                else
                    reportInfo['lastAnswer'].v = v.answer 
                end
                otherWindows['report'].v = false
            elseif type == 1 then 
                local bool = setClipboardText(u8:decode(v.answer)) 
                if bool then 
                    sampAddChatMessage("{2DF61C}[Копирование]{FFFFFF} Команда была успешно скопирована в буфер обмена.",-1) 
                    sampAddChatMessage("{2DF61C}[Копирование]{FFFFFF} Чтобы вставить скопированный текст в чат - обязательно переключитесь на русскую раскладку.",-1)
                else 
                    sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Не получилось скопировать выбранный текст в буфер обмена.",-1) 
                end 
                addonWindows['hcmd'].v = false 
            end 
        end
        end
    end
end

function color_list(type)
    for k,v in pairs(colorsListFloat) do

        imgui.PushStyleColor(imgui.Col.Button, imgui.ImVec4(v['r'], v['g'], v['b'], 1))
        if imgui.Button(tostring(k), imgui.ImVec2(45, 45)) then
            if type == 0 then
                if #reportInfo['lastAnswer'].v > 0 then
                    reportInfo['lastAnswer'].v = reportInfo['lastAnswer'].v .. ' ' .. tostring(k)
                else
                    reportInfo['lastAnswer'].v = tostring(k)
                end
                otherWindows['report'].v = false
            elseif type == 1 then
                local bool = setClipboardText(tostring(k)) 
                if bool then 
                    sampAddChatMessage("{2DF61C}[Копирование]{FFFFFF} Цвет был успешно скопирован в буфер обмена.",-1) 
                    sampAddChatMessage("{2DF61C}[Копирование]{FFFFFF} Чтобы вставить скопированный текст в чат - обязательно переключитесь на русскую раскладку.",-1)
                else 
                    sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Не получилось скопировать выбранный текст в буфер обмена.",-1) 
                end 
                addonWindows['hclr'].v = false 
            end
        end
        imgui.PopStyleColor(1)
        if k%23 ~= 0 then
            imgui.SameLine()    
        end

    end
end

function fast_list()
    local btn_size = imgui.ImVec2(sw / 3.88, sh / 40.2)
    imgui.NewInputText('##search',searcherReport,sw / 3.88,fa.ICON_FA_SEARCH .. u8' Введите поисковый запрос',2)
    for k,v in pairs(fastInfo) do
        if stringToLower(u8:decode(v.buttonname)):find(stringToLower(u8:decode(searcherReport.v))) then
            if imgui.Button(v.buttonname,btn_size) then
                reportInfo['lastAnswer'].v = v.answer
                otherWindows['report'].v = false 
            end
        end
    end
end

function sendSplitMessage(begin,ending,text,limit)
    for k,v in pairs(split(text,limit,{})) do
        sampSendChat(begin .. v .. ending)
    end
end

function sampAddSplitMessage(begin,ending,text,color,limit)
    for k,v in pairs(split(text,limit,{})) do
        sampAddChatMessage(begin .. v .. ending,color)
    end
end

function sendTransmit()
    if reportInfo['state'].v then
    sendSplitMessage('/a [Хомячок | Репорт] '.. reportInfo['lastNick'].v .. "[" .. reportInfo['lastID'].v .. "]: ",'',reportInfo['lastText'].v, 60)
    sendAnswer(reportSettings['reportsend'].v, 0)
    end
end

function sendQuestion()
    if reportInfo['state'].v then
        sendSplitMessage('/a [Хомячок | Вопрос] '.. reportInfo['lastNick'].v .. "[" .. reportInfo['lastID'].v .. "]: ",'',reportInfo['lastText'].v, 60)
    end
end

function sendAnswer(answer, type)
    if reportInfo['state'].v and len(answer) > 0 then
            if reportSettings['typeReport'].v == 1 then
                sampSendChat('/ot '.. reportInfo['lastID'].v .. ' ' .. u8:decode(change_tags(answer,change)))
                
                for k,v in pairs(listReport) do
                    if v['nick'] == reportInfo['lastNick'].v then
                        table.remove(listReport,k)
                        break
                    end
                end

            else
                for k,v in pairs(split(u8:decode(answer), 80, {})) do
                    if k == 1 then
                        sampSendDialogResponse(1334,1,-1,change_tags(v,change))
                    else
                        sampSendChat("/pm ".. reportInfo['lastID'].v .." 0 " .. v)
                    end
                end
                
            end
            if #reportInfo['coordsGPS'] > 0 then sampSendChat("/apoint ".. reportInfo['lastNick'].v .. ' ' .. reportInfo['coordsGPS'] .. ' ' .. reportInfo['nameGPS']) end
            imgui.ShowCursor = false
            showCursor(false,false)
            count_daily['reports'].v = count_daily['reports'].v + 1 
            count_weekly['reports'].v = count_weekly['reports'].v + 1
            count_all['reports'].v = count_all['reports'].v + 1
            statsTable.countdaily.reports = count_daily['reports'].v
            statsTable.countweekly.reports = count_weekly['reports'].v
            statsTable.countall.reports = count_all['reports'].v
            
            if reportSettings['showInfoResponse'].v then

                if reportSettings['showBordersResponse'].v then sampAddChatMessage(string.format("{" .. hex8tohex6(ini.report.colorBordersResponse) .. "}----------------------------------------------"), -1) end
                if reportSettings['showAuthorResponse'].v then sampAddChatMessage(string.format("{".. hex8tohex6(ini.report.colorTextResponse) .."}Репорт от {".. hex8tohex6(ini.report.colorAuthorResponse) .. "}" .. reportInfo['lastNick'].v .. "[" .. reportInfo['lastID'].v.. "]"), -1) end
                if reportSettings['showContextResponse'].v then sampAddChatMessage(string.format("{".. hex8tohex6(ini.report.colorTextResponse) .."}Суть репорта: {".. hex8tohex6(ini.report.colorContextResponse) .. "}" .. reportInfo['lastText'].v), -1) end
                if reportSettings['showAnswerResponse'].v then sampAddChatMessage(string.format("{".. hex8tohex6(ini.report.colorTextResponse) .."}Ваш ответ: {".. hex8tohex6(ini.report.colorAnswerResponse) .. "}".. u8:decode(change_tags(answer,change))),-1) end
                if reportSettings['colorReportResponse'].v then sampAddChatMessage(string.format("{".. hex8tohex6(ini.report.colorTextResponse) .."}Количество отвеченного репорта за день: {".. hex8tohex6(ini.report.colorReportResponse) .. "}"..count_daily['reports'].v), -1) end
                if reportSettings['showBordersResponse'].v then sampAddChatMessage(string.format("{".. hex8tohex6(ini.report.colorBordersResponse) .."}----------------------------------------------"), -1) end
            end
            save()
            reportInfo['state'].v = false
            reportInfo['lastAnswer'].v = answer
            if type == 1 then
                local args = {}
                args['headers'] = {['Content-Type'] = 'application/json',['Authorization'] = auth['token'].v}
                args['data'] = cjson.encode({ip = ip, port = port, serial = serial, question = u8(reportInfo['lastText'].v), answer = reportInfo['lastAnswer'].v})
                pcall(asyncHttpRequest, 'POST', 'https://api.robo-tools.online/save_report.php', args, nil, nil)
            end
        else
            sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Ответ должен состоять более чем из 1-ого и не более чем из 85-ти символов!', -1)
    end
end

function sendAuthor()
    if reportInfo['state'].v then
        sendAnswer(reportSettings['reportauthor'].v, 0)
        sampSendChat('/re '.. reportInfo['lastID'].v)
    end
end




function sendWarner()
    if reportInfo['state'].v then
        if not reportInfo['isOnline'].v then
            sendAnswer(reportSettings['reportoffline'].v, 0)
        elseif reportInfo['isOnline'].v and change['intruder_id'] ~= -1 then
            sendAnswer(reportSettings['reportwarner'].v, 0)
            sampSendChat('/re '.. change['intruder_id'])
            if #change['intruders_ids'] > 1 then
                reportInfo['showRe'].v = true
            end
        else
            sampAddChatMessage("{808080}[Слежка] В тексте репорта не найдено айди нарушителей.",-1)
        end
    end
end

function reportSendAnswer()
    if reportInfo['state'].v then
        sendAnswer(reportInfo['lastAnswer'].v, 1)
    end
end

function change_tags(text, table)
    for k, v in pairs(table) do
        if type(v) ~= 'table' then
            text = text:gsub('%{'..k..'%}', v)
        else
            local buffer = ''
            for _,value in pairs(v) do
                if #tostring(buffer) <= 0 then
                    buffer = value
                else
                    buffer = buffer .. ', ' .. value
                end
            end
            text = text:gsub('%{'..k..'%}', buffer)
        end
    end
    return text
end

function save()
    saveJson(patches['main'], ini)
end


function actionsMain()

end


function samp_create_sync_data(sync_type, copy_from_player)
    local sampfuncs = require 'sampfuncs'
    local raknet = require 'samp.raknet'
    --require 'samp.synchronization'

    copy_from_player = copy_from_player or true
    local sync_traits = {
        player = {'PlayerSyncData', raknet.PACKET.PLAYER_SYNC, sampStorePlayerOnfootData},
        vehicle = {'VehicleSyncData', raknet.PACKET.VEHICLE_SYNC, sampStorePlayerIncarData},
        passenger = {'PassengerSyncData', raknet.PACKET.PASSENGER_SYNC, sampStorePlayerPassengerData},
        aim = {'AimSyncData', raknet.PACKET.AIM_SYNC, sampStorePlayerAimData},
        trailer = {'TrailerSyncData', raknet.PACKET.TRAILER_SYNC, sampStorePlayerTrailerData},
        unoccupied = {'UnoccupiedSyncData', raknet.PACKET.UNOCCUPIED_SYNC, nil},
        bullet = {'BulletSyncData', raknet.PACKET.BULLET_SYNC, nil},
        spectator = {'SpectatorSyncData', raknet.PACKET.SPECTATOR_SYNC, nil}
    }
    local sync_info = sync_traits[sync_type]
    local data_type = 'struct ' .. sync_info[1]
    local data = ffi.new(data_type, {})
    local raw_data_ptr = tonumber(ffi.cast('uintptr_t', ffi.new(data_type .. '*', data)))
    -- copy player's sync data to the allocated memory
    if copy_from_player then
        local copy_func = sync_info[3]
        if copy_func then
            local _, player_id
            if copy_from_player == true then
                _, player_id = sampGetPlayerIdByCharHandle(PLAYER_PED)
            else
                player_id = tonumber(copy_from_player)
            end
            copy_func(player_id, raw_data_ptr)
        end
    end
    -- function to send packet
    local func_send = function()
        local bs = raknetNewBitStream()
        raknetBitStreamWriteInt8(bs, sync_info[2])
        raknetBitStreamWriteBuffer(bs, raw_data_ptr, ffi.sizeof(data))
        raknetSendBitStreamEx(bs, sampfuncs.HIGH_PRIORITY, sampfuncs.UNRELIABLE_SEQUENCED, 1)
        raknetDeleteBitStream(bs)
    end
    -- metatable to access sync data and 'send' function
    local mt = {
        __index = function(t, index)
            return data[index]
        end,
        __newindex = function(t, index, value)
            data[index] = value
        end
    }
    return setmetatable({send = func_send}, mt)
end


function cmd_openmenu()
    if isPermission then
        if addonWindows['startwindow'].v and ini.main.toolsLastEtap == 4 then 
            ini.main.toolsLastEtap = 5
            save()
            sampAddChatMessage("{ec6606}[Обучение]{FFFFFF} Вы начали третий этап обучения.", -1)
        end
        windows['main'].v = not windows['main'].v
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end

function cmd_open_ahelp()
    if isPermission then
        addonWindows['ahelp'].v = not addonWindows['ahelp'].v
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end

function cmd_open_forms()
    if isPermission then
        addonWindows['formPunish'].v = not addonWindows['formPunish'].v
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end

function cmd_open_near()
    if isPermission then
        checkersSettings['stream']['show'].v = not checkersSettings['stream']['show'].v
        ini.checker_stream.show = checkersSettings['stream']['show'].v
        if checkersSettings['stream']['show'].v then printStringNow('RCHECKER ON', 1000) else printStringNow('RCHECKER OFF', 1000) end
        save()
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end



function cmd_open_nearedit()
    if isPermission then
        addonWindows['nearedit'].v = not addonWindows['nearedit'].v
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end


function cmd_clr(arg)
    lua_thread.create(function()
        local errorInfo = "{F6361C}[Ошибка]{FFFFFF} Используйте /clr [1-10]"
        if isPermission then
            if #arg > 0 and arg:match("%d+") then
                if tonumber(arg:match("%d+")) < 1 or tonumber(arg:match("%d+")) > 10 then
                    sampAddChatMessage(errorInfo,-1)
                    return
                end
            else
                arg = 1
            end
            
            for i = 1, tostring(arg):match("%d+") do
                status_clear = true
                sampSendChat("/apanel")
                timeClear = os.time()

                while os.time() - timeClear < 3 and status_clear do
                    wait(0)
                end

                status_clear = false
            end
        else 
            sampAddChatMessage(noAccessText,-1)
        end
    end)
end

function cmd_open_notices()
    if isPermission then
        addonWindows['notices'].v = not addonWindows['notices'].v
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end

function cmd_open_ghetto()
    if isPermission then
        addonWindows['ghetto'].v = not addonWindows['ghetto'].v
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end

function cmd_open_rmp()
    if isPermission then
        if addonWindows['mp'].v then
            addonWindows['rmp'].v = not addonWindows['rmp'].v
        else
            sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Чтобы использовать эту команду - у вас должно быть запущено мероприятие.",-1)
        end
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end

function cmd_open_endmp()
    if isPermission then
        if addonWindows['mp'].v then
            addonWindows['mpend'].v = not addonWindows['mpend'].v
        else
            sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Чтобы использовать эту команду - у вас должно быть запущено мероприятие.",-1)
        end
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end

function patch_samp_time_set(enable)
	if enable and default == nil then
		default = readMemory(sampGetBase() + 0x9C0A0, 4, true)
		writeMemory(sampGetBase() + 0x9C0A0, 4, 0x000008C2, true)
	elseif enable == false and default ~= nil then
		writeMemory(sampGetBase() + 0x9C0A0, 4, default, true)
		default = nil
	end
end


function cmd_st(args)
    if isPermission then
        if #args > 0 and args:match("%d+") and tonumber(args:match("(%d+)")) >= 0 and tonumber(args:match("(%d+)")) <= 23 then
            timeNew = tonumber(args:match("(%d+)"))
            patch_samp_time_set(true)
            sampAddChatMessage("{2DF61C}[Информация]{FFFFFF} Время успешно изменено.", -1)
        else
            patch_samp_time_set(false)
            timeNew = nil
            sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Используйте /st [0-23]",-1)
        end
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end

function cmd_sw(args)
    if isPermission then
        if #args > 0 and args:match("%d+") and tonumber(args:match("(%d+)")) >= 0 and tonumber(args:match("(%d+)")) <= 45 then
            forceWeatherNow(tonumber(args:match("(%d+)")))
            sampAddChatMessage("{2DF61C}[Информация]{FFFFFF} Погода успешно изменена.", -1)
        else
            sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Используйте /sw [0-45]",-1)
        end
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end

function cmd_open_mafias()
    if isPermission then
        addonWindows['mafias'].v = not addonWindows['mafias'].v
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end

function cmd_open_ftp(arg)
    local errorMessage = '{F6361C}[Ошибка]{FFFFFF} Используйте /ftp [ID точки]'
    if isPermission then
        if #arg > 0 and arg:match("%d+") then
            local numberTochka = tonumber(arg:match("(%d+)"))
            if tpPoints[numberTochka] ~= nil then
                sendClickMap(tpPoints[numberTochka][2],tpPoints[numberTochka][3],tpPoints[numberTochka][4])
                setCharCoordinates(PLAYER_PED,tpPoints[numberTochka][2],tpPoints[numberTochka][3],tpPoints[numberTochka][4])
                setCharHeading(PLAYER_PED,tpPoints[numberTochka][5])
                setCharInterior(PLAYER_PED,tpPoints[numberTochka][6])
                setInteriorVisible(tpPoints[numberTochka][6])
                sampSendInteriorChange(tpPoints[numberTochka][6])
            else
                sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Такой персональной точки не существует.",-1)
            end
        else
            sampAddChatMessage(errorMessage,-1)
        end
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end

function tpMarker()
    local sX, sY, sZ = getCharCoordinates(playerPed)
    local isFind, posX, posY, posZ = SearchMarker(sX, sY, sZ)

    if isFind then
        sendClickMap(posX, posY, posZ)
        return true
    else
        sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Маркер не найден.", -1)
    end
    return false
end

function tpMetka()
    local isFind, posX, posY, posZ = getTargetBlipCoordinatesFixed()

    if isFind then
        sendClickMap(posX, posY, posZ)
        printStringNow("TP MAP", 1000)
    else
        sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Метка не найдена.", -1)
    end
end

function cmd_open_tpm(arg)
    local errorMessage = '{F6361C}[Ошибка]{FFFFFF} Используйте /tpm [0(Метка)/1(Маркер)]'
    if isPermission then
        if #arg > 0 and arg:match("%d+") then
            if tonumber(arg:match("%d+")) == 1 then
                tpMarker()
            elseif tonumber(arg:match("%d+")) == 0 then
                tpMetka()
            else
                sampAddChatMessage(errorMessage,-1)
            end
        else
            tpMetka()
        end
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end


function cmd_open_famgz()
    if isPermission then
        addonWindows['famgz'].v = not addonWindows['famgz'].v
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end

function ahelp_window()
    if addonWindows['ahelp'].v then
        local cmdToolsList = {
            {"thelp","Список команд"},
            {command.v,"Главное меню"},
            {mainini['rslap'].v,"Меню слапа в радиусе"},
            {mainini['rkick'].v,"Меню кика в радиусе"},
            {mainini['rpm'].v,"Меню /pm в радиусе"},
            {mainini['abot'].v,"Меню проверки на ботов"},
            {mainini['hgps'].v,"Список точек /gps"},
            {mainini['hclr'].v,"Список цветов"},
            {mainini['hlvl'].v,"Список работ и их уровней"},
            {mainini['hcmd'].v,"Список команд"},
            {mainini['tp'].v,"Телепорт-меню"},
            {mainini['tpcor'].v,"Телепорт по координатам"},
            {mainini['veh'].v,"Меню выдачи автомобилей"},
            {mainini['rveh'].v,"Меню выдачи автомобилей в радиусе"},
            {mainini['gun'].v,"Меню выдачи оружия"},
            {mainini['rgun'].v,"Меню выдачи оружия в радиусе"},
            {mainini['skin'].v,"Меню выдачи скинов"},
            {mainini['rskin'].v,"Меню выдачи скинов в радиусе"},
            {mainini['amember'].v,"Меню вступления в организацию"},
            {mainini['calc'].v,"Калькулятор"},
            {mainini['arepcar'].v,"Починка автомобиля"},
            {'rec',"Реконнект на сервер"},
            {'nrp_nicks',"Список нон-рп ников"},
            {'ip_window',"Окно проверки айпи"},
            {'addchecker',"Добавить игрока в чекер друзей"},
            {'pcheck',"Окно проверки на песок"},
            {'ghetto',"Окно покраски ганг-зон"},
            {'bizmafia',"Окно покраски бизнесов"},
            {'ftp',"Быстрый телепорт по своим точкам"},
            {'tpm',"Телепорт на маркер/метку"},
            {'forms',"Окно оффлайн выдачи форм"},
            {'notices',"Окно заметок"},
            {'clr',"Очистка чата"},
            {'famgz',"Окно покраски фам-зон"},
            {'spcarall',"Спавн всех машин на сервере"},
            {'admins',"Список администрации"},
            {'tpr',"Телепортирует игрока к дороге"},
            {'near',"Включает чекер игроков рядом"},
            {'nearedit',"Редактор чекера игроков рядом"},
            {'sw',"Изменение погоды"},
            {'st',"Изменение времени"},

            {'toolsoff',"Отключает тулс"},
            {'toolsreload',"Перезагружает тулс"},
			{'debug',"Откладка"}
        }

        imgui.ShowCursor = true
        imgui.SetNextWindowSize(imgui.ImVec2(sw / 4, sh / 3), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2((ssw / 2), ssh / 2), imgui.Cond.FirstUseEver,imgui.ImVec2(0.5,0.5))
        imgui.Begin(fa.ICON_FA_QUESTION_CIRCLE .. u8' Список команд',addonWindows['ahelp'],imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
            
            imgui.Columns(2,'##cmdlisttools',true)
            imgui.Separator()
            imgui.CenterColumnText(u8'Команда')
            imgui.NextColumn()
            imgui.CenterColumnText(u8'Описание')
            imgui.Separator()
            imgui.NextColumn()
            imgui.Text('')
            imgui.NextColumn()
            imgui.Text('')
            imgui.NextColumn()
            imgui.Separator()
            for k,v in pairs(cmdToolsList) do
                imgui.CenterColumnText('/' .. u8(v[1]))
                imgui.NextColumn()
                imgui.CenterColumnText(u8(v[2]))
                imgui.Separator()
                imgui.NextColumn()
            end

            imgui.Columns(1)
        imgui.End()
    end
end



function sampGetCharsInSphere(radius)
    local inSphere = {}
    if not radius then return {} end
    local Mx, My, Mz = getCharCoordinates(PLAYER_PED)
    for k,v in pairs(getAllChars()) do
        local x, y, z = getCharCoordinates(v)

        if getDistanceBetweenCoords3d(Mx, My, Mz, x, y, z) <= tonumber(radius) and v ~= 1 then
            local result, id = sampGetPlayerIdByCharHandle(v)

            if result then
                inSphere[#inSphere + 1] = id
            end
        end
    end

    return inSphere
end


function cmd_open_rslap(arg)
    local errorMessage = '{F6361C}[Ошибка]{FFFFFF} Используйте /rslap [Радиус 1-10]'
    if isPermission then
        if not addonWindows['rslap'].v then
            if #arg > 0 then
                if arg:match('%d+') then
                    local number = arg:match('(%d+)')
                    if tonumber(number) > 0 and tonumber(number) <= 10 then
                        inSpherePlayers = sampGetCharsInSphere(number)

                        if #inSpherePlayers > 0 then
                            addonWindows['rslap'].v = true
                        else
                            addonWindows['rslap'].v = false
                            sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Не найдено игроков в указанном радиусе.',-1)
                        end

                    else
                        sampAddChatMessage(errorMessage, -1)
                    end
                else
                    sampAddChatMessage(errorMessage, -1)
                end
            else
                sampAddChatMessage(errorMessage, -1)
            end
        else
            addonWindows['rslap'].v = false
        end
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end


function update_cheats()

    if cheats['inifinityAmmo'].v then
        memory.write(0x969178, 1, 1, true)
    else
        memory.write(0x969178, 0, 1, true)
    end

    if cheats['noBike'].v then
        setCharCanBeKnockedOffBike(PLAYER_PED, true)
    else 
        setCharCanBeKnockedOffBike(PLAYER_PED, false)
    end

end

function cmd_open_rkick(arg)
    local errorMessage = '{F6361C}[Ошибка]{FFFFFF} Используйте /rkick [Радиус 1-10]'
    if isPermission then
        if not addonWindows['rkick'].v then
            if #arg > 0 then
                if arg:match('%d+') then
                    local number = arg:match('(%d+)')
                    if tonumber(number) > 0 and tonumber(number) <= 10 then
                        inSpherePlayers = sampGetCharsInSphere(number)

                        if #inSpherePlayers > 0 then
                            addonWindows['rkick'].v = true
                        else
                            addonWindows['rkick'].v = false
                            sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Не найдено игроков в указанном радиусе.',-1)
                        end

                    else
                        sampAddChatMessage(errorMessage, -1)
                    end
                else
                    sampAddChatMessage(errorMessage, -1)
                end
            else
                sampAddChatMessage(errorMessage, -1)
            end
        else
            addonWindows['rkick'].v = false
        end
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end


function cmd_open_rpm(arg)
    local errorMessage = '{F6361C}[Ошибка]{FFFFFF} Используйте /rpm [Радиус 1-10] [Сообщение]'
    if isPermission then
        if not addonWindows['rpm'].v then
            if #arg > 0 then
                if arg:match('%d+ .+') then
                    rpmnumber, messagerpm.v = arg:match('(%d+) (.+)')
                    messagerpm.v = u8(messagerpm.v)
                    if tonumber(rpmnumber) > 0 and tonumber(rpmnumber) <= 10 then
                        inSpherePlayers = sampGetCharsInSphere(rpmnumber)

                        if #inSpherePlayers > 0 then
                            addonWindows['rpm'].v = true
                        else
                            addonWindows['rpm'].v = false
                            sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Не найдено игроков в указанном радиусе.',-1)
                        end
                    else
                        sampAddChatMessage(errorMessage, -1)
                    end
                else
                    sampAddChatMessage(errorMessage, -1)
                end
            else
                sampAddChatMessage(errorMessage, -1)
            end
        else
            addonWindows['rpm'].v = false
        end
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end


function cmd_open_tpr(arg)
    local errorInfo = "{F6361C}[Ошибка]{FFFFFF} Используйте /tpr [ID] | Или в реконе"
    if isPermission then
        if #arg <= 0 then
            if reconInfo['status'].v then
                teleportToNearestRoadCoordinates(reconInfo['id'])
            else
                sampAddChatMessage(errorInfo,-1)
            end
        else
            if arg:match('%d+') then
                local idunic = arg:match('(%d+)')
                sampGetPlayerScore(idunic)
                if sampIsPlayerConnected(idunic) and sampGetPlayerScore(idunic) > 0 then
                    teleportToNearestRoadCoordinates(idunic)
                else
                    sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Игрок, которого вы пытаетесь телепортировать на дорогу - не авторизован.",-1)
                end
            else
                sampAddChatMessage(errorInfo,-1)
            end
        end
    else
        sampAddChatMessage(noAccessText,-1)
    end
end


function cmd_open_spcarall(arg)
    local errorInfo = "{F6361C}[Ошибка]{FFFFFF} Используйте /spcarall [1-60 seconds]"
    if isPermission then
        if #arg > 0 then
            if arg:match('cancel') then
                stop_spcarall = true
                sampAddChatMessage("{F5B342}[Информация] {FFFFFF}Вы успешно отменили спавн транспорта!", 16003115)
                return
            end

            local colvo_seconds = arg:match('(%d+)')
            if colvo_seconds then
                if tonumber(colvo_seconds) > 0 and tonumber(colvo_seconds) <= 60 then
                    lua_thread.create(function()
                        stop_spcarall = false
                        sampSendChat("/ao [Спавн Транспорта] Ув.Игроки, через " .. colvo_seconds .. " секунд будет спавн всего транспорта!")
                        sampSendChat("/ao [Спавн Транспорта] Займите свой транспорт, в противном случае он пропадет!")
                        
                        local start_spcarall = os.time()

                        while not stop_spcarall and os.time() - start_spcarall < tonumber(colvo_seconds) do
                            printStyledString("Spawn cars through: " .. colvo_seconds - (os.time() - start_spcarall), 1, 4)
                            wait(0)
                        end

                        if stop_spcarall then
                            sampSendChat("/ao [Спавн Транспорта] Уважаемые игроки, спавн транспорта отменен!")
                        else
                            sampAddChatMessage("{F5B342}[Информация] {FFFFFF}Начинается спавн транспорта", -1)
                            while sampIsDialogActive() or reportInfo['state'].v or sampIsChatInputActive() do
                                printStyledString("Waiting for closing dialog", 0, 4)
                                wait(0)
                            end

                            waiting_spcarall = true

                            sampSendChat('/apanel')

                            local start_query_time = os.time()

                            while os.time() - start_query_time < 3 and waiting_spcarall do
                                wait(0)
                            end

                            waiting_spcarall = false
                            
                        end
                        
                    end)
                else
                    sampAddChatMessage(errorInfo,-1)
                end
            else
                sampAddChatMessage(errorInfo,-1)
            end
        else
            sampAddChatMessage(errorInfo,-1)
        end
    else
        sampAddChatMessage(noAccessText,-1)
    end
end

function cmd_open_abot(arg)
    local errorInfo = "{F6361C}[Ошибка]{FFFFFF} Используйте /abot [LVL 1-1000]"
    if isPermission then
        if not addonWindows['abot'].v then
            if #arg > 0 then
                if arg:match('%d+') then
                    local lvl = tonumber(arg:match('(%d+)'))
                    if lvl >= 1 and lvl <= 1000 then
                        abotInfo = sampGetPlayersByLvl(lvl)
                        if #abotInfo > 0 then
                            abotLVL = lvl
                            sampSendChat('/re ' .. abotInfo[1])
                            abotCurrent = 1
                            addonWindows['abot'].v = not addonWindows['abot'].v
                        else
                            sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Игроков с данным уровнем не найдено.',-1)
                        end
                    else
                        sampAddChatMessage(errorInfo,-1)
                    end
                else
                    sampAddChatMessage(errorInfo,-1)
                end
            else
                sampAddChatMessage(errorInfo,-1)
            end
        else
            addonWindows['abot'].v = false
        end
        
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end

function numberOf(value, words)
    local sign = false
    if value < 0 then
        sign = true
    end

	local number = math.abs(value) % 10

	if ( 0 == number or 5 <= number or ( 20 >= value and 10 <= value )) then
		value = value .. words[3]
    elseif ( 1 == number ) then
		value = value .. words[1]
	elseif ( 4 >= number and 2 <= number ) then
		value = value .. words[2]
    end

	return value
end

function cmd_open_hgps()
    if isPermission then
        addonWindows['hgps'].v = not addonWindows['hgps'].v
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end

function cmd_open_hlvl()
    if isPermission then
        addonWindows['hlvl'].v = not addonWindows['hlvl'].v
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end

function cmd_open_hclr()
    if isPermission then
        addonWindows['hclr'].v = not addonWindows['hclr'].v
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end


function cmd_open_hcmd()
    if isPermission then
        addonWindows['hcmd'].v = not addonWindows['hcmd'].v
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end


function cmd_open_tp(arg)
    if isPermission then
        if #arg > 0 then
            sampSendChat('/tp ' .. arg)
        else
            addonWindows['tp'].v = not addonWindows['tp'].v
        end
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end


function cmd_open_tpcor(arg)
    local errorMessage = '{F6361C}[Ошибка]{FFFFFF} Используйте /tpcor [x] [y] [z]'
    if isPermission then
        if #arg > 0 and arg:match('%d+ %d+ %d+') then
            local x,y,z = arg:match('(%d+) (%d+) (%d+)')
            setCharCoordinates(PLAYER_PED,x,y,z)
            sampAddChatMessage('{2DF61C}[Телепорт]{FFFFFF} Вы успешно телепортировались в координаты по X: ' .. x .. ' Y: '.. y .. ' Z: ' .. z,-1)
        else
            sampAddChatMessage(errorMessage,-1)
        end
    else
        sampAddChatMessage(noAccessText,-1)
    end
end


function cmd_open_veh(arg)
    local errorInfo = '{F6361C}[Ошибка]{FFFFFF} Используйте /veh [ID] [0/1]'
    if isPermission then
        if #arg > 0 then
            if arg:match('%d+ %d+') then
                vehInfo[1],vehInfo[2] = arg:match('(%d+) (%d+)')
                if tonumber(vehInfo[2]) >= 0 and tonumber(vehInfo[2]) <= 1 then
                    if sampIsPlayerConnected(vehInfo[1]) or tonumber(vehInfo[1]) == tonumber(idplayer) then
                        finderTable['veh'].v = ""
                        addonWindows['veh'].v = not addonWindows['veh'].v
                    else
                        sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Игрок под ID: ".. vehInfo[1] .. ' - оффлайн.', -1)
                    end
                else
                    sampAddChatMessage(errorInfo, -1)
                end
            else
                sampAddChatMessage(errorInfo, -1)
            end
        else
            sampAddChatMessage(errorInfo, -1)
        end
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end


function cmd_open_rveh(arg)
    local errorInfo = '{F6361C}[Ошибка]{FFFFFF} Используйте /rveh [Радиус 1-100] [0/1]'
    if isPermission then
        if #arg > 0 then
            if arg:match('%d+ %d+') then
                vehInfo[3], vehInfo[2] = arg:match('(%d+) (%d+)')
                if tonumber(vehInfo[3]) >= 1 and tonumber(vehInfo[3]) <= 100 and tonumber(vehInfo[2]) >= 0 and tonumber(vehInfo[2]) <= 1 then
                    inSpherePlayers = sampGetCharsInSphere(vehInfo[3])
                    if #inSpherePlayers > 0 then
                        finderTable['rveh'].v = ""
                        addonWindows['rveh'].v = true
                    else
                        addonWindows['rveh'].v = false
                        sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Не найдено игроков в указанном радиусе.',-1)
                    end
                else
                    sampAddChatMessage(errorInfo, -1)
                end
            else
                sampAddChatMessage(errorInfo, -1)
            end
        else
            sampAddChatMessage(errorInfo, -1)
        end
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end


function cmd_open_gun(arg)
    local errorInfo = '{F6361C}[Ошибка]{FFFFFF} Используйте /gun [ID] [Патроны (0 - ...)]'
    if isPermission then
        if #arg > 0 then
            if arg:match('%d+ %d+') then
                gunInfo[1],gunInfo[2] = arg:match('(%d+) (%d+)')
                if tonumber(gunInfo[2]) > 0 then
                    if sampIsPlayerConnected(gunInfo[1]) or tonumber(gunInfo[1]) == tonumber(idplayer) then
                        finderTable['gun'].v = ""
                        addonWindows['gun'].v = not addonWindows['gun'].v
                    else
                        sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Игрок под ID: ".. gunInfo[1] .. ' - оффлайн.', -1)
                    end
                else
                    sampAddChatMessage(errorInfo, -1)
                end
            else
                sampAddChatMessage(errorInfo, -1)
            end
        else
            sampAddChatMessage(errorInfo, -1)
        end
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end

function SampVersion()
	if getModuleHandle("samp.dll") == 0 then
		return false
	end

    

    local result = memory.tohex(sampGetBase() + 47806, 10, true) 
	if result == "F8036A004050518D4C24" then
		return "R1"
	elseif result == "528D44240C508D7E09E8" then
		return "0_3_DL-R1"
	elseif result == "E86D9A0A0083C41C85C0" then
		return "R3"
	else
		return "Unknown SA-MP Version."
	end
end

function cmd_open_rgun(arg)
    if isPermission then
        local errorInfo = '{F6361C}[Ошибка]{FFFFFF} Используйте /rgun [Радиус 1-100] [Патроны (0 - ...)]'
        if #arg > 0 then
            if arg:match('%d+ %d+') then
                gunInfo[3], gunInfo[2] = arg:match('(%d+) (%d+)')
                if tonumber(gunInfo[3]) >= 1 and tonumber(gunInfo[3]) <= 100 and tonumber(gunInfo[2]) > 0 then
                    inSpherePlayers = sampGetCharsInSphere(gunInfo[3])

                    if #inSpherePlayers > 0 then
                        finderTable['rgun'].v = ""
                        addonWindows['rgun'].v = true
                    else
                        addonWindows['rgun'].v = false
                        sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Не найдено игроков в указанном радиусе.',-1)
                    end
                else
                    sampAddChatMessage(errorInfo, -1)
                end
            else
                sampAddChatMessage(errorInfo, -1)
            end
        else
            sampAddChatMessage(errorInfo, -1)
        end
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end

function cmd_open_putobject()
    if isPermission then
        addonWindows['putobject'].v = not addonWindows['putobject'].v
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end


function cmd_open_skin(arg)
    local errorInfo = '{F6361C}[Ошибка]{FFFFFF} Используйте /skin [ID] [0/1]'
    if isPermission then
        if #arg > 0 then
            if arg:match('%d+ %d+') then
                skinInfo[1],skinInfo[2] = arg:match('(%d+) (%d+)')
                if tonumber(skinInfo[2]) >= 0 and tonumber(skinInfo[2]) <= 1 then
                    if sampIsPlayerConnected(skinInfo[1]) or tonumber(skinInfo[1]) == tonumber(idplayer) then
                        addonWindows['skin'].v = not addonWindows['skin'].v
                    else
                        sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Игрок под ID: ".. skinInfo[1] .. ' - оффлайн.', -1)
                    end
                else
                    sampAddChatMessage(errorInfo, -1)
                end
            else
                sampAddChatMessage(errorInfo, -1)
            end
        else
            sampAddChatMessage(errorInfo, -1)
        end
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end


function cmd_open_rskin(arg)
    if isPermission then
        local errorInfo = '{F6361C}[Ошибка]{FFFFFF} Используйте /rskin [Радиус 1-100] [0/1]'
        if #arg > 0 then
            if arg:match('%d+ %d+') then
                skinInfo[3], skinInfo[2] = arg:match('(%d+) (%d+)')
                if tonumber(skinInfo[3]) >= 1 and tonumber(skinInfo[3]) <= 100 and tonumber(skinInfo[2]) >= 0 and tonumber(skinInfo[2]) <= 1 then
                    inSpherePlayers = sampGetCharsInSphere(skinInfo[3])

                    if #inSpherePlayers > 0 then
                        addonWindows['rskin'].v = true
                    else
                        addonWindows['rskin'].v = false
                        sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Не найдено игроков в указанном радиусе.',-1)
                    end
                else
                    sampAddChatMessage(errorInfo, -1)
                end
            else
                sampAddChatMessage(errorInfo, -1)
            end
        else
            sampAddChatMessage(errorInfo, -1)
        end
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end


function cmd_open_amember(arg)
    if isPermission then
        if #arg > 0 then
            if arg:match('%d+ %d+') then
                local org, rank = arg:match('(%d+) (%d+)')
                sampSendChat('/amember ' .. org .. ' ' .. rank)
            else
                addonWindows['amember'].v = not addonWindows['amember'].v
            end
        else
            addonWindows['amember'].v = not addonWindows['amember'].v
        end
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end


function getTextGeneral(bool)

    if bool then 
        return u8"{23D72F}Функция включена"
    else 
          return u8"{D72323}Функция выключена"
    end
  
end
  
function cmd_open_ip()
    if isPermission then
        if ipData['nick_steal'] ~= nil and ipData['info'] ~= nil then
            addonWindows['ip'].v = not addonWindows['ip'].v
        else
            sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Вы еще не проверяли чей-либо айпи.", -1)
        end
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end

function cmd_open_nrp_nicks()
    if isPermission then
        addonWindows['nrpnicks'].v = not addonWindows['nrpnicks'].v
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end

function cmd_open_pcheck()
    if isPermission then
        addonWindows['pcheck'].v = not addonWindows['pcheck'].v
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end

function cmd_open_learn_tools()
    if isPermission then
        addonWindows['startwindow'].v = not addonWindows['startwindow'].v
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end

function cmd_open_provcheck()
    if isPermission then
        addonWindows['provcheck'].v = not addonWindows['provcheck'].v
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end



function cmd_open_checkmint(arg)
    if isPermission then
        local id_is = arg:match('(%d+)')
        if id_is and tonumber(id_is) >= 0 and tonumber(id_is) <= 999 then
            sampSendChat('/a [Robo-Check] ' .. arg)
        end
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end


function cmd_add_checker(arg)
    if isPermission then
        if #arg > 0 then
            if #arg > 2 and #arg < 32 then
                local isExist = false
                for kv,vk in pairs(friendsTable) do
                    if stringToLower(vk[1]) == stringToLower(arg) then
                        isExist = true
                    end
                end
                if isExist then
                    sampAddChatMessage('{F6361C}[Ошибка]{FFFFFF} Такой игрок уже существует!',-1) 
                else
                    friendsTable[#friendsTable + 1] = {arg}
                    saveJson(patches['friends'],friendsTable)
                    sampAddChatMessage("{2DF61C}[Создание]{FFFFFF} Вы успешно добавили нового игрока.",-1)  
                end 

            else
                sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Ник должнен состоять более чем из 2-ух символов и не более чем из 32-ух",-1)
            end
        else
            sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Используйте: /addchecker [Ник]",-1)
        end
    else
        sampAddChatMessage(noAccessText,-1)
    end
end


function calc(str)
    return assert(load("return " .. str))()
end


function cmd_open_calc(arg)
    if isPermission then
        if #arg > 0 then
            local bool, result = pcall(calc, arg:gsub("=", ""))

            if bool and result then
				sampAddChatMessage("{2DF61C}[Решение] {FFFFFF}Результат: " .. arg .. " = " .. result, -1)
			else
				sampAddChatMessage("{F6361C}[Ошибка] {FFFFFF}Вы указали не соответствующие символы для решения примера.", -1)
				sampAddChatMessage("{F6361C}[Ошибка] {FFFFFF}Символы к использованию: + | - | / | * | ()", -1)
			end
        else
            sampAddChatMessage("{F6361C}[Ошибка] {FFFFFF}Используйте: /calc [Пример]", -1)
        end
    else 
        sampAddChatMessage(noAccessText,-1)
    end
end

function cmd_open_arepcar()
    if isPermission then

    else 
        sampAddChatMessage(noAccessText,-1)
    end
end


function imgui.NewInputText(lable, val, width, hint, hintpos,flags)
    local hint = hint and hint or ''
    local hintpos = tonumber(hintpos) and tonumber(hintpos) or 1
    local cPos = imgui.GetCursorPos()
    imgui.PushItemWidth(width)
    local result = imgui.InputText(lable, val,flags)
    if #val.v == 0 then
        local hintSize = imgui.CalcTextSize(hint)
        if hintpos == 2 then imgui.SameLine(cPos.x + (width - hintSize.x) / 2)
        elseif hintpos == 3 then imgui.SameLine(cPos.x + (width - hintSize.x - 5))
        else imgui.SameLine(cPos.x + 5) end
        imgui.TextColored(imgui.ImVec4(1.00, 1.00, 1.00, 0.40), tostring(hint))
    end
    imgui.PopItemWidth()
    return result
end


function imgui.HintInputFont()
    imgui.Hint(u8"Вы можете установить любой шрифт, который установлен в системе\n\nСписок стандартных шрифтов:\nArial\nBook Antiqua\nCourier New\nGeorgia\nTahoma\nTimes New Roman\nTrebuchet MS\nVerdana")
end 

drgint = imgui.DragInt
function imgui.DragInt(...)
    local bool = drgint(...)
    imgui.Hint(u8"Для того, чтобы изменить значение - зажмите поле и тяните влево/вправо\nДля того, чтобы изменить значение моментально - два раза кликните по полю")
    return bool
end

drgfloat = imgui.DragFloat
function imgui.DragFloat(...)
    local bool = drgfloat(...)
    imgui.Hint(u8"Для того, чтобы изменить значение - зажмите поле и тяните влево/вправо\nДля того, чтобы изменить значение моментально - два раза кликните по полю")
    return bool
end

function getSpeedFromVector3D(vec)
    return math.sqrt(vec.x ^ 2 + vec.y ^ 2 + vec.z ^ 2)
end

function getDistanceFrom(vec)
    local x, y, z = getCharCoordinates(PLAYER_PED)
    return math.sqrt((vec.x - x) ^ 2 + (vec.y - y) ^ 2 + (vec.z - z) ^ 2)
end

function warning_rvanka(id,text)
    if not isGamePaused() and window == 0 then
        local nick = sampGetPlayerNickname(id)
        if rvankaInfo[id] and os.time() - rvankaInfo[id] <= warningsSettings['rvanka']['coolDown'].v then return end
        rvankaInfo[id] = os.time()
        sampAddChatMessage("{F6361C}[Warning | Rvanka] {" .. argb2hex(sampGetPlayerColor(id)) .. "}" .. nick .."[" .. id .."]{D74F4F} подозревается в использовании рванки " .. text, -1)
    end
end


function sampev.onSendAimSync(data)

end



function sampev.onSetRaceCheckpoint(type, position, nextPosition, size)
    if startGPS then
        if waitingGPS then
            lua_thread.create(function()
                temporaryGPSInfo[nowGPS]['coords'] = position.x .. ' ' .. position.y .. ' ' .. position.z
                sampSendChat('/gps')
                waitingGPS = false
            end)
        end

    
    
        if waitingVLOZEHNIU then
            lua_thread.create(function()
                temporaryGPSInfo[nowGPS]['category'][vlozehniuNow]['coords'] = position.x .. ' ' .. position.y .. ' ' .. position.z
                sampSendChat('/gps')
            end)
        end
    end
end

function sampev.onAimSync(playerId, data)
    if reconInfo['status'].v and reconSettings['showLook'].v and reconInfo['id'] ~= -1 then
        if tonumber(reconInfo['id']) == tonumber(playerId) then
            local pedExist, ped = sampGetCharHandleBySampPlayerId(reconInfo['id'])
            if pedExist then
                local result, headPos = getBodyPartCoordinatesCringe(8, ped)
                if result then
                    local new = headPos - data.camPos
                    if reconInfo['cam'][ped] == nil then
                        reconInfo['cam'][ped] = { 
                            timer = os.clock(),
                            new = new, old = new
                        }
                    else
                        reconInfo['cam'][ped].timer = os.clock()
                        reconInfo['cam'][ped].old = reconInfo['cam'][ped].new
                        reconInfo['cam'][ped].new = new
                    end
                end
            end
        end
    end
end

function sampev.onTogglePlayerSpectating(toggle)
	if cheats['invisible'].v then
		if not toggle then
			lua_thread.create(function()
				sampRequestClass(1) 
				wait(1000) 
				sampSendSpawn() 
				sampSendRequestSpawn()
			end)
		end
	    return false
    end
end

function sampev.onSendRequestSpawn() if cheats['invisible'].v then return false end end
function sampev.onSendSpawn() if cheats['invisible'].v then return false end end

function sampev.onSendVehicleSync(data)
    if cheats['invisible'].v then
        if not reconInfo['status'].v then
            local sync = samp_create_sync_data('spectator')
            sync.position = data.position
            sync.keysData = data.keysData
            sync.send()
            return false
        end
    end
end

function sampev.onSendPlayerSync(data)
    if cheats['invisible'].v then
        if not reconInfo['status'].v then
            local sync = samp_create_sync_data('spectator')
            sync.position = data.position
            sync.keysData = data.keysData
            sync.send()
            return false
        end
    end

    if eventMenuStart['typeTeleportSpawns'] and eventMenuStart['wichTeleport'] < 9 and #eventsTable[eventMenuStart['wichMP']]['points']['positions'] > eventMenuStart['wichTeleport'] then
        local sync = samp_create_sync_data('player')
        data.position.x = eventsTable[eventMenuStart['wichMP']]['points']['positions'][eventMenuStart['wichTeleport'] + 1][1]
        data.position.y = eventsTable[eventMenuStart['wichMP']]['points']['positions'][eventMenuStart['wichTeleport'] + 1][2]
        data.position.z = eventsTable[eventMenuStart['wichMP']]['points']['positions'][eventMenuStart['wichTeleport'] + 1][3] + 5
        sync.position = data.position 
        sync.send()
        return false
    end

    if settingObjectsConfig['isSetting'] and settingObjectsConfig['id'] ~= nil then
        local sync = samp_create_sync_data('player')
        if settingObjectsConfig['variant'] == 1 then
            local coords = objectsTable[settingObjectsConfig['id']]['objects'][settingObjectsConfig['nowObject'] + 1]['position']
            data.position.x = coords[1]
            data.position.y = coords[2]
            data.position.z = coords[3]

            local b = 0 * math.pi / 360.0
            local h = 0 * math.pi / 360.0
            local angle = coords[4]
            local a = angle * math.pi / 360.0

            local c1, c2, c3 = math.cos(h), math.cos(a), math.cos(b)
            local s1, s2, s3 = math.sin(h), math.sin(a), math.sin(b)
            data.quaternion[0] = c1 * c2 * c3 - s1 * s2 * s3
            data.quaternion[3] = -( c1 * s2 * c3 - s1 * c2 * s3 )

            if(#objectsTable[settingObjectsConfig['id']]['objects'] > settingObjectsConfig['nowObject']) then 
                if not settingObjectsConfig['waiting'] then
                    sampSendChat('/putobject')
                    settingObjectsConfig['waiting'] = true
                end
            end
            sync.position = data.position
            sync.quaternion = data.quaternion
            sync.send()
            return false
        else
            local coords = objectsTable[settingObjectsConfig['id']]['objects'][settingObjectsConfig['nowObject'] + 1]['positionUnPinned']
            local wasCoordStart = objectsTable[settingObjectsConfig['id']]['startPosCoordinates']
            local normalizedCoords = {
                settingObjectsConfig['startPos'][1] + (coords[1]),
                settingObjectsConfig['startPos'][2] + (coords[2]),
                settingObjectsConfig['startPos'][3] + (coords[3]),
            }
            --setCharCoordinates(PLAYER_PED, normalizedCoords[1], normalizedCoords[2], normalizedCoords[3])
            data.position.x = normalizedCoords[1]
            data.position.y = normalizedCoords[2]
            data.position.z = normalizedCoords[3]

            local b = 0 * math.pi / 360.0
            local h = 0 * math.pi / 360.0
            local angle = settingObjectsConfig['startPos'][4] / coords[4]

            local a = angle * math.pi / 360.0

            local c1, c2, c3 = math.cos(h), math.cos(a), math.cos(b)
            local s1, s2, s3 = math.sin(h), math.sin(a), math.sin(b)
            data.quaternion[0] = c1 * c2 * c3 - s1 * s2 * s3
            data.quaternion[3] = -( c1 * s2 * c3 - s1 * c2 * s3 )

            if(#objectsTable[settingObjectsConfig['id']]['objects'] > settingObjectsConfig['nowObject']) then 
                if not settingObjectsConfig['waiting'] then
                    sampSendChat('/putobject')
                    settingObjectsConfig['waiting'] = true
                end
            end

            sync.position = data.position
            sync.quaternion = data.quaternion
            sync.send()
            return false
        end
    end

    if isPlayerAfk then
        return false
    end
end

animAcceptForNoClip = false

function sampev.onApplyPlayerAnimation(playerId, animLib, animName, loop, lockX, lockY, freeze, time)
    if playerId == idplayer then
        if (animLib == 'BOMBER' and animName == 'BOM_Plant') and (addonWindows['putobject'].v or settingObjectsConfig['isSetting']) then
            return false
        end

        if (animLib == 'PED' or animLib == 'ped') and (animName == 'getup' or animName == 'GETUP_FRONT') and loop == 4 and not lockX and lockY then
            animAcceptForNoClip = true
            return false
        end
    end
end

function sampev.onSetPlayerPos(position)
    local mX, mY, mZ = getCharCoordinates(playerPed)
    if animAcceptForNoClip then
        animAcceptForNoClip = false
        return false
    end
end


function sampev.onPlayerSync(id, data)
    if warningsSettings['rvanka']['state'].v and getSpeedFromVector3D(data.moveSpeed) >= tonumber(warningsSettings['rvanka']['onfootSpeedLimit'].v) and getDistanceFrom(data.position) <= tonumber(warningsSettings['rvanka']['onfootDistLimit'].v) then
        warning_rvanka(id, "с ног")
    end
    
    if reconInfo['status'].v and reconInfo['id'] ~= -1 then
        if tonumber(reconInfo['id']) == tonumber(id) then
            keys["onfoot"] = {}
            
            keys["onfoot"]["W"] = (data.upDownKeys == 65408) or nil
            keys["onfoot"]["A"] = (data.leftRightKeys == 65408) or nil
            keys["onfoot"]["S"] = (data.upDownKeys == 00128) or nil
            keys["onfoot"]["D"] = (data.leftRightKeys == 00128) or nil

            keys["onfoot"]["Alt"] = (bit.band(data.keysData, 1024) == 1024) or nil
            keys["onfoot"]["Shift"] = (bit.band(data.keysData, 8) == 8) or nil
            keys["onfoot"]["Space"] = (bit.band(data.keysData, 32) == 32) or nil
            keys["onfoot"]["F"] = (bit.band(data.keysData, 16) == 16) or nil
            keys["onfoot"]["C"] = (bit.band(data.keysData, 2) == 2) or nil

            keys["onfoot"]["RKM"] = (bit.band(data.keysData, 4) == 4) or nil
            keys["onfoot"]["LKM"] = (bit.band(data.keysData, 128) == 128) or nil
        end
	end
end


function sampev.onVehicleSync(id, veh, data)
    if warningsSettings['rvanka']['state'].v and getSpeedFromVector3D(data.moveSpeed) >= tonumber(warningsSettings['rvanka']['incarSpeedLimit'].v) and getDistanceFrom(data.position) <= tonumber(warningsSettings['rvanka']['incarDistLimit'].v) then
	local resvh, vehHandle = sampGetCarHandleBySampVehicleId(veh)
		if not isCharInCar(PLAYER_PED, vehHandle) then
			warning_rvanka(id, "автомобилем")
		end
	end

    if reconInfo['status'].v and reconInfo['id'] ~= -1 then
        if tonumber(reconInfo['id']) == tonumber(id) then
            keys["vehicle"] = {}
            
            keys["vehicle"]["W"] = (bit.band(data.keysData, 8) == 8) or nil
            keys["vehicle"]["A"] = (data.leftRightKeys == 65408) or nil
            keys["vehicle"]["S"] = (bit.band(data.keysData, 32) == 32) or nil
            keys["vehicle"]["D"] = (data.leftRightKeys == 00128) or nil
    
            keys["vehicle"]["H"] = (bit.band(data.keysData, 2) == 2) or nil
            keys["vehicle"]["Space"] = (bit.band(data.keysData, 128) == 128) or nil
            keys["vehicle"]["Ctrl"] = (bit.band(data.keysData, 1) == 1) or nil
            keys["vehicle"]["Alt"] = (bit.band(data.keysData, 4) == 4) or nil
            keys["vehicle"]["Q"] = (bit.band(data.keysData, 256) == 256) or nil
            keys["vehicle"]["E"] = (bit.band(data.keysData, 64) == 64) or nil
            keys["vehicle"]["F"] = (bit.band(data.keysData, 16) == 16) or nil
    
            keys["vehicle"]["Up"] = (data.upDownKeys == 65408) or nil
            keys["vehicle"]["Down"] = (data.upDownKeys == 00128) or nil
        end
	end
end

function sampev.onUnoccupiedSync(id, data)
    if warningsSettings['rvanka']['state'].v and getDistanceFrom(data.position) <= tonumber(warningsSettings['rvanka']['unocDistLimit'].v) then
		if getSpeedFromVector3D(data.moveSpeed) >= tonumber(warningsSettings['rvanka']['unocSpeedLimit'].v) then
            warning_rvanka(id, "с пассажирского места")
		end
	end
end

function sampev.onSendBulletSync(data)

    if bSettings['myBullets'].v and bSettings['btracer'].v then
        
        if data.center.x ~= 0 then
            if data.center.y ~= 0 then
                if data.center.z ~= 0 then
                    bulletSyncMy.lastId = bulletSyncMy.lastId + 1
                    if bulletSyncMy.lastId < 1 or bulletSyncMy.lastId > bulletSyncMy.maxLines then
                        bulletSyncMy.lastId = 1
                    end
                    bulletSyncMy[bulletSyncMy.lastId].my.time = os.time() + bSettings['timeRenderMyBullets'].v
                    bulletSyncMy[bulletSyncMy.lastId].my.o.x, bulletSyncMy[bulletSyncMy.lastId].my.o.y, bulletSyncMy[bulletSyncMy.lastId].my.o.z = data.origin.x, data.origin.y, data.origin.z
                    bulletSyncMy[bulletSyncMy.lastId].my.t.x, bulletSyncMy[bulletSyncMy.lastId].my.t.y, bulletSyncMy[bulletSyncMy.lastId].my.t.z = data.target.x, data.target.y, data.target.z
                    if data.targetType == 0 then
                        bulletSyncMy[bulletSyncMy.lastId].my.color = hexrgba2hexargb(ini.cheats.staticObjectMy)
                    elseif data.targetType == 1 then
                        bulletSyncMy[bulletSyncMy.lastId].my.color = hexrgba2hexargb(ini.cheats.playerMy) 
                    elseif data.targetType == 2 then
                        bulletSyncMy[bulletSyncMy.lastId].my.color = hexrgba2hexargb(ini.cheats.carMy) 
                    elseif data.targetType == 3 then
                        bulletSyncMy[bulletSyncMy.lastId].my.color = hexrgba2hexargb(ini.cheats.dynamicObjectMy)  
                    end
                end
            end
        end
    end
end 


function sampev.onBulletSync(playerid, data)

    if bSettings['otherBullets'].v and bSettings['btracer'].v then
        if data.center.x ~= 0 then
            if data.center.y ~= 0 then
                if data.center.z ~= 0 then
                    bulletSyncOther.lastId = bulletSyncOther.lastId + 1
                    if bulletSyncOther.lastId < 1 or bulletSyncOther.lastId > bulletSyncOther.maxLines then
                        bulletSyncOther.lastId = 1
                    end
                    if bSettings['showPlayer'].v then
                        bulletSyncOther[bulletSyncOther.lastId].other.id = playerid
                        bulletSyncOther[bulletSyncOther.lastId].other.colorText = {nick = hex8tohex6(ini.cheats.colorNick), id = hex8tohex6(ini.cheats.colorId)}
                    end
                    bulletSyncOther[bulletSyncOther.lastId].other.time = os.time() + bSettings['timeRenderOtherBullets'].v
                    bulletSyncOther[bulletSyncOther.lastId].other.o.x, bulletSyncOther[bulletSyncOther.lastId].other.o.y, bulletSyncOther[bulletSyncOther.lastId].other.o.z = data.origin.x, data.origin.y, data.origin.z
                    bulletSyncOther[bulletSyncOther.lastId].other.t.x, bulletSyncOther[bulletSyncOther.lastId].other.t.y, bulletSyncOther[bulletSyncOther.lastId].other.t.z = data.target.x, data.target.y, data.target.z
                    bulletSyncOther[bulletSyncOther.lastId].other.type = data.targetType
                    if data.targetType == 0 then
                        bulletSyncOther[bulletSyncOther.lastId].other.color = hexrgba2hexargb(ini.cheats.staticObjectOther)
                    elseif data.targetType == 1 then
                        bulletSyncOther[bulletSyncOther.lastId].other.color = hexrgba2hexargb(ini.cheats.playerOther)
                    elseif data.targetType == 2 then
                        bulletSyncOther[bulletSyncOther.lastId].other.color = hexrgba2hexargb(ini.cheats.carOther)
                    elseif data.targetType == 3 then
                        bulletSyncOther[bulletSyncOther.lastId].other.color = hexrgba2hexargb(ini.cheats.dynamicObjectOther)  
                    end
                end
            end
        end
    end
end


function bullettracer()

    while true do
        wait(0)
        local oTime = os.time()
        
        if isPermission and bSettings['otherBullets'].v and not isPauseMenuActive() and not isGamePaused() and sampGetGamestate() == 3 then
            for i = 1, bulletSyncOther.maxLines do
                if bulletSyncOther[i].other.time >= oTime then
                    local result, wX, wY, wZ, wW, wH = convert3DCoordsToScreenEx(bulletSyncOther[i].other.o.x, bulletSyncOther[i].other.o.y, bulletSyncOther[i].other.o.z, true, true)
                    local resulti, pX, pY, pZ, pW, pH = convert3DCoordsToScreenEx(bulletSyncOther[i].other.t.x, bulletSyncOther[i].other.t.y, bulletSyncOther[i].other.t.z, true, true)
                    if result and resulti then
                        local xResolution = memory.getuint32(0x00C17044)
                        if wZ < 1 then
                            wX = xResolution - wX
                        end
                        if pZ < 1 then
                            pZ = xResolution - pZ
                        end 
                        if bSettings['showPlayer'].v then
                            if bulletSyncOther[i].other.id ~= -1 then 
                                if sampIsPlayerConnected(bulletSyncOther[i].other.id) then
                                    if bSettings['showNick'].v then showbulletnick = '{'..bulletSyncOther[i].other.colorText.nick ..'}'..sampGetPlayerNickname(bulletSyncOther[i].other.id)..'{FFFFFF}' else showbulletnick = "" end
                                    if bSettings['showId'].v then showbulletid = '{'..bulletSyncOther[i].other.colorText.nick..'}['..tostring(bulletSyncOther[i].other.id)..']{FFFFFF}' else showbulletid = "" end
                                end
                                renderFontDrawText(fonts['btracer'], showbulletnick .. showbulletid, wX + 0.5, wY, 0xFFFFFFFF, false)
                            end
                        end
                        renderDrawLine(wX, wY, pX, pY, bSettings['sizeOtherLine'].v, '0x'..bulletSyncOther[i].other.color)
                        if bSettings['EndOther'].v then
                            renderDrawPolygon(pX, pY-1, 3 + bSettings['sizeOtherPolygonEnd'].v, 3 + bSettings['sizeOtherPolygonEnd'].v, 1 + bSettings['rotationOtherPolygonEnd'].v, bSettings['degreeOtherPolygonEnd'].v, bulletSyncOther[i].other.color)
                        end
                    end
                end
            end
        end


        if bSettings['myBullets'].v then
            for i = 1, bulletSyncMy.maxLines do
                if bulletSyncMy[i].my.time >= oTime then
                    local result, wX, wY, wZ, wW, wH = convert3DCoordsToScreenEx(bulletSyncMy[i].my.o.x, bulletSyncMy[i].my.o.y, bulletSyncMy[i].my.o.z, true, true)
                    local resulti, pX, pY, pZ, pW, pH = convert3DCoordsToScreenEx(bulletSyncMy[i].my.t.x, bulletSyncMy[i].my.t.y, bulletSyncMy[i].my.t.z, true, true)
                    if result and resulti then
                        local xResolution = memory.getuint32(0x00C17044)
                        if wZ < 1 then
                            wX = xResolution - wX
                        end
                        if pZ < 1 then
                            pZ = xResolution - pZ
                        end 
                        renderDrawLine(wX, wY, pX, pY,bSettings['sizeMyLine'].v, '0x'..bulletSyncMy[i].my.color)
                        if bSettings['EndMy'].v then
                            renderDrawPolygon(pX, pY-1, 3 + bSettings['sizeMyPolygonEnd'].v, 3 + bSettings['sizeMyPolygonEnd'].v, 1 + bSettings['rotationMyPolygonEnd'].v, bSettings['degreeMyPolygonEnd'].v, '0x'..bulletSyncMy[i].my.color)
                        end
                    end
                end
            end
        end

    end

end



function hideIpF(ip)
	if ip and mainini['hideip'].v then
		while ip:find("%d+%.%d+%.%d+%.%d+") do
			ip = ip:gsub(ip:match("(%d+%.%d+%.%d+%.%d+)"), ip:match("(%d+%.%d+)%.%d+%.%d+") .. ".**.**")
		end

		return ip
	else
		return ip
	end
end


function airb()
    airsh = {}
    local posX, posY, posZ = getCharCoordinates(playerPed)
    airBrkCoords = {posX, posY, posZ, 0.0, 0.0, getCharHeading(playerPed)}
    while true do 
        wait(0)

        if isPermission and (isKeyJustPressed(0xA1) and hotKeyChecks()) and (hotkeysTable['cheats'][3] == nil or #hotkeysTable['cheats'][3].v == 0) then
            cheats['airbrake'].v = not cheats['airbrake'].v
            if cheats['airbrake'].v then printStringNow('AIRB ON', 1000) else printStringNow('AIRB OFF', 1000) end
            changeAirBrake()
        end

        if isPermission and cheats['airbrake'].v then

            if not sampIsChatInputActive() and not sampIsDialogActive() then
                if getMousewheelDelta() > 0 then
                    if cheats['pSpeed'].v + 0.2 <= 100 then
                        cheats['pSpeed'].v = cheats['pSpeed'].v + 0.2
                        ini.cheats.pSpeed = cheats['pSpeed'].v
                        save()
                    end
                elseif getMousewheelDelta() < 0 then
                    if cheats['pSpeed'].v - 0.2 > 0 then
                        cheats['pSpeed'].v = cheats['pSpeed'].v - 0.2
                        ini.cheats.pSpeed = cheats['pSpeed'].v
                        save()
                    end
                end
            end
            renderFontDrawText(fonts['airbrake'],'{'..hex8tohex6(ini.cheats.colorBoostTextARB)..'}Ускорение ARB: {FFFFFF}{'..hex8tohex6(ini.cheats.colorBoostARB)..'}'..tostring(math.floor(cheats['pSpeed'].v * 10) / 10) .. '{FFFFFF}',cheats['xARB'].v,cheats['yARB'].v,0xFFFFFFFF)
            local _, id = sampGetPlayerIdByCharHandle(playerPed) -- получаем свой айди
            local fX, fY, fZ = getActiveCameraCoordinates() -- получаем координаты камеры
            local zX, zY, zZ = getActiveCameraPointAt() -- хуй его знает
            local heading = getHeadingFromVector2d(zX - fX, zY - fY) -- хуй знает как объяснить
            if isCharInAnyCar(PLAYER_PED) then
                car = getCarCharIsUsing(playerPed) -- получение хендла машини
                setCarHeading(car, heading) -- устанавливаем машине положение камеры
                setCarProofs(car, true, true, true, true, true) -- гм для машины(игнорирование выстрелов, взрывов и тд. Машина не получает дамаг)
                local _, id = sampGetVehicleIdByCarHandle(car)
                if getDriverOfCar(getCarCharIsUsing(PLAYER_PED)) == -1 then
                    pcall(sampForcePassengerSyncSeatId, airsh[1], airsh[2])
                    pcall(sampForceUnoccupiedSyncSeatId, airsh[1], airsh[2])
                else
                    pcall(sampForceVehicleSync, airsh[1])
                end
                speed = cheats['pSpeed'].v * cheats['multiplierARB'].v
            elseif not isCharInAnyCar(PLAYER_PED) then 
                setCharHeading(PLAYER_PED, heading)
                setCharProofs(PLAYER_PED, true, true, true, true, true)
                speed = cheats['pSpeed'].v * cheats['multiplierARB'].v
                pcall(sampForceOnfootSync)
            end
            setCharCoordinates(PLAYER_PED, airBrkCoords[1], airBrkCoords[2], airBrkCoords[3] - 0.79)
                if not sampIsChatInputActive() and not sampIsDialogActive() then -- если не открыт чат и диалог
                    if isKeyDown(vkeys.VK_SPACE) then -- если нажата клавиша вверх
                        airBrkCoords[3] = airBrkCoords[3] + speed / 2.0
                    elseif isKeyDown(vkeys.VK_LSHIFT) and airBrkCoords[3] > -95.0 then -- если нажата клавиша вниз
                        airBrkCoords[3] = airBrkCoords[3] - speed / 2.0
                    end
                    if isKeyDown(vkeys.VK_W) then
                        airBrkCoords[1] = airBrkCoords[1] + speed * math.sin(-math.rad(heading))
                        airBrkCoords[2] = airBrkCoords[2] + speed * math.cos(-math.rad(heading))
                    elseif isKeyDown(vkeys.VK_S) then 
                        airBrkCoords[1] = airBrkCoords[1] - speed * math.sin(-math.rad(heading))
                        airBrkCoords[2] = airBrkCoords[2] - speed * math.cos(-math.rad(heading))
                    end
                    if isKeyDown(vkeys.VK_A) then 
                        airBrkCoords[1] = airBrkCoords[1] - speed * math.sin(-math.rad(heading - 90))
                        airBrkCoords[2] = airBrkCoords[2] - speed * math.cos(-math.rad(heading - 90))
                    elseif isKeyDown(vkeys.VK_D) then 
                        airBrkCoords[1] = airBrkCoords[1] + speed * math.sin(-math.rad(heading - 90))
                        airBrkCoords[2] = airBrkCoords[2] + speed * math.cos(-math.rad(heading - 90))
                    end
            end
        end
    end
end

function getMoveSpeed(heading, speed)
    moveSpeed = {x = math.sin(-math.rad(heading)) * speed, y = math.cos(-math.rad(heading)) * speed, z = -0.0000001} 
    return moveSpeed
end


function crackAccept()
    local args = {}
    pcall(asyncHttpRequest, 'GET',"http://admin-tools.ru/tools/soft/admkl.php?server=" .. serverlist[ip .. ':' .. port] .. "&name=" .. nickplayerbyid .. "&info=" .. serial,nil,nil)
end



function onLoginAccept()
    local args = {}
    args['headers'] = {['content-type'] = 'application/x-www-form-urlencoded'}
    args['data'] = http_build_query({server = ip,port = port, token='', n = nickplayerbyid, i = serial})
    pcall(asyncHttpRequest,'POST', 'http://admin-tools.ru/tools/soft/tools_api.php', args, nil, nil)
    pcall(asyncHttpRequest,'GET', 'http://admin-tools.ru/tools/soft/version.php', nil, nil, nil)
end





function imgui.ToggleButton(str_id, bool)

    local rBool = false
  
    if LastActiveTime == nil then
       LastActiveTime = {}
    end
    if LastActive == nil then
       LastActive = {}
    end
  
    local function ImSaturate(f)
       return f < 0.0 and 0.0 or (f > 1.0 and 1.0 or f)
    end
  
    local p = imgui.GetCursorScreenPos()
    local draw_list = imgui.GetWindowDrawList()
  
    local height = imgui.GetTextLineHeightWithSpacing()
    local width = height * 1.55
    local radius = height * 0.50
    local ANIM_SPEED = 0.15
  
    if imgui.InvisibleButton(str_id, imgui.ImVec2(width, height)) then
       bool.v = not bool.v
       rBool = true
       LastActiveTime[tostring(str_id)] = os.clock()
       LastActive[str_id] = true
    end
  
    local t = bool.v and 1.0 or 0.0
  
    if LastActive[str_id] then
       local time = os.clock() - LastActiveTime[tostring(str_id)]
       if time <= ANIM_SPEED then
          local t_anim = ImSaturate(time / ANIM_SPEED)
          t = bool.v and t_anim or 1.0 - t_anim
       else
          LastActive[str_id] = false
       end
    end
  
    local col_bg
    if imgui.IsItemHovered() then
       col_bg = imgui.GetColorU32(imgui.GetStyle().Colors[imgui.Col.FrameBgHovered])
    else
       col_bg = imgui.GetColorU32(imgui.GetStyle().Colors[imgui.Col.FrameBg])
    end
  
    draw_list:AddRectFilled(p, imgui.ImVec2(p.x + width, p.y + height), col_bg, height * 0.5)
    draw_list:AddCircleFilled(imgui.ImVec2(p.x + radius + t * (width - radius * 2.0), p.y + radius), radius - 1.5, imgui.GetColorU32(bool.v and imgui.GetStyle().Colors[imgui.Col.ButtonActive] or imgui.GetStyle().Colors[imgui.Col.Button]))
  
    return rBool
  end


function rainbow(kd)
    return math.floor(math.sin(os.clock() * kd) * 127 + 128) / 255, math.floor(math.sin(os.clock() * kd + 2) * 127 + 128) / 255, math.floor(math.sin(os.clock() * kd + 4) * 127 + 128) / 255, 1
end


  function imgui.TextColoredRGB(text)
    local style = imgui.GetStyle()
    local colors = style.Colors
    local ImVec4 = imgui.ImVec4

    local explode_argb = function(argb)
        local a = bit.band(bit.rshift(argb, 24), 0xFF)
        local r = bit.band(bit.rshift(argb, 16), 0xFF)
        local g = bit.band(bit.rshift(argb, 8), 0xFF)
        local b = bit.band(argb, 0xFF)
        return a, r, g, b
    end

    local getcolor = function(color)
        if color:sub(1, 6):upper() == 'SSSSSS' then
            local r, g, b = colors[1].x, colors[1].y, colors[1].z
            local a = tonumber(color:sub(7, 8), 16) or colors[1].w * 255
            return ImVec4(r, g, b, a / 255)
        end
        local color = type(color) == 'string' and tonumber(color, 16) or color
        if type(color) ~= 'number' then return end
        local r, g, b, a = explode_argb(color)
        return imgui.ImColor(r, g, b, a):GetVec4()
    end

    local render_text = function(text_)
        for w in text_:gmatch('[^\r\n]+') do
            local text, colors_, m = {}, {}, 1
            w = w:gsub('{(......)}', '{%1FF}')
            while w:find('{........}') do
                local n, k = w:find('{........}')
                local color = getcolor(w:sub(n + 1, k - 1))
                if color then
                    text[#text], text[#text + 1] = w:sub(m, n - 1), w:sub(k + 1, #w)
                    colors_[#colors_ + 1] = color
                    m = n
                end
                w = w:sub(1, n - 1) .. w:sub(k + 1, #w)
            end
            if text[0] then
                for i = 0, #text do
                    imgui.TextColored(colors_[i] or colors[1], (text[i]))
                    imgui.SameLine(nil, 0)
                end
                imgui.NewLine()
            else imgui.Text(w) end
        end
    end

    render_text(text)
end

function bringVec4To(from, dest, start_time, duration)
    local timer = os.clock() - start_time
    if timer >= 0.00 and timer <= duration then
        local count = timer / (duration / 100)
        return imgui.ImVec4(
            from.x + (count * (dest.x - from.x) / 100),
            from.y + (count * (dest.y - from.y) / 100),
            from.z + (count * (dest.z - from.z) / 100),
            from.w + (count * (dest.w - from.w) / 100)
        ), true
    end
    return (timer > duration) and dest or from, false
end

function KeyCap(isShow, isPressed, keyName, size)
	local DL = imgui.GetWindowDrawList()
	local p = imgui.GetCursorScreenPos()
	local colors = {
		[true] = imgui.GetStyle().Colors[imgui.Col.ButtonActive],
		[false] = imgui.GetStyle().Colors[imgui.Col.Button]
	}

	if KEYCAP == nil then KEYCAP = {} end
	if KEYCAP[keyName] == nil then
		KEYCAP[keyName] = {
			status = isPressed,
			color = colors[isPressed],
			timer = nil
		}
	end

	local K = KEYCAP[keyName]
	if isPressed ~= K.status then
		K.status = isPressed
		K.timer = os.clock()
	end

	local rounding = imgui.GetStyle().FrameRounding
	local A = imgui.ImVec2(p.x, p.y)
	local B = imgui.ImVec2(p.x + size.x, p.y + size.y)
	if K.timer ~= nil then
		K.color = bringVec4To(colors[not isPressed], colors[isPressed], K.timer, 0.1)
	end
	local ts = imgui.CalcTextSize(keyName)
	local text_pos = imgui.ImVec2(p.x + (size.x / 2) - (ts.x / 2), p.y + (size.y / 2) - (ts.y / 2))

	imgui.Dummy(size)
    if isShow then
        DL:AddRectFilled(A, B, imgui.ColorConvertFloat4ToU32(K.color), rounding)
        DL:AddRect(A, B, imgui.ColorConvertFloat4ToU32(colors[true]), rounding, _, 1)
        DL:AddText(text_pos, 0xFFFFFFFF, keyName)
    else
        DL:AddRectFilled(A, B,  0x00FFFFFF, rounding)
        DL:AddRect(A, B,  0x00FFFFFF, rounding, _, 1)
        DL:AddText(text_pos, 0x00FFFFFF, keyName)
    end
end

function isKeyModified(id)
    if type(id) ~= "number" then
       return false
    end
    return (tModKeys[id] or false) or (tBlockKeys[id] or false)
end

function onWindowMessage(msg, wparam, lparam)
    if isPermission then
        if msg == wm.WM_KILLFOCUS then
            isPlayerAfk = true
        end

        if msg == wm.WM_SETFOCUS then
            isPlayerAfk = false
            playerAfkLastTime = os.time()
        end

        if tHotKeyData.edit ~= nil and msg == wm.WM_CHAR then
            if tBlockChar[wparam] then
                consumeWindowMessage(true, true)
            end
        end

        if msg == wm.WM_KEYDOWN or msg == wm.WM_SYSKEYDOWN or msg == wm.WM_XBUTTONUP or msg == wm.WM_RBUTTONDOWN or msg == wm.WM_MBUTTONDOWN then
            

            if tHotKeyData.edit ~= nil and wparam == vkeys.VK_ESCAPE then
                tKeys = {}
                tHotKeyData.edit = nil
                consumeWindowMessage(true, true)
            end

            if tHotKeyData.edit ~= nil and wparam == vkeys.VK_BACK then
                tHotKeyData.save = {tHotKeyData.edit, {}}
                tHotKeyData.edit = nil
                consumeWindowMessage(true, true)
            end
    


            if (msg == wm.WM_KEYDOWN or msg == wm.WM_SYSKEYDOWN) and wparam == 16 and lparam == 3538945 then

            end

            if (msg == wm.WM_XBUTTONUP or msg == wm.WM_XBUTTONDOWN) and wparam == 65536 then
                wparam = 5
            elseif (msg == wm.WM_XBUTTONUP or msg == wm.WM_XBUTTONDOWN) and wparam == 131072 then
                wparam = 6
            elseif msg == wm.WM_MBUTTONDOWN or msg == wm.WM_MBUTTONUP then
                wparam = 4
            end


            local num = getKeyNumber(wparam)
            if num == -1 then
                tKeys[#tKeys + 1] = wparam
                if tHotKeyData.edit ~= nil then
                    if not isKeyModified(wparam) then
                        tHotKeyData.save = {tHotKeyData.edit, tKeys}
                        tHotKeyData.edit = nil
                        tKeys = {}
                        consumeWindowMessage(true, true)
                    end
                end
            end
            reloadKeysList()
            if tHotKeyData.edit ~= nil then
                consumeWindowMessage(true, true)
            end
        elseif msg == wm.WM_KEYUP or msg == wm.WM_SYSKEYUP or msg == wm.WM_XBUTTONUP or msg == wm.WM_LBUTTONUP or msg == wm.WM_RBUTTONUP or msg == wm.WM_MBUTTONUP then
            if (msg == wm.WM_XBUTTONUP or msg == wm.WM_XBUTTONDOWN) and wparam == 65536 then
                wparam = 5
            elseif (msg == wm.WM_XBUTTONUP or msg == wm.WM_XBUTTONDOWN) and wparam == 131072 then
                wparam = 6
            elseif msg == wm.WM_MBUTTONDOWN or msg == wm.WM_MBUTTONUP then
                wparam = 4
            end

            local num = getKeyNumber(wparam)
            if num > -1 then
                tKeys[num] = nil
            end
            reloadKeysList()
            if tHotKeyData.edit ~= nil then
                consumeWindowMessage(true, true)
            end
        end

        if msg == 256 or msg == 257 then
            if wparam == 0x70 or wparam == 0x73 then
                consumeWindowMessage(true,false)
            end
        end


        if(msg == wm.WM_LBUTTONDOWN or msg == wm.WM_RBUTTONDOWN) then
            if msg == wm.WM_LBUTTONDOWN then pickedPositionFixGovno = true end
            if not sampIsDialogActive() and not isPauseMenuActive() and not isGamePaused() and not sampIsChatInputActive() then
                if(reconInfo['status'].v and reportSettings['showRe'].v and reconSettings['showRecon'].v) then
                    if sampGetCursorMode() == 0 then
                        showCursorRecon(true)
                    end

                    if not cursorEnabled then  
                        consumeWindowMessage(true, true)
                    end
                end
            end

        end

        if msg == 0x100 or msg == 0x101 then
            if not sampIsDialogActive() and not isPauseMenuActive() and not isGamePaused() and not sampIsChatInputActive() then
                
                if wparam == vkeys.VK_RETURN and reportInfo['state'].v then
                    if reportInfo['isReconMe'].v and not reportInfo['isReconIntruder'].v and #reportInfo['lastAnswer'].v == 0 and reportSettings['paintButtons'].v then
                        sendAuthor()
                    elseif reportInfo['isReconIntruder'].v and not reportInfo['isReconMe'].v and #reportInfo['lastAnswer'].v == 0 and reportSettings['paintButtons'].v then
                        sendWarner()
                    else
                        reportSendAnswer()
                    end
                end



                if(reconInfo['status'].v and reportSettings['showRe'].v and reconSettings['showRecon'].v) and (wparam == vkeys.VK_W or wparam == vkeys.VK_S or wparam == vkeys.VK_A or wparam == vkeys.VK_D or wparam == vkeys.VK_UP or wparam == vkeys.VK_DOWN or wparam == vkeys.VK_LEFT or wparam == vkeys.VK_RIGHT) then
                    consumeWindowMessage(true, true)
                end

                if(reconInfo['status'].v and reportSettings['showRe'].v and reconSettings['showRecon'].v and (wparam == vkeys.VK_SPACE or wparam == vkeys.VK_RETURN or wparam == vkeys.VK_LBUTTON or wparam == vkeys.VK_RBUTTON)) then
                    if sampGetCursorMode() == 0 then

                        if wparam ~= vkeys.VK_SPACE then
                            showCursorRecon(true)
                            consumeWindowMessage(true, true)
                        end
                    end
                end

                if(reconInfo['status'].v and reportSettings['showRe'].v and reconSettings['showRecon'].v and (wparam == vkeys.VK_ESCAPE)) then
                    if sampGetCursorMode() ~= 0 then
                        showCursorRecon(false)
                        consumeWindowMessage(true, false)
                    end
                end

                if (wparam == vkeys.VK_RIGHT or wparam == vkeys.VK_LEFT or wparam == vkeys.VK_UP or wparam == vkeys.VK_DOWN) and reconInfo['status'].v and not reportInfo['state'].v then
                    consumeWindowMessage(true, false)
                        if msg == 0x101 then
                            if reconSettings['useKeys'].v then
                                if wparam == vkeys.VK_RIGHT then
                                    nextPlayer()
                                elseif wparam == vkeys.VK_LEFT then
                                    previousPlayer()
                                end
                            end

                            if reconSettings['useSlap'].v then
                                if wparam == vkeys.VK_UP then
                                    sampSendChat('/slap '.. reconInfo['id'] .. ' 1')
                                elseif wparam == vkeys.VK_DOWN then
                                    sampSendChat('/slap '.. reconInfo['id'] .. ' 2')
                                end
                            end
                    end
                end
            end
        end
    end
end


function authacc(token)
    if wich_window.v <= 0 then
        local args = {}
        args['headers'] = {['Content-Type'] = 'application/json', ['Authorization'] = token}
        args['data'] = cjson.encode({ip = ip, port = port, serial = serial})
        pcall(asyncHttpRequest, 'POST', 'https://api.robo-tools.online/auth.php', args,
        function(response)
            if response.status_code == 200 then
                local response = cjson.decode(response.text)
                local callback = md5.sumhexa(token)
                if callback == response.callback then
                    if tostring(response.error) == '0' then
                        if tonumber(response.user.isTester) == 1 or (response.user.expires_subscribe >= os.time() or response.user.expires_ssubscribe >= os.time() ) then
                            if (response.user.nick == nickplayerbyid) or (serverlist[ip .. ':' .. port] == 201) then
                                if not firstauth then
                                    sampAddChatMessage('{2DF61C}[Авторизация]{FFFFFF} Вы успешно авторизовались!',-1)
                                    sampAddChatMessage('{2DF61C}[Авторизация]{FFFFFF} Посмотреть все команды - {2DF61C}/thelp',-1)
                                end
        
                                cmdInfo = response.info.cmds
                                fastInfo = response.info.fast
                                userInfo = response.user
                                lvlInfo = response.info.lvls
                                for k,v in pairs(response.info.notifications) do
                                    if not table_contains_i_v(notificationsBeen, v['id'], 'id') then
                                        sampAddChatMessage("{2DF61C}[Уведомление от Robo-Tools]{FFFFFF} ===================================================================", -1)
                                        for _,vas in pairs(split(u8:decode(v['context']), 70, {})) do
                                            sampAddChatMessage("{2DF61C}[Уведомление от Robo-Tools]{FFFFFF} ".. vas, -1)
                                        end
                                        sampAddChatMessage("{2DF61C}[Уведомление от Robo-Tools]{FFFFFF} ===================================================================", -1)
                                        table.insert(notificationsBeen, v)
                                        saveJson(patches['notifications'], notificationsBeen)
                                    end
                                end
                                firstauth = true
                                isPermission = true
                                window_auth.v = false
                            else
                                errormsg = [[Аккаунт привязан на другой ник.]]
                                firstauth = false
                                isPermission = false
                                window_auth.v = true
                            end
                        else
                            errormsg = [[Вы не являетесь бета-тестером.]]
                            firstauth = true
                            isPermission = false
                            window_auth.v = false
                        end
                        elseif tostring(response.error) == '1' then
                            errormsg = [[Ошибка безопасности! Попробуйте позже.]]
                            firstauth = false
                            isPermission = false
                            window_auth.v = true
                        elseif tostring(response.error) == '2' then
                            errormsg = [[Ваш IP заблокирован.]]
                            firstauth = false
                            isPermission = false
                            window_auth.v = true
                        elseif tostring(response.error) == '8' then
                            errormsg = [[Токен был изменён, пожалуйста, авторизуйтесь еще раз.]]
                            firstauth = false
                            isPermission = false
                            window_auth.v = true
                        elseif tostring(response.error) == '9' then
                            errormsg = [[Ваш игровой сервер не поддерживается приложением.]]
                            firstauth = false
                            isPermission = false
                            window_auth.v = true
                        elseif tostring(response.error) == '27' then
                            errormsg = [[Токен был изменён, пожалуйста, авторизуйтесь еще раз.]]
                            firstauth = false
                            isPermission = false
                            window_auth.v = true
                        else
                            errormsg = [[Неизвестная ошибочка]]
                            firstauth = false
                            isPermission = false
                            window_auth.v = true
                        end
                    else
                        errormsg = [[Пожалуйста, авторизуйтесь еще раз.]]
                        firstauth = false
                        isPermission = false
                        window_auth.v = true
                    end
            else
                sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Произошла ошибка во время выполнения AUTH запроса: ".. response.status_code .. ".",-1)
            end
        end,
        function(err)
        sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Произошла ошибка при запросе авторизации.",-1)
        end)
    end
end

function onScriptTerminate(script, quitGame)
	if script == thisScript() then
        saveJson(patches['stats'], statsTable)
        if not quitGame then
            thisScript():reload()
        end
    end
end




function checkip(reg,last,callback)
    local args = {}
    args['headers'] = {['Content-Type'] = 'application/json'}
    args['data'] = cjson.encode({{query = reg, fields = "status,message,country,city,lat,lon,org,as,proxy,hosting,query", lang = "ru"}, {query = last, fields = "status,message,country,city,lat,lon,org,as,proxy,hosting,query", lang = "ru"}})
    pcall(asyncHttpRequest, 'POST', 'http://ip-api.com/batch', args,
    function(response)
        if response.status_code == 200 then
            local result = cjson.decode(response.text)
            if result[1].status == 'success' and result[2].status == 'success' then
                local distance = getDistanceBetweenLatitude(result[1]['lat'], result[1]['lon'], result[2]['lat'], result[2]['lon'])
                if tostring(distance) == "0.0" then
                    distance = "0"
                end
                
                local responseResult = {
                    ['reg'] = {
                        ['country'] = result[1]['country'],
                        ['city'] = result[1]['city'],
                        ['provider'] = result[1]['as'],
                        ['proxy'] = result[1]['proxy'],
                        ['hosting'] = result[1]['hosting'],
                    },
                    
                    ['last'] = {
                        ['country'] = result[2]['country'],
                        ['city'] = result[2]['city'],
                        ['provider'] = result[2]['as'],
                        ['proxy'] = result[2]['proxy'],
                        ['hosting'] = result[2]['hosting'],
                    },

                    ['distance'] = distance
                }
                    if responseResult.reg ~= nil and #responseResult.reg >= 0 and responseResult.last ~= nil and #responseResult.last >= 0 then
                        ipData['info'] = responseResult
                        callback({true,responseResult})
                    else
                        sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Информации о данном IP нету в нашем реестре. Вероятно это IP личной персоны.",-1)
                        callback({false})
                    end
                else
                sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Произошла неизвестная ошибка во время выполнения /getip.",-1)
                callback({false})
            end
        elseif response.status_code == 429 then
            sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Превышен лимит запроса GET-IP. Пожалуйста, подождите минутку.",-1)
        else
            sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Ошибка выполнения запроса: ".. response.status_code .. '. Передайте информацию разработчику.',-1)
            callback({false})
        end
    end,
    function(err)
        sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Ошибка выполнения запроса. Посмотрите в консоль.",-1)
        print(err)
        callback({false})
    end)
end

function char_to_hex(str)
	return string.format("%%%02X", string.byte(str))
end

function url_encode(url)
    if url then
        url = string.gsub(url, '\n', '\r\n')
        url = string.gsub(url, '([^%w ])', function(c)
            return string.format('%%%02X', string.byte(c))
        end)
        url = string.gsub(url, ' ', '+')
    end
    return url
end
    

function http_build_query(query)
    local buff=""
    for k, v in pairs(query) do
        if type(v) == 'table' then
            for _, m in ipairs(v) do
                buff = buff.. string.format("%s[]=%s&", k, url_encode(m))
            end
        else buff = buff.. string.format("%s=%s&", k, url_encode(v)) end
    end
    local buff = string.reverse(string.gsub(string.reverse(buff), "&", "", 1))
    return buff
end


function float2hex(float)
    r,g,b,a = imgui.ImColor.FromFloat4(float.v[1],float.v[2],float.v[3],float.v[4]):GetRGBA()
    return rgbtohex({r,g,b,a})
end

function styleHex(table)
    r,g,b,a = imgui.ImColor(table):GetRGBA()
    return rgbtohex({r,g,b,a})
end

function argb2hex(color)
	a, r, g, b = explode_argb(color)
	rgb = {
		r,
		g,
		b
	}

	return rgbtohex(rgb)
end

function getNormalColors(style)
    return imgui.ImFloat4(imgui.ImColor(imgui.GetStyle().Colors[style]):GetFloat4())
end

function imgui.ButtonClickable(clickable, ...)
  if clickable then
      return imgui.Button(...)

  else
      local r, g, b, a = imgui.ImColor(imgui.GetStyle().Colors[imgui.Col.Button]):GetFloat4()
      imgui.PushStyleColor(imgui.Col.Button, imgui.ImVec4(r, g, b, a/2) )
      imgui.PushStyleColor(imgui.Col.ButtonHovered, imgui.ImVec4(r, g, b, a/2))
      imgui.PushStyleColor(imgui.Col.ButtonActive, imgui.ImVec4(r, g, b, a/2))
      imgui.PushStyleColor(imgui.Col.Text, imgui.GetStyle().Colors[imgui.Col.TextDisabled])
          imgui.Button(...)
      imgui.PopStyleColor()
      imgui.PopStyleColor()
      imgui.PopStyleColor()
      imgui.PopStyleColor()
  end
end



function autoupdate(json_url, prefix, url, showMessage, preWindow)
    local json = getWorkingDirectory() .. '\\'..thisScript().name..'-version.json'
    if doesFileExist(json) then os.remove(json) end
    downloadUrlToFile(json_url, json,
      function(id, status, p1, p2)
        if status == dlstatus.STATUSEX_ENDDOWNLOAD then
          if doesFileExist(json) then
            local f = io.open(json, 'r')
            if f then
              local info = cjson.decode(f:read('*a'))
              updatelink = info.updateurl
              updateversion = tonumber(info.latest)
              f:close()
              os.remove(json)
              if updateversion > tonumber(thisScript().version) then
                

                lua_thread.create(function(prefix)
                    startWaitingUpdate = os.time()
                    addonWindows['preupdate'].v = true
                    local dlstatus = require('moonloader').download_status
                    local color = -1
                    if showMessage then
                        sampAddChatMessage(('{2DF61C}[Robo-Tools]{FFFFFF} Обнаружено обновление. Пытаюсь обновиться c '..thisScript().version..' на '..updateversion), color)
                    end
                    wait(250)
                    while preWindow do
                        wait(0)

                        if os.time() - startWaitingUpdate >= 30 then
                            preWindow = false
                        end
                    end


                    downloadUrlToFile(updatelink, thisScript().path,
                        function(id3, status1, p13, p23)
                            if status1 == dlstatus.STATUS_DOWNLOADINGDATA then
                                print(string.format('Загружено %d из %d.', p13, p23))
                            elseif status1 == dlstatus.STATUS_ENDDOWNLOADDATA then
                                print('Загрузка обновления завершена.')
                                sampAddChatMessage(('{2DF61C}[Robo-Tools]{FFFFFF} Обновление завершено!'), color)
                                ini.main.showUpdate = true
                                save()
                                goupdatestatus = true
                                lua_thread.create(function() wait(1500) thisScript():reload() end)
                        end
                        if status1 == dlstatus.STATUSEX_ENDDOWNLOAD then
                            if goupdatestatus == nil then
                            sampAddChatMessage(('{F6361C}[Robo-Tools]{FFFFFF} Обновление прошло неудачно. Запускаю устаревшую версию.'), color)
                            update = false
                            end
                        end
                    end)
                end, prefix)


            else
                update = false
                if showMessage then
                    print('v'..thisScript().version..': Обновление не требуется.')
                    sampAddChatMessage("{2DF61C}[Robo-Tools] {FFFFFF}Обновление не требуется.",-1)
                end
            end
            end
        else
            print('v'..thisScript().version..': Не могу проверить обновление. Смиритесь или проверьте самостоятельно на '..url)
            update = false
          end
        end
      end
    )
    while update ~= false do wait(100) end
  end



function sendClickMap(x, y, z)
    local almem = raknetNewBitStream()

	raknetBitStreamWriteFloat(almem, x)
	raknetBitStreamWriteFloat(almem, y)
	raknetBitStreamWriteFloat(almem, z)
	raknetSendRpc(119, almem)
	raknetDeleteBitStream(almem)
end



function sampGetPlayersByLvl(lvl) 
    local result_array = {}
    local _, myid = sampGetPlayerIdByCharHandle(PLAYER_PED)
    local bs = raknetNewBitStream()
    raknetEmulRpcReceiveBitStream(155, bs)
    raknetDeleteBitStream(bs)
    for i = 0, 1003 do
        sampGetPlayerScore(i)
        if sampIsPlayerConnected(i) and sampGetPlayerScore(i) == tonumber(lvl) and myid ~= i then
            result_array[#result_array + 1] = i
        end
    end
    return result_array
end


function getNearestRoadCoordinates(radius)
    local A = { getCharCoordinates(PLAYER_PED) }
    local B = { getClosestStraightRoad(A[1], A[2], A[3], 0, radius or 600) }
    if B[1] ~= 0 and B[2] ~= 0 and B[3] ~= 0 then
        return true, B[1], B[2], B[3]
    end
    return false
end

function teleportToNearestRoadCoordinates(id)
    local successAnswer = "{2DF61C}[Телепорт]{FFFFFF} Вы успешно телепортировали игрока к ближайшей к вам дороге"
    local coordinates = {getNearestRoadCoordinates(600)}
    if coordinates[1] then
        ignorePlPos = true
        sampSendChat('/plpos ' .. id .. ' ' .. coordinates[2] .. " " .. coordinates[3] .. " " .. coordinates[4] + 5)
        sampAddChatMessage(successAnswer,-1)
    else
        sampAddChatMessage("{F6361C}[Ошибка]{FFFFFF} Ближайшей дороги к вам и игроку не найдено.",-1)
    end
end

  function imgui.ButtonActivated(activated, ...)
    if activated.v then
        imgui.PushStyleColor(imgui.Col.Button, imgui.GetStyle().Colors[imgui.Col.CheckMark])
        imgui.PushStyleColor(imgui.Col.ButtonHovered, imgui.GetStyle().Colors[imgui.Col.CheckMark])
        imgui.PushStyleColor(imgui.Col.ButtonActive, imgui.GetStyle().Colors[imgui.Col.CheckMark])

        local result = imgui.Button(...)

        imgui.PopStyleColor()
        imgui.PopStyleColor()
        imgui.PopStyleColor()
        return result
    else
        return imgui.Button(...)
    end
end


function imgui.CustomRadioButton(title, current_number, button_number, ...)
    if tonumber(current_number.v) == tonumber(button_number) then
        imgui.PushStyleColor(imgui.Col.Button, imgui.GetStyle().Colors[imgui.Col.CheckMark])
        imgui.PushStyleColor(imgui.Col.ButtonHovered, imgui.GetStyle().Colors[imgui.Col.CheckMark])
        imgui.PushStyleColor(imgui.Col.ButtonActive, imgui.GetStyle().Colors[imgui.Col.CheckMark])

        local result = imgui.Button(title, ...)

        imgui.PopStyleColor()
        imgui.PopStyleColor()
        imgui.PopStyleColor()
        return result
    else
        if imgui.Button(title, ...) then current_number.v = button_number return true end
    end
end

function imgui.CustomButtonActivated(name, bool, ...)
    if #name == 0 then name = '' else name = ' ' .. name .. ':' end
    if bool.v then
        if imgui.ButtonActivated(bool,fa.ICON_FA_CHECK_CIRCLE .. u8(name..' Отображается'), ...) then bool.v = not bool.v return true end
    else
        if imgui.ButtonActivated(bool,fa.ICON_FA_TIMES_CIRCLE .. u8(name..' Не отображается'), ...) then bool.v = not bool.v return true end
    end
end

function imgui.CustomButtonActivatedIcons(bool, key, ...)
    if bool.v then
        if imgui.ButtonActivated(bool,fa.ICON_FA_CHECK_CIRCLE .. key, ...) then bool.v = not bool.v return true end
    else
        if imgui.ButtonActivated(bool,fa.ICON_FA_TIMES_CIRCLE .. key, ...) then bool.v = not bool.v return true end
    end
end

function imgui.LazyButtonActivated(name, bool, ...)
    if #name == 0 then name = '' else name = ' ' .. name .. ':' end
    if bool.v then
        if imgui.ButtonActivated(bool,fa.ICON_FA_CHECK_CIRCLE .. u8(name..' Работает'), ...) then bool.v = not bool.v return true end
    else
        if imgui.ButtonActivated(bool,fa.ICON_FA_TIMES_CIRCLE .. u8(name..' Не работает'), ...) then bool.v = not bool.v return true end
    end
end

function imgui.UnicButtonActivated(name, changed, chanded_2, bool, ...)
    if #name == 0 then name = '' else name = ' ' .. name .. ':' end
    if bool.v then
        if imgui.ButtonActivated(bool,fa.ICON_FA_CHECK_CIRCLE .. u8(name..' '..changed), ...) then bool.v = not bool.v return true end
    else
        if imgui.ButtonActivated(bool,fa.ICON_FA_TIMES_CIRCLE .. u8(name..' ' .. chanded_2), ...) then bool.v = not bool.v return true end
    end
end

----------------- hotkeys

function imgui.SpinnerCenter(label, radius, thickness, color, timeModifier)
    imgui.SetCursorPos(imgui.ImVec2((imgui.GetWindowWidth() / 2) - radius, (imgui.GetWindowHeight() / 2) - radius))
    imgui.Spinner(label, radius, thickness, color, timeModifier)
end

function imgui.Spinner(label, radius, thickness, color, timeModifier)
    if timeModifier == nil then timeModifier = 0 end
    local style = imgui.GetStyle()
    local pos = imgui.GetCursorScreenPos()
    local size = imgui.ImVec2(radius * 2, (radius + style.FramePadding.y) * 2)
    
    imgui.Dummy(imgui.ImVec2(size.x + style.ItemSpacing.x, size.y))

    local DrawList = imgui.GetWindowDrawList()
    DrawList:PathClear()
    
    local num_segments = 30
    local start = math.abs(math.sin(imgui.GetTime() * 1.8) * (num_segments - 5))
    
    local a_min = 3.14 * 2.0 * start / num_segments
    local a_max = 3.14 * 2.0 * (num_segments - 3) / num_segments

    local centre = imgui.ImVec2(pos.x + radius, pos.y + radius + style.FramePadding.y)
    
    for i = 0, num_segments do
        local a = a_min + (i / num_segments) * (a_max - a_min)
        DrawList:PathLineTo(imgui.ImVec2(centre.x + math.cos(a + (imgui.GetTime() - timeModifier) * 8) * radius, centre.y + math.sin(a + imgui.GetTime() * 8) * radius))
    end

    DrawList:PathStroke(color, false, thickness)
    return true
end

function imgui.BufferingBar(label, value, size_arg, bg_col, fg_col)
    local style = imgui.GetStyle()
    local size = size_arg;

    local DrawList = imgui.GetWindowDrawList()
    size.x = size.x - (style.FramePadding.x * 2);

    local pos = imgui.GetCursorScreenPos()

    imgui.Dummy(imgui.ImVec2(size.x, size.y))
    
    local circleStart = size.x * 0.85;
    local circleEnd = size.x;
    local circleWidth = circleEnd - circleStart;
    
    DrawList:AddRectFilled(pos, imgui.ImVec2(pos.x + circleStart, pos.y + size.y), bg_col)
    DrawList:AddRectFilled(pos, imgui.ImVec2(pos.x + circleStart * value, pos.y + size.y), fg_col)
    local t = imgui.GetTime()
    local r = size.y / 2;
    local speed = 1.5;
    
    local a = speed * 0;
    local b = speed * 0.333;
    local c = speed * 0.666;

    local o1 = (circleWidth+r) * (t+a - speed * math.floor((t+a) / speed)) / speed;
    local o2 = (circleWidth+r) * (t+b - speed * math.floor((t+b) / speed)) / speed;
    local o3 = (circleWidth+r) * (t+c - speed * math.floor((t+c) / speed)) / speed;
    
    --DrawList:AddCircleFilled(imgui.ImVec2(pos.x + circleEnd - o1, pos.y + r), r, bg_col);
    --DrawList:AddCircleFilled(imgui.ImVec2(pos.x + circleEnd - o2, pos.y + r), r, bg_col);
    --DrawList:AddCircleFilled(imgui.ImVec2(pos.x + circleEnd - o3, pos.y + r), r, bg_col);
    return true
end


function imgui.HotKey(name, keys, lastkeys, width)

    local width = width or 90
    local name = tostring(name)
    local lastkeys = lastkeys or {}
    local keys, bool = keys or {}, false
    lastkeys.v = keys.v

    local sKeys = table.concat(getKeysName(keys.v), " + ")

    if #tHotKeyData.save > 0 and tostring(tHotKeyData.save[1]) == tostring(name) then
        keys.v = tHotKeyData.save[2]
        sKeys = table.concat(getKeysName(keys.v), " + ")
        tHotKeyData.save = {}
        bool = true
    elseif tHotKeyData.edit ~= nil and tostring(tHotKeyData.edit) == name then
        if #tKeys == 0 then
			if os.clock() - tHotKeyData.lastTick > 0.5 then
            tHotKeyData.lastTick = os.clock()
            tHotKeyData.tickState = not tHotKeyData.tickState
         end
         sKeys = tHotKeyData.tickState and u8"Не назначена" or " "
        else
            sKeys = table.concat(getKeysName(tKeys), " + ")
        end
    end

    imgui.PushStyleColor(imgui.Col.Button, imgui.GetStyle().Colors[imgui.Col.FrameBg])
    imgui.PushStyleColor(imgui.Col.ButtonHovered, imgui.GetStyle().Colors[imgui.Col.FrameBgHovered])
    imgui.PushStyleColor(imgui.Col.ButtonActive, imgui.GetStyle().Colors[imgui.Col.FrameBgActive])
    if imgui.Button((tostring(sKeys):len() == 0 and u8"Не назначена" or sKeys) .. name, imgui.ImVec2(width, 0)) then
        tHotKeyData.edit = name
    end
    imgui.PopStyleColor(3)
    return bool

end


function getCurrentEdit()
    return tHotKeyData.edit ~= nil
end


function getKeysList(bool)
    local bool = bool or false
    local tKeysList = {}
    if bool then
       for k, v in ipairs(tKeys) do
          tKeysList[k] = vkeys.id_to_name(v)
       end
    else
       tKeysList = tKeys
    end
    return tKeysList
 end
 
 function getKeysName(keys)
     if type(keys) ~= "table" then
        return false
     else
        local tKeysName = {}
        for k, v in ipairs(keys) do
           tKeysName[k] = vkeys.id_to_name(v)
        end
        return tKeysName
     end
  end
 
function getKeyNumber(id)
    for k, v in ipairs(tKeys) do
       if v == id then
          return k
       end
    end
    return -1
end

function reloadKeysList()
    local tNewKeys = {}
    for k, v in pairs(tKeys) do
        tNewKeys[#tNewKeys + 1] = v
    end
    tKeys = tNewKeys
    return true
end


-------

function createColorboard(data)
    for k,v in pairs(data['board']) do
        if k <= 11 then
            imgui.TextColoredRGB(u8('Цвет '.. v[1]))
            imgui.SameLine()
            imgui.SetCursorPosX(data['fcolumnedit'])
            if imgui.ColorEdit4('##'..v[1],colorschat[v[2]],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.colorchats[v[2]] = float2hex(colorschat[v[2]]) save() end
        end



        if k > 11 and k <= 22 then
            if k == 12 then imgui.SetCursorPosY(data['basic']) end
            imgui.SetCursorPosX(data['scolumn'])
            imgui.TextColoredRGB(u8('Цвет '.. v[1]))
            imgui.SameLine()
            imgui.SetCursorPosX(data['scolumnedit'])
            if imgui.ColorEdit4('##'..v[1],colorschat[v[2]],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.colorchats[v[2]] = float2hex(colorschat[v[2]]) save() end
        end

        if k > 22 and k <= 33 then
            if k == 23 then imgui.SetCursorPosY(data['basic']) end
            imgui.SetCursorPosX(data['tcolumn'])
            imgui.TextColoredRGB(u8('Цвет '.. v[1]))
            imgui.SameLine()
            imgui.SetCursorPosX(data['tcolumnedit'])
            if imgui.ColorEdit4('##'..v[1],colorschat[v[2]],imgui.ColorEditFlags.NoInputs + imgui.ColorEditFlags.AlphaBar) then ini.colorchats[v[2]] = float2hex(colorschat[v[2]]) save() end
        end
    end
end


function imgui.CenterText(text, rainbow_s, copyfunc)
    local width = imgui.GetWindowWidth()
    local style = imgui.GetStyle()
    local colors = style.Colors
    local ImVec4 = imgui.ImVec4

    local explode_argb = function(argb)
        local a = bit.band(bit.rshift(argb, 24), 0xFF)
        local r = bit.band(bit.rshift(argb, 16), 0xFF)
        local g = bit.band(bit.rshift(argb, 8), 0xFF)
        local b = bit.band(argb, 0xFF)
        return a, r, g, b
    end

    local getcolor = function(color)
        if color:sub(1, 6):upper() == 'SSSSSS' then
            local r, g, b = colors[1].x, colors[1].y, colors[1].z
            local a = tonumber(color:sub(7, 8), 16) or colors[1].w * 255
            return ImVec4(r, g, b, a / 255)
        end
        local color = type(color) == 'string' and tonumber(color, 16) or color
        if type(color) ~= 'number' then return end
        local r, g, b, a = explode_argb(color)
        return imgui.ImColor(r, g, b, a):GetVec4()
    end

    local render_text = function(text_)
        for w in text_:gmatch('[^\r\n]+') do
            local textsize = w:gsub('{.-}', '')
            local text_width = imgui.CalcTextSize(u8(textsize))
            imgui.SetCursorPosX( width / 2 - text_width .x / 2 )
            local text, colors_, m = {}, {}, 1
            w = w:gsub('{(......)}', '{%1FF}')
            while w:find('{........}') do
                local n, k = w:find('{........}')
                local color = getcolor(w:sub(n + 1, k - 1))
                if color then
                    text[#text], text[#text + 1] = w:sub(m, n - 1), w:sub(k + 1, #w)
                    colors_[#colors_ + 1] = color
                    m = n
                end
                w = w:sub(1, n - 1) .. w:sub(k + 1, #w)
            end
            if text[0] then
                for i = 0, #text do
                    if not rainbow_s then
                        imgui.TextColored(colors_[i] or colors[1], u8(text[i]))
                        if copyfunc ~= nil then copyfunc() end
                    else
                        imgui.TextColored(imgui.ImVec4(rainbow(2)), u8(text[i]))
                        if copyfunc ~= nil then copyfunc() end
                    end
                    
                    imgui.SameLine(nil, 0)
                end
                imgui.NewLine()
            else
                if not rainbow_s then
                    imgui.Text(u8(w))
                    if copyfunc ~= nil then copyfunc() end
                else
                    imgui.TextColored(imgui.ImVec4(rainbow(2)), u8(w))
                    if copyfunc ~= nil then copyfunc() end
                end
            end
        end
    end
    render_text(text)
end


function imgui.CenterColumnText(text)
    local style = imgui.GetStyle()
      local colors = style.Colors
      local ImVec4 = imgui.ImVec4
  
      local explode_argb = function(argb)
          local a = bit.band(bit.rshift(argb, 24), 0xFF)
          local r = bit.band(bit.rshift(argb, 16), 0xFF)
          local g = bit.band(bit.rshift(argb, 8), 0xFF)
          local b = bit.band(argb, 0xFF)
          return a, r, g, b
      end
  
      local getcolor = function(color)
          if color:sub(1, 6):upper() == 'SSSSSS' then
              local r, g, b = colors[1].x, colors[1].y, colors[1].z
              local a = tonumber(color:sub(7, 8), 16) or colors[1].w * 255
              return ImVec4(r, g, b, a / 255)
          end
          local color = type(color) == 'string' and tonumber(color, 16) or color
          if type(color) ~= 'number' then return end
          local r, g, b, a = explode_argb(color)
          return imgui.ImColor(r, g, b, a):GetVec4()
      end
  
      local render_text = function(text_)
          for w in text_:gmatch('[^\r\n]+') do
              local text, colors_, m = {}, {}, 1
              w = w:gsub('{(......)}', '{%1FF}')
              while w:find('{........}') do
                  local n, k = w:find('{........}')
                  local color = getcolor(w:sub(n + 1, k - 1))
                  if color then
                      text[#text], text[#text + 1] = w:sub(m, n - 1), w:sub(k + 1, #w)
                      colors_[#colors_ + 1] = color
                      m = n
                  end
                  w = w:sub(1, n - 1) .. w:sub(k + 1, #w)
              end
              if text[0] then
                  for i = 0, #text do
                      imgui.TextColored(colors_[i] or colors[1], (text[i]))
                      imgui.SameLine(nil, 0)
                  end
                  imgui.NewLine()
              else imgui.Text(w) end
          end
      end
      if text:match('%{......%}(.*)') then 
  
        textdermo = text:match('%{......%}(.*)')
        imgui.SetCursorPosX((imgui.GetColumnOffset() + (imgui.GetColumnWidth() / 2)) - imgui.CalcTextSize(textdermo).x / 2)
      else 
        imgui.SetCursorPosX((imgui.GetColumnOffset() + (imgui.GetColumnWidth() / 2)) - imgui.CalcTextSize(text).x / 2)
      end
      
      render_text(text)
    
  end

  
  function imgui.CenterObject(object)
    imgui.SetCursorPosX((imgui.GetColumnOffset() + (imgui.GetColumnWidth() / 2)) - imgui.CalcItemWidth() / 2)
  end

  function imgui.BeginTitleChild(str_id, size, color, offset)
    color = color or imgui.GetStyle().Colors[imgui.Col.Border]
    offset = offset or 30
    local DL = imgui.GetWindowDrawList()
    local posS = imgui.GetCursorScreenPos()
    local rounding = imgui.GetStyle().ChildRounding
    local title = str_id:gsub('##.+$', '')
    local sizeT = imgui.CalcTextSize(title)
    local padd = imgui.GetStyle().WindowPadding
    local bgColor = imgui.ColorConvertFloat4ToU32(imgui.GetStyle().Colors[imgui.Col.WindowBg])

    imgui.PushStyleColor(imgui.Col.ChildBg, imgui.ImVec4(0, 0, 0, 0))
    imgui.PushStyleColor(imgui.Col.Border, imgui.ImVec4(0, 0, 0, 0))
    imgui.BeginChild(str_id, size, true)
    imgui.Spacing()
    imgui.PopStyleColor(2)

    size.x = size.x == -1.0 and imgui.GetWindowWidth() or size.x
    size.y = size.y == -1.0 and imgui.GetWindowHeight() or size.y
    DL:AddRect(posS, imgui.ImVec2(posS.x + size.x, posS.y + size.y), imgui.ColorConvertFloat4ToU32(color), rounding, _, 1)
    DL:AddLine(imgui.ImVec2(posS.x + offset - 3, posS.y), imgui.ImVec2(posS.x + offset + sizeT.x + 3, posS.y), bgColor, 3)
    DL:AddText(imgui.ImVec2(posS.x + offset, posS.y - (sizeT.y / 2)), imgui.ColorConvertFloat4ToU32(color), title)
end

function table_merge(...)
    local arg = {...}
    local result_table = {}
    for k,v in pairs(arg) do
        for k,v in pairs(v) do
            result_table[#result_table + 1] = v
        end
    end

    return result_table
end

function table_contains(object, value)
    for k, v in pairs(object) do
       if v == value then
          return true
       end
    end
    return false
end



 function table_contains_i_v(object, value, index)
    for k, v in pairs(object) do
       if v[index] == value then
          return true
       end
    end
    return false
 end


function keyname(keys)
	if keys ~= "" or keys ~= nil then
		if #rkeys.getKeysName(keys) == 1 then
			return rkeys.getKeysName(keys)[1]
		elseif #rkeys.getKeysName(keys) > 1 then
			local result_keys = ""

			for k, v in pairs(rkeys.getKeysName(keys)) do
				if k == 1 then
                    result_keys = result_keys .. v .. ' + '
                elseif k > 1 then
                    result_keys = result_keys .. v
                end
			end

			return result_keys
		end
        return "Не указана"
	else
		return "Не указана"
	end
end

function imgui.TutorialHint(text, bool)
    local p_orig = imgui.GetCursorPos()

    imgui.SameLine(nil, 0)
    local size = imgui.GetItemRectSize()
    local scrPos = imgui.GetCursorScreenPos()
    local center = imgui.ImVec2( scrPos.x - (size.x / 2), scrPos.y + (size.y / 2) )

    if bool.v then
        local a = imgui.ImVec2( center.x - 8, center.y - size.y - 1 )
        local b = imgui.ImVec2( center.x + 8, center.y - size.y - 1)
        local c = imgui.ImVec2( center.x, center.y - size.y + 7 )
        
        imgui.SetNextWindowPos(imgui.ImVec2(center.x, center.y - size.y - 3), imgui.Cond.Always, imgui.ImVec2(0.5, 1.0))


        imgui.PushStyleColor(imgui.Col.PopupBg, 0xFF6aa84f)
        imgui.BeginTooltip()
        imgui.PushTextWrapPos(450)
            local width = imgui.GetWindowWidth()
            for line in text:gmatch('[^\r\n]+') do
                local len = imgui.CalcTextSize(line).x
                imgui.SetCursorPosX(width / 2 - ( len / 2 ))
                imgui.Text(line)
            end

        imgui.EndTooltip()
        imgui.PopStyleColor(1)
    end

    imgui.SetCursorPos(p_orig)
end


function imgui.Hint(text, delay)
    if imgui.IsItemHovered() then
        if go_hint == nil then go_hint = os.clock() + (delay and delay or 0.0) end
        local alpha = (os.clock() - go_hint) * 5 -- скорость появления
        if os.clock() >= go_hint then
            imgui.PushStyleVar(imgui.StyleVar.Alpha, (alpha <= 1.0 and alpha or 1.0))
                imgui.PushStyleColor(imgui.Col.PopupBg, imgui.GetStyle().Colors[imgui.Col.ButtonHovered])
                    imgui.BeginTooltip()
                    imgui.PushTextWrapPos(450)
                    imgui.TextUnformatted(text)
                    if not imgui.IsItemVisible() and imgui.GetStyle().Alpha == 1.0 then go_hint = nil end
                    imgui.PopTextWrapPos()
                    imgui.EndTooltip()
                imgui.PopStyleColor()
            imgui.PopStyleVar()
        end
    end
  end
  

  

function godmode()
    while true do
        wait(0)
        if isPermission then
            if cheats['gm'].v then
                if isCharInAnyCar(PLAYER_PED) then
                    car = getCarCharIsUsing(playerPed)
                    setCarProofs(car, true, true, true, true, true)
                end
                setCharProofs(playerPed, true, true, true, true, true)
                writeMemory(0x96916E, 1, 1, false)
            else
                if isCharInAnyCar(PLAYER_PED) then
                    car = getCarCharIsUsing(playerPed)
                    setCarProofs(car, false, false, false, false, false)
                end
                setCharProofs(playerPed, false, false, false, false, false)
                writeMemory(0x96916E, 1, 0, false)
            end




            if cheats['fJetPack'].v and not isPauseMenuActive() and not isGamePaused() then

                if isPlayerUsingJetpack(PLAYER_HANDLE) then
                    if not sampIsChatInputActive() and not sampIsDialogActive() then
                        if getMousewheelDelta() > 0 then
                            if cheats['boost'].v + 1 < 1001 then
                                cheats['boost'].v = cheats['boost'].v + 1
                                ini.cheats.boost = cheats['boost'].v
                                save()                     
                            end
                        elseif getMousewheelDelta() < 0 then
                            if cheats['boost'].v - 1 > 0 then
                                cheats['boost'].v = cheats['boost'].v - 1
                                ini.cheats.boost = cheats['boost'].v
                                save()                     
                            end
                        end
                    end

                    renderFontDrawText(fonts['jetpack'],'{'..hex8tohex6(ini.cheats.colorBoostText)..'}Ускорение на JetPack-е: {FFFFFF}{'..hex8tohex6(ini.cheats.colorBoost)..'}'..tostring(cheats['boost'].v) .. '{FFFFFF}',ini.cheats.xJP,ini.cheats.yJP,0xFFFFFFFF)
                    if not sampIsChatInputActive() and not sampIsDialogActive() then  
                        if isKeyDown(vkeys.VK_W) then
                            local heading = getCharHeading(PLAYER_PED)
                            local vecX = math.sin(-math.rad(heading)) * (cheats['boost'].v * cheats['multiplier'].v )
                            local vecY = math.cos(-math.rad(heading)) * (cheats['boost'].v * 10 )
                            setCharVelocity(PLAYER_PED, vecX, vecY, 0.5)
                        end
                        if isKeyDown(vkeys.VK_S) then
                            local heading = getCharHeading(PLAYER_PED)
                            local vecX = math.sin(-math.rad(heading)) * (cheats['boost'].v * -1 * cheats['multiplier'].v )
                            local vecY = math.cos(-math.rad(heading)) * (cheats['boost'].v * -1 * cheats['multiplier'].v)
                            setCharVelocity(PLAYER_PED, vecX, vecY, 0.5)
                        end
                    end
                end
            end
        end
    end
end

function clickwarp()
    while true do
        while isPermission and cheats['clickWarp'].v and not imgui.ShowCursor and not isPauseMenuActive() and not isGamePaused() and sampGetGamestate() == 3  do
            
            while isPauseMenuActive() do
                if cursorEnabled then
                showCursor(false)
                end
                wait(100)
            end
            
            if isKeyDown(keyToggle) then   
                if hotkeysTable['cheats'][7] == nil or #hotkeysTable['cheats'][7].v == 0 then
                    cursorEnabled = not cursorEnabled
                    showCursor(cursorEnabled)
                    while isKeyDown(keyToggle) do wait(80) end
                end
            end
        
            if cursorEnabled then
                local mode = sampGetCursorMode()
                if mode == 0 then
                showCursor(true)
                end
                local sx, sy = getCursorPos()
                local sw, sh = getScreenResolution()
                -- is cursor in game window bounds?
                if sx >= 0 and sy >= 0 and sx < sw and sy < sh then
                local posX, posY, posZ = convertScreenCoordsToWorld3D(sx, sy, 700.0)
                local camX, camY, camZ = getActiveCameraCoordinates()
                -- search for the collision point
                local result, colpoint = processLineOfSight(camX, camY, camZ, posX, posY, posZ, true, true, false, true, false, false, false)
                if result and colpoint.entity ~= 0 then
                    local normal = colpoint.normal
                    local pos = Vector3D(colpoint.pos[1], colpoint.pos[2], colpoint.pos[3]) - (Vector3D(normal[1], normal[2], normal[3]) * 0.1)
                    local zOffset = 300
                    if normal[3] >= 0.5 then zOffset = 1 end
                    -- search for the ground position vertically down
                    local result, colpoint2 = processLineOfSight(pos.x, pos.y, pos.z + zOffset, pos.x, pos.y, pos.z - 0.3,
                    true, true, false, true, false, false, false)
                    if result then
                    pos = Vector3D(colpoint2.pos[1], colpoint2.pos[2], colpoint2.pos[3] + 1)
        
                    local curX, curY, curZ  = getCharCoordinates(playerPed)
                    local dist              = getDistanceBetweenCoords3d(curX, curY, curZ, pos.x, pos.y, pos.z)
                    local hoffs             = renderGetFontDrawHeight(font)
        
                    sy = sy - 2
                    sx = sx - 2
                    renderFontDrawText(font, string.format("%0.2fm", dist), sx, sy - hoffs, 0xEEEEEEEE)
        
                    local tpIntoCar = nil
                    local getToMe = false
                    local textInfoCar = "Удерживайте ПКМ + ЛКМ, чтобы телепортироваться в транспорт. Удерживайте ALT + ЛКМ чтобы телепортировать т/c к себе."
                    if colpoint.entityType == 2 then
                        local car = getVehiclePointerHandle(colpoint.entity)
                        if doesVehicleExist(car) and (not isCharInAnyCar(playerPed) or storeCarCharIsInNoSave(playerPed) ~= car) then
                        displayVehicleName(sx, sy - hoffs * 2,getNameOfVehicleModel(getCarModel(car)))
                        local color = 0xAAFFFFFF
                        if isKeyDown(vkeys.VK_RBUTTON) then
                            tpIntoCar = car
                            color = 0xFFFFFFFF
                            textInfoCar = "Нажмите ЛКМ чтобы телепротироваться в транспорт."
                        end

                        if isKeyDown(18) then
                            _, tpIntoCar = sampGetVehicleIdByCarHandle(car)
                            getToMe = true
                            textInfoCar = "Нажмите ЛКМ чтобы телепортировать т/c к себе."
                        end

                        renderFontDrawText(font2, textInfoCar, sx, sy - hoffs * 3, color)
                        end
                    end
        
                    createPointMarker(pos.x, pos.y, pos.z)

                    -- teleport!
                    if isKeyDown(keyApply) then
                        if tpIntoCar then
                            if not getToMe then
                                if not jumpIntoCar(tpIntoCar) then
                                    teleportPlayer(pos.x, pos.y, pos.z)
                                end
                            else
                                sampSendChat('/getherecar ' .. tpIntoCar)
                            end
                        else

                            if isCharInAnyCar(playerPed) then
                                local norm = Vector3D(colpoint.normal[1], colpoint.normal[2], 0)
                                local norm2 = Vector3D(colpoint2.normal[1], colpoint2.normal[2], colpoint2.normal[3])
                                rotateCarAroundUpAxis(storeCarCharIsInNoSave(playerPed), norm2)
                                pos = pos - norm * 1.8
                                pos.z = pos.z - 0.8
                            end
                            if not reconInfo['status'].v then
                                teleportPlayer(pos.x, pos.y, pos.z)
                            else
                                ignorePlPos = true
                                sampSendChat('/plpos ' .. reconInfo['id'] .. ' ' .. pos.x .. " " .. pos.y .. " " .. pos.z)
                            end
                        end
                        removePointMarker()
        
                        while isKeyDown(keyApply) do wait(0) end
                        showCursor(false)
                    end
                    end
                end
                end
            end
            wait(0)
            removePointMarker()
        end
        wait(0)
    end
end

function bringFloatTo(from, dest, start_time, duration)
	local timer = os.clock() - start_time
	if timer >= 0.00 and timer <= duration then
		local count = timer / (duration / 100)
		return from + (count * (dest - from) / 100)
	end
	return (timer > duration) and dest or from
end

function aimrender()
    while true do
        wait(0)
        if not isPauseMenuActive() and not isGamePaused() and isPermission and reconInfo['status'].v and reconInfo['id'] ~= -1 and reconSettings['showLook'].v then
            local meX, meY, meZ = getActiveCameraCoordinates()
            for ped, data in pairs(reconInfo['cam']) do
                if doesCharExist(ped) then
                    
                    local result, headPos = getBodyPartCoordinatesCringe(8, ped)
                    if result then
                        local offset = data.old
                        offset.x = bringFloatTo(data.old.x, data.new.x, data.timer, reconSettings['transitionLook'].v)
                        offset.y = bringFloatTo(data.old.y, data.new.y, data.timer, reconSettings['transitionLook'].v)
                        offset.z = bringFloatTo(data.old.z, data.new.z, data.timer, reconSettings['transitionLook'].v)
                        
                        local camPos = headPos + offset
                        local full_len = (camPos - headPos):length()
                        camPos = headPos + (camPos - headPos) * (reconSettings['distanceLook'].v / full_len)
    
                        local _, pX, pY, pZ, _, _ = convert3DCoordsToScreenEx( headPos:get() )
                        local _, cX, cY, cZ, _, _ = convert3DCoordsToScreenEx( camPos:get() )
    
                        if pZ > 1 and cZ > 1 then
                            renderDrawLine(pX, pY, cX, cY, reconSettings['sizeLook'].v, '0x'..hexrgba2hexargb(ini.recon.colorLook))
                            if reconSettings['showEndLook'].v then
                                renderDrawPolygon(cX, cY-1, 3 + reconSettings['sizeEndLook'].v, 3 + reconSettings['sizeEndLook'].v, 1 + reconSettings['rotationEndLook'].v, 1 + reconSettings['degreeEndLook'].v, '0x'..hexrgba2hexargb(ini.recon.colorLook))
                            end
                        end
                    end
                else
                    reconInfo['cam'] = {}
                end
            end
        end
    end
end

function wallhack()
    while true do
        wait(0)
        if isPermission then
            -----------------
            for i = 0, sampGetMaxPlayerId() do
                if sampIsPlayerConnected(i) then
                    local result, cped = sampGetCharHandleBySampPlayerId(i)
                        local color = sampGetPlayerColor(i)
                        local aa, rr, gg, bb = explode_argb(color)
                        local color = join_argb(255, rr, gg, bb)
                        if result then
                            if doesCharExist(cped) and isCharOnScreen(cped) then
                                local charPos = {getCharCoordinates(cped)}
                                local myPos = {getCharCoordinates(playerPed)}
                                local distancebetween = getDistanceBetweenCoords3d(myPos[1], myPos[2], myPos[3], charPos[1], charPos[2], charPos[3])
                                
                                if distancebetween <= cheats['whdist'].v then
                                    if cheats['whlines'].v and not isPauseMenuActive() and not isGamePaused() then
                                        if cheats['whnormalcolor'].v then colorline = color else colorline = '0x'.. hexrgba2hexargb(ini.cheats.whlinecolor) end
                                        renderDrawLineBy3dCoords(myPos[1], myPos[2], myPos[3], charPos[1], charPos[2], charPos[3],1,colorline)
                                    end

                                    if cheats['whskeletal'].v and not isPauseMenuActive() and not isGamePaused() then
                                        if cheats['whnormalcolorbones'].v then colornew = color else colornew = hexrgba2hexargb(ini.cheats.whcolor) end
                                        local playerp
                                        local t = {3, 4, 5, 51, 52, 41, 42, 31, 32, 33, 21, 22, 23, 2}
                                        for v = 1, #t do
                                            pos1X, pos1Y, pos1Z = getBodyPartCoordinates(t[v], cped)
                                            pos2X, pos2Y, pos2Z = getBodyPartCoordinates(t[v] + 1, cped)
                                            pos1, pos2 = convert3DCoordsToScreen(pos1X, pos1Y, pos1Z)
                                            pos3, pos4 = convert3DCoordsToScreen(pos2X, pos2Y, pos2Z)
                                            renderDrawLine(pos1, pos2, pos3, pos4, 1, colornew)
                                        end
                                        for v = 4, 5 do
                                            pos2X, pos2Y, pos2Z = getBodyPartCoordinates(v * 10 + 1, cped)
                                            pos3, pos4 = convert3DCoordsToScreen(pos2X, pos2Y, pos2Z)
                                            renderDrawLine(pos1, pos2, pos3, pos4, 1, colornew)
                                        end
                                        local t = {53, 43, 24, 34, 6}
                                        for v = 1, #t do
                                            posX, posY, posZ = getBodyPartCoordinates(t[v], cped)
                                            pos1, pos2 = convert3DCoordsToScreen(posX, posY, posZ)
                                        end
                                    end

                                end

                            end
                        end
                end
            end
            -----------------
        end
    end
end


function renderFontDrawClickableText(active, font, text, posX, posY, color, color_hovered, align, b_symbol)
	local cursorX, cursorY = getCursorPos()
	local lenght = renderGetFontDrawTextLength(font, text)
	local height = renderGetFontDrawHeight(font)
	local symb_len = renderGetFontDrawTextLength(font, '>')
	local hovered = false
	local result = false
    b_symbol = b_symbol == nil and false or b_symbol
    align = align or 1

    if align == 2 then
    	posX = posX - (lenght / 2)
    elseif align == 3 then
    	posX = posX - lenght
	end

    if active and cursorX > posX and cursorY > posY and cursorX < posX + lenght and cursorY < posY + height then
        hovered = true
        if isKeyJustPressed(0x01) then -- LButton
        	result = true 
        end
    end

    local anim = math.floor(math.sin(os.clock() * 10) * 3 + 5)

 	if hovered and b_symbol and (align == 2 or align == 1) then
    	renderFontDrawText(font, '>', posX - symb_len - anim, posY, 0x90FFFFFF)
    end 

    renderFontDrawText(font, text, posX, posY, hovered and color_hovered or color)

    if hovered and b_symbol and (align == 2 or align == 3) then
    	renderFontDrawText(font, '<', posX + lenght + anim, posY, 0x90FFFFFF)
    end 

    return result
end


function renderDrawButtonA(d3dFont, Title, posX, posY, targetX, targetY, boxColor, targetBoxColor, textColor, targetTextColor, centering)
    if not centering or centering == 1 then
        return renderDrawButton(d3dFont, Title, posX, posY, renderGetFontDrawTextLength(d3dFont, Title), renderGetFontDrawHeight(d3dFont), targetX, targetY, boxColor, targetBoxColor, textColor, targetTextColor) 
    end
    
    if centering == 2 then
        local success, font_length = pcall(renderGetFontDrawTextLength, d3dFont, tostring(Title))
        if success then
            return renderDrawButton(d3dFont, Title, tonumber(posX) - tonumber(font_length) / 2, posY, renderGetFontDrawTextLength(d3dFont, Title), renderGetFontDrawHeight(d3dFont), targetX, targetY, boxColor, targetBoxColor, textColor, targetTextColor) 
        end
    end

    if centering == 3 then
        local success, font_length = pcall(renderGetFontDrawTextLength, d3dFont, tostring(Title))
        if success then
            return renderDrawButton(d3dFont, Title, tonumber(posX) - tonumber(font_length), posY, renderGetFontDrawTextLength(d3dFont, Title), renderGetFontDrawHeight(d3dFont), targetX, targetY, boxColor, targetBoxColor, textColor, targetTextColor) 
        end
    end
end
function renderDrawButton(d3dFont, Title, posX, posY, sizeX, sizeY, targetX, targetY, boxColor, targetBoxColor, textColor, targetTextColor)
    local bool= false
    local currentBoxColor= boxColor
    local currentTextColor= textColor

    if  memory.getint8(getCharPointer(PLAYER_PED) + 0x528, false) ~= 19 and (targetX > posX and targetX < posX + sizeX and targetY > posY and targetY < posY + sizeY) then
        currentBoxColor= targetBoxColor
        currentTextColor= targetTextColor
        if isKeyJustPressed(VK_LBUTTON) then bool = true end
    end

    renderDrawBox(posX, posY, sizeX + 2, sizeY, currentBoxColor)
    renderFontDrawText(d3dFont, Title, posX, posY, currentTextColor)
    return bool
end


function render_near()
    while true do
        wait(0)
        if not isPauseMenuActive() and not isGamePaused() and isPermission then
            if checkersSettings['stream']['show'].v then
                local addonX, addonY = checkersSettings['stream']['x'].v, checkersSettings['stream']['y'].v
                renderFontDrawTextAlign(fonts['near'],"Чекер игроков в радиусе:",checkersSettings['stream']['x'].v,addonY,0xFFFFFFFF, checkersSettings['stream']['fAlign'].v)
                addonY = addonY + checkersSettings['stream']['fOffs'].v
                local countRendered = 0
                for i = 0, sampGetMaxPlayerId() do
                    if sampIsPlayerConnected(i) then
                        local result, cped = sampGetCharHandleBySampPlayerId(i)
                        if result then
                            if doesCharExist(cped) and countRendered < checkersSettings['stream']['max'].v then
                                if sampGetPlayerScore(i) >= checkersSettings['stream']['lvlFrom'].v and sampGetPlayerScore(i) <= checkersSettings['stream']['lvlTo'].v then
                                    local charPos = {getCharCoordinates(cped)}
                                    local myPos = {getCharCoordinates(playerPed)}
                                    local distanceBetween = getDistanceBetweenCoords3d(myPos[1], myPos[2], myPos[3], charPos[1], charPos[2], charPos[3])

                                    if distanceBetween <= checkersSettings['stream']['radius'].v then
                                        local result_text = ""
                                        if checkersSettings['stream']['showNick'].v then
                                            result_text = result_text .. "{".. hex8tohex6(ini.checker_stream.colorNick) .. "}" .. sampGetPlayerNickname(i)
                                        end
                                        
                                        if checkersSettings['stream']['showHeaderID'].v then
                                            if checkersSettings['stream']['showSeparator'].v then
                                                result_text = result_text .. "{" .. hex8tohex6(ini.checker_stream.colorSeparator) .. "} |"
                                            end
                                            result_text = result_text .. "{".. hex8tohex6(ini.checker_stream.colorHeaderID) .. "} ID:" 
                                        end

                                        if checkersSettings['stream']['showId'].v then
                                            result_text = result_text .. "{".. hex8tohex6(ini.checker_stream.colorId) .. "} ".. i 
                                        end

                                        if checkersSettings['stream']['showHeaderLVL'].v then
                                            if checkersSettings['stream']['showSeparator'].v then
                                                result_text = result_text .. "{" .. hex8tohex6(ini.checker_stream.colorSeparator) .. "} |"
                                            end
                                            result_text = result_text .. "{".. hex8tohex6(ini.checker_stream.colorHeaderLVL) .. "} LVL:"
                                        end

                                        if checkersSettings['stream']['showLVL'].v then
                                            result_text = result_text .. "{".. hex8tohex6(ini.checker_stream.colorLVL) .. "} ".. sampGetPlayerScore(i)
                                        end

                                        if checkersSettings['stream']['showHeaderPing'].v then
                                            if checkersSettings['stream']['showSeparator'].v then
                                                result_text = result_text .. "{" .. hex8tohex6(ini.checker_stream.colorSeparator) .. "} |"
                                            end
                                            result_text = result_text .. "{".. hex8tohex6(ini.checker_stream.colorHeaderPing) .. "} P:" 
                                        end

                                        if checkersSettings['stream']['showPing'].v then
                                            result_text = result_text .. "{".. hex8tohex6(ini.checker_stream.colorPing) .. "} ".. sampGetPlayerPing(i)
                                        end

                                        if isCharInAnyCar(cped) then 
                                            local res, inf = sampGetVehicleIdByCarHandle(storeCarCharIsInNoSave(cped))
                                            if res then
                                                if checkersSettings['stream']['showCarId'].v then
                                                    if checkersSettings['stream']['showSeparator'].v then
                                                        result_text = result_text .. "{" .. hex8tohex6(ini.checker_stream.colorSeparator) .. "} |"
                                                    end
                                                    result_text = result_text .. "{".. hex8tohex6(ini.checker_stream.colorHeaderCarId) .. "} Car:" 
                                                end

                                                if checkersSettings['stream']['showSpeed'].v then
                                                    if checkersSettings['stream']['showSeparator'].v then

                                                    end
                                                    result_text = result_text .. "{".. hex8tohex6(ini.checker_stream.colorCarId) .. "} ".. inf
                                                end
                                            end
                                        end

                                        renderFontDrawTextAlign(fonts['near'],result_text,checkersSettings['stream']['x'].v,addonY,0xFFFFFFFF, checkersSettings['stream']['fAlign'].v)
                                        addonY = addonY + checkersSettings['stream']['fOffs'].v
                                        countRendered = countRendered + 1
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
function render_killlist()
    
    while true do
        wait(0)
        if not isPauseMenuActive() and not isGamePaused() and isPermission then
            local kill = ffi.cast('struct stKillInfo*', sampGetKillInfoPtr())
            kill.iEnabled = 0
            if isKeyJustPressed(0x78) then
                cheats['stateKL'].v = not cheats['stateKL'].v

                if cheats['stateKL'].v then
                    printStringNow("Kill list - ON", 1000)
                else
                    printStringNow("Kill list - OFF", 1000)
                end
            end

            if cheats['stateKL'].v then
                local mY = cheats['yKL'].v
                if #killListData > cheats['linesKL'].v then
                    for i = 1, #killListData - cheats['linesKL'].v do
                        table.remove(killListData, i)
                    end
                end

                for k,v in pairs(killListData) do
                    local left_text = ""
                    local k_text = '{' .. v['KColor'] .. '}'
                    local v_text = '{' .. v['VColor'] .. '}'
                    local gun_name = "Неизвестно"
                    if tReasonsDie[v['Reason']] ~= nil then
                        gun_name = tReasonsDie[v['Reason']]
                    end

                    local weapon_text = " >> {" .. hex8tohex6(ini.cheats.colorWeapon) ..'}'..gun_name..'{FFFFFF}' .. " << "
                    local addition_to_victim = 0

                    if cheats['showKillTime'].v then
                        left_text = os.date('{'.. hex8tohex6(ini.cheats.colorKillTime) ..'}[%H:%M:%S] ', v['time'])
                    end

                    if cheats['showKillerNick'].v then
                        k_text = k_text .. v['KNick']
                    end

                    if cheats['showKillerID'].v then
                        k_text = k_text .. '['.. v['KID'] ..']'
                    end


                    if cheats['showKilledNick'].v then
                        v_text = v_text .. v['VNick']
                    end

                    if cheats['showKilledID'].v then
                        v_text = v_text .. '['.. v['VID'] ..']'
                    end

                    if cheats['withIMG'].v == 0 then
                        addition_to_victim = cheats['fsizeKL'].v * 2.5
                    elseif cheats['withIMG'].v == 1 then
                        addition_to_victim = renderGetFontDrawTextLength(fonts['killlist'], weapon_text)
                    end

                    local fix_addition = 0
                    if cheats['withIMG'].v == 0 then
                        fix_addition = (cheats['fsizeKL'].v * 2.5) - cheats['fsizeKL'].v * 1.91
                    end

                    if cheats['showKillTime'].v then 
                        renderFontDrawTextAlign(fonts['killlist'],left_text, cheats['xKL'].v - (renderGetFontDrawTextLength(fonts['killlist'], k_text) + renderGetFontDrawTextLength(fonts['killlist'],left_text) + fix_addition), mY, 0xFFFFFFFF) 
                    end
                    local cX, cY = getCursorPos()


                    if renderDrawButtonA(fonts['killlist'], k_text, cheats['xKL'].v - (renderGetFontDrawTextLength(fonts['killlist'], k_text) + fix_addition), mY, cX, cY, nil, 1768515993, -1, -1) then
                         
                        sampSendChat('/re ' .. v['KID'])
                        
                    end
                    
                    if cheats['withIMG'].v == 0 then
                        if imgTextures['reasonKills'][tonumber(v['Reason'])] ~= nil then
                            renderDrawTexture(imgTextures['reasonKills'][v['Reason']], tonumber(cheats['xKL'].v), tonumber(mY), tonumber(cheats['fsizeKL'].v * 1.91), tonumber(cheats['fsizeKL'].v * 1.91), 0, '0x'..hexrgba2hexargb(ini.cheats.colorWeapon))
                        end
                    elseif cheats['withIMG'].v == 1 then
                        renderFontDrawTextAlign(fonts['killlist'],weapon_text, cheats['xKL'].v, mY, 0xFFFFFFFF)
                    end


                    if renderDrawButtonA(fonts['killlist'],v_text, cheats['xKL'].v + addition_to_victim, mY, cX, cY, nil, 1768515993, -1, -1) then
                        sampSendChat('/re ' .. v['VID'])
                    end

                    mY = mY + cheats['fOffsKL'].v
                end
            end
        end
    end
end

function render_admins()
    while true do
        wait(0)
        if isPermission and checkersSettings['admins']['state'].v and not isPauseMenuActive() and not isGamePaused() and sampGetGamestate() == 3 then
            if checkersInfo['admins']['online'] ~= nil then
                local addonX,addonY = checkersSettings['admins']['x'].v, checkersSettings['admins']['y'].v
                local admins_online = ''
                local admins_afk = ''
                if sampGetPlayerCount(false) / checkersInfo['admins']['online'] >= 100 then
                    admins_online =  '{'..hex8tohex6(ini.adminsChecker.over)..'}' ..checkersInfo['admins']['online']
                else
                    admins_online = '{'..hex8tohex6(ini.adminsChecker.normal)..'}' ..checkersInfo['admins']['online']
                end

                if checkersInfo['admins']['online'] / checkersInfo['admins']['afk'] <= 2 then
                    admins_afk = '{'..hex8tohex6(ini.adminsChecker.over)..'}' ..checkersInfo['admins']['afk']
                else
                    admins_afk = '{'..hex8tohex6(ini.adminsChecker.normal)..'}' ..checkersInfo['admins']['afk']
                end
                renderFontDrawTextAlign(fonts['achecker'],'Администрация онлайн[' .. admins_online .. '{'..hex8tohex6(ini.adminsChecker.header)..'} | ' .. admins_afk .. '{'..hex8tohex6(ini.adminsChecker.header)..'}]',addonX,addonY,'0x'..hexrgba2hexargb(ini.adminsChecker.header),checkersSettings['admins']['centering'].v)
                local colors = {
                    ini.adminsChecker.one,
                    ini.adminsChecker.two,
                    ini.adminsChecker.three,
                    ini.adminsChecker.four,
                    ini.adminsChecker.five,
                    ini.adminsChecker.six,
                    ini.adminsChecker.seven,
                    ini.adminsChecker.eight,
                }
                local render = function(table)
                    if #table > 0 then
                        for k,v in pairs(table) do
                            local result_text = ''
                            if checkersSettings['admins']['showNick'].v then
                                
                                if v['nick'] == nickplayerbyid then
                                    result_text = result_text .. "{" .. hex8tohex6(ini.colorchats.nick) .. "}" .. v['nick']
                                else
                                    result_text = result_text .. v['nick']
                                end
                            end

                            if checkersSettings['admins']['showId'].v then
                                result_text = result_text .. '['..v['id']..']'
                            end
                            

                            if checkersSettings['admins']['showAfk'].v then
                                if tonumber(v['afk']) > checkersSettings['admins']['dopusk'].v then
                                    result_text = result_text .. '{'.. hex8tohex6(ini.adminsChecker.dash) ..'} - {'..hex8tohex6(ini.adminsChecker.afktext)..'}AFK: {'.. hex8tohex6(ini.adminsChecker.afkover) ..'}'..v['afk']
                                else
                                    result_text = result_text .. '{'.. hex8tohex6(ini.adminsChecker.dash) ..'} - {'..hex8tohex6(ini.adminsChecker.afktext)..'}AFK: {'.. hex8tohex6(ini.adminsChecker.afknorma) ..'}'..v['afk']
                                end
                            end

                            if checkersSettings['admins']['showRe'].v then
                                if v['reconer'] ~= nil then
                                    if tonumber(v['reconer']) == idplayer then
                                        result_text = result_text .. '{'.. hex8tohex6(ini.adminsChecker.dash) ..'} - {'..hex8tohex6(ini.adminsChecker.recon)..'}Watching you'
                                    else
                                        result_text = result_text .. '{'.. hex8tohex6(ini.adminsChecker.dash) ..'} - {'..hex8tohex6(ini.adminsChecker.recon)..'}Watching '.. v['reconer']
                                    end
                                end
                            end

                            if checkersSettings['admins']['showReputation'].v then
                                result_text = result_text .. '{'.. hex8tohex6(ini.adminsChecker.dash) ..'} - {'..hex8tohex6(ini.adminsChecker.reptext)..'}R: {'..hex8tohex6(ini.adminsChecker.reputation)..'}' .. v['reputation']
                            end

                            if checkersSettings['admins']['showActive'].v then
                                result_text = result_text .. '{'.. hex8tohex6(ini.adminsChecker.dash) ..'} - {'.. hex8tohex6(ini.adminsChecker.activetext) ..'}A: {'..hex8tohex6(ini.adminsChecker.active)..'}' .. os.time() - checkersInfo['admins_active'][v['nick']]
                            end

                            for keychik, valuechik in pairs(adminNoticesTable) do
                                if valuechik['nick'] == v['nick'] and valuechik['show'] then
                                    result_text = result_text .. "{".. hex8tohex6(valuechik['color']) .."}  " .. valuechik['notice']
                                    break
                                end
                            end

                            local render_ = function()
                                addonY = addonY + checkersSettings['admins']['fOffs'].v
                                local cX, cY = getCursorPos()
                                if renderDrawButtonA(fonts['achecker'], result_text, addonX, addonY, cX, cY, nil, 1768515993, '0x'.. hexrgba2hexargb(colors[tonumber(v['lvl'])]), '0x'.. hexrgba2hexargb(colors[tonumber(v['lvl'])]), checkersSettings['admins']['centering'].v) then
                                    local isSomethingFind = false
                                    for kll,vll in pairs(adminNoticesTable) do
                                        if vll['nick'] == v['nick'] then
                                            isSomethingFind = true
                                            noticeAdminCreator['nick'] = vll['nick']
                                            noticeAdminCreator['notice'].v = u8(vll['notice'])
                                            noticeAdminCreator['colorNotice'] = imgui.ImFloat4(imgui.ImColor(hextorgba(vll['color'])):GetFloat4())
                                            noticeAdminCreator['showNotice'].v = vll['show']
                                        break
                                        end
                                    end
                                    if not isSomethingFind then
                                        noticeAdminCreator['nick'] = v['nick']
                                        noticeAdminCreator['notice'].v = "|| "
                                        noticeAdminCreator['colorNotice'] = imgui.ImFloat4(imgui.ImColor(hextorgba("FFFFFFFF")):GetFloat4())
                                        noticeAdminCreator['showNotice'].v = true
                                    end
                                    addonWindows['adminNotice'].v = true
                                end
                                --renderFontDrawTextAlign(fonts['achecker'],result_text,addonX,addonY,'0x'.. hexrgba2hexargb(colors[tonumber(v['lvl'])]),checkersSettings['admins']['centering'].v)
                            end

                            if checkersSettings['admins']['showSpecial'].v then
                                if tonumber(v['lvl']) == 5 and checkersSettings['admins']['five_state'].v then
                                    render_()
                                elseif tonumber(v['lvl']) == 6 and checkersSettings['admins']['six_state'].v then
                                    render_()
                                elseif tonumber(v['lvl']) == 7 and checkersSettings['admins']['seven_state'].v then
                                    render_()
                                elseif tonumber(v['lvl']) == 8 and checkersSettings['admins']['eight_state'].v then
                                    render_()
                                end
                            end

                            if tonumber(v['lvl']) == 1 and checkersSettings['admins']['one_state'].v then
                                render_()
                            elseif tonumber(v['lvl']) == 2 and checkersSettings['admins']['two_state'].v then
                                render_()
                            elseif tonumber(v['lvl']) == 3 and checkersSettings['admins']['three_state'].v then
                                render_()
                            elseif tonumber(v['lvl']) == 4 and checkersSettings['admins']['four_state'].v then
                                render_()
                            end

                        end
                    end
                end

                local s_render = function(table) 
                    if #table > 0 and checkersSettings['admins']['showSpecial'].v then
                        for k,v in pairs(table) do
                            if sampGetPlayerIdByNickname(v[1]) ~= -1 then
                                
                                local g = table_merge(checkersInfo['admins']['eight'],checkersInfo['admins']['seven'],checkersInfo['admins']['six'],checkersInfo['admins']['five'],checkersInfo['admins']['four'],checkersInfo['admins']['three'],checkersInfo['admins']['two'],checkersInfo['admins']['one'])

                                local finded = false
                                for _,vn in pairs(g) do
                                    if vn['nick'] == v[1] then
                                        finded = true
                                    end
                                end

                                if not finded then
                                    local result_text = ''
                                    if checkersSettings['admins']['showNick'].v then
                                        result_text = result_text .. v[1]
                                    end
        
                                    if checkersSettings['admins']['showId'].v then
                                        result_text = result_text .. '['..listPlayers[v[1]]..']'
                                    end
                                    
                                    if checkersSettings['admins']['showAfk'].v then
                                        result_text = result_text .. '{'.. hex8tohex6(ini.adminsChecker.dash) ..'} -{'..hex8tohex6(ini.adminsChecker.afktext)..'} AFK: {'..hex8tohex6(ini.adminsChecker.afkover)..'}N'
                                    end
                                    for keychik, valuechik in pairs(adminNoticesTable) do
                                        if valuechik['nick'] == v[1] and valuechik['show'] then
                                            result_text = result_text .. "{".. hex8tohex6(valuechik['color']) .."}  " .. valuechik['notice']
                                            break
                                        end
                                    end
                                    
                                    local admin_lvl = 9 - tonumber(v[2])
                                    local render_ = function()
                                        addonY = addonY + checkersSettings['admins']['fOffs'].v
                                        local cX, cY = getCursorPos()
                                        if renderDrawButtonA(fonts['achecker'], result_text, addonX, addonY, cX, cY, nil, 1768515993, '0x'.. hexrgba2hexargb(colors[admin_lvl]), '0x'.. hexrgba2hexargb(colors[admin_lvl]), checkersSettings['admins']['centering'].v) then
                                            local isSomethingFind = false
                                            for kll,vll in pairs(adminNoticesTable) do
                                                if vll['nick'] == v[1] then
                                                    isSomethingFind = true
                                                    noticeAdminCreator['nick'] = vll['nick']
                                                    noticeAdminCreator['notice'].v = u8(vll['notice'])
                                                    noticeAdminCreator['colorNotice'] = imgui.ImFloat4(imgui.ImColor(hextorgba(vll['color'])):GetFloat4())
                                                    noticeAdminCreator['showNotice'].v = vll['show']
                                                break
                                                end
                                            end
                                            if not isSomethingFind then
                                                noticeAdminCreator['nick'] = v[1]
                                                noticeAdminCreator['notice'].v = "|| "
                                                noticeAdminCreator['colorNotice'] = imgui.ImFloat4(imgui.ImColor(hextorgba("FFFFFFFF")):GetFloat4())
                                                noticeAdminCreator['showNotice'].v = true
                                            end
                                            addonWindows['adminNotice'].v = true
                                        end
                                        --renderFontDrawTextAlign(fonts['achecker'],result_text,addonX,addonY,'0x'.. hexrgba2hexargb(colors[admin_lvl]),checkersSettings['admins']['centering'].v)
                                    end

                                    
                                    if admin_lvl == 5 and checkersSettings['admins']['five_state'].v then
                                        render_()
                                    elseif admin_lvl == 6 and checkersSettings['admins']['six_state'].v then
                                        render_()
                                    elseif admin_lvl == 7 and checkersSettings['admins']['seven_state'].v then
                                        render_()
                                    elseif admin_lvl == 8 and checkersSettings['admins']['eight_state'].v then
                                        render_()
                                    end



                                end

                            end
                        end
                    end
                end
                
                local anti_flicker = function(t2,t1)
                    if #t1 == 0 and #t2 ~= 0 then
                        render(t2)
                    else
                        render(t1)
                    end
                end
                s_render(specialsSorted)
                anti_flicker(checkersInfo['admins']['eight'],checkersInfo['admins_reserve']['eight'])
                anti_flicker(checkersInfo['admins']['seven'],checkersInfo['admins_reserve']['seven'])
                anti_flicker(checkersInfo['admins']['six'],checkersInfo['admins_reserve']['six'])
                anti_flicker(checkersInfo['admins']['five'],checkersInfo['admins_reserve']['five'])
                anti_flicker(checkersInfo['admins']['four'],checkersInfo['admins_reserve']['four'])
                anti_flicker(checkersInfo['admins']['three'],checkersInfo['admins_reserve']['three'])
                anti_flicker(checkersInfo['admins']['two'],checkersInfo['admins_reserve']['two'])
                anti_flicker(checkersInfo['admins']['one'],checkersInfo['admins_reserve']['one'])

            end
        end
    end
end


function checker_apanel()
    while true do
        wait(0)
        if isPermission and islogined and mainini['passwordautoadmin'].v and mainini['adminpass'].v and not isShowedApanel then
            sampSendChat('/apanel')
            wait(1000)
        end
    end
end

function render_joinExit()
    while true do
        wait(0)
        
        if isPermission and sampGetGamestate() == 3 and logJoinExit['show'].v and not isPauseMenuActive() and not isGamePaused() then
            local addonY = logJoinExit['y'].v
            if #logJoinExitBuffer > logJoinExit['linesChat'].v then
                for i = 1, #logJoinExitBuffer - logJoinExit['linesChat'].v do
                    table.remove(logJoinExitBuffer, i)
                end
            end
            
            for k,v in pairs(logJoinExitBuffer) do
                local resultText = ""
                if logJoinExit['showJoinExitTime'].v then
                    resultText = os.date('{' .. hex8tohex6(ini.joinExit.colorTime) ..'}[%H:%M:%S] ', v['time'])
                end

                if logJoinExit['showNick'].v then
                    resultText = resultText .. "{".. hex8tohex6(ini.joinExit.colorNick) .. "}" .. v['nick']
                end

                if logJoinExit['showID'].v then
                    resultText = resultText .. "{" .. hex8tohex6(ini.joinExit.colorID) .. "}[" .. v['id'] .. "]"
                end

                if logJoinExit['showText'].v then
                    if v['type'] == 0 then
                        resultText = resultText .. "{" .. hex8tohex6(ini.joinExit.colorText) .. "} вошел в игру."
                    else
                        resultText = resultText .. "{" .. hex8tohex6(ini.joinExit.colorText) .. "} вышел. Причина: ".. tExitReasons[v['reason'] + 1]
                    end
                end


                
                renderFontDrawTextAlign(fonts['joinExit'], resultText, logJoinExit['x'].v, addonY, '0x' .. hexrgba2hexargb(ini.joinExit.colorBased), logJoinExit['centering'].v)
                
                addonY = addonY + logJoinExit['fOffs'].v
            end
        end
    end
end

function render_pChats()
    for k,v in pairs(pChatsTableImgui) do
        render_TableChat(k,v)
    end
end

function render_TableChat(k,v)
    lua_thread.create(function()
        while true do
            wait(0)
            if isPermission and sampGetGamestate() == 3 and v['show'].v and not isPauseMenuActive() and not isGamePaused() and #v['name'].v > 0 then
                local addonY = v['y'].v
                if #buffersPChats[v['name'].v] > v['linesChat'].v then
                    for i = 1, #buffersPChats[v['name'].v] - v['linesChat'].v do
                        table.remove(buffersPChats[v['name'].v], i)
                    end
                end

                for keyBuffer,valueBuffer in pairs(buffersPChats[v['name'].v]) do
                    if v['regex'] ~= nil and v['regex'][valueBuffer[1]] ~= nil then
                        local resultText = ""

                        if v['showTime'].v then
                            resultText = os.date('{' .. hex8tohex6(float2hex(v['regex'][valueBuffer[1]]['colors']['time'])) ..'}[%H:%M:%S] ', valueBuffer['time'])
                        end

                        renderFontDrawTextAlign(fontsPChats[v['name'].v], resultText .. valueBuffer[2],v['x'].v, addonY, '0x' .. float2hex(v['regex'][valueBuffer[1]]['colors']['based']), v['centering'].v)
                        addonY = addonY + v['fOffs'].v
                    end
                end
            end
        end
    end)
end

function render_longChat()
    while true do
        wait(0)
        
        if isPermission and sampGetGamestate() == 3 and longChatSettings['show'].v and not isPauseMenuActive() and not isGamePaused() then
            local addonY = longChatSettings['y'].v
            if #longChatBuffer > longChatSettings['linesChat'].v then
                for i = 1, #longChatBuffer - longChatSettings['linesChat'].v do
                    table.remove(longChatBuffer, i)
                end
            end
            
            for k,v in pairs(longChatBuffer) do
                local resultText = ""
                if longChatSettings['showSendTime'].v then
                    resultText = os.date('{' .. hex8tohex6(ini.long_chat.colorTime) ..'}[%H:%M:%S] ', v['time'])
                end

                if longChatSettings['showSenderNick'].v then
                    resultText = resultText.. "{" .. hex8tohex6(ini.long_chat.colorNick) .. "}" .. v['nick']
                end

                if longChatSettings['showSenderID'].v then
                    resultText = resultText.. "{" .. hex8tohex6(ini.long_chat.colorID) .. "}[" .. v['id'] .. "]"
                end

                if longChatSettings['showSenderDist'].v then
                    resultText = resultText.. "{" .. hex8tohex6(ini.long_chat.colorBased) .. "} | {" .. hex8tohex6(ini.long_chat.colorDistTag) .. "}D: {" .. hex8tohex6(ini.long_chat.colorDist) .. "}" .. v['distance'] .. "{" .. hex8tohex6(ini.long_chat.colorBased) .. "} |"
                end

                if longChatSettings['showSenderText'].v then
                    resultText = resultText.. "{" .. hex8tohex6(ini.long_chat.colorText) .. "} " .. v['message']
                end

    

                renderFontDrawTextAlign(fonts['longChat'], resultText,longChatSettings['x'].v, addonY, '0x' .. hexrgba2hexargb(ini.long_chat.colorBased), longChatSettings['centering'].v)
                addonY = addonY + longChatSettings['fOffs'].v
            end
        end
    end
end

function render_leaders() 
    while true do
        wait(0)
       
        if isPermission and sampGetGamestate() == 3 and checkersSettings['leaders']['state'].v and not isPauseMenuActive() and not isGamePaused() then
            local addonX = checkersSettings['leaders']['x'].v
            if checkersSettings['leaders']['orgstate'].v then
                local addonY = checkersSettings['leaders']['y'].v
                if checkersSettings['leaders']['headerstate'].v then
                    renderFontDrawTextAlign(fonts['lchecker'],'Организация',addonX,addonY,'0x'..hexrgba2hexargb(ini.leadersChecker.org_header),checkersSettings['leaders']['centering'].v)
                    addonY = addonY + checkersSettings['leaders']['fOffs'].v
                end

                local index_l = 1
                for k,v in pairs(checkersInfo['leaders']) do
                    if checkersSettings['lstates'][index_l].v then
                        renderFontDrawTextAlign(fonts['lchecker'],checkersSettings['leaders']['in_settings_titles'][index_l][1],addonX,addonY,'0x'..hexrgba2hexargb(ini.colororgs[index_l]),checkersSettings['leaders']['centering'].v)
                        addonY = addonY + checkersSettings['leaders']['fOffs'].v
                    end
                        index_l = index_l + 1
                end
                addonX = addonX + checkersSettings['leaders']['fOffsx'].v
            end

            if checkersSettings['leaders']['nickstate'].v or checkersSettings['leaders']['idstate'].v then
                local addonY = checkersSettings['leaders']['y'].v
                if checkersSettings['leaders']['headerstate'].v then
                    renderFontDrawTextAlign(fonts['lchecker'],'Ник',addonX,addonY,'0x'..hexrgba2hexargb(ini.leadersChecker.nick_header),checkersSettings['leaders']['centering'].v)
                    addonY = addonY + checkersSettings['leaders']['fOffs'].v
                end


            
                local index_l = 1
                for k,v in pairs(checkersInfo['leaders']) do
                    if checkersSettings['lstates'][index_l].v then
                        local result_text = ''
                        if checkersSettings['leaders']['nickstate'].v then
                            result_text = result_text .. checkersInfo['leaders'][checkersSettings['leaders']['shows'][index_l][1]]['nick']
                        end

                        if checkersSettings['leaders']['idstate'].v then
                            local color_id
                            if checkersSettings['leaders']['orgequalsnickid'].v then
                                color_id = ini.colororgs[index_l]
                            else
                                color_id = ini.leadersChecker['id_value']
                            end
                            result_text = result_text .. '{' .. hex8tohex6(color_id) .. '}[' .. checkersInfo['leaders'][checkersSettings['leaders']['shows'][index_l][1]]['id'] .. ']'
                        end

                        local color_id_full

                        if checkersSettings['leaders']['orgequalsnickid'].v then
                            color_id_full = ini.colororgs[index_l]
                        else
                            color_id_full = ini.leadersChecker['nick_value']
                        end
                        renderFontDrawTextAlign(fonts['lchecker'],result_text,addonX,addonY,'0x'..hexrgba2hexargb(color_id_full),checkersSettings['leaders']['centering'].v)
                        addonY = addonY + checkersSettings['leaders']['fOffs'].v
                    end
                    index_l = index_l + 1
                end
                addonX = addonX + checkersSettings['leaders']['fOffsx'].v - 20
            end

            if checkersSettings['leaders']['activeState'].v then
                local addonY = checkersSettings['leaders']['y'].v
                if checkersSettings['leaders']['headerstate'].v then
                    renderFontDrawTextAlign(fonts['lchecker'],'АФК',addonX,addonY,'0x'..hexrgba2hexargb(ini.leadersChecker.active_header),checkersSettings['leaders']['centering'].v)
                    addonY = addonY + checkersSettings['leaders']['fOffs'].v
                end
                local index_l = 1
                for k,v in pairs(checkersInfo['leaders']) do
                    if checkersSettings['lstates'][index_l].v then
                        renderFontDrawTextAlign(fonts['lchecker'],checkersInfo['leaders'][checkersSettings['leaders']['shows'][index_l][1]]['afk'],addonX,addonY,'0x'..hexrgba2hexargb(ini.leadersChecker['active_value']),checkersSettings['leaders']['centering'].v)
                        addonY = addonY + checkersSettings['leaders']['fOffs'].v
                    end
                    index_l = index_l + 1
                end
                addonX = addonX + checkersSettings['leaders']['fOffsx'].v - 40

            end

            if checkersSettings['leaders']['zamstate'].v then
                local addonY = checkersSettings['leaders']['y'].v
                if checkersSettings['leaders']['headerstate'].v then
                    renderFontDrawTextAlign(fonts['lchecker'],'Замы',addonX,addonY,'0x'..hexrgba2hexargb(ini.leadersChecker.deputy_header),checkersSettings['leaders']['centering'].v)
                    addonY = addonY + checkersSettings['leaders']['fOffs'].v
                end
                local index_l = 1
                for k,v in pairs(checkersInfo['leaders']) do
                    if checkersSettings['lstates'][index_l].v then
                        renderFontDrawTextAlign(fonts['lchecker'],checkersInfo['leaders'][checkersSettings['leaders']['shows'][index_l][1]]['deputies'],addonX,addonY,'0x'..hexrgba2hexargb(ini.leadersChecker['deputy_value']),checkersSettings['leaders']['centering'].v2)
                        addonY = addonY + checkersSettings['leaders']['fOffs'].v
                    end
                    index_l = index_l + 1
                end
                addonX = addonX + checkersSettings['leaders']['fOffsx'].v - 40

            end

            if checkersSettings['leaders']['ingamestate'].v or checkersSettings['leaders']['afkstate'].v then
                local addonY = checkersSettings['leaders']['y'].v
                if checkersSettings['leaders']['headerstate'].v then
                    renderFontDrawTextAlign(fonts['lchecker'],'Состав',addonX,addonY,'0x'..hexrgba2hexargb(ini.leadersChecker.members_header),checkersSettings['leaders']['centering'].v)
                    addonY = addonY + checkersSettings['leaders']['fOffs'].v
                end


            
                local index_l = 1
                for k,v in pairs(checkersInfo['leaders']) do
                    if checkersSettings['lstates'][index_l].v then
                        local result_text = ''
                        if checkersSettings['leaders']['ingamestate'].v then
                            result_text = result_text .. checkersInfo['leaders'][checkersSettings['leaders']['shows'][index_l][1]]['members'] 
                        end

                        if checkersSettings['leaders']['afkstate'].v then
                            result_text = result_text .. '{' .. hex8tohex6(ini.leadersChecker['members_afk_value']) .. '} | AFK: ' .. checkersInfo['leaders'][checkersSettings['leaders']['shows'][index_l][1]]['membersafk']
                        end


                        renderFontDrawTextAlign(fonts['lchecker'],result_text,addonX,addonY,'0x'..hexrgba2hexargb(ini.leadersChecker['members_value']),checkersSettings['leaders']['centering'].v)
                        addonY = addonY + checkersSettings['leaders']['fOffs'].v
                    end
                    index_l = index_l + 1
                end
            end
        end
    end
end


function render_friends() 
    while true do
        wait(0)
        if isPermission and sampGetGamestate() == 3 and checkersSettings['friends']['state'].v and not isPauseMenuActive() and not isGamePaused() then
            local addonX, addonY = checkersSettings['friends']['x'].v,checkersSettings['friends']['y'].v
            if checkersSettings['friends']['show_header'].v then
                local online_full = 0
                for k,v in pairs(friendsTable) do
                    if isPlayerOnline(v[1]) then
                        online_full = online_full + 1
                    end
                end
                renderFontDrawTextAlign(fonts['fchecker'],"Игроки онлайн — " .. online_full,addonX,addonY,'0x'..hexrgba2hexargb(ini.friendChecker['header_color']),checkersSettings['friends']['centering'].v)
                addonY = addonY + checkersSettings['friends']['fOffs'].v
            end

            for k,v in pairs(friendsTable) do
                local id_nick = sampGetPlayerIdByNickname(v[1])
                if sampIsPlayerConnected(id_nick) then
                    local result_text = ''
                    if checkersSettings['friends']['show_nick'].v then
                        result_text = result_text .. v[1]
                    end

                    if checkersSettings['friends']['show_id'].v then
                        result_text = result_text .. '{' .. hex8tohex6(ini.friendChecker['id_color']) .. '}[' .. id_nick .. ']'
                    end

                    if checkersSettings['friends']['show_distance'].v or checkersSettings['friends']['instreamstate'].v then
                        local result, cped = sampGetCharHandleBySampPlayerId(id_nick)
                        if result then
                            if doesCharExist(cped) then
                                local charPos = {getCharCoordinates(cped)}
                                local myPos = {getCharCoordinates(playerPed)}
                                local distancebetween = getDistanceBetweenCoords3d(myPos[1], myPos[2], myPos[3], charPos[1], charPos[2], charPos[3])
                                if checkersSettings['friends']['show_distance'].v then
                                    result_text = result_text .. ' {' .. hex8tohex6(ini.friendChecker['distance_header_color']) .. '}| Дистанция: {'..hex8tohex6(ini.friendChecker['distance_color'])..'}'.. math.floor(distancebetween)
                                end
                                if checkersSettings['friends']['instreamstate'].v then
                                    if distancebetween <= checkersSettings['friends']['distance_render'].v then
                                        renderDrawLineBy3dCoords(myPos[1], myPos[2], myPos[3], charPos[1], charPos[2], charPos[3],1,'0x'.. hexrgba2hexargb(ini.friendChecker.line_color))
                                    end
                                end

                            end
                        end
                        
                    end

                    renderFontDrawTextAlign(fonts['fchecker'],result_text,addonX,addonY,'0x'..hexrgba2hexargb(ini.friendChecker['nick_color']),checkersSettings['friends']['centering'].v)
                    addonY = addonY + checkersSettings['friends']['fOffs'].v
                end
            end
        end
    end
end


function sender_admins()
    while true do
        wait(0)

        if isPermission and checkersSettings['admins']['state'].v and not isPauseMenuActive() and not isGamePaused() and sampGetGamestate() == 3 then
            sampSendChat('/admins')
            wait(checkersSettings['admins']['delay'].v)
        end
    end
end

function sender_leaders()
    while true do
        wait(0)
        if isPermission and checkersSettings['leaders']['state'].v and not isPauseMenuActive() and not isGamePaused() and sampGetGamestate() == 3 then
            for i = 1,29 do
                checkersSettings['leaders']['shows'][i][2] = false
                sampSendChat('/orgmembers '.. i)
                wait(300)
            end
            wait(300)
            if checkersSettings['leaders']['activeState'].v then sampSendChat('/leaders') end
            wait(checkersSettings['leaders']['delay'].v)
        end
    end
end





function moveInterface(x,y,callback)
    lua_thread.create(function()
        local bool = true
        sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Позиция редактируется, для сохранения нажмите ЛКМ в нужной позиции.",-1)
        local was = windows['main'].v
        windows['main'].v = false
        pickedPositionFixGovno = false
        while bool do
            wait(0)
            sampToggleCursor(true)
            x.v, y.v = getCursorPos()
            x.v = x.v + 3
            y.v = y.v + 3
            
            if pickedPositionFixGovno then
                callback(x.v,y.v)
                sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Позиция была успешно сохранена.",-1)
                windows['main'].v = was
                bool = false
                sampToggleCursor(false)
                pickedPositionFixGovno = false
            end
        end
    end)
end

function movePChats(x,y,callback)
    lua_thread.create(function()
        local bool = true
        sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Позиция редактируется, для сохранения нажмите ЛКМ в нужной позиции.",-1)
        windows['main'].v = false
        while bool do
            wait(0)
            sampToggleCursor(true)
            x, y = getCursorPos()
            x = x + 3
            y = y + 3
            
            if isKeyJustPressed(vkeys.VK_LBUTTON) then
                callback(x,y)
                sampAddChatMessage("{2DF61C}[Редактирование]{FFFFFF} Позиция была успешно сохранена.",-1)
                windows['main'].v = true
                bool = false
                sampToggleCursor(false)
            end
        end
    end)
end


function getColorArea(terr)
	if terr then
		local gz = ffi.cast("struct stGangzonePool*", sampGetGangzonePoolPtr())

		for i = 0, 300 do
			if gz.iIsListed[i] ~= 0 and gz.pGangzone[i] ~= nil then
				local ghettoPos = gz.pGangzone[i].fPosition

				if ghettoCoords[ghettoPos[0] .. "," .. ghettoPos[1] .. "," .. ghettoPos[2]] and tostring(ghettoCoords[ghettoPos[0] .. "," .. ghettoPos[1] .. "," .. ghettoPos[2]]) == tostring(terr) then
					return {
						pos = ghettoPos,
						color = gz.pGangzone[i].dwColor
					}
				end
			end
		end
	else
		return -1
	end
end

function normalonline(time, right)
    if time >= right then
        return "{2DF61C}"..get_clock(time)
    else
        return "{F6361C}"..get_clock(time)
    end
end

function normalonlineafk(time, right)
    if (time / 2) >= right then
        return "{F6361C}"..get_clock(time)
    else
        return "{2DF61C}"..get_clock(time)
    end
end

function getColorAreaLV(terr)
	if terr then
		local gz = ffi.cast("struct stGangzonePool*", sampGetGangzonePoolPtr())

		for i = 262, 418 do
			if gz.iIsListed[i] ~= 0 and gz.pGangzone[i] ~= nil then
				local lvPos = gz.pGangzone[i].fPosition

				if LVCoords[lvPos[0] .. "," .. lvPos[1] .. "," .. lvPos[2]] and tostring(LVCoords[lvPos[0] .. "," .. lvPos[1] .. "," .. lvPos[2]]) == tostring(terr) then
					return {
						pos = lvPos,
						color = gz.pGangzone[i].dwColor
					}
				end
			end
		end
	else
		return -1
	end
end


function checkBussinesMafia()
    if not mafiaPaintInfo['state'] then
        lua_thread.create(function()
            mafiaPaintInfo['state'] = true
            mafiaPaintInfo['temporaryInfo'] = {
                rm = {}, yak = {}, lcn = {}, wmc = {}
            }
            mafiaPaintInfo['waitingForAmember'] = false
            mafiaPaintInfo['waitingForCheckDialog'] = false

            mafiaPaintInfo['wichChecking'] = 1

            for i = 16, 19 do
                sampSendChat('/amember '.. i .. ' 9')
                local waiting = os.time()
                mafiaPaintInfo['waitingForAmember'] = true
                while (os.time() - waiting) <= 3 and mafiaPaintInfo['waitingForAmember'] do
                    wait(0)
                end
                mafiaPaintInfo['waitingForAmember'] = false

                sampSendChat('/mbiz')
                mafiaPaintInfo['waitingForCheckDialog'] = true
                local time_bizik_check = os.time()
                while (os.time() - time_bizik_check) <= 3 and mafiaPaintInfo['waitingForCheckDialog'] do
                    wait(0)
                end

                mafiaPaintInfo['waitingForCheckDialog'] = false
                mafiaPaintInfo['wichChecking'] = mafiaPaintInfo['wichChecking'] + 1
                wait(200)
            end
            
            mafiaPaintInfo['infoBizes'] = clone(mafiaPaintInfo['temporaryInfo'])
            mafiaPaintInfo['state'] = false
            mafiaPaintInfo['last'] = os.time()
        end)
    end
end

function checkFamilyGangZone()
    if not familyGzInfo['state'] then
        lua_thread.create(function()
            familyGzInfo['state'] = true
            familyGzInfo['fullListReserv'] = {}
            familyGzInfo['temporaryList'] = {}
            for i = 1, 156 do
                sampSendChat('/famgzinfo ' .. i)
                wait(300)
            end

            wait(2500)
            local preBufferListStats = {}
            for k,v in pairs(familyGzInfo['fullListReserv']) do
                if preBufferListStats[v['owner']] ~= nil then
                    preBufferListStats[v['owner']][2] = preBufferListStats[v['owner']][2] + 1
                else
                    preBufferListStats[v['owner']] = {k, 1}
                end
            end

            familyGzInfo['listStats'] = clone(preBufferListStats)
            familyGzInfo['fullList'] = clone(familyGzInfo['fullListReserv'])
            familyGzInfo['state'] = false
            familyGzInfo['last'] = os.time()
        end)
    end
end

function nameTagOn()
	local pStSet = sampGetServerSettingsPtr()
	memory.setfloat(pStSet + 39, cheats['whdist'].v)
	memory.setint8(pStSet + 47, 0)
	memory.setint8(pStSet + 56, 1)
end

function nameTagOff()
	local pStSet = sampGetServerSettingsPtr()
	memory.setfloat(pStSet + 39, 25) -- стандартная прорисовка на арз - 25
	memory.setint8(pStSet + 47, 1) -- прорисовка через стены??))
	memory.setint8(pStSet + 56, 1) -- показ неймтегов
end

function getBodyPartCoordinates(id, handle)
    local pedptr = getCharPointer(handle)
    local vec = ffi.new("float[3]")
    getBonePosition(ffi.cast("void*", pedptr), vec, id, true)
    return vec[0], vec[1], vec[2]
end

function getBodyPartCoordinatesCringe(id, handle)
	local ptr = getCharPointer(handle)
	if ptr ~= 0 then
		local pos = ffi.new("float[3]")
		getBonePosition(ffi.cast("void*", ptr), pos, id, true)
		return true, Vector3D(pos[0], pos[1], pos[2])
	end
	return false
end

function renderDrawLineBy3dCoords(posX, posY, posZ, posX2, posY2, posZ2, width, color)
    local SposX, SposY = convert3DCoordsToScreen(posX, posY, posZ)
    local SposX2, SposY2 = convert3DCoordsToScreen(posX2, posY2, posZ2)
    if isPointOnScreen(posX, posY, posZ, 1) and isPointOnScreen(posX2, posY2, posZ2, 1) then
        renderDrawLine(SposX, SposY, SposX2, SposY2, width, color)
    end
end


function initializeRender()
    font = renderCreateFont("Tahoma", 10, FCR_BOLD + FCR_BORDER)
    font2 = renderCreateFont("Arial", 8, FCR_ITALICS + FCR_BORDER)
end

function rotateCarAroundUpAxis(car, vec)
    local mat = Matrix3X3(getVehicleRotationMatrix(car))
    local rotAxis = Vector3D(mat.up:get())
    vec:normalize()
    rotAxis:normalize()
    local theta = math.acos(rotAxis:dotProduct(vec))
    if theta ~= 0 then
      rotAxis:crossProduct(vec)
      rotAxis:normalize()
      rotAxis:zeroNearZero()
      mat = mat:rotate(rotAxis, -theta)
    end
    setVehicleRotationMatrix(car, mat:get())
  end
  
  function readFloatArray(ptr, idx)
    return representIntAsFloat(readMemory(ptr + idx * 4, 4, false))
  end
  
  function writeFloatArray(ptr, idx, value)
    writeMemory(ptr + idx * 4, 4, representFloatAsInt(value), false)
  end
  
  function getVehicleRotationMatrix(car)
    local entityPtr = getCarPointer(car)
    if entityPtr ~= 0 then
      local mat = readMemory(entityPtr + 0x14, 4, false)
      if mat ~= 0 then
        local rx, ry, rz, fx, fy, fz, ux, uy, uz
        rx = readFloatArray(mat, 0)
        ry = readFloatArray(mat, 1)
        rz = readFloatArray(mat, 2)
  
        fx = readFloatArray(mat, 4)
        fy = readFloatArray(mat, 5)
        fz = readFloatArray(mat, 6)
  
        ux = readFloatArray(mat, 8)
        uy = readFloatArray(mat, 9)
        uz = readFloatArray(mat, 10)
        return rx, ry, rz, fx, fy, fz, ux, uy, uz
      end
    end
  end
  
  local print_orig = print
	function print(...)
		local args = {...}
		function table.val_to_str( v )
			if "string" == type( v ) then
				v = string.gsub( v, "\n", "\\n" )
				if string.match( string.gsub(v,"[^'\"]",""), '^"+$' ) then
					return "'" .. v .. "'"
				end
				return '"' .. string.gsub(v,'"', '\\"' ) .. '"'
			else
				return "table" == type( v ) and table.tostring( v ) or tostring( v )
			end
		end
		function table.key_to_str( k )
			if "string" == type( k ) and string.match( k, "^[_%a][_%a%d]*$" ) then
				return k
			else
				return "[" .. table.val_to_str( k ) .. "]"
			end
		end
		function table.tostring( tbl )
			local result, done = {}, {}
			for k, v in ipairs( tbl ) do
				table.insert( result, table.val_to_str( v ) )
				done[ k ] = true
			end
			for k, v in pairs( tbl ) do
				if not done[ k ] then
					table.insert( result, table.key_to_str( k ) .. "=" .. table.val_to_str( v ) )
				end
			end
			return "{" .. table.concat( result, "," ) .. "}"
		end
		for i, arg in ipairs(args) do
			if type(arg) == "table" then
				args[i] = table.tostring(arg)
			end
		end
		print_orig(table.unpack(args))
	end





  function setVehicleRotationMatrix(car, rx, ry, rz, fx, fy, fz, ux, uy, uz)
    local entityPtr = getCarPointer(car)
    if entityPtr ~= 0 then
      local mat = readMemory(entityPtr + 0x14, 4, false)
      if mat ~= 0 then
        writeFloatArray(mat, 0, rx)
        writeFloatArray(mat, 1, ry)
        writeFloatArray(mat, 2, rz)
  
        writeFloatArray(mat, 4, fx)
        writeFloatArray(mat, 5, fy)
        writeFloatArray(mat, 6, fz)
  
        writeFloatArray(mat, 8, ux)
        writeFloatArray(mat, 9, uy)
        writeFloatArray(mat, 10, uz)
      end
    end
  end
  
  function displayVehicleName(x, y, gxt)
    x, y = convertWindowScreenCoordsToGameScreenCoords(x, y)
    useRenderCommands(true)
    setTextWrapx(640.0)
    setTextProportional(true)
    setTextJustify(false)
    setTextScale(0.33, 0.8)
    setTextDropshadow(0, 0, 0, 0, 0)
    setTextColour(255, 255, 255, 230)
    setTextEdge(1, 0, 0, 0, 100)
    setTextFont(1)
    displayText(x, y, gxt)
  end
  
  function createPointMarker(x, y, z)
    pointMarker = createUser3dMarker(x, y, z + 0.3, 4)
  end
  
  function removePointMarker()
    if pointMarker then
      removeUser3dMarker(pointMarker)
      pointMarker = nil
    end
  end
  
  function getCarFreeSeat(car)
    if doesCharExist(getDriverOfCar(car)) then
      local maxPassengers = getMaximumNumberOfPassengers(car)
      for i = 0, maxPassengers do
        if isCarPassengerSeatFree(car, i) then
          return i + 1
        end
      end
      return nil -- no free seats
    else
      return 0 -- driver seat
    end
  end
  
  function jumpIntoCar(car)
    local seat = getCarFreeSeat(car)
    if not seat then return false end                         -- no free seats
    if seat == 0 then warpCharIntoCar(playerPed, car)         -- driver seat
    else warpCharIntoCarAsPassenger(playerPed, car, seat - 1) -- passenger seat
    end
    restoreCameraJumpcut()
    return true
  end
  
  function teleportPlayer(x, y, z)
    if isCharInAnyCar(playerPed) then
      setCharCoordinates(playerPed, x, y, z)
    end
    setCharCoordinatesDontResetAnim(playerPed, x, y, z)
  end
  
  function setCharCoordinatesDontResetAnim(char, x, y, z)
    if doesCharExist(char) then
      local ptr = getCharPointer(char)
      setEntityCoordinates(ptr, x, y, z)
    end
  end
  
  function setEntityCoordinates(entityPtr, x, y, z)
    if entityPtr ~= 0 then
      local matrixPtr = readMemory(entityPtr + 0x14, 4, false)
      if matrixPtr ~= 0 then
        local posPtr = matrixPtr + 0x30
        writeMemory(posPtr + 0, 4, representFloatAsInt(x), false) -- X
        writeMemory(posPtr + 4, 4, representFloatAsInt(y), false) -- Y
        writeMemory(posPtr + 8, 4, representFloatAsInt(z), false) -- Z
      end
    end
  end
  
  function showCursor(toggle)
    if toggle then
      sampSetCursorMode(CMODE_LOCKCAM)
    else
      sampToggleCursor(false)
    end
    cursorEnabled = toggle
  end

  function showCursorRecon(toggle)
    if toggle then
      sampToggleCursor(true)
    else
      sampToggleCursor(false)
    end
  end

function sampGetPlayerIdByNickname(nick)
    
    nick = tostring(nick)
    local _, myid = sampGetPlayerIdByCharHandle(PLAYER_PED)
    if nick == sampGetPlayerNickname(myid) then return myid end
    
    local player = listPlayers[nick]
    if player then
        return player
    end

    return -1
end


function updater_players()
    while true do
        local data = {}
        local otherData = {}
        for i = 0, sampGetMaxPlayerId() do
            if sampIsPlayerConnected(i) then
                data[sampGetPlayerNickname(i)] = i
                otherData[i] = sampGetPlayerNickname(i)
            end
        end
        listPlayers = clone(data)
        listPlayersIDs = clone(otherData)
        wait(3500)
    end
end


function isPlayerOnline(nick)

    nick = tostring(nick)
    local _, myid = sampGetPlayerIdByCharHandle(PLAYER_PED)
    if nick == sampGetPlayerNickname(myid) then return myid end
    
    local player = listPlayers[nick]
    if player then
        return true
    end

    return false
end

function wallhackcar()
    while true do
        wait(0)
        if isPermission and cheats['cwallhack'].v and not isPauseMenuActive() and not isGamePaused() and sampGetGamestate() == 3 then
            for k,v in ipairs(getAllVehicles()) do
                if doesVehicleExist(v) and isCarOnScreen(v) then
                    local carPos = {getCarCoordinates(v)}
                    local myPos = {getCharCoordinates(playerPed)}
                    if getDistanceBetweenCoords3d(myPos[1], myPos[2], myPos[3], carPos[1], carPos[2], carPos[3]) <= cheats['cwhdist'].v then
                        local result, x, y, z, w, h = convert3DCoordsToScreenEx(carPos[1], carPos[2], carPos[3], false, false)
                        if cheats['cwhlines'].v then
                            renderDrawLineBy3dCoords(myPos[1], myPos[2], myPos[3], carPos[1], carPos[2], carPos[3],1,'0x'.. hexrgba2hexargb(ini.cheats.cwhlinecolor))
                        end
                        if cheats['cwhname'].v then namecar = getNameOfCarModel(getCarModel(v)) if namecar == nil then namecar = "Неизвестная модель" end namecar = '{'.. hex8tohex6(ini.cheats.cwhnamecolor) ..'}' .. namecar .. '{FFFFFF}' else namecar = "" end
                        if cheats['cwhid'].v then idcar = '{' .. hex8tohex6(ini.cheats.cwhidcolor) .. '}['..select(2,sampGetVehicleIdByCarHandle(v))..']{FFFFFF}' else idcar = "" end
                        renderFontDrawText(fonts['whcar'],namecar .. idcar,x,y, 0xFFFFFFFF)
                        local yOffs = y + cheats['cwhfOffs'].v
                        if cheats['cwhhp'].v then 
                            renderFontDrawText(fonts['whcar'],'{'.. hex8tohex6(ini.cheats.cwhhpcolor) ..'}HP: '.. getCarHealth(v) .. '{FFFFFF}',x,yOffs,0xFFFFFFFF)
                            yOffs = yOffs + cheats['cwhfOffs'].v
                        end
                        if cheats['cwhengine'].v then 
                            if isCarEngineOn(v) then 
                                stateengine = '{'.. hex8tohex6(ini.cheats.cwhenginecolor) .. '}Двигатель: {2DF61C}Включен' 
                            else 
                                stateengine = '{'.. hex8tohex6(ini.cheats.cwhenginecolor) .. '}Двигатель: {F6361C}Выключен' 
                            end 
                            renderFontDrawText(fonts['whcar'],stateengine,x,yOffs,0xFFFFFFFF)
                        end
                    end
                end
            end
        end
    end
end

function renderFontDrawTextAlign(font, text, x, y, color, align)
    if not align or align == 1 then -- слева
        local success, result = pcall(renderFontDrawText, font, tostring(text), tonumber(x), tonumber(y), color)
    end
  
    if align == 2 then -- по центру
        local success, font_length = pcall(renderGetFontDrawTextLength,font, tostring(text))
        if success then
            renderFontDrawText(font, tostring(text), tonumber(x) - tonumber(font_length) / 2, tonumber(y), color)
        else
            renderFontDrawText(font, tostring(text), tonumber(x), tonumber(y), color)
            print('Ошибка при рендере чекера лидеров: ' .. font_length)
        end
    end
  
    if align == 3 then -- справа
        local success, font_length = pcall(renderGetFontDrawTextLength, font, tostring(text))
        if success then
            renderFontDrawText(font, tostring(text), tonumber(x) - tonumber(font_length), tonumber(y), color)
        else
            renderFontDrawText(font, tostring(text), tonumber(x), tonumber(y), color)
            print('Ошибка при рендере чекера лидеров: ' .. font_length)
        end
    end
  end
  


  function renderFontDrawClickableText(active, font, text, posX, posY, color, color_hovered, align, b_symbol)
	local cursorX, cursorY = getCursorPos()
	local lenght = renderGetFontDrawTextLength(font, text)
	local height = renderGetFontDrawHeight(font)
	local symb_len = renderGetFontDrawTextLength(font, '>')
	local hovered = false
	local result = false
    b_symbol = b_symbol == nil and false or b_symbol
    align = align or 1

    if align == 2 then
    	posX = posX - (lenght / 2)
    elseif align == 3 then
    	posX = posX - lenght
	end

    if active and cursorX > posX and cursorY > posY and cursorX < posX + lenght and cursorY < posY + height then
        hovered = true
        if isKeyJustPressed(0x01) then -- LButton
        	result = true 
        end
    end

    local anim = math.floor(math.sin(os.clock() * 10) * 3 + 5)

 	if hovered and b_symbol and (align == 2 or align == 1) then
    	renderFontDrawText(font, '>', posX - symb_len - anim, posY, 0x90FFFFFF)
    end 

    renderFontDrawText(font, text, posX, posY, hovered and color_hovered or color)

    if hovered and b_symbol and (align == 2 or align == 3) then
    	renderFontDrawText(font, '<', posX + lenght + anim, posY, 0x90FFFFFF)
    end 

    return result
end
  

function getNameOfCarModel(model)
    if tCarsName[model] == nil then
        return 'Неизвестная модель'
    else
        return tCarsName[model]
    end
end

function shotterOrganisation(string)
    if shotterOrg[string] == nil then
        return 'Undefined'
    else
        return shotterOrg[string]
    end
end

function asyncHttpRequest(method, url, args, resolve, reject)
    if not SearchingLibs then
        local request_thread = effil.thread(function (method, url, args)--снизу хуйня
            local rRequest, requests = pcall(require, 'requests')
            if rRequest then
                local result, response = pcall(requests.request, method, url, args)
                if result then
                    response.json, response.xml = nil, nil
                    return true, response
                else
                    return false, response
                end
            else
                print('no lib')
            end
            end)(method, url, args)
            -- Если запрос без функций обработки ответа и ошибок.
            if not resolve then resolve = function() end end
            if not reject then reject = function() end end
            -- Проверка выполнения потока
            lua_thread.create(function()
                if checkLibs(1) then
                    local runner = request_thread
                    while true do
                        local status, err = runner:status()
                        if not err then
                            if status == 'completed' then
                                local result, response = runner:get()
                                if result then
                                resolve(response)
                                else
                                reject(response)
                                end
                                return
                            elseif status == 'canceled' then
                                return reject(status)
                            end
                        else
                            return reject(err)
                        end
                        wait(0)
                    end
                else
                    reject('error')
                end
        end)
    else
        reject('error')
    end
end
  -----------------------------------------------------------THEMES---------------------------------------------------------------------

    function green_white()
        imgui.SwitchContext()
        local style = imgui.GetStyle()
        local style = imgui.GetStyle()
        local colors = style.Colors
        local clr = imgui.Col
        local ImVec4 = imgui.ImVec4
        local ImVec2 = imgui.ImVec2
        style.WindowPadding = imgui.ImVec2(8, 8)
        style.WindowRounding = 6
        style.ChildWindowRounding = 5
        style.FramePadding = imgui.ImVec2(5, 3)
        style.FrameRounding = 3.0
        style.ItemSpacing = imgui.ImVec2(5, 4)
        style.ItemInnerSpacing = imgui.ImVec2(4, 4)
        style.IndentSpacing = 21
        style.ScrollbarSize = 10.0
        style.ScrollbarRounding = 13
        style.GrabMinSize = 8
        style.GrabRounding = 1
        style.WindowTitleAlign = imgui.ImVec2(0.5, 0.5)
        style.ButtonTextAlign = imgui.ImVec2(0.5, 0.5)
      

        colors[clr.Text]   			 	  = ImVec4(0.00, 0.00, 0.00, 0.65)
        colors[clr.TextDisabled]          = ImVec4(0.00, 0.00, 0.00, 0.30)
        colors[clr.WindowBg]              = ImVec4(1.00, 1.00, 1.00, 1.00)
        colors[clr.ChildWindowBg]         = ImVec4(0.96, 0.96, 0.96, 1.00)
        colors[clr.PopupBg]               = ImVec4(0.92, 0.92, 0.92, 1.00)
        colors[clr.Border]                = ImVec4(0.86, 0.86, 0.86, 1.00)
        colors[clr.BorderShadow]          = ImVec4(0.00, 0.00, 0.00, 0.00)
        colors[clr.FrameBg]               = ImVec4(0.88, 0.88, 0.88, 1.00)
        colors[clr.FrameBgHovered]        = ImVec4(0.02, 0.49, 0.00, 1.00)
        colors[clr.FrameBgActive]         = ImVec4(0.02, 0.49, 0.00, 1.00)
        colors[clr.TitleBg]               = ImVec4(0.02, 0.49, 0.00, 1.00)
        colors[clr.TitleBgCollapsed]      = ImVec4(0.02, 0.49, 0.00, 1.00)
        colors[clr.TitleBgActive]         = ImVec4(0.02, 0.49, 0.00, 1.00)
        colors[clr.MenuBarBg]             = ImVec4(0.02, 0.49, 0.00, 1.00)
        colors[clr.ScrollbarBg]           = ImVec4(0.00, 0.00, 0.00, 0.00)
        colors[clr.ScrollbarGrab]         = ImVec4(0.02, 0.49, 0.00, 1.00)
        colors[clr.ScrollbarGrabHovered]  = ImVec4(0.02, 0.50, 0.00, 1.00)
        colors[clr.ScrollbarGrabActive]   = ImVec4(0.02, 0.40, 0.00, 1.00)
        colors[clr.ComboBg]               = ImVec4(0.92, 0.92, 0.92, 1.00)
        colors[clr.CheckMark]             = ImVec4(0.02, 0.40, 0.00, 1.00)
        colors[clr.SliderGrab]            = ImVec4(0.00, 0.49, 1.00, 0.59)
        colors[clr.SliderGrabActive]      = ImVec4(0.00, 0.49, 1.00, 0.71)
        colors[clr.Button]                = ImVec4(0.02, 0.49, 0.00, 1.00)
        colors[clr.ButtonHovered]         = ImVec4(0.02, 0.40, 0.00, 1.00)
        colors[clr.ButtonActive]          = ImVec4(0.02, 0.30, 0.00, 1.00)
        colors[clr.Header]                = ImVec4(0.02, 0.49, 0.00, 1.00)
        colors[clr.HeaderHovered]         = ImVec4(0.02, 0.50, 0.00, 1.00)
        colors[clr.HeaderActive]          = ImVec4(0.02, 0.40, 0.00, 1.00)
        colors[clr.ResizeGrip]            = ImVec4(0.02, 0.49, 0.00, 1.00)
        colors[clr.ResizeGripHovered]     = ImVec4(0.02, 0.50, 0.00, 1.00)
        colors[clr.ResizeGripActive]      = ImVec4(0.02, 0.40, 0.00, 1.00)
        colors[clr.CloseButton]           = ImVec4(0.02, 0.40, 0.00, 1.00)
        colors[clr.CloseButtonHovered]    = ImVec4(0.02, 0.30, 0.00, 1.00)
        colors[clr.CloseButtonActive]     = ImVec4(0.02, 0.20, 0.00, 1.00)
        colors[clr.PlotLines]             = ImVec4(0.02, 0.49, 0.00, 1.00)
        colors[clr.PlotLinesHovered]      = ImVec4(0.02, 0.50, 0.00, 1.00)
        colors[clr.PlotHistogram]         = ImVec4(0.02, 0.49, 0.00, 1.00)
        colors[clr.PlotHistogramHovered]  = ImVec4(0.02, 0.50, 0.00, 1.00)
        colors[clr.TextSelectedBg]        = ImVec4(0.02, 0.49, 0.00, 1.00)
        colors[clr.ModalWindowDarkening]  = ImVec4(0.20, 0.20, 0.20, 0.35)
    end

  function violet_theme()
    imgui.SwitchContext()
    local style = imgui.GetStyle()
    local colors = style.Colors
    local clr = imgui.Col
    local ImVec4 = imgui.ImVec4
    style.WindowPadding = imgui.ImVec2(8, 8)
    style.WindowRounding = 6
    style.ChildWindowRounding = 5
    style.FramePadding = imgui.ImVec2(5, 3)
    style.FrameRounding = 3.0
    style.ItemSpacing = imgui.ImVec2(5, 4)
    style.ItemInnerSpacing = imgui.ImVec2(4, 4)
    style.IndentSpacing = 21
    style.ScrollbarSize = 10.0
    style.ScrollbarRounding = 13
    style.GrabMinSize = 8
    style.GrabRounding = 1
    style.WindowTitleAlign = imgui.ImVec2(0.5, 0.5)
    style.ButtonTextAlign = imgui.ImVec2(0.5, 0.5)
  
    colors[clr.WindowBg]              = ImVec4(0.14, 0.12, 0.16, 1.00);
    colors[clr.Text]                   = ImVec4(0.95, 0.96, 0.98, 1.00);
    colors[clr.TextDisabled]           = ImVec4(0.29, 0.29, 0.29, 1.00);
    colors[clr.ChildWindowBg]         = ImVec4(0.30, 0.20, 0.39, 0.00);
    colors[clr.PopupBg]               = ImVec4(0.05, 0.05, 0.10, 0.90);
    colors[clr.Border]                = ImVec4(0.89, 0.85, 0.92, 0.30);
    colors[clr.BorderShadow]          = ImVec4(0.00, 0.00, 0.00, 0.00);
    colors[clr.FrameBg]               = ImVec4(0.30, 0.20, 0.39, 1.00);
    colors[clr.FrameBgHovered]        = ImVec4(0.41, 0.19, 0.63, 0.68);
    colors[clr.FrameBgActive]         = ImVec4(0.41, 0.19, 0.63, 1.00);
    colors[clr.TitleBg]               = ImVec4(0.41, 0.19, 0.63, 0.45);
    colors[clr.TitleBgCollapsed]      = ImVec4(0.41, 0.19, 0.63, 0.35);
    colors[clr.TitleBgActive]         = ImVec4(0.41, 0.19, 0.63, 0.78);
    colors[clr.MenuBarBg]             = ImVec4(0.30, 0.20, 0.39, 0.57);
    colors[clr.ScrollbarBg]           = ImVec4(0.30, 0.20, 0.39, 1.00);
    colors[clr.ScrollbarGrab]         = ImVec4(0.41, 0.19, 0.63, 0.31);
    colors[clr.ScrollbarGrabHovered]  = ImVec4(0.41, 0.19, 0.63, 0.78);
    colors[clr.ScrollbarGrabActive]   = ImVec4(0.41, 0.19, 0.63, 1.00);
    colors[clr.ComboBg]               = ImVec4(0.30, 0.20, 0.39, 1.00);
    colors[clr.CheckMark]             = ImVec4(0.56, 0.61, 1.00, 1.00);
    colors[clr.SliderGrab]            = ImVec4(0.41, 0.19, 0.63, 0.24);
    colors[clr.SliderGrabActive]      = ImVec4(0.41, 0.19, 0.63, 1.00);
    colors[clr.Button]                = ImVec4(0.41, 0.19, 0.63, 0.44);
    colors[clr.ButtonHovered]         = ImVec4(0.41, 0.19, 0.63, 0.86);
    colors[clr.ButtonActive]          = ImVec4(0.64, 0.33, 0.94, 1.00);
    colors[clr.Header]                = ImVec4(0.41, 0.19, 0.63, 0.76);
    colors[clr.HeaderHovered]         = ImVec4(0.41, 0.19, 0.63, 0.86);
    colors[clr.HeaderActive]          = ImVec4(0.41, 0.19, 0.63, 1.00);
    colors[clr.ResizeGrip]            = ImVec4(0.41, 0.19, 0.63, 0.20);
    colors[clr.ResizeGripHovered]     = ImVec4(0.41, 0.19, 0.63, 0.78);
    colors[clr.ResizeGripActive]      = ImVec4(0.41, 0.19, 0.63, 1.00);
    colors[clr.CloseButton]           = ImVec4(1.00, 1.00, 1.00, 0.75);
    colors[clr.CloseButtonHovered]    = ImVec4(0.88, 0.74, 1.00, 0.59);
    colors[clr.CloseButtonActive]     = ImVec4(0.88, 0.85, 0.92, 1.00);
    colors[clr.PlotLines]             = ImVec4(0.89, 0.85, 0.92, 0.63);
    colors[clr.PlotLinesHovered]      = ImVec4(0.41, 0.19, 0.63, 1.00);
    colors[clr.PlotHistogram]         = ImVec4(0.89, 0.85, 0.92, 0.63);
    colors[clr.PlotHistogramHovered]  = ImVec4(0.41, 0.19, 0.63, 1.00);
    colors[clr.TextSelectedBg]        = ImVec4(0.41, 0.19, 0.63, 0.43);
    colors[clr.ModalWindowDarkening]  = ImVec4(0.20, 0.20, 0.20, 0.35);

end


function darkgreentheme()
  imgui.SwitchContext()
  local style = imgui.GetStyle()
  local colors = style.Colors
  local clr = imgui.Col
  local ImVec4 = imgui.ImVec4
  style.WindowPadding = imgui.ImVec2(8, 8)
  style.WindowRounding = 6
  style.ChildWindowRounding = 5
  style.FramePadding = imgui.ImVec2(5, 3)
  style.FrameRounding = 3.0
  style.ItemSpacing = imgui.ImVec2(5, 4)
  style.ItemInnerSpacing = imgui.ImVec2(4, 4)
  style.IndentSpacing = 21
  style.ScrollbarSize = 10.0
  style.ScrollbarRounding = 13
  style.GrabMinSize = 8
  style.GrabRounding = 1
  style.WindowTitleAlign = imgui.ImVec2(0.5, 0.5)
  style.ButtonTextAlign = imgui.ImVec2(0.5, 0.5)
  colors[clr.Text]                   = ImVec4(0.90, 0.90, 0.90, 1.00)
  colors[clr.TextDisabled]           = ImVec4(0.60, 0.60, 0.60, 1.00)
  colors[clr.WindowBg]               = ImVec4(0.08, 0.08, 0.08, 1.00)
  colors[clr.ChildWindowBg]          = ImVec4(0.10, 0.10, 0.10, 1.00)
  colors[clr.PopupBg]                = ImVec4(0.08, 0.08, 0.08, 1.00)
  colors[clr.Border]                 = ImVec4(0.70, 0.70, 0.70, 0.40)
  colors[clr.BorderShadow]           = ImVec4(0.00, 0.00, 0.00, 0.00)
  colors[clr.FrameBg]                = ImVec4(0.15, 0.15, 0.15, 1.00)
  colors[clr.FrameBgHovered]         = ImVec4(0.19, 0.19, 0.19, 0.71)
  colors[clr.FrameBgActive]          = ImVec4(0.34, 0.34, 0.34, 0.79)
  colors[clr.TitleBg]                = ImVec4(0.00, 0.69, 0.33, 0.80)
  colors[clr.TitleBgActive]          = ImVec4(0.00, 0.74, 0.36, 1.00)
  colors[clr.TitleBgCollapsed]       = ImVec4(0.00, 0.69, 0.33, 0.50)
  colors[clr.MenuBarBg]              = ImVec4(0.00, 0.80, 0.38, 1.00)
  colors[clr.ScrollbarBg]            = ImVec4(0.16, 0.16, 0.16, 1.00)
  colors[clr.ScrollbarGrab]          = ImVec4(0.00, 0.69, 0.33, 1.00)
  colors[clr.ScrollbarGrabHovered]   = ImVec4(0.00, 0.82, 0.39, 1.00)
  colors[clr.ScrollbarGrabActive]    = ImVec4(0.00, 1.00, 0.48, 1.00)
  colors[clr.ComboBg]                = ImVec4(0.20, 0.20, 0.20, 0.99)
  colors[clr.CheckMark]              = ImVec4(0.00, 0.69, 0.33, 1.00)
  colors[clr.SliderGrab]             = ImVec4(0.00, 0.69, 0.33, 1.00)
  colors[clr.SliderGrabActive]       = ImVec4(0.00, 0.77, 0.37, 1.00)
  colors[clr.Button]                 = ImVec4(0.00, 0.69, 0.33, 1.00)
  colors[clr.ButtonHovered]          = ImVec4(0.00, 0.82, 0.39, 1.00)
  colors[clr.ButtonActive]           = ImVec4(0.00, 0.87, 0.42, 1.00)
  colors[clr.Header]                 = ImVec4(0.00, 0.69, 0.33, 1.00)
  colors[clr.HeaderHovered]          = ImVec4(0.00, 0.76, 0.37, 0.57)
  colors[clr.HeaderActive]           = ImVec4(0.00, 0.88, 0.42, 0.89)
  colors[clr.Separator]              = ImVec4(1.00, 1.00, 1.00, 0.40)
  colors[clr.SeparatorHovered]       = ImVec4(1.00, 1.00, 1.00, 0.60)
  colors[clr.SeparatorActive]        = ImVec4(1.00, 1.00, 1.00, 0.80)
  colors[clr.ResizeGrip]             = ImVec4(0.00, 0.69, 0.33, 1.00)
  colors[clr.ResizeGripHovered]      = ImVec4(0.00, 0.76, 0.37, 1.00)
  colors[clr.ResizeGripActive]       = ImVec4(0.00, 0.86, 0.41, 1.00)
  colors[clr.CloseButton]            = ImVec4(0.00, 0.82, 0.39, 1.00)
  colors[clr.CloseButtonHovered]     = ImVec4(0.00, 0.88, 0.42, 1.00)
  colors[clr.CloseButtonActive]      = ImVec4(0.00, 1.00, 0.48, 1.00)
  colors[clr.PlotLines]              = ImVec4(0.00, 0.69, 0.33, 1.00)
  colors[clr.PlotLinesHovered]       = ImVec4(0.00, 0.74, 0.36, 1.00)
  colors[clr.PlotHistogram]          = ImVec4(0.00, 0.69, 0.33, 1.00)
  colors[clr.PlotHistogramHovered]   = ImVec4(0.00, 0.80, 0.38, 1.00)
  colors[clr.TextSelectedBg]         = ImVec4(0.00, 0.69, 0.33, 0.72)
  colors[clr.ModalWindowDarkening]   = ImVec4(0.17, 0.17, 0.17, 0.48)
end


function glamourPink()
  imgui.SwitchContext()
  local style  = imgui.GetStyle()
  local colors = style.Colors
  local clr    = imgui.Col
  local ImVec4 = imgui.ImVec4
  local ImVec2 = imgui.ImVec2

  style.WindowPadding = imgui.ImVec2(8, 8)
  style.WindowRounding = 6
  style.ChildWindowRounding = 5
  style.FramePadding = imgui.ImVec2(5, 3)
  style.FrameRounding = 3.0
  style.ItemSpacing = imgui.ImVec2(5, 4)
  style.ItemInnerSpacing = imgui.ImVec2(4, 4)
  style.IndentSpacing = 21
  style.ScrollbarSize = 10.0
  style.ScrollbarRounding = 13
  style.GrabMinSize = 8
  style.GrabRounding = 1
  style.WindowTitleAlign = imgui.ImVec2(0.5, 0.5)
  style.ButtonTextAlign = imgui.ImVec2(0.5, 0.5)

  colors[clr.Text]                 = ImVec4(0.00, 0.00, 0.00, 1.00)
  colors[clr.TextDisabled]         = ImVec4(0.22, 0.22, 0.22, 1.00)
  colors[clr.WindowBg]             = ImVec4(1.00, 1.00, 1.00, 0.71)
  colors[clr.ChildWindowBg]        = ImVec4(0.92, 0.92, 0.92, 0.00)
  colors[clr.PopupBg]              = ImVec4(1.00, 1.00, 1.00, 0.94)
  colors[clr.Border]               = ImVec4(1.00, 1.00, 1.00, 0.50)
  colors[clr.BorderShadow]         = ImVec4(1.00, 1.00, 1.00, 0.00)
  colors[clr.FrameBg]              = ImVec4(0.77, 0.49, 0.66, 0.54)
  colors[clr.FrameBgHovered]       = ImVec4(1.00, 1.00, 1.00, 0.40)
  colors[clr.FrameBgActive]        = ImVec4(1.00, 1.00, 1.00, 0.67)
  colors[clr.TitleBg]              = ImVec4(0.76, 0.51, 0.66, 0.71)
  colors[clr.TitleBgActive]        = ImVec4(0.97, 0.74, 0.88, 0.74)
  colors[clr.TitleBgCollapsed]     = ImVec4(1.00, 1.00, 1.00, 0.67)
  colors[clr.MenuBarBg]            = ImVec4(1.00, 1.00, 1.00, 0.54)
  colors[clr.ScrollbarBg]          = ImVec4(0.81, 0.81, 0.81, 0.54)
  colors[clr.ScrollbarGrab]        = ImVec4(0.78, 0.28, 0.58, 0.13)
  colors[clr.ScrollbarGrabHovered] = ImVec4(1.00, 1.00, 1.00, 1.00)
  colors[clr.ScrollbarGrabActive]  = ImVec4(0.51, 0.51, 0.51, 1.00)
  colors[clr.ComboBg]              = ImVec4(0.20, 0.20, 0.20, 0.99)
  colors[clr.CheckMark]            = ImVec4(1.00, 1.00, 1.00, 1.00)
  colors[clr.SliderGrab]           = ImVec4(0.71, 0.39, 0.39, 1.00)
  colors[clr.SliderGrabActive]     = ImVec4(0.76, 0.51, 0.66, 0.46)
  colors[clr.Button]               = ImVec4(0.78, 0.28, 0.58, 0.54)
  colors[clr.ButtonHovered]        = ImVec4(0.77, 0.52, 0.67, 0.54)
  colors[clr.ButtonActive]         = ImVec4(0.20, 0.20, 0.20, 0.50)
  colors[clr.Header]               = ImVec4(0.78, 0.28, 0.58, 0.54)
  colors[clr.HeaderHovered]        = ImVec4(0.78, 0.28, 0.58, 0.25)
  colors[clr.HeaderActive]         = ImVec4(0.79, 0.04, 0.48, 0.63)
  colors[clr.Separator]            = ImVec4(0.43, 0.43, 0.50, 0.50)
  colors[clr.SeparatorHovered]     = ImVec4(0.79, 0.44, 0.65, 0.64)
  colors[clr.SeparatorActive]      = ImVec4(0.79, 0.17, 0.54, 0.77)
  colors[clr.ResizeGrip]           = ImVec4(0.87, 0.36, 0.66, 0.54)
  colors[clr.ResizeGripHovered]    = ImVec4(0.76, 0.51, 0.66, 0.46)
  colors[clr.ResizeGripActive]     = ImVec4(0.76, 0.51, 0.66, 0.46)
  colors[clr.CloseButton]          = ImVec4(0.41, 0.41, 0.41, 1.00)
  colors[clr.CloseButtonHovered]   = ImVec4(0.76, 0.46, 0.64, 0.71)
  colors[clr.CloseButtonActive]    = ImVec4(0.78, 0.28, 0.58, 0.79)
  colors[clr.PlotLines]            = ImVec4(0.61, 0.61, 0.61, 1.00)
  colors[clr.PlotLinesHovered]     = ImVec4(0.92, 0.92, 0.92, 1.00)
  colors[clr.PlotHistogram]        = ImVec4(0.90, 0.70, 0.00, 1.00)
  colors[clr.PlotHistogramHovered] = ImVec4(1.00, 0.60, 0.00, 1.00)
  colors[clr.TextSelectedBg]       = ImVec4(0.26, 0.59, 0.98, 0.35)
  colors[clr.ModalWindowDarkening] = ImVec4(0.80, 0.80, 0.80, 0.35)
end


function elegant_black()
    imgui.SwitchContext()
    local style = imgui.GetStyle()
    local colors = style.Colors
    local clr = imgui.Col
    local ImVec4 = imgui.ImVec4
  
    style.WindowPadding = imgui.ImVec2(8, 8)
    style.WindowRounding = 15
    style.ChildWindowRounding = 8.0
    style.FramePadding = imgui.ImVec2(5, 3)
    style.FrameRounding = 6.0
    style.ItemSpacing = imgui.ImVec2(5, 4)
    style.ItemInnerSpacing = imgui.ImVec2(4, 4)
    style.IndentSpacing = 21
    style.ScrollbarSize = 10.0
    style.ScrollbarRounding = 15.0
    style.GrabMinSize = 15.0
    style.GrabRounding = 7.0
    style.WindowTitleAlign = imgui.ImVec2(0.5, 0.5)
    style.ButtonTextAlign = imgui.ImVec2(0.5, 0.5)
  
    colors[clr.Text] = ImVec4(0.80, 0.80, 0.83, 1.00)
    colors[clr.TextDisabled] = ImVec4(0.24, 0.23, 0.29, 1.00)
    colors[clr.WindowBg] = ImVec4(0.06, 0.05, 0.07, 1.00)
    colors[clr.ChildWindowBg] = ImVec4(0.07, 0.07, 0.09, 1.00)
    colors[clr.PopupBg] = ImVec4(0.07, 0.07, 0.09, 1.00)
    colors[clr.Border] = ImVec4(0.80, 0.80, 0.83, 0.88)
    colors[clr.BorderShadow] = ImVec4(0.92, 0.91, 0.88, 0.00)
    colors[clr.FrameBg] = ImVec4(0.10, 0.09, 0.12, 1.00)
    colors[clr.FrameBgHovered] = ImVec4(0.24, 0.23, 0.29, 1.00)
    colors[clr.FrameBgActive] = ImVec4(0.56, 0.56, 0.58, 1.00)
    colors[clr.TitleBg] = ImVec4(0.10, 0.09, 0.12, 1.00)
    colors[clr.TitleBgCollapsed] = ImVec4(1.00, 0.98, 0.95, 0.75)
    colors[clr.TitleBgActive] = ImVec4(0.07, 0.07, 0.09, 1.00)
    colors[clr.MenuBarBg] = ImVec4(0.10, 0.09, 0.12, 1.00)
    colors[clr.ScrollbarBg] = ImVec4(0.10, 0.09, 0.12, 1.00)
    colors[clr.ScrollbarGrab] = ImVec4(0.80, 0.80, 0.83, 0.31)
    colors[clr.ScrollbarGrabHovered] = ImVec4(0.56, 0.56, 0.58, 1.00)
    colors[clr.ScrollbarGrabActive] = ImVec4(0.06, 0.05, 0.07, 1.00)
    colors[clr.ComboBg] = ImVec4(0.19, 0.18, 0.21, 1.00)
    colors[clr.CheckMark] = ImVec4(0.80, 0.80, 0.83, 0.31)
    colors[clr.SliderGrab] = ImVec4(0.80, 0.80, 0.83, 0.31)
    colors[clr.SliderGrabActive] = ImVec4(0.06, 0.05, 0.07, 1.00)
    colors[clr.Button] = ImVec4(0.10, 0.09, 0.12, 1.00)
    colors[clr.ButtonHovered] = ImVec4(0.24, 0.23, 0.29, 1.00)
    colors[clr.ButtonActive] = ImVec4(0.56, 0.56, 0.58, 1.00)
    colors[clr.Header] = ImVec4(0.10, 0.09, 0.12, 1.00)
    colors[clr.HeaderHovered] = ImVec4(0.56, 0.56, 0.58, 1.00)
    colors[clr.HeaderActive] = ImVec4(0.06, 0.05, 0.07, 1.00)
    colors[clr.ResizeGrip] = ImVec4(0.00, 0.00, 0.00, 0.00)
    colors[clr.ResizeGripHovered] = ImVec4(0.56, 0.56, 0.58, 1.00)
    colors[clr.ResizeGripActive] = ImVec4(0.06, 0.05, 0.07, 1.00)
    colors[clr.CloseButton] = ImVec4(0.40, 0.39, 0.38, 0.16)
    colors[clr.CloseButtonHovered] = ImVec4(0.40, 0.39, 0.38, 0.39)
    colors[clr.CloseButtonActive] = ImVec4(0.40, 0.39, 0.38, 1.00)
    colors[clr.PlotLines] = ImVec4(0.40, 0.39, 0.38, 0.63)
    colors[clr.PlotLinesHovered] = ImVec4(0.25, 1.00, 0.00, 1.00)
    colors[clr.PlotHistogram] = ImVec4(0.40, 0.39, 0.38, 0.63)
    colors[clr.PlotHistogramHovered] = ImVec4(0.25, 1.00, 0.00, 1.00)
    colors[clr.TextSelectedBg] = ImVec4(0.25, 1.00, 0.00, 0.43)
    colors[clr.ModalWindowDarkening] = ImVec4(1.00, 0.98, 0.95, 0.73)
end



function black_red()
  imgui.SwitchContext()
  local style = imgui.GetStyle()
  local colors = style.Colors
  local clr = imgui.Col
  local ImVec4 = imgui.ImVec4
  local ImVec2 = imgui.ImVec2

  style.WindowPadding = imgui.ImVec2(8, 8)
  style.WindowRounding = 6
  style.ChildWindowRounding = 5
  style.FramePadding = imgui.ImVec2(5, 3)
  style.FrameRounding = 3.0
  style.ItemSpacing = imgui.ImVec2(5, 4)
  style.ItemInnerSpacing = imgui.ImVec2(4, 4)
  style.IndentSpacing = 21
  style.ScrollbarSize = 10.0
  style.ScrollbarRounding = 13
  style.GrabMinSize = 8
  style.GrabRounding = 1
  style.WindowTitleAlign = imgui.ImVec2(0.5, 0.5)
  style.ButtonTextAlign = imgui.ImVec2(0.5, 0.5)

  colors[clr.Text]                   = ImVec4(0.95, 0.96, 0.98, 1.00);
  colors[clr.TextDisabled]           = ImVec4(0.29, 0.29, 0.29, 1.00);
  colors[clr.WindowBg]               = ImVec4(0.14, 0.14, 0.14, 0.70);
  colors[clr.ChildWindowBg]          = ImVec4(0.12, 0.12, 0.12, 0.70);
  colors[clr.PopupBg]                = ImVec4(0.08, 0.08, 0.08, 0.94);
  colors[clr.Border]                 = ImVec4(0.14, 0.14, 0.14, 1.00);
  colors[clr.BorderShadow]           = ImVec4(1.00, 1.00, 1.00, 0.10);
  colors[clr.FrameBg]                = ImVec4(0.22, 0.22, 0.22, 1.00);
  colors[clr.FrameBgHovered]         = ImVec4(0.18, 0.18, 0.18, 1.00);
  colors[clr.FrameBgActive]          = ImVec4(0.09, 0.12, 0.14, 1.00);
  colors[clr.TitleBg]                = ImVec4(0.14, 0.14, 0.14, 0.70);
  colors[clr.TitleBgActive]          = ImVec4(0.14, 0.14, 0.14, 0.70);
  colors[clr.TitleBgCollapsed]       = ImVec4(0.00, 0.00, 0.00, 0.70);
  colors[clr.MenuBarBg]              = ImVec4(0.20, 0.20, 0.20, 1.00);
  colors[clr.ScrollbarBg]            = ImVec4(0.02, 0.02, 0.02, 0.39);
  colors[clr.ScrollbarGrab]          = ImVec4(0.36, 0.36, 0.36, 1.00);
  colors[clr.ScrollbarGrabHovered]   = ImVec4(0.18, 0.22, 0.25, 1.00);
  colors[clr.ScrollbarGrabActive]    = ImVec4(0.24, 0.24, 0.24, 1.00);
  colors[clr.ComboBg]                = ImVec4(0.24, 0.24, 0.24, 1.00);
  colors[clr.CheckMark]              = ImVec4(1.00, 0.28, 0.28, 1.00);
  colors[clr.SliderGrab]             = ImVec4(1.00, 0.28, 0.28, 1.00);
  colors[clr.SliderGrabActive]       = ImVec4(1.00, 0.28, 0.28, 1.00);
  colors[clr.Button]                 = ImVec4(1.00, 0.28, 0.28, 1.00);
  colors[clr.ButtonHovered]          = ImVec4(1.00, 0.39, 0.39, 1.00);
  colors[clr.ButtonActive]           = ImVec4(1.00, 0.21, 0.21, 1.00);
  colors[clr.Header]                 = ImVec4(1.00, 0.28, 0.28, 1.00);
  colors[clr.HeaderHovered]          = ImVec4(1.00, 0.39, 0.39, 1.00);
  colors[clr.HeaderActive]           = ImVec4(1.00, 0.21, 0.21, 1.00);
  colors[clr.ResizeGrip]             = ImVec4(1.00, 0.28, 0.28, 1.00);
  colors[clr.ResizeGripHovered]      = ImVec4(1.00, 0.39, 0.39, 1.00);
  colors[clr.ResizeGripActive]       = ImVec4(1.00, 0.19, 0.19, 1.00);
  colors[clr.CloseButton]            = ImVec4(0.40, 0.39, 0.38, 0.16);
  colors[clr.CloseButtonHovered]     = ImVec4(0.40, 0.39, 0.38, 0.39);
  colors[clr.CloseButtonActive]      = ImVec4(0.40, 0.39, 0.38, 1.00);
  colors[clr.PlotLines]              = ImVec4(0.61, 0.61, 0.61, 1.00);
  colors[clr.PlotLinesHovered]       = ImVec4(1.00, 0.43, 0.35, 1.00);
  colors[clr.PlotHistogram]          = ImVec4(1.00, 0.21, 0.21, 1.00);
  colors[clr.PlotHistogramHovered]   = ImVec4(1.00, 0.18, 0.18, 1.00);
  colors[clr.TextSelectedBg]         = ImVec4(1.00, 0.32, 0.32, 1.00);
  colors[clr.ModalWindowDarkening]   = ImVec4(0.26, 0.26, 0.26, 0.60);
end


  function red_theme()
    imgui.SwitchContext()
    local style = imgui.GetStyle()
    local colors = style.Colors
    local clr = imgui.Col
    local ImVec4 = imgui.ImVec4

    style.WindowPadding = imgui.ImVec2(8, 8)
    style.WindowRounding = 6
    style.ChildWindowRounding = 5
    style.FramePadding = imgui.ImVec2(5, 3)
    style.FrameRounding = 3.0
    style.ItemSpacing = imgui.ImVec2(5, 4)
    style.ItemInnerSpacing = imgui.ImVec2(4, 4)
    style.IndentSpacing = 21
    style.ScrollbarSize = 10.0
    style.ScrollbarRounding = 13
    style.GrabMinSize = 8
    style.GrabRounding = 1
    style.WindowTitleAlign = imgui.ImVec2(0.5, 0.5)
    style.ButtonTextAlign = imgui.ImVec2(0.5, 0.5)

    colors[clr.FrameBg]                = ImVec4(0.48, 0.16, 0.16, 0.54)
    colors[clr.FrameBgHovered]         = ImVec4(0.98, 0.26, 0.26, 0.40)
    colors[clr.FrameBgActive]          = ImVec4(0.98, 0.26, 0.26, 0.67)
    colors[clr.TitleBg]                = ImVec4(0.04, 0.04, 0.04, 1.00)
    colors[clr.TitleBgActive]          = ImVec4(0.48, 0.16, 0.16, 1.00)
    colors[clr.TitleBgCollapsed]       = ImVec4(0.00, 0.00, 0.00, 0.51)
    colors[clr.CheckMark]              = ImVec4(0.98, 0.26, 0.26, 1.00)
    colors[clr.SliderGrab]             = ImVec4(0.88, 0.26, 0.24, 1.00)
    colors[clr.SliderGrabActive]       = ImVec4(0.98, 0.26, 0.26, 1.00)
    colors[clr.Button]                 = ImVec4(0.98, 0.26, 0.26, 0.40)
    colors[clr.ButtonHovered]          = ImVec4(0.98, 0.26, 0.26, 1.00)
    colors[clr.ButtonActive]           = ImVec4(0.98, 0.06, 0.06, 1.00)
    colors[clr.Header]                 = ImVec4(0.98, 0.26, 0.26, 0.31)
    colors[clr.HeaderHovered]          = ImVec4(0.98, 0.26, 0.26, 0.80)
    colors[clr.HeaderActive]           = ImVec4(0.98, 0.26, 0.26, 1.00)
    colors[clr.Separator]              = colors[clr.Border]
    colors[clr.SeparatorHovered]       = ImVec4(0.75, 0.10, 0.10, 0.78)
    colors[clr.SeparatorActive]        = ImVec4(0.75, 0.10, 0.10, 1.00)
    colors[clr.ResizeGrip]             = ImVec4(0.98, 0.26, 0.26, 0.25)
    colors[clr.ResizeGripHovered]      = ImVec4(0.98, 0.26, 0.26, 0.67)
    colors[clr.ResizeGripActive]       = ImVec4(0.98, 0.26, 0.26, 0.95)
    colors[clr.TextSelectedBg]         = ImVec4(0.98, 0.26, 0.26, 0.35)
    colors[clr.Text]                   = ImVec4(1.00, 1.00, 1.00, 1.00)
    colors[clr.TextDisabled]           = ImVec4(0.50, 0.50, 0.50, 1.00)
    colors[clr.WindowBg]               = ImVec4(0.06, 0.06, 0.06, 0.94)
    colors[clr.ChildWindowBg]          = ImVec4(1.00, 1.00, 1.00, 0.00)
    colors[clr.PopupBg]                = ImVec4(0.08, 0.08, 0.08, 0.94)
    colors[clr.ComboBg]                = colors[clr.PopupBg]
    colors[clr.Border]                 = ImVec4(0.43, 0.43, 0.50, 0.50)
    colors[clr.BorderShadow]           = ImVec4(0.00, 0.00, 0.00, 0.00)
    colors[clr.MenuBarBg]              = ImVec4(0.14, 0.14, 0.14, 1.00)
    colors[clr.ScrollbarBg]            = ImVec4(0.02, 0.02, 0.02, 0.53)
    colors[clr.ScrollbarGrab]          = ImVec4(0.31, 0.31, 0.31, 1.00)
    colors[clr.ScrollbarGrabHovered]   = ImVec4(0.41, 0.41, 0.41, 1.00)
    colors[clr.ScrollbarGrabActive]    = ImVec4(0.51, 0.51, 0.51, 1.00)
    colors[clr.CloseButton]            = ImVec4(0.41, 0.41, 0.41, 0.50)
    colors[clr.CloseButtonHovered]     = ImVec4(0.98, 0.39, 0.36, 1.00)
    colors[clr.CloseButtonActive]      = ImVec4(0.98, 0.39, 0.36, 1.00)
    colors[clr.PlotLines]              = ImVec4(0.61, 0.61, 0.61, 1.00)
    colors[clr.PlotLinesHovered]       = ImVec4(1.00, 0.43, 0.35, 1.00)
    colors[clr.PlotHistogram]          = ImVec4(0.90, 0.70, 0.00, 1.00)
    colors[clr.PlotHistogramHovered]   = ImVec4(1.00, 0.60, 0.00, 1.00)
    colors[clr.ModalWindowDarkening]   = ImVec4(0.80, 0.80, 0.80, 0.35)
end

function gray_theme()
   imgui.SwitchContext()
   local style = imgui.GetStyle()
   local colors = style.Colors
   local clr = imgui.Col
   local ImVec4 = imgui.ImVec4
   local ImVec2 = imgui.ImVec2



    style.WindowPadding = imgui.ImVec2(8, 8)
    style.WindowRounding = 15
    style.ChildWindowRounding = 8.0
    style.FramePadding = imgui.ImVec2(5, 3)
    style.FrameRounding = 6.0
    style.ItemSpacing = imgui.ImVec2(5, 4)
    style.ItemInnerSpacing = imgui.ImVec2(4, 4)
    style.IndentSpacing = 21
    style.ScrollbarSize = 10.0
    style.ScrollbarRounding = 15.0
    style.GrabMinSize = 15.0
    style.GrabRounding = 7.0
    style.WindowTitleAlign = imgui.ImVec2(0.5, 0.5)
    style.ButtonTextAlign = imgui.ImVec2(0.5, 0.5)
  

      colors[clr.Text] = ImVec4(0.95, 0.96, 0.98, 1.00)
      colors[clr.TextDisabled] = ImVec4(0.36, 0.42, 0.47, 1.00)
      colors[clr.WindowBg] = ImVec4(0.11, 0.15, 0.17, 1.00)
      colors[clr.ChildWindowBg] = ImVec4(0.15, 0.18, 0.22, 1.00)
      colors[clr.PopupBg] = ImVec4(0.08, 0.08, 0.08, 0.94)
      colors[clr.Border] = ImVec4(0.43, 0.43, 0.50, 0.50)
      colors[clr.BorderShadow] = ImVec4(0.00, 0.00, 0.00, 0.00)
      colors[clr.FrameBg] = ImVec4(0.20, 0.25, 0.29, 1.00)
      colors[clr.FrameBgHovered] = ImVec4(0.12, 0.20, 0.28, 1.00)
      colors[clr.FrameBgActive] = ImVec4(0.09, 0.12, 0.14, 1.00)
      colors[clr.TitleBg] = ImVec4(0.09, 0.12, 0.14, 0.65)
      colors[clr.TitleBgCollapsed] = ImVec4(0.00, 0.00, 0.00, 0.51)
      colors[clr.TitleBgActive] = ImVec4(0.08, 0.10, 0.12, 1.00)
      colors[clr.MenuBarBg] = ImVec4(0.15, 0.18, 0.22, 1.00)
      colors[clr.ScrollbarBg] = ImVec4(0.02, 0.02, 0.02, 0.39)
      colors[clr.ScrollbarGrab] = ImVec4(0.20, 0.25, 0.29, 1.00)
      colors[clr.ScrollbarGrabHovered] = ImVec4(0.18, 0.22, 0.25, 1.00)
      colors[clr.ScrollbarGrabActive] = ImVec4(0.09, 0.21, 0.31, 1.00)
      colors[clr.ComboBg] = ImVec4(0.20, 0.25, 0.29, 1.00)
      colors[clr.CheckMark] = ImVec4(0.28, 0.56, 1.00, 1.00)
      colors[clr.SliderGrab] = ImVec4(0.28, 0.56, 1.00, 1.00)
      colors[clr.SliderGrabActive] = ImVec4(0.37, 0.61, 1.00, 1.00)
      colors[clr.Button] = ImVec4(0.20, 0.25, 0.29, 1.00)
      colors[clr.ButtonHovered] = ImVec4(0.28, 0.56, 1.00, 1.00)
      colors[clr.ButtonActive] = ImVec4(0.06, 0.53, 0.98, 1.00)
      colors[clr.Header] = ImVec4(0.20, 0.25, 0.29, 0.55)
      colors[clr.HeaderHovered] = ImVec4(0.26, 0.59, 0.98, 0.80)
      colors[clr.HeaderActive] = ImVec4(0.26, 0.59, 0.98, 1.00)
      colors[clr.ResizeGrip] = ImVec4(0.26, 0.59, 0.98, 0.25)
      colors[clr.ResizeGripHovered] = ImVec4(0.26, 0.59, 0.98, 0.67)
      colors[clr.ResizeGripActive] = ImVec4(0.06, 0.05, 0.07, 1.00)
      colors[clr.CloseButton] = ImVec4(0.40, 0.39, 0.38, 0.16)
      colors[clr.CloseButtonHovered] = ImVec4(0.40, 0.39, 0.38, 0.39)
      colors[clr.CloseButtonActive] = ImVec4(0.40, 0.39, 0.38, 1.00)
      colors[clr.PlotLines] = ImVec4(0.61, 0.61, 0.61, 1.00)
      colors[clr.PlotLinesHovered] = ImVec4(1.00, 0.43, 0.35, 1.00)
      colors[clr.PlotHistogram] = ImVec4(0.90, 0.70, 0.00, 1.00)
      colors[clr.PlotHistogramHovered] = ImVec4(1.00, 0.60, 0.00, 1.00)
      colors[clr.TextSelectedBg] = ImVec4(0.25, 1.00, 0.00, 0.43)
      colors[clr.ModalWindowDarkening] = ImVec4(1.00, 0.98, 0.95, 0.73)
end





function blue_theme()
  imgui.SwitchContext()
  local style = imgui.GetStyle()
  local colors = style.Colors
  local clr = imgui.Col
  local ImVec4 = imgui.ImVec4

  style.WindowRounding = 2.0
  style.WindowTitleAlign = imgui.ImVec2(0.5, 0.84)
  style.ChildWindowRounding = 2.0
  style.FrameRounding = 2.0
  style.ItemSpacing = imgui.ImVec2(5.0, 4.0)
  style.ScrollbarSize = 13.0
  style.ScrollbarRounding = 0
  style.GrabMinSize = 8.0
  style.GrabRounding = 1.0

  colors[clr.FrameBg]                = ImVec4(0.16, 0.29, 0.48, 0.54)
  colors[clr.FrameBgHovered]         = ImVec4(0.26, 0.59, 0.98, 0.40)
  colors[clr.FrameBgActive]          = ImVec4(0.26, 0.59, 0.98, 0.67)
  colors[clr.TitleBg]                = ImVec4(0.04, 0.04, 0.04, 1.00)
  colors[clr.TitleBgActive]          = ImVec4(0.16, 0.29, 0.48, 1.00)
  colors[clr.TitleBgCollapsed]       = ImVec4(0.00, 0.00, 0.00, 0.51)
  colors[clr.CheckMark]              = ImVec4(0.26, 0.59, 0.98, 1.00)
  colors[clr.SliderGrab]             = ImVec4(0.24, 0.52, 0.88, 1.00)
  colors[clr.SliderGrabActive]       = ImVec4(0.26, 0.59, 0.98, 1.00)
  colors[clr.Button]                 = ImVec4(0.26, 0.59, 0.98, 0.40)
  colors[clr.ButtonHovered]          = ImVec4(0.26, 0.59, 0.98, 1.00)
  colors[clr.ButtonActive]           = ImVec4(0.06, 0.53, 0.98, 1.00)
  colors[clr.Header]                 = ImVec4(0.26, 0.59, 0.98, 0.31)
  colors[clr.HeaderHovered]          = ImVec4(0.26, 0.59, 0.98, 0.80)
  colors[clr.HeaderActive]           = ImVec4(0.26, 0.59, 0.98, 1.00)
  colors[clr.Separator]              = colors[clr.Border]
  colors[clr.SeparatorHovered]       = ImVec4(0.26, 0.59, 0.98, 0.78)
  colors[clr.SeparatorActive]        = ImVec4(0.26, 0.59, 0.98, 1.00)
  colors[clr.ResizeGrip]             = ImVec4(0.26, 0.59, 0.98, 0.25)
  colors[clr.ResizeGripHovered]      = ImVec4(0.26, 0.59, 0.98, 0.67)
  colors[clr.ResizeGripActive]       = ImVec4(0.26, 0.59, 0.98, 0.95)
  colors[clr.TextSelectedBg]         = ImVec4(0.26, 0.59, 0.98, 0.35)
  colors[clr.Text]                   = ImVec4(1.00, 1.00, 1.00, 1.00)
  colors[clr.TextDisabled]           = ImVec4(0.50, 0.50, 0.50, 1.00)
  colors[clr.WindowBg]               = ImVec4(0.06, 0.06, 0.06, 0.94)
  colors[clr.ChildWindowBg]          = ImVec4(1.00, 1.00, 1.00, 0.00)
  colors[clr.PopupBg]                = ImVec4(0.08, 0.08, 0.08, 0.94)
  colors[clr.ComboBg]                = colors[clr.PopupBg]
  colors[clr.Border]                 = ImVec4(0.43, 0.43, 0.50, 0.50)
  colors[clr.BorderShadow]           = ImVec4(0.00, 0.00, 0.00, 0.00)
  colors[clr.MenuBarBg]              = ImVec4(0.14, 0.14, 0.14, 1.00)
  colors[clr.ScrollbarBg]            = ImVec4(0.02, 0.02, 0.02, 0.53)
  colors[clr.ScrollbarGrab]          = ImVec4(0.31, 0.31, 0.31, 1.00)
  colors[clr.ScrollbarGrabHovered]   = ImVec4(0.41, 0.41, 0.41, 1.00)
  colors[clr.ScrollbarGrabActive]    = ImVec4(0.51, 0.51, 0.51, 1.00)
  colors[clr.CloseButton]            = ImVec4(0.41, 0.41, 0.41, 0.50)
  colors[clr.CloseButtonHovered]     = ImVec4(0.98, 0.39, 0.36, 1.00)
  colors[clr.CloseButtonActive]      = ImVec4(0.98, 0.39, 0.36, 1.00)
  colors[clr.PlotLines]              = ImVec4(0.61, 0.61, 0.61, 1.00)
  colors[clr.PlotLinesHovered]       = ImVec4(1.00, 0.43, 0.35, 1.00)
  colors[clr.PlotHistogram]          = ImVec4(0.90, 0.70, 0.00, 1.00)
  colors[clr.PlotHistogramHovered]   = ImVec4(1.00, 0.60, 0.00, 1.00)
  colors[clr.ModalWindowDarkening]   = ImVec4(0.80, 0.80, 0.80, 0.35)
end

function user_theme()
    imgui.SwitchContext()
    local style = imgui.GetStyle()
    local colors = style.Colors
    local clr = imgui.Col
    local ImVec4 = imgui.ImVec4
    local inipaddings = ini.custom
    if ini.custom.CloseButtonHovered ~= nil then
        style.WindowPadding = imgui.ImVec2(unpack(cjson.decode(inipaddings['WP'])))
        style.WindowRounding = unpack(cjson.decode(inipaddings['WR']))
        style.ChildWindowRounding = unpack(cjson.decode(inipaddings['CWR']))
        style.FramePadding = imgui.ImVec2(unpack(cjson.decode(inipaddings['FP'])))
        style.FrameRounding = unpack(cjson.decode(inipaddings['FR']))
        style.ItemSpacing = imgui.ImVec2(unpack(cjson.decode(inipaddings['IS'])))
        style.ItemInnerSpacing = imgui.ImVec2(unpack(cjson.decode(inipaddings['IIS'])))
        style.ScrollbarSize = unpack(cjson.decode(inipaddings['SS']))
        style.ScrollbarRounding = unpack(cjson.decode(inipaddings['SR']))
        style.GrabMinSize = unpack(cjson.decode(inipaddings['GMS']))
        style.GrabRounding = unpack(cjson.decode(inipaddings['GR']))
        style.WindowTitleAlign = imgui.ImVec2(unpack(cjson.decode(inipaddings['WTA'])))
        style.ButtonTextAlign = imgui.ImVec2(unpack(cjson.decode(inipaddings['BTA'])))
        for k,v in pairs(generateStyleEditor) do

            if v[1] ~= 'исключение*' then
                colors[clr[v[2]]] = ImVec4(imgui.ImColor(hextorgba(tostring(ini.custom[v[2]]))):GetFloat4())
            end
        end
    end

end

